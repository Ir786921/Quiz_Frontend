let e,t,r,n,a,s,i,o,l,u;function c(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}function d(e,t){return Object.keys(t).forEach(function(r){"default"===r||"__esModule"===r||e.hasOwnProperty(r)||Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[r]}})}),e}var p,h,f,m,g,y,b,v,x,w,k,S,N,T=globalThis;function I(e){return e&&e.__esModule?e.default:e}var C={},E={},A=T.parcelRequire10c2;null==A&&((A=function(e){if(e in C)return C[e].exports;if(e in E){var t=E[e];delete E[e];var r={id:e,exports:{}};return C[e]=r,t.call(r.exports,r,r.exports),r.exports}var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,t){E[e]=t},T.parcelRequire10c2=A);var R=A.register;R("1b2ls",function(e,t){c(e.exports,"Fragment",()=>r,e=>r=e),c(e.exports,"jsx",()=>n,e=>n=e),c(e.exports,"jsxs",()=>a,e=>a=e);var r,n,a,s=A("acw62"),i=Symbol.for("react.element"),o=Symbol.for("react.fragment"),l=Object.prototype.hasOwnProperty,u=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,d={key:!0,ref:!0,__self:!0,__source:!0};function p(e,t,r){var n,a={},s=null,o=null;for(n in void 0!==r&&(s=""+r),void 0!==t.key&&(s=""+t.key),void 0!==t.ref&&(o=t.ref),t)l.call(t,n)&&!d.hasOwnProperty(n)&&(a[n]=t[n]);if(e&&e.defaultProps)for(n in t=e.defaultProps)void 0===a[n]&&(a[n]=t[n]);return{$$typeof:i,type:e,key:s,ref:o,props:a,_owner:u.current}}r=o,n=p,a=p}),R("acw62",function(e,t){e.exports=A("2pUnB")}),R("2pUnB",function(e,t){c(e.exports,"Children",()=>r,e=>r=e),c(e.exports,"Component",()=>n,e=>n=e),c(e.exports,"Fragment",()=>a,e=>a=e),c(e.exports,"Profiler",()=>s,e=>s=e),c(e.exports,"PureComponent",()=>i,e=>i=e),c(e.exports,"StrictMode",()=>o,e=>o=e),c(e.exports,"Suspense",()=>l,e=>l=e),c(e.exports,"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED",()=>u,e=>u=e),c(e.exports,"act",()=>d,e=>d=e),c(e.exports,"cloneElement",()=>p,e=>p=e),c(e.exports,"createContext",()=>h,e=>h=e),c(e.exports,"createElement",()=>f,e=>f=e),c(e.exports,"createFactory",()=>m,e=>m=e),c(e.exports,"createRef",()=>g,e=>g=e),c(e.exports,"forwardRef",()=>y,e=>y=e),c(e.exports,"isValidElement",()=>b,e=>b=e),c(e.exports,"lazy",()=>v,e=>v=e),c(e.exports,"memo",()=>x,e=>x=e),c(e.exports,"startTransition",()=>w,e=>w=e),c(e.exports,"unstable_act",()=>k,e=>k=e),c(e.exports,"useCallback",()=>S,e=>S=e),c(e.exports,"useContext",()=>N,e=>N=e),c(e.exports,"useDebugValue",()=>T,e=>T=e),c(e.exports,"useDeferredValue",()=>I,e=>I=e),c(e.exports,"useEffect",()=>C,e=>C=e),c(e.exports,"useId",()=>E,e=>E=e),c(e.exports,"useImperativeHandle",()=>A,e=>A=e),c(e.exports,"useInsertionEffect",()=>R,e=>R=e),c(e.exports,"useLayoutEffect",()=>_,e=>_=e),c(e.exports,"useMemo",()=>O,e=>O=e),c(e.exports,"useReducer",()=>P,e=>P=e),c(e.exports,"useRef",()=>$,e=>$=e),c(e.exports,"useState",()=>D,e=>D=e),c(e.exports,"useSyncExternalStore",()=>M,e=>M=e),c(e.exports,"useTransition",()=>F,e=>F=e),c(e.exports,"version",()=>L,e=>L=e);var r,n,a,s,i,o,l,u,d,p,h,f,m,g,y,b,v,x,w,k,S,N,T,I,C,E,A,R,_,O,P,$,D,M,F,L,j=Symbol.for("react.element"),B=Symbol.for("react.portal"),z=Symbol.for("react.fragment"),V=Symbol.for("react.strict_mode"),G=Symbol.for("react.profiler"),U=Symbol.for("react.provider"),W=Symbol.for("react.context"),q=Symbol.for("react.forward_ref"),H=Symbol.for("react.suspense"),K=Symbol.for("react.memo"),X=Symbol.for("react.lazy"),Z=Symbol.iterator,Q={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},Y=Object.assign,J={};function ee(e,t,r){this.props=e,this.context=t,this.refs=J,this.updater=r||Q}function et(){}function er(e,t,r){this.props=e,this.context=t,this.refs=J,this.updater=r||Q}ee.prototype.isReactComponent={},ee.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},ee.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},et.prototype=ee.prototype;var en=er.prototype=new et;en.constructor=er,Y(en,ee.prototype),en.isPureReactComponent=!0;var ea=Array.isArray,es=Object.prototype.hasOwnProperty,ei={current:null},eo={key:!0,ref:!0,__self:!0,__source:!0};function el(e,t,r){var n,a={},s=null,i=null;if(null!=t)for(n in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(s=""+t.key),t)es.call(t,n)&&!eo.hasOwnProperty(n)&&(a[n]=t[n]);var o=arguments.length-2;if(1===o)a.children=r;else if(1<o){for(var l=Array(o),u=0;u<o;u++)l[u]=arguments[u+2];a.children=l}if(e&&e.defaultProps)for(n in o=e.defaultProps)void 0===a[n]&&(a[n]=o[n]);return{$$typeof:j,type:e,key:s,ref:i,props:a,_owner:ei.current}}function eu(e){return"object"==typeof e&&null!==e&&e.$$typeof===j}var ec=/\/+/g;function ed(e,t){var r,n;return"object"==typeof e&&null!==e&&null!=e.key?(r=""+e.key,n={"=":"=0",":":"=2"},"$"+r.replace(/[=:]/g,function(e){return n[e]})):t.toString(36)}function ep(e,t,r){if(null==e)return e;var n=[],a=0;return function e(t,r,n,a,s){var i,o,l,u=typeof t;("undefined"===u||"boolean"===u)&&(t=null);var c=!1;if(null===t)c=!0;else switch(u){case"string":case"number":c=!0;break;case"object":switch(t.$$typeof){case j:case B:c=!0}}if(c)return s=s(c=t),t=""===a?"."+ed(c,0):a,ea(s)?(n="",null!=t&&(n=t.replace(ec,"$&/")+"/"),e(s,r,n,"",function(e){return e})):null!=s&&(eu(s)&&(i=s,o=n+(!s.key||c&&c.key===s.key?"":(""+s.key).replace(ec,"$&/")+"/")+t,s={$$typeof:j,type:i.type,key:o,ref:i.ref,props:i.props,_owner:i._owner}),r.push(s)),1;if(c=0,a=""===a?".":a+":",ea(t))for(var d=0;d<t.length;d++){var p=a+ed(u=t[d],d);c+=e(u,r,n,p,s)}else if("function"==typeof(p=null===(l=t)||"object"!=typeof l?null:"function"==typeof(l=Z&&l[Z]||l["@@iterator"])?l:null))for(t=p.call(t),d=0;!(u=t.next()).done;)p=a+ed(u=u.value,d++),c+=e(u,r,n,p,s);else if("object"===u)throw Error("Objects are not valid as a React child (found: "+("[object Object]"===(r=String(t))?"object with keys {"+Object.keys(t).join(", ")+"}":r)+"). If you meant to render a collection of children, use an array instead.");return c}(e,n,"","",function(e){return t.call(r,e,a++)}),n}function eh(e){if(-1===e._status){var t=e._result;(t=t()).then(function(t){(0===e._status||-1===e._status)&&(e._status=1,e._result=t)},function(t){(0===e._status||-1===e._status)&&(e._status=2,e._result=t)}),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var ef={current:null},em={transition:null};function eg(){throw Error("act(...) is not supported in production builds of React.")}r={map:ep,forEach:function(e,t,r){ep(e,function(){t.apply(this,arguments)},r)},count:function(e){var t=0;return ep(e,function(){t++}),t},toArray:function(e){return ep(e,function(e){return e})||[]},only:function(e){if(!eu(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n=ee,a=z,s=G,i=er,o=V,l=H,u={ReactCurrentDispatcher:ef,ReactCurrentBatchConfig:em,ReactCurrentOwner:ei},d=eg,p=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var n=Y({},e.props),a=e.key,s=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(s=t.ref,i=ei.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var o=e.type.defaultProps;for(l in t)es.call(t,l)&&!eo.hasOwnProperty(l)&&(n[l]=void 0===t[l]&&void 0!==o?o[l]:t[l])}var l=arguments.length-2;if(1===l)n.children=r;else if(1<l){o=Array(l);for(var u=0;u<l;u++)o[u]=arguments[u+2];n.children=o}return{$$typeof:j,type:e.type,key:a,ref:s,props:n,_owner:i}},h=function(e){return(e={$$typeof:W,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:U,_context:e},e.Consumer=e},f=el,m=function(e){var t=el.bind(null,e);return t.type=e,t},g=function(){return{current:null}},y=function(e){return{$$typeof:q,render:e}},b=eu,v=function(e){return{$$typeof:X,_payload:{_status:-1,_result:e},_init:eh}},x=function(e,t){return{$$typeof:K,type:e,compare:void 0===t?null:t}},w=function(e){var t=em.transition;em.transition={};try{e()}finally{em.transition=t}},k=eg,S=function(e,t){return ef.current.useCallback(e,t)},N=function(e){return ef.current.useContext(e)},T=function(){},I=function(e){return ef.current.useDeferredValue(e)},C=function(e,t){return ef.current.useEffect(e,t)},E=function(){return ef.current.useId()},A=function(e,t,r){return ef.current.useImperativeHandle(e,t,r)},R=function(e,t){return ef.current.useInsertionEffect(e,t)},_=function(e,t){return ef.current.useLayoutEffect(e,t)},O=function(e,t){return ef.current.useMemo(e,t)},P=function(e,t,r){return ef.current.useReducer(e,t,r)},$=function(e){return ef.current.useRef(e)},D=function(e){return ef.current.useState(e)},M=function(e,t,r){return ef.current.useSyncExternalStore(e,t,r)},F=function(){return ef.current.useTransition()},L="18.3.1"}),R("Xw6Mv",function(e,t){c(e.exports,"__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED",()=>G,e=>G=e),c(e.exports,"createPortal",()=>U,e=>U=e),c(e.exports,"createRoot",()=>W,e=>W=e),c(e.exports,"findDOMNode",()=>q,e=>q=e),c(e.exports,"flushSync",()=>H,e=>H=e),c(e.exports,"hydrate",()=>K,e=>K=e),c(e.exports,"hydrateRoot",()=>X,e=>X=e),c(e.exports,"render",()=>Z,e=>Z=e),c(e.exports,"unmountComponentAtNode",()=>Q,e=>Q=e),c(e.exports,"unstable_batchedUpdates",()=>Y,e=>Y=e),c(e.exports,"unstable_renderSubtreeIntoContainer",()=>J,e=>J=e),c(e.exports,"version",()=>ee,e=>ee=e);var r,n,a,s,i,o,l=A("acw62"),u=A("fO90s");function d(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var p=new Set,h={};function f(e,t){m(e,t),m(e+"Capture",t)}function m(e,t){for(h[e]=t,e=0;e<t.length;e++)p.add(t[e])}var g=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),y=Object.prototype.hasOwnProperty,b=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,v={},x={};function w(e,t,r,n,a,s,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=n,this.attributeNamespace=a,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=i}var k={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){k[e]=new w(e,0,!1,e,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];k[t]=new w(t,1,!1,e[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){k[e]=new w(e,2,!1,e.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){k[e]=new w(e,2,!1,e,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){k[e]=new w(e,3,!1,e.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(e){k[e]=new w(e,3,!0,e,null,!1,!1)}),["capture","download"].forEach(function(e){k[e]=new w(e,4,!1,e,null,!1,!1)}),["cols","rows","size","span"].forEach(function(e){k[e]=new w(e,6,!1,e,null,!1,!1)}),["rowSpan","start"].forEach(function(e){k[e]=new w(e,5,!1,e.toLowerCase(),null,!1,!1)});var S=/[\-:]([a-z])/g;function N(e){return e[1].toUpperCase()}function T(e,t,r,n){var a,s=k.hasOwnProperty(t)?k[t]:null;(null!==s?0!==s.type:n||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,r,n){if(null==t||function(e,t,r,n){if(null!==r&&0===r.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":if(n)return!1;if(null!==r)return!r.acceptsBooleans;return"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e;default:return!1}}(e,t,r,n))return!0;if(n)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,r,s,n)&&(r=null),n||null===s?(a=t,(!!y.call(x,a)||!y.call(v,a)&&(b.test(a)?x[a]=!0:(v[a]=!0,!1)))&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r))):s.mustUseProperty?e[s.propertyName]=null===r?3!==s.type&&"":r:(t=s.attributeName,n=s.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(s=s.type)||4===s&&!0===r?"":""+r,n?e.setAttributeNS(n,t,r):e.setAttribute(t,r))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(S,N);k[t]=new w(t,1,!1,e,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(S,N);k[t]=new w(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(S,N);k[t]=new w(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(e){k[e]=new w(e,1,!1,e.toLowerCase(),null,!1,!1)}),k.xlinkHref=new w("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(e){k[e]=new w(e,1,!1,e.toLowerCase(),null,!0,!0)});var I=l.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,C=Symbol.for("react.element"),E=Symbol.for("react.portal"),R=Symbol.for("react.fragment"),_=Symbol.for("react.strict_mode"),O=Symbol.for("react.profiler"),P=Symbol.for("react.provider"),$=Symbol.for("react.context"),D=Symbol.for("react.forward_ref"),M=Symbol.for("react.suspense"),F=Symbol.for("react.suspense_list"),L=Symbol.for("react.memo"),j=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var B=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var z=Symbol.iterator;function V(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=z&&e[z]||e["@@iterator"])?e:null}var G,U,W,q,H,K,X,Z,Q,Y,J,ee,et,er=Object.assign;function en(e){if(void 0===et)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);et=t&&t[1]||""}return"\n"+et+e}var ea=!1;function es(e,t){if(!e||ea)return"";ea=!0;var r=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t){if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var n=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){n=e}e.call(t.prototype)}}else{try{throw Error()}catch(e){n=e}e()}}catch(t){if(t&&n&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),s=n.stack.split("\n"),i=a.length-1,o=s.length-1;1<=i&&0<=o&&a[i]!==s[o];)o--;for(;1<=i&&0<=o;i--,o--)if(a[i]!==s[o]){if(1!==i||1!==o)do if(i--,0>--o||a[i]!==s[o]){var l="\n"+a[i].replace(" at new "," at ");return e.displayName&&l.includes("<anonymous>")&&(l=l.replace("<anonymous>",e.displayName)),l}while(1<=i&&0<=o)break}}}finally{ea=!1,Error.prepareStackTrace=r}return(e=e?e.displayName||e.name:"")?en(e):""}function ei(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function eo(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function el(e){e._valueTracker||(e._valueTracker=function(e){var t=eo(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==r&&"function"==typeof r.get&&"function"==typeof r.set){var a=r.get,s=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){n=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function eu(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),n="";return e&&(n=eo(e)?e.checked?"true":"false":e.value),(e=n)!==r&&(t.setValue(e),!0)}function ec(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function ed(e,t){var r=t.checked;return er({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function ep(e,t){var r=null==t.defaultValue?"":t.defaultValue,n=null!=t.checked?t.checked:t.defaultChecked;r=ei(null!=t.value?t.value:r),e._wrapperState={initialChecked:n,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function eh(e,t){null!=(t=t.checked)&&T(e,"checked",t,!1)}function ef(e,t){eh(e,t);var r=ei(t.value),n=t.type;if(null!=r)"number"===n?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===n||"reset"===n){e.removeAttribute("value");return}t.hasOwnProperty("value")?eg(e,t.type,r):t.hasOwnProperty("defaultValue")&&eg(e,t.type,ei(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function em(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!("submit"!==n&&"reset"!==n||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function eg(e,t,r){("number"!==t||ec(e.ownerDocument)!==e)&&(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}var ey=Array.isArray;function eb(e,t,r,n){if(e=e.options,t){t={};for(var a=0;a<r.length;a++)t["$"+r[a]]=!0;for(r=0;r<e.length;r++)a=t.hasOwnProperty("$"+e[r].value),e[r].selected!==a&&(e[r].selected=a),a&&n&&(e[r].defaultSelected=!0)}else{for(a=0,r=""+ei(r),t=null;a<e.length;a++){if(e[a].value===r){e[a].selected=!0,n&&(e[a].defaultSelected=!0);return}null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function ev(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(d(91));return er({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ex(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(d(92));if(ey(r)){if(1<r.length)throw Error(d(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:ei(r)}}function ew(e,t){var r=ei(t.value),n=ei(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=n&&(e.defaultValue=""+n)}function ek(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function eS(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function eN(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?eS(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var eT,eI,eC=(eT=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((eI=eI||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=eI.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,r,n){MSApp.execUnsafeLocalFunction(function(){return eT(e,t,r,n)})}:eT);function eE(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType){r.nodeValue=t;return}}e.textContent=t}var eA={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},eR=["Webkit","ms","Moz","O"];function e_(e,t,r){return null==t||"boolean"==typeof t||""===t?"":r||"number"!=typeof t||0===t||eA.hasOwnProperty(e)&&eA[e]?(""+t).trim():t+"px"}function eO(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var n=0===r.indexOf("--"),a=e_(r,t[r],n);"float"===r&&(r="cssFloat"),n?e.setProperty(r,a):e[r]=a}}Object.keys(eA).forEach(function(e){eR.forEach(function(t){eA[t=t+e.charAt(0).toUpperCase()+e.substring(1)]=eA[e]})});var eP=er({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function e$(e,t){if(t){if(eP[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(d(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(d(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(d(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(d(62))}}function eD(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var eM=null;function eF(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var eL=null,ej=null,eB=null;function ez(e){if(e=nX(e)){if("function"!=typeof eL)throw Error(d(280));var t=e.stateNode;t&&(t=nQ(t),eL(e.stateNode,e.type,t))}}function eV(e){ej?eB?eB.push(e):eB=[e]:ej=e}function eG(){if(ej){var e=ej,t=eB;if(eB=ej=null,ez(e),t)for(e=0;e<t.length;e++)ez(t[e])}}function eU(e,t){return e(t)}function eW(){}var eq=!1;function eH(e,t,r){if(eq)return e(t,r);eq=!0;try{return eU(e,t,r)}finally{eq=!1,(null!==ej||null!==eB)&&(eW(),eG())}}function eK(e,t){var r=e.stateNode;if(null===r)return null;var n=nQ(r);if(null===n)return null;switch(r=n[t],t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(n=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!n;break;default:e=!1}if(e)return null;if(r&&"function"!=typeof r)throw Error(d(231,t,typeof r));return r}var eX=!1;if(g)try{var eZ={};Object.defineProperty(eZ,"passive",{get:function(){eX=!0}}),window.addEventListener("test",eZ,eZ),window.removeEventListener("test",eZ,eZ)}catch(e){eX=!1}function eQ(e,t,r,n,a,s,i,o,l){var u=Array.prototype.slice.call(arguments,3);try{t.apply(r,u)}catch(e){this.onError(e)}}var eY=!1,eJ=null,e0=!1,e1=null,e2={onError:function(e){eY=!0,eJ=e}};function e4(e,t,r,n,a,s,i,o,l){eY=!1,eJ=null,eQ.apply(e2,arguments)}function e3(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do 0!=(4098&(t=e).flags)&&(r=t.return),e=t.return;while(e)}return 3===t.tag?r:null}function e8(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function e6(e){if(e3(e)!==e)throw Error(d(188))}function e5(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=e3(e)))throw Error(d(188));return t!==e?null:e}for(var r=e,n=t;;){var a=r.return;if(null===a)break;var s=a.alternate;if(null===s){if(null!==(n=a.return)){r=n;continue}break}if(a.child===s.child){for(s=a.child;s;){if(s===r)return e6(a),e;if(s===n)return e6(a),t;s=s.sibling}throw Error(d(188))}if(r.return!==n.return)r=a,n=s;else{for(var i=!1,o=a.child;o;){if(o===r){i=!0,r=a,n=s;break}if(o===n){i=!0,n=a,r=s;break}o=o.sibling}if(!i){for(o=s.child;o;){if(o===r){i=!0,r=s,n=a;break}if(o===n){i=!0,n=s,r=a;break}o=o.sibling}if(!i)throw Error(d(189))}}if(r.alternate!==n)throw Error(d(190))}if(3!==r.tag)throw Error(d(188));return r.stateNode.current===r?e:t}(e))?function e(t){if(5===t.tag||6===t.tag)return t;for(t=t.child;null!==t;){var r=e(t);if(null!==r)return r;t=t.sibling}return null}(e):null}var e7=u.unstable_scheduleCallback,e9=u.unstable_cancelCallback,te=u.unstable_shouldYield,tt=u.unstable_requestPaint,tr=u.unstable_now,tn=u.unstable_getCurrentPriorityLevel,ta=u.unstable_ImmediatePriority,ts=u.unstable_UserBlockingPriority,ti=u.unstable_NormalPriority,to=u.unstable_LowPriority,tl=u.unstable_IdlePriority,tu=null,tc=null,td=Math.clz32?Math.clz32:function(e){return 0==(e>>>=0)?32:31-(tp(e)/th|0)|0},tp=Math.log,th=Math.LN2,tf=64,tm=4194304;function tg(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ty(e,t){var r=e.pendingLanes;if(0===r)return 0;var n=0,a=e.suspendedLanes,s=e.pingedLanes,i=268435455&r;if(0!==i){var o=i&~a;0!==o?n=tg(o):0!=(s&=i)&&(n=tg(s))}else 0!=(i=r&~a)?n=tg(i):0!==s&&(n=tg(s));if(0===n)return 0;if(0!==t&&t!==n&&0==(t&a)&&((a=n&-n)>=(s=t&-t)||16===a&&0!=(4194240&s)))return t;if(0!=(4&n)&&(n|=16&r),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=n;0<t;)a=1<<(r=31-td(t)),n|=e[r],t&=~a;return n}function tb(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function tv(){var e=tf;return 0==(4194240&(tf<<=1))&&(tf=64),e}function tx(e){for(var t=[],r=0;31>r;r++)t.push(e);return t}function tw(e,t,r){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-td(t)]=r}function tk(e,t){var r=e.entangledLanes|=t;for(e=e.entanglements;r;){var n=31-td(r),a=1<<n;a&t|e[n]&t&&(e[n]|=t),r&=~a}}var tS=0;function tN(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var tT,tI,tC,tE,tA,tR=!1,t_=[],tO=null,tP=null,t$=null,tD=new Map,tM=new Map,tF=[],tL="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function tj(e,t){switch(e){case"focusin":case"focusout":tO=null;break;case"dragenter":case"dragleave":tP=null;break;case"mouseover":case"mouseout":t$=null;break;case"pointerover":case"pointerout":tD.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":tM.delete(t.pointerId)}}function tB(e,t,r,n,a,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:r,eventSystemFlags:n,nativeEvent:s,targetContainers:[a]},null!==t&&null!==(t=nX(t))&&tI(t)):(e.eventSystemFlags|=n,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a)),e}function tz(e){var t=nK(e.target);if(null!==t){var r=e3(t);if(null!==r){if(13===(t=r.tag)){if(null!==(t=e8(r))){e.blockedOn=t,tA(e.priority,function(){tC(r)});return}}else if(3===t&&r.stateNode.current.memoizedState.isDehydrated){e.blockedOn=3===r.tag?r.stateNode.containerInfo:null;return}}}e.blockedOn=null}function tV(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var r=tJ(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==r)return null!==(t=nX(r))&&tI(t),e.blockedOn=r,!1;var n=new(r=e.nativeEvent).constructor(r.type,r);eM=n,r.target.dispatchEvent(n),eM=null,t.shift()}return!0}function tG(e,t,r){tV(e)&&r.delete(t)}function tU(){tR=!1,null!==tO&&tV(tO)&&(tO=null),null!==tP&&tV(tP)&&(tP=null),null!==t$&&tV(t$)&&(t$=null),tD.forEach(tG),tM.forEach(tG)}function tW(e,t){e.blockedOn===t&&(e.blockedOn=null,tR||(tR=!0,u.unstable_scheduleCallback(u.unstable_NormalPriority,tU)))}function tq(e){function t(t){return tW(t,e)}if(0<t_.length){tW(t_[0],e);for(var r=1;r<t_.length;r++){var n=t_[r];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==tO&&tW(tO,e),null!==tP&&tW(tP,e),null!==t$&&tW(t$,e),tD.forEach(t),tM.forEach(t),r=0;r<tF.length;r++)(n=tF[r]).blockedOn===e&&(n.blockedOn=null);for(;0<tF.length&&null===(r=tF[0]).blockedOn;)tz(r),null===r.blockedOn&&tF.shift()}var tH=I.ReactCurrentBatchConfig,tK=!0;function tX(e,t,r,n){var a=tS,s=tH.transition;tH.transition=null;try{tS=1,tQ(e,t,r,n)}finally{tS=a,tH.transition=s}}function tZ(e,t,r,n){var a=tS,s=tH.transition;tH.transition=null;try{tS=4,tQ(e,t,r,n)}finally{tS=a,tH.transition=s}}function tQ(e,t,r,n){if(tK){var a=tJ(e,t,r,n);if(null===a)nx(e,t,n,tY,r),tj(e,n);else if(function(e,t,r,n,a){switch(t){case"focusin":return tO=tB(tO,e,t,r,n,a),!0;case"dragenter":return tP=tB(tP,e,t,r,n,a),!0;case"mouseover":return t$=tB(t$,e,t,r,n,a),!0;case"pointerover":var s=a.pointerId;return tD.set(s,tB(tD.get(s)||null,e,t,r,n,a)),!0;case"gotpointercapture":return s=a.pointerId,tM.set(s,tB(tM.get(s)||null,e,t,r,n,a)),!0}return!1}(a,e,t,r,n))n.stopPropagation();else if(tj(e,n),4&t&&-1<tL.indexOf(e)){for(;null!==a;){var s=nX(a);if(null!==s&&tT(s),null===(s=tJ(e,t,r,n))&&nx(e,t,n,tY,r),s===a)break;a=s}null!==a&&n.stopPropagation()}else nx(e,t,n,null,r)}}var tY=null;function tJ(e,t,r,n){if(tY=null,null!==(e=nK(e=eF(n)))){if(null===(t=e3(e)))e=null;else if(13===(r=t.tag)){if(null!==(e=e8(t)))return e;e=null}else if(3===r){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null)}return tY=e,null}function t0(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(tn()){case ta:return 1;case ts:return 4;case ti:case to:return 16;case tl:return 536870912;default:return 16}default:return 16}}var t1=null,t2=null,t4=null;function t3(){if(t4)return t4;var e,t,r=t2,n=r.length,a="value"in t1?t1.value:t1.textContent,s=a.length;for(e=0;e<n&&r[e]===a[e];e++);var i=n-e;for(t=1;t<=i&&r[n-t]===a[s-t];t++);return t4=a.slice(e,1<t?1-t:void 0)}function t8(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function t6(){return!0}function t5(){return!1}function t7(e){function t(t,r,n,a,s){for(var i in this._reactName=t,this._targetInst=n,this.type=r,this.nativeEvent=a,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?t6:t5,this.isPropagationStopped=t5,this}return er(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=t6)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=t6)},persist:function(){},isPersistent:t6}),t}var t9,re,rt,rr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},rn=t7(rr),ra=er({},rr,{view:0,detail:0}),rs=t7(ra),ri=er({},ra,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:ry,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==rt&&(rt&&"mousemove"===e.type?(t9=e.screenX-rt.screenX,re=e.screenY-rt.screenY):re=t9=0,rt=e),t9)},movementY:function(e){return"movementY"in e?e.movementY:re}}),ro=t7(ri),rl=t7(er({},ri,{dataTransfer:0})),ru=t7(er({},ra,{relatedTarget:0})),rc=t7(er({},rr,{animationName:0,elapsedTime:0,pseudoElement:0})),rd=t7(er({},rr,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),rp=t7(er({},rr,{data:0})),rh={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},rf={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},rm={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function rg(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=rm[e])&&!!t[e]}function ry(){return rg}var rb=t7(er({},ra,{key:function(e){if(e.key){var t=rh[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=t8(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?rf[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:ry,charCode:function(e){return"keypress"===e.type?t8(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?t8(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),rv=t7(er({},ri,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),rx=t7(er({},ra,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:ry})),rw=t7(er({},rr,{propertyName:0,elapsedTime:0,pseudoElement:0})),rk=t7(er({},ri,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),rS=[9,13,27,32],rN=g&&"CompositionEvent"in window,rT=null;g&&"documentMode"in document&&(rT=document.documentMode);var rI=g&&"TextEvent"in window&&!rT,rC=g&&(!rN||rT&&8<rT&&11>=rT),rE=!1;function rA(e,t){switch(e){case"keyup":return -1!==rS.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function rR(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var r_=!1,rO={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function rP(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!rO[e.type]:"textarea"===t}function r$(e,t,r,n){eV(n),0<(t=nk(t,"onChange")).length&&(r=new rn("onChange","change",null,r,n),e.push({event:r,listeners:t}))}var rD=null,rM=null;function rF(e){nf(e,0)}function rL(e){if(eu(nZ(e)))return e}function rj(e,t){if("change"===e)return t}var rB=!1;if(g){if(g){var rz="oninput"in document;if(!rz){var rV=document.createElement("div");rV.setAttribute("oninput","return;"),rz="function"==typeof rV.oninput}r=rz}else r=!1;rB=r&&(!document.documentMode||9<document.documentMode)}function rG(){rD&&(rD.detachEvent("onpropertychange",rU),rM=rD=null)}function rU(e){if("value"===e.propertyName&&rL(rM)){var t=[];r$(t,rM,e,eF(e)),eH(rF,t)}}function rW(e,t,r){"focusin"===e?(rG(),rD=t,rM=r,rD.attachEvent("onpropertychange",rU)):"focusout"===e&&rG()}function rq(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return rL(rM)}function rH(e,t){if("click"===e)return rL(t)}function rK(e,t){if("input"===e||"change"===e)return rL(t)}var rX="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function rZ(e,t){if(rX(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++){var a=r[n];if(!y.call(t,a)||!rX(e[a],t[a]))return!1}return!0}function rQ(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function rY(e,t){var r,n=rQ(e);for(e=0;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=rQ(n)}}function rJ(){for(var e=window,t=ec();t instanceof e.HTMLIFrameElement;){try{var r="string"==typeof t.contentWindow.location.href}catch(e){r=!1}if(r)e=t.contentWindow;else break;t=ec(e.document)}return t}function r0(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var r1=g&&"documentMode"in document&&11>=document.documentMode,r2=null,r4=null,r3=null,r8=!1;function r6(e,t,r){var n=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;r8||null==r2||r2!==ec(n)||(n="selectionStart"in(n=r2)&&r0(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},r3&&rZ(r3,n)||(r3=n,0<(n=nk(r4,"onSelect")).length&&(t=new rn("onSelect","select",null,t,r),e.push({event:t,listeners:n}),t.target=r2)))}function r5(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var r7={animationend:r5("Animation","AnimationEnd"),animationiteration:r5("Animation","AnimationIteration"),animationstart:r5("Animation","AnimationStart"),transitionend:r5("Transition","TransitionEnd")},r9={},ne={};function nt(e){if(r9[e])return r9[e];if(!r7[e])return e;var t,r=r7[e];for(t in r)if(r.hasOwnProperty(t)&&t in ne)return r9[e]=r[t];return e}g&&(ne=document.createElement("div").style,"AnimationEvent"in window||(delete r7.animationend.animation,delete r7.animationiteration.animation,delete r7.animationstart.animation),"TransitionEvent"in window||delete r7.transitionend.transition);var nr=nt("animationend"),nn=nt("animationiteration"),na=nt("animationstart"),ns=nt("transitionend"),ni=new Map,no="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function nl(e,t){ni.set(e,t),f(t,[e])}for(var nu=0;nu<no.length;nu++){var nc=no[nu];nl(nc.toLowerCase(),"on"+(nc[0].toUpperCase()+nc.slice(1)))}nl(nr,"onAnimationEnd"),nl(nn,"onAnimationIteration"),nl(na,"onAnimationStart"),nl("dblclick","onDoubleClick"),nl("focusin","onFocus"),nl("focusout","onBlur"),nl(ns,"onTransitionEnd"),m("onMouseEnter",["mouseout","mouseover"]),m("onMouseLeave",["mouseout","mouseover"]),m("onPointerEnter",["pointerout","pointerover"]),m("onPointerLeave",["pointerout","pointerover"]),f("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),f("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),f("onBeforeInput",["compositionend","keypress","textInput","paste"]),f("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),f("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),f("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var nd="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),np=new Set("cancel close invalid load scroll toggle".split(" ").concat(nd));function nh(e,t,r){var n=e.type||"unknown-event";e.currentTarget=r,function(e,t,r,n,a,s,i,o,l){if(e4.apply(this,arguments),eY){if(eY){var u=eJ;eY=!1,eJ=null}else throw Error(d(198));e0||(e0=!0,e1=u)}}(n,t,void 0,e),e.currentTarget=null}function nf(e,t){t=0!=(4&t);for(var r=0;r<e.length;r++){var n=e[r],a=n.event;n=n.listeners;e:{var s=void 0;if(t)for(var i=n.length-1;0<=i;i--){var o=n[i],l=o.instance,u=o.currentTarget;if(o=o.listener,l!==s&&a.isPropagationStopped())break e;nh(a,o,u),s=l}else for(i=0;i<n.length;i++){if(l=(o=n[i]).instance,u=o.currentTarget,o=o.listener,l!==s&&a.isPropagationStopped())break e;nh(a,o,u),s=l}}}if(e0)throw e=e1,e0=!1,e1=null,e}function nm(e,t){var r=t[nW];void 0===r&&(r=t[nW]=new Set);var n=e+"__bubble";r.has(n)||(nv(t,e,2,!1),r.add(n))}function ng(e,t,r){var n=0;t&&(n|=4),nv(r,e,n,t)}var ny="_reactListening"+Math.random().toString(36).slice(2);function nb(e){if(!e[ny]){e[ny]=!0,p.forEach(function(t){"selectionchange"!==t&&(np.has(t)||ng(t,!1,e),ng(t,!0,e))});var t=9===e.nodeType?e:e.ownerDocument;null===t||t[ny]||(t[ny]=!0,ng("selectionchange",!1,t))}}function nv(e,t,r,n){switch(t0(t)){case 1:var a=tX;break;case 4:a=tZ;break;default:a=tQ}r=a.bind(null,t,r,e),a=void 0,eX&&("touchstart"===t||"touchmove"===t||"wheel"===t)&&(a=!0),n?void 0!==a?e.addEventListener(t,r,{capture:!0,passive:a}):e.addEventListener(t,r,!0):void 0!==a?e.addEventListener(t,r,{passive:a}):e.addEventListener(t,r,!1)}function nx(e,t,r,n,a){var s=n;if(0==(1&t)&&0==(2&t)&&null!==n)e:for(;;){if(null===n)return;var i=n.tag;if(3===i||4===i){var o=n.stateNode.containerInfo;if(o===a||8===o.nodeType&&o.parentNode===a)break;if(4===i)for(i=n.return;null!==i;){var l=i.tag;if((3===l||4===l)&&((l=i.stateNode.containerInfo)===a||8===l.nodeType&&l.parentNode===a))return;i=i.return}for(;null!==o;){if(null===(i=nK(o)))return;if(5===(l=i.tag)||6===l){n=s=i;continue e}o=o.parentNode}}n=n.return}eH(function(){var n=s,a=eF(r),i=[];e:{var o=ni.get(e);if(void 0!==o){var l=rn,u=e;switch(e){case"keypress":if(0===t8(r))break e;case"keydown":case"keyup":l=rb;break;case"focusin":u="focus",l=ru;break;case"focusout":u="blur",l=ru;break;case"beforeblur":case"afterblur":l=ru;break;case"click":if(2===r.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":l=ro;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":l=rl;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":l=rx;break;case nr:case nn:case na:l=rc;break;case ns:l=rw;break;case"scroll":l=rs;break;case"wheel":l=rk;break;case"copy":case"cut":case"paste":l=rd;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":l=rv}var c=0!=(4&t),d=!c&&"scroll"===e,p=c?null!==o?o+"Capture":null:o;c=[];for(var h,f=n;null!==f;){var m=(h=f).stateNode;if(5===h.tag&&null!==m&&(h=m,null!==p&&null!=(m=eK(f,p))&&c.push(nw(f,m,h))),d)break;f=f.return}0<c.length&&(o=new l(o,u,null,r,a),i.push({event:o,listeners:c}))}}if(0==(7&t)){if(o="mouseover"===e||"pointerover"===e,l="mouseout"===e||"pointerout"===e,!(o&&r!==eM&&(u=r.relatedTarget||r.fromElement)&&(nK(u)||u[nU]))&&(l||o)&&(o=a.window===a?a:(o=a.ownerDocument)?o.defaultView||o.parentWindow:window,l?(u=r.relatedTarget||r.toElement,l=n,null!==(u=u?nK(u):null)&&(d=e3(u),u!==d||5!==u.tag&&6!==u.tag)&&(u=null)):(l=null,u=n),l!==u)){if(c=ro,m="onMouseLeave",p="onMouseEnter",f="mouse",("pointerout"===e||"pointerover"===e)&&(c=rv,m="onPointerLeave",p="onPointerEnter",f="pointer"),d=null==l?o:nZ(l),h=null==u?o:nZ(u),(o=new c(m,f+"leave",l,r,a)).target=d,o.relatedTarget=h,m=null,nK(a)===n&&((c=new c(p,f+"enter",u,r,a)).target=h,c.relatedTarget=d,m=c),d=m,l&&u)t:{for(c=l,p=u,f=0,h=c;h;h=nS(h))f++;for(h=0,m=p;m;m=nS(m))h++;for(;0<f-h;)c=nS(c),f--;for(;0<h-f;)p=nS(p),h--;for(;f--;){if(c===p||null!==p&&c===p.alternate)break t;c=nS(c),p=nS(p)}c=null}else c=null;null!==l&&nN(i,o,l,c,!1),null!==u&&null!==d&&nN(i,d,u,c,!0)}e:{if("select"===(l=(o=n?nZ(n):window).nodeName&&o.nodeName.toLowerCase())||"input"===l&&"file"===o.type)var g,y=rj;else if(rP(o)){if(rB)y=rK;else{y=rq;var b=rW}}else(l=o.nodeName)&&"input"===l.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(y=rH);if(y&&(y=y(e,n))){r$(i,y,r,a);break e}b&&b(e,o,n),"focusout"===e&&(b=o._wrapperState)&&b.controlled&&"number"===o.type&&eg(o,"number",o.value)}switch(b=n?nZ(n):window,e){case"focusin":(rP(b)||"true"===b.contentEditable)&&(r2=b,r4=n,r3=null);break;case"focusout":r3=r4=r2=null;break;case"mousedown":r8=!0;break;case"contextmenu":case"mouseup":case"dragend":r8=!1,r6(i,r,a);break;case"selectionchange":if(r1)break;case"keydown":case"keyup":r6(i,r,a)}if(rN)t:{switch(e){case"compositionstart":var v="onCompositionStart";break t;case"compositionend":v="onCompositionEnd";break t;case"compositionupdate":v="onCompositionUpdate";break t}v=void 0}else r_?rA(e,r)&&(v="onCompositionEnd"):"keydown"===e&&229===r.keyCode&&(v="onCompositionStart");v&&(rC&&"ko"!==r.locale&&(r_||"onCompositionStart"!==v?"onCompositionEnd"===v&&r_&&(g=t3()):(t2="value"in(t1=a)?t1.value:t1.textContent,r_=!0)),0<(b=nk(n,v)).length&&(v=new rp(v,e,null,r,a),i.push({event:v,listeners:b}),g?v.data=g:null!==(g=rR(r))&&(v.data=g))),(g=rI?function(e,t){switch(e){case"compositionend":return rR(t);case"keypress":if(32!==t.which)return null;return rE=!0," ";case"textInput":return" "===(e=t.data)&&rE?null:e;default:return null}}(e,r):function(e,t){if(r_)return"compositionend"===e||!rN&&rA(e,t)?(e=t3(),t4=t2=t1=null,r_=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return rC&&"ko"!==t.locale?null:t.data}}(e,r))&&0<(n=nk(n,"onBeforeInput")).length&&(a=new rp("onBeforeInput","beforeinput",null,r,a),i.push({event:a,listeners:n}),a.data=g)}nf(i,t)})}function nw(e,t,r){return{instance:e,listener:t,currentTarget:r}}function nk(e,t){for(var r=t+"Capture",n=[];null!==e;){var a=e,s=a.stateNode;5===a.tag&&null!==s&&(a=s,null!=(s=eK(e,r))&&n.unshift(nw(e,s,a)),null!=(s=eK(e,t))&&n.push(nw(e,s,a))),e=e.return}return n}function nS(e){if(null===e)return null;do e=e.return;while(e&&5!==e.tag)return e||null}function nN(e,t,r,n,a){for(var s=t._reactName,i=[];null!==r&&r!==n;){var o=r,l=o.alternate,u=o.stateNode;if(null!==l&&l===n)break;5===o.tag&&null!==u&&(o=u,a?null!=(l=eK(r,s))&&i.unshift(nw(r,l,o)):a||null!=(l=eK(r,s))&&i.push(nw(r,l,o))),r=r.return}0!==i.length&&e.push({event:t,listeners:i})}var nT=/\r\n?/g,nI=/\u0000|\uFFFD/g;function nC(e){return("string"==typeof e?e:""+e).replace(nT,"\n").replace(nI,"")}function nE(e,t,r){if(t=nC(t),nC(e)!==t&&r)throw Error(d(425))}function nA(){}var nR=null,n_=null;function nO(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var nP="function"==typeof setTimeout?setTimeout:void 0,n$="function"==typeof clearTimeout?clearTimeout:void 0,nD="function"==typeof Promise?Promise:void 0,nM="function"==typeof queueMicrotask?queueMicrotask:void 0!==nD?function(e){return nD.resolve(null).then(e).catch(nF)}:nP;function nF(e){setTimeout(function(){throw e})}function nL(e,t){var r=t,n=0;do{var a=r.nextSibling;if(e.removeChild(r),a&&8===a.nodeType){if("/$"===(r=a.data)){if(0===n){e.removeChild(a),tq(t);return}n--}else"$"!==r&&"$?"!==r&&"$!"!==r||n++}r=a}while(r)tq(t)}function nj(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function nB(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var nz=Math.random().toString(36).slice(2),nV="__reactFiber$"+nz,nG="__reactProps$"+nz,nU="__reactContainer$"+nz,nW="__reactEvents$"+nz,nq="__reactListeners$"+nz,nH="__reactHandles$"+nz;function nK(e){var t=e[nV];if(t)return t;for(var r=e.parentNode;r;){if(t=r[nU]||r[nV]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=nB(e);null!==e;){if(r=e[nV])return r;e=nB(e)}return t}r=(e=r).parentNode}return null}function nX(e){return(e=e[nV]||e[nU])&&(5===e.tag||6===e.tag||13===e.tag||3===e.tag)?e:null}function nZ(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(d(33))}function nQ(e){return e[nG]||null}var nY=[],nJ=-1;function n0(e){return{current:e}}function n1(e){0>nJ||(e.current=nY[nJ],nY[nJ]=null,nJ--)}function n2(e,t){nY[++nJ]=e.current,e.current=t}var n4={},n3=n0(n4),n8=n0(!1),n6=n4;function n5(e,t){var r=e.type.contextTypes;if(!r)return n4;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var a,s={};for(a in r)s[a]=t[a];return n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function n7(e){return null!=(e=e.childContextTypes)}function n9(){n1(n8),n1(n3)}function ae(e,t,r){if(n3.current!==n4)throw Error(d(168));n2(n3,t),n2(n8,r)}function at(e,t,r){var n=e.stateNode;if(t=t.childContextTypes,"function"!=typeof n.getChildContext)return r;for(var a in n=n.getChildContext())if(!(a in t))throw Error(d(108,function(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return function e(t){if(null==t)return null;if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t;switch(t){case R:return"Fragment";case E:return"Portal";case O:return"Profiler";case _:return"StrictMode";case M:return"Suspense";case F:return"SuspenseList"}if("object"==typeof t)switch(t.$$typeof){case $:return(t.displayName||"Context")+".Consumer";case P:return(t._context.displayName||"Context")+".Provider";case D:var r=t.render;return(t=t.displayName)||(t=""!==(t=r.displayName||r.name||"")?"ForwardRef("+t+")":"ForwardRef"),t;case L:return null!==(r=t.displayName||null)?r:e(t.type)||"Memo";case j:r=t._payload,t=t._init;try{return e(t(r))}catch(e){}}return null}(t);case 8:return t===_?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}(e)||"Unknown",a));return er({},r,n)}function ar(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||n4,n6=n3.current,n2(n3,e),n2(n8,n8.current),!0}function an(e,t,r){var n=e.stateNode;if(!n)throw Error(d(169));r?(e=at(e,t,n6),n.__reactInternalMemoizedMergedChildContext=e,n1(n8),n1(n3),n2(n3,e)):n1(n8),n2(n8,r)}var aa=null,as=!1,ai=!1;function ao(e){null===aa?aa=[e]:aa.push(e)}function al(){if(!ai&&null!==aa){ai=!0;var e=0,t=tS;try{var r=aa;for(tS=1;e<r.length;e++){var n=r[e];do n=n(!0);while(null!==n)}aa=null,as=!1}catch(t){throw null!==aa&&(aa=aa.slice(e+1)),e7(ta,al),t}finally{tS=t,ai=!1}}return null}var au=[],ac=0,ad=null,ap=0,ah=[],af=0,am=null,ag=1,ay="";function ab(e,t){au[ac++]=ap,au[ac++]=ad,ad=e,ap=t}function av(e,t,r){ah[af++]=ag,ah[af++]=ay,ah[af++]=am,am=e;var n=ag;e=ay;var a=32-td(n)-1;n&=~(1<<a),r+=1;var s=32-td(t)+a;if(30<s){var i=a-a%5;s=(n&(1<<i)-1).toString(32),n>>=i,a-=i,ag=1<<32-td(t)+a|r<<a|n,ay=s+e}else ag=1<<s|r<<a|n,ay=e}function ax(e){null!==e.return&&(ab(e,1),av(e,1,0))}function aw(e){for(;e===ad;)ad=au[--ac],au[ac]=null,ap=au[--ac],au[ac]=null;for(;e===am;)am=ah[--af],ah[af]=null,ay=ah[--af],ah[af]=null,ag=ah[--af],ah[af]=null}var ak=null,aS=null,aN=!1,aT=null;function aI(e,t){var r=o7(5,null,null,0);r.elementType="DELETED",r.stateNode=t,r.return=e,null===(t=e.deletions)?(e.deletions=[r],e.flags|=16):t.push(r)}function aC(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ak=e,aS=nj(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ak=e,aS=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(r=null!==am?{id:ag,overflow:ay}:null,e.memoizedState={dehydrated:t,treeContext:r,retryLane:1073741824},(r=o7(18,null,null,0)).stateNode=t,r.return=e,e.child=r,ak=e,aS=null,!0);default:return!1}}function aE(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function aA(e){if(aN){var t=aS;if(t){var r=t;if(!aC(e,t)){if(aE(e))throw Error(d(418));t=nj(r.nextSibling);var n=ak;t&&aC(e,t)?aI(n,r):(e.flags=-4097&e.flags|2,aN=!1,ak=e)}}else{if(aE(e))throw Error(d(418));e.flags=-4097&e.flags|2,aN=!1,ak=e}}}function aR(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ak=e}function a_(e){if(e!==ak)return!1;if(!aN)return aR(e),aN=!0,!1;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nO(e.type,e.memoizedProps)),t&&(t=aS)){if(aE(e))throw aO(),Error(d(418));for(;t;)aI(e,t),t=nj(t.nextSibling)}if(aR(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(d(317));e:{for(t=0,e=e.nextSibling;e;){if(8===e.nodeType){var t,r=e.data;if("/$"===r){if(0===t){aS=nj(e.nextSibling);break e}t--}else"$"!==r&&"$!"!==r&&"$?"!==r||t++}e=e.nextSibling}aS=null}}else aS=ak?nj(e.stateNode.nextSibling):null;return!0}function aO(){for(var e=aS;e;)e=nj(e.nextSibling)}function aP(){aS=ak=null,aN=!1}function a$(e){null===aT?aT=[e]:aT.push(e)}var aD=I.ReactCurrentBatchConfig;function aM(e,t){if(e&&e.defaultProps)for(var r in t=er({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}var aF=n0(null),aL=null,aj=null,aB=null;function az(){aB=aj=aL=null}function aV(e){var t=aF.current;n1(aF),e._currentValue=t}function aG(e,t,r){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==n&&(n.childLanes|=t)):null!==n&&(n.childLanes&t)!==t&&(n.childLanes|=t),e===r)break;e=e.return}}function aU(e,t){aL=e,aB=aj=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(iw=!0),e.firstContext=null)}function aW(e){var t=e._currentValue;if(aB!==e){if(e={context:e,memoizedValue:t,next:null},null===aj){if(null===aL)throw Error(d(308));aj=e,aL.dependencies={lanes:0,firstContext:e}}else aj=aj.next=e}return t}var aq=null;function aH(e){null===aq?aq=[e]:aq.push(e)}function aK(e,t,r,n){var a=t.interleaved;return null===a?(r.next=r,aH(t)):(r.next=a.next,a.next=r),t.interleaved=r,aX(e,n)}function aX(e,t){e.lanes|=t;var r=e.alternate;for(null!==r&&(r.lanes|=t),r=e,e=e.return;null!==e;)e.childLanes|=t,null!==(r=e.alternate)&&(r.childLanes|=t),r=e,e=e.return;return 3===r.tag?r.stateNode:null}var aZ=!1;function aQ(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function aY(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function aJ(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function a0(e,t,r){var n=e.updateQueue;if(null===n)return null;if(n=n.shared,0!=(2&ol)){var a=n.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),n.pending=t,aX(e,r)}return null===(a=n.interleaved)?(t.next=t,aH(n)):(t.next=a.next,a.next=t),n.interleaved=t,aX(e,r)}function a1(e,t,r){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&r))){var n=t.lanes;n&=e.pendingLanes,r|=n,t.lanes=r,tk(e,r)}}function a2(e,t){var r=e.updateQueue,n=e.alternate;if(null!==n&&r===(n=n.updateQueue)){var a=null,s=null;if(null!==(r=r.firstBaseUpdate)){do{var i={eventTime:r.eventTime,lane:r.lane,tag:r.tag,payload:r.payload,callback:r.callback,next:null};null===s?a=s=i:s=s.next=i,r=r.next}while(null!==r)null===s?a=s=t:s=s.next=t}else a=s=t;r={baseState:n.baseState,firstBaseUpdate:a,lastBaseUpdate:s,shared:n.shared,effects:n.effects},e.updateQueue=r;return}null===(e=r.lastBaseUpdate)?r.firstBaseUpdate=t:e.next=t,r.lastBaseUpdate=t}function a4(e,t,r,n){var a=e.updateQueue;aZ=!1;var s=a.firstBaseUpdate,i=a.lastBaseUpdate,o=a.shared.pending;if(null!==o){a.shared.pending=null;var l=o,u=l.next;l.next=null,null===i?s=u:i.next=u,i=l;var c=e.alternate;null!==c&&(o=(c=c.updateQueue).lastBaseUpdate)!==i&&(null===o?c.firstBaseUpdate=u:o.next=u,c.lastBaseUpdate=l)}if(null!==s){var d=a.baseState;for(i=0,c=u=l=null,o=s;;){var p=o.lane,h=o.eventTime;if((n&p)===p){null!==c&&(c=c.next={eventTime:h,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var f=e,m=o;switch(p=t,h=r,m.tag){case 1:if("function"==typeof(f=m.payload)){d=f.call(h,d,p);break e}d=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null==(p="function"==typeof(f=m.payload)?f.call(h,d,p):f))break e;d=er({},d,p);break e;case 2:aZ=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(p=a.effects)?a.effects=[o]:p.push(o))}else h={eventTime:h,lane:p,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===c?(u=c=h,l=d):c=c.next=h,i|=p;if(null===(o=o.next)){if(null===(o=a.shared.pending))break;o=(p=o).next,p.next=null,a.lastBaseUpdate=p,a.shared.pending=null}}if(null===c&&(l=d),a.baseState=l,a.firstBaseUpdate=u,a.lastBaseUpdate=c,null!==(t=a.shared.interleaved)){a=t;do i|=a.lane,a=a.next;while(a!==t)}else null===s&&(a.shared.lanes=0);og|=i,e.lanes=i,e.memoizedState=d}}function a3(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var n=e[t],a=n.callback;if(null!==a){if(n.callback=null,n=r,"function"!=typeof a)throw Error(d(191,a));a.call(n)}}}var a8=(new l.Component).refs;function a6(e,t,r,n){r=null==(r=r(n,t=e.memoizedState))?t:er({},t,r),e.memoizedState=r,0===e.lanes&&(e.updateQueue.baseState=r)}var a5={isMounted:function(e){return!!(e=e._reactInternals)&&e3(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternals;var n=o$(),a=oD(e),s=aJ(n,a);s.payload=t,null!=r&&(s.callback=r),null!==(t=a0(e,s,a))&&(oM(t,e,a,n),a1(t,e,a))},enqueueReplaceState:function(e,t,r){e=e._reactInternals;var n=o$(),a=oD(e),s=aJ(n,a);s.tag=1,s.payload=t,null!=r&&(s.callback=r),null!==(t=a0(e,s,a))&&(oM(t,e,a,n),a1(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var r=o$(),n=oD(e),a=aJ(r,n);a.tag=2,null!=t&&(a.callback=t),null!==(t=a0(e,a,n))&&(oM(t,e,n,r),a1(t,e,n))}};function a7(e,t,r,n,a,s,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(n,s,i):!t.prototype||!t.prototype.isPureReactComponent||!rZ(r,n)||!rZ(a,s)}function a9(e,t,r){var n=!1,a=n4,s=t.contextType;return"object"==typeof s&&null!==s?s=aW(s):(a=n7(t)?n6:n3.current,s=(n=null!=(n=t.contextTypes))?n5(e,a):n4),t=new t(r,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=a5,e.stateNode=t,t._reactInternals=e,n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=s),t}function se(e,t,r,n){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,n),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,n),t.state!==e&&a5.enqueueReplaceState(t,t.state,null)}function st(e,t,r,n){var a=e.stateNode;a.props=r,a.state=e.memoizedState,a.refs=a8,aQ(e);var s=t.contextType;"object"==typeof s&&null!==s?a.context=aW(s):(s=n7(t)?n6:n3.current,a.context=n5(e,s)),a.state=e.memoizedState,"function"==typeof(s=t.getDerivedStateFromProps)&&(a6(e,t,s,r),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&a5.enqueueReplaceState(a,a.state,null),a4(e,r,a,n),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function sr(e,t,r){if(null!==(e=r.ref)&&"function"!=typeof e&&"object"!=typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(d(309));var n=r.stateNode}if(!n)throw Error(d(147,e));var a=n,s=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===s?t.ref:((t=function(e){var t=a.refs;t===a8&&(t=a.refs={}),null===e?delete t[s]:t[s]=e})._stringRef=s,t)}if("string"!=typeof e)throw Error(d(284));if(!r._owner)throw Error(d(290,e))}return e}function sn(e,t){throw Error(d(31,"[object Object]"===(e=Object.prototype.toString.call(t))?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function sa(e){return(0,e._init)(e._payload)}function ss(e){function t(t,r){if(e){var n=t.deletions;null===n?(t.deletions=[r],t.flags|=16):n.push(r)}}function r(r,n){if(!e)return null;for(;null!==n;)t(r,n),n=n.sibling;return null}function n(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=le(e,t)).index=0,e.sibling=null,e}function s(t,r,n){return(t.index=n,e)?null!==(n=t.alternate)?(n=n.index)<r?(t.flags|=2,r):n:(t.flags|=2,r):(t.flags|=1048576,r)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function o(e,t,r,n){return null===t||6!==t.tag?(t=la(r,e.mode,n)).return=e:(t=a(t,r)).return=e,t}function l(e,t,r,n){var s=r.type;return s===R?c(e,t,r.props.children,n,r.key):(null!==t&&(t.elementType===s||"object"==typeof s&&null!==s&&s.$$typeof===j&&sa(s)===t.type)?(n=a(t,r.props)).ref=sr(e,t,r):(n=lt(r.type,r.key,r.props,null,e.mode,n)).ref=sr(e,t,r),n.return=e,n)}function u(e,t,r,n){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?(t=ls(r,e.mode,n)).return=e:(t=a(t,r.children||[])).return=e,t}function c(e,t,r,n,s){return null===t||7!==t.tag?(t=lr(r,e.mode,n,s)).return=e:(t=a(t,r)).return=e,t}function p(e,t,r){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=la(""+t,e.mode,r)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case C:return(r=lt(t.type,t.key,t.props,null,e.mode,r)).ref=sr(e,null,t),r.return=e,r;case E:return(t=ls(t,e.mode,r)).return=e,t;case j:return p(e,(0,t._init)(t._payload),r)}if(ey(t)||V(t))return(t=lr(t,e.mode,r,null)).return=e,t;sn(e,t)}return null}function h(e,t,r,n){var a=null!==t?t.key:null;if("string"==typeof r&&""!==r||"number"==typeof r)return null!==a?null:o(e,t,""+r,n);if("object"==typeof r&&null!==r){switch(r.$$typeof){case C:return r.key===a?l(e,t,r,n):null;case E:return r.key===a?u(e,t,r,n):null;case j:return h(e,t,(a=r._init)(r._payload),n)}if(ey(r)||V(r))return null!==a?null:c(e,t,r,n,null);sn(e,r)}return null}function f(e,t,r,n,a){if("string"==typeof n&&""!==n||"number"==typeof n)return o(t,e=e.get(r)||null,""+n,a);if("object"==typeof n&&null!==n){switch(n.$$typeof){case C:return l(t,e=e.get(null===n.key?r:n.key)||null,n,a);case E:return u(t,e=e.get(null===n.key?r:n.key)||null,n,a);case j:return f(e,t,r,(0,n._init)(n._payload),a)}if(ey(n)||V(n))return c(t,e=e.get(r)||null,n,a,null);sn(t,n)}return null}return function o(l,u,c,m){if("object"==typeof c&&null!==c&&c.type===R&&null===c.key&&(c=c.props.children),"object"==typeof c&&null!==c){switch(c.$$typeof){case C:e:{for(var g=c.key,y=u;null!==y;){if(y.key===g){if((g=c.type)===R){if(7===y.tag){r(l,y.sibling),(u=a(y,c.props.children)).return=l,l=u;break e}}else if(y.elementType===g||"object"==typeof g&&null!==g&&g.$$typeof===j&&sa(g)===y.type){r(l,y.sibling),(u=a(y,c.props)).ref=sr(l,y,c),u.return=l,l=u;break e}r(l,y);break}t(l,y),y=y.sibling}c.type===R?((u=lr(c.props.children,l.mode,m,c.key)).return=l,l=u):((m=lt(c.type,c.key,c.props,null,l.mode,m)).ref=sr(l,u,c),m.return=l,l=m)}return i(l);case E:e:{for(y=c.key;null!==u;){if(u.key===y){if(4===u.tag&&u.stateNode.containerInfo===c.containerInfo&&u.stateNode.implementation===c.implementation){r(l,u.sibling),(u=a(u,c.children||[])).return=l,l=u;break e}r(l,u);break}t(l,u),u=u.sibling}(u=ls(c,l.mode,m)).return=l,l=u}return i(l);case j:return o(l,u,(y=c._init)(c._payload),m)}if(ey(c))return function(a,i,o,l){for(var u=null,c=null,d=i,m=i=0,g=null;null!==d&&m<o.length;m++){d.index>m?(g=d,d=null):g=d.sibling;var y=h(a,d,o[m],l);if(null===y){null===d&&(d=g);break}e&&d&&null===y.alternate&&t(a,d),i=s(y,i,m),null===c?u=y:c.sibling=y,c=y,d=g}if(m===o.length)return r(a,d),aN&&ab(a,m),u;if(null===d){for(;m<o.length;m++)null!==(d=p(a,o[m],l))&&(i=s(d,i,m),null===c?u=d:c.sibling=d,c=d);return aN&&ab(a,m),u}for(d=n(a,d);m<o.length;m++)null!==(g=f(d,a,m,o[m],l))&&(e&&null!==g.alternate&&d.delete(null===g.key?m:g.key),i=s(g,i,m),null===c?u=g:c.sibling=g,c=g);return e&&d.forEach(function(e){return t(a,e)}),aN&&ab(a,m),u}(l,u,c,m);if(V(c))return function(a,i,o,l){var u=V(o);if("function"!=typeof u)throw Error(d(150));if(null==(o=u.call(o)))throw Error(d(151));for(var c=u=null,m=i,g=i=0,y=null,b=o.next();null!==m&&!b.done;g++,b=o.next()){m.index>g?(y=m,m=null):y=m.sibling;var v=h(a,m,b.value,l);if(null===v){null===m&&(m=y);break}e&&m&&null===v.alternate&&t(a,m),i=s(v,i,g),null===c?u=v:c.sibling=v,c=v,m=y}if(b.done)return r(a,m),aN&&ab(a,g),u;if(null===m){for(;!b.done;g++,b=o.next())null!==(b=p(a,b.value,l))&&(i=s(b,i,g),null===c?u=b:c.sibling=b,c=b);return aN&&ab(a,g),u}for(m=n(a,m);!b.done;g++,b=o.next())null!==(b=f(m,a,g,b.value,l))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),i=s(b,i,g),null===c?u=b:c.sibling=b,c=b);return e&&m.forEach(function(e){return t(a,e)}),aN&&ab(a,g),u}(l,u,c,m);sn(l,c)}return"string"==typeof c&&""!==c||"number"==typeof c?(c=""+c,null!==u&&6===u.tag?(r(l,u.sibling),(u=a(u,c)).return=l):(r(l,u),(u=la(c,l.mode,m)).return=l),i(l=u)):r(l,u)}}var si=ss(!0),so=ss(!1),sl={},su=n0(sl),sc=n0(sl),sd=n0(sl);function sp(e){if(e===sl)throw Error(d(174));return e}function sh(e,t){switch(n2(sd,t),n2(sc,e),n2(su,sl),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:eN(null,"");break;default:t=eN(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}n1(su),n2(su,t)}function sf(){n1(su),n1(sc),n1(sd)}function sm(e){sp(sd.current);var t=sp(su.current),r=eN(t,e.type);t!==r&&(n2(sc,e),n2(su,r))}function sg(e){sc.current===e&&(n1(su),n1(sc))}var sy=n0(0);function sb(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var sv=[];function sx(){for(var e=0;e<sv.length;e++)sv[e]._workInProgressVersionPrimary=null;sv.length=0}var sw=I.ReactCurrentDispatcher,sk=I.ReactCurrentBatchConfig,sS=0,sN=null,sT=null,sI=null,sC=!1,sE=!1,sA=0,sR=0;function s_(){throw Error(d(321))}function sO(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!rX(e[r],t[r]))return!1;return!0}function sP(e,t,r,n,a,s){if(sS=s,sN=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,sw.current=null===e||null===e.memoizedState?io:il,e=r(n,a),sE){s=0;do{if(sE=!1,sA=0,25<=s)throw Error(d(301));s+=1,sI=sT=null,t.updateQueue=null,sw.current=iu,e=r(n,a)}while(sE)}if(sw.current=ii,t=null!==sT&&null!==sT.next,sS=0,sI=sT=sN=null,sC=!1,t)throw Error(d(300));return e}function s$(){var e=0!==sA;return sA=0,e}function sD(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===sI?sN.memoizedState=sI=e:sI=sI.next=e,sI}function sM(){if(null===sT){var e=sN.alternate;e=null!==e?e.memoizedState:null}else e=sT.next;var t=null===sI?sN.memoizedState:sI.next;if(null!==t)sI=t,sT=e;else{if(null===e)throw Error(d(310));e={memoizedState:(sT=e).memoizedState,baseState:sT.baseState,baseQueue:sT.baseQueue,queue:sT.queue,next:null},null===sI?sN.memoizedState=sI=e:sI=sI.next=e}return sI}function sF(e,t){return"function"==typeof t?t(e):t}function sL(e){var t=sM(),r=t.queue;if(null===r)throw Error(d(311));r.lastRenderedReducer=e;var n=sT,a=n.baseQueue,s=r.pending;if(null!==s){if(null!==a){var i=a.next;a.next=s.next,s.next=i}n.baseQueue=a=s,r.pending=null}if(null!==a){s=a.next,n=n.baseState;var o=i=null,l=null,u=s;do{var c=u.lane;if((sS&c)===c)null!==l&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),n=u.hasEagerState?u.eagerState:e(n,u.action);else{var p={lane:c,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===l?(o=l=p,i=n):l=l.next=p,sN.lanes|=c,og|=c}u=u.next}while(null!==u&&u!==s)null===l?i=n:l.next=o,rX(n,t.memoizedState)||(iw=!0),t.memoizedState=n,t.baseState=i,t.baseQueue=l,r.lastRenderedState=n}if(null!==(e=r.interleaved)){a=e;do s=a.lane,sN.lanes|=s,og|=s,a=a.next;while(a!==e)}else null===a&&(r.lanes=0);return[t.memoizedState,r.dispatch]}function sj(e){var t=sM(),r=t.queue;if(null===r)throw Error(d(311));r.lastRenderedReducer=e;var n=r.dispatch,a=r.pending,s=t.memoizedState;if(null!==a){r.pending=null;var i=a=a.next;do s=e(s,i.action),i=i.next;while(i!==a)rX(s,t.memoizedState)||(iw=!0),t.memoizedState=s,null===t.baseQueue&&(t.baseState=s),r.lastRenderedState=s}return[s,n]}function sB(){}function sz(e,t){var r=sN,n=sM(),a=t(),s=!rX(n.memoizedState,a);if(s&&(n.memoizedState=a,iw=!0),n=n.queue,sJ(sU.bind(null,r,n,e),[e]),n.getSnapshot!==t||s||null!==sI&&1&sI.memoizedState.tag){if(r.flags|=2048,sK(9,sG.bind(null,r,n,a,t),void 0,null),null===ou)throw Error(d(349));0!=(30&sS)||sV(r,t,a)}return a}function sV(e,t,r){e.flags|=16384,e={getSnapshot:t,value:r},null===(t=sN.updateQueue)?(t={lastEffect:null,stores:null},sN.updateQueue=t,t.stores=[e]):null===(r=t.stores)?t.stores=[e]:r.push(e)}function sG(e,t,r,n){t.value=r,t.getSnapshot=n,sW(t)&&sq(e)}function sU(e,t,r){return r(function(){sW(t)&&sq(e)})}function sW(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!rX(e,r)}catch(e){return!0}}function sq(e){var t=aX(e,1);null!==t&&oM(t,e,1,-1)}function sH(e){var t=sD();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:sF,lastRenderedState:e},t.queue=e,e=e.dispatch=it.bind(null,sN,e),[t.memoizedState,e]}function sK(e,t,r,n){return e={tag:e,create:t,destroy:r,deps:n,next:null},null===(t=sN.updateQueue)?(t={lastEffect:null,stores:null},sN.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(n=r.next,r.next=e,e.next=n,t.lastEffect=e),e}function sX(){return sM().memoizedState}function sZ(e,t,r,n){var a=sD();sN.flags|=e,a.memoizedState=sK(1|t,r,void 0,void 0===n?null:n)}function sQ(e,t,r,n){var a=sM();n=void 0===n?null:n;var s=void 0;if(null!==sT){var i=sT.memoizedState;if(s=i.destroy,null!==n&&sO(n,i.deps)){a.memoizedState=sK(t,r,s,n);return}}sN.flags|=e,a.memoizedState=sK(1|t,r,s,n)}function sY(e,t){return sZ(8390656,8,e,t)}function sJ(e,t){return sQ(2048,8,e,t)}function s0(e,t){return sQ(4,2,e,t)}function s1(e,t){return sQ(4,4,e,t)}function s2(e,t){return"function"==typeof t?(t(e=e()),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function s4(e,t,r){return r=null!=r?r.concat([e]):null,sQ(4,4,s2.bind(null,t,e),r)}function s3(){}function s8(e,t){var r=sM();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&sO(t,n[1])?n[0]:(r.memoizedState=[e,t],e)}function s6(e,t){var r=sM();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&sO(t,n[1])?n[0]:(e=e(),r.memoizedState=[e,t],e)}function s5(e,t,r){return 0==(21&sS)?(e.baseState&&(e.baseState=!1,iw=!0),e.memoizedState=r):(rX(r,t)||(r=tv(),sN.lanes|=r,og|=r,e.baseState=!0),t)}function s7(e,t){var r=tS;tS=0!==r&&4>r?r:4,e(!0);var n=sk.transition;sk.transition={};try{e(!1),t()}finally{tS=r,sk.transition=n}}function s9(){return sM().memoizedState}function ie(e,t,r){var n=oD(e);r={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null},ir(e)?ia(t,r):null!==(r=aK(e,t,r,n))&&(oM(r,e,n,o$()),is(r,t,n))}function it(e,t,r){var n=oD(e),a={lane:n,action:r,hasEagerState:!1,eagerState:null,next:null};if(ir(e))ia(t,a);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var i=t.lastRenderedState,o=s(i,r);if(a.hasEagerState=!0,a.eagerState=o,rX(o,i)){var l=t.interleaved;null===l?(a.next=a,aH(t)):(a.next=l.next,l.next=a),t.interleaved=a;return}}catch(e){}finally{}null!==(r=aK(e,t,a,n))&&(oM(r,e,n,a=o$()),is(r,t,n))}}function ir(e){var t=e.alternate;return e===sN||null!==t&&t===sN}function ia(e,t){sE=sC=!0;var r=e.pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}function is(e,t,r){if(0!=(4194240&r)){var n=t.lanes;n&=e.pendingLanes,r|=n,t.lanes=r,tk(e,r)}}var ii={readContext:aW,useCallback:s_,useContext:s_,useEffect:s_,useImperativeHandle:s_,useInsertionEffect:s_,useLayoutEffect:s_,useMemo:s_,useReducer:s_,useRef:s_,useState:s_,useDebugValue:s_,useDeferredValue:s_,useTransition:s_,useMutableSource:s_,useSyncExternalStore:s_,useId:s_,unstable_isNewReconciler:!1},io={readContext:aW,useCallback:function(e,t){return sD().memoizedState=[e,void 0===t?null:t],e},useContext:aW,useEffect:sY,useImperativeHandle:function(e,t,r){return r=null!=r?r.concat([e]):null,sZ(4194308,4,s2.bind(null,t,e),r)},useLayoutEffect:function(e,t){return sZ(4194308,4,e,t)},useInsertionEffect:function(e,t){return sZ(4,2,e,t)},useMemo:function(e,t){var r=sD();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var n=sD();return t=void 0!==r?r(t):t,n.memoizedState=n.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},n.queue=e,e=e.dispatch=ie.bind(null,sN,e),[n.memoizedState,e]},useRef:function(e){return e={current:e},sD().memoizedState=e},useState:sH,useDebugValue:s3,useDeferredValue:function(e){return sD().memoizedState=e},useTransition:function(){var e=sH(!1),t=e[0];return e=s7.bind(null,e[1]),sD().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,r){var n=sN,a=sD();if(aN){if(void 0===r)throw Error(d(407));r=r()}else{if(r=t(),null===ou)throw Error(d(349));0!=(30&sS)||sV(n,t,r)}a.memoizedState=r;var s={value:r,getSnapshot:t};return a.queue=s,sY(sU.bind(null,n,s,e),[e]),n.flags|=2048,sK(9,sG.bind(null,n,s,r,t),void 0,null),r},useId:function(){var e=sD(),t=ou.identifierPrefix;if(aN){var r=ay,n=ag;t=":"+t+"R"+(r=(n&~(1<<32-td(n)-1)).toString(32)+r),0<(r=sA++)&&(t+="H"+r.toString(32)),t+=":"}else t=":"+t+"r"+(r=sR++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},il={readContext:aW,useCallback:s8,useContext:aW,useEffect:sJ,useImperativeHandle:s4,useInsertionEffect:s0,useLayoutEffect:s1,useMemo:s6,useReducer:sL,useRef:sX,useState:function(){return sL(sF)},useDebugValue:s3,useDeferredValue:function(e){return s5(sM(),sT.memoizedState,e)},useTransition:function(){return[sL(sF)[0],sM().memoizedState]},useMutableSource:sB,useSyncExternalStore:sz,useId:s9,unstable_isNewReconciler:!1},iu={readContext:aW,useCallback:s8,useContext:aW,useEffect:sJ,useImperativeHandle:s4,useInsertionEffect:s0,useLayoutEffect:s1,useMemo:s6,useReducer:sj,useRef:sX,useState:function(){return sj(sF)},useDebugValue:s3,useDeferredValue:function(e){var t=sM();return null===sT?t.memoizedState=e:s5(t,sT.memoizedState,e)},useTransition:function(){return[sj(sF)[0],sM().memoizedState]},useMutableSource:sB,useSyncExternalStore:sz,useId:s9,unstable_isNewReconciler:!1};function ic(e,t){try{var r="",n=t;do r+=function(e){switch(e.tag){case 5:return en(e.type);case 16:return en("Lazy");case 13:return en("Suspense");case 19:return en("SuspenseList");case 0:case 2:case 15:return e=es(e.type,!1);case 11:return e=es(e.type.render,!1);case 1:return e=es(e.type,!0);default:return""}}(n),n=n.return;while(n)var a=r}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function id(e,t,r){return{value:e,source:null,stack:null!=r?r:null,digest:null!=t?t:null}}function ip(e,t){try{console.error(t.value)}catch(e){setTimeout(function(){throw e})}}var ih="function"==typeof WeakMap?WeakMap:Map;function im(e,t,r){(r=aJ(-1,r)).tag=3,r.payload={element:null};var n=t.value;return r.callback=function(){oN||(oN=!0,oT=n),ip(e,t)},r}function ig(e,t,r){(r=aJ(-1,r)).tag=3;var n=e.type.getDerivedStateFromError;if("function"==typeof n){var a=t.value;r.payload=function(){return n(a)},r.callback=function(){ip(e,t)}}var s=e.stateNode;return null!==s&&"function"==typeof s.componentDidCatch&&(r.callback=function(){ip(e,t),"function"!=typeof n&&(null===oI?oI=new Set([this]):oI.add(this));var r=t.stack;this.componentDidCatch(t.value,{componentStack:null!==r?r:""})}),r}function iy(e,t,r){var n=e.pingCache;if(null===n){n=e.pingCache=new ih;var a=new Set;n.set(t,a)}else void 0===(a=n.get(t))&&(a=new Set,n.set(t,a));a.has(r)||(a.add(r),e=o4.bind(null,e,t,r),t.then(e,e))}function ib(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e)return null}function iv(e,t,r,n,a){return 0==(1&e.mode)?e===t?e.flags|=65536:(e.flags|=128,r.flags|=131072,r.flags&=-52805,1===r.tag&&(null===r.alternate?r.tag=17:((t=aJ(-1,1)).tag=2,a0(r,t,1))),r.lanes|=1):(e.flags|=65536,e.lanes=a),e}var ix=I.ReactCurrentOwner,iw=!1;function ik(e,t,r,n){t.child=null===e?so(t,null,r,n):si(t,e.child,r,n)}function iS(e,t,r,n,a){r=r.render;var s=t.ref;return(aU(t,a),n=sP(e,t,r,n,s,a),r=s$(),null===e||iw)?(aN&&r&&ax(t),t.flags|=1,ik(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,iV(e,t,a))}function iN(e,t,r,n,a){if(null===e){var s=r.type;return"function"!=typeof s||o9(s)||void 0!==s.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=lt(r.type,null,n,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,iT(e,t,s,n,a))}if(s=e.child,0==(e.lanes&a)){var i=s.memoizedProps;if((r=null!==(r=r.compare)?r:rZ)(i,n)&&e.ref===t.ref)return iV(e,t,a)}return t.flags|=1,(e=le(s,n)).ref=t.ref,e.return=t,t.child=e}function iT(e,t,r,n,a){if(null!==e){var s=e.memoizedProps;if(rZ(s,n)&&e.ref===t.ref){if(iw=!1,t.pendingProps=n=s,0==(e.lanes&a))return t.lanes=e.lanes,iV(e,t,a);0!=(131072&e.flags)&&(iw=!0)}}return iE(e,t,r,n,a)}function iI(e,t,r){var n=t.pendingProps,a=n.children,s=null!==e?e.memoizedState:null;if("hidden"===n.mode){if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},n2(oh,op),op|=r;else{if(0==(1073741824&r))return e=null!==s?s.baseLanes|r:r,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,n2(oh,op),op|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},n=null!==s?s.baseLanes:r,n2(oh,op),op|=n}}else null!==s?(n=s.baseLanes|r,t.memoizedState=null):n=r,n2(oh,op),op|=n;return ik(e,t,a,r),t.child}function iC(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.flags|=512,t.flags|=2097152)}function iE(e,t,r,n,a){var s=n7(r)?n6:n3.current;return(s=n5(t,s),aU(t,a),r=sP(e,t,r,n,s,a),n=s$(),null===e||iw)?(aN&&n&&ax(t),t.flags|=1,ik(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,iV(e,t,a))}function iA(e,t,r,n,a){if(n7(r)){var s=!0;ar(t)}else s=!1;if(aU(t,a),null===t.stateNode)iz(e,t),a9(t,r,n),st(t,r,n,a),n=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var l=i.context,u=r.contextType;u="object"==typeof u&&null!==u?aW(u):n5(t,u=n7(r)?n6:n3.current);var c=r.getDerivedStateFromProps,d="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;d||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==n||l!==u)&&se(t,i,n,u),aZ=!1;var p=t.memoizedState;i.state=p,a4(t,n,i,a),l=t.memoizedState,o!==n||p!==l||n8.current||aZ?("function"==typeof c&&(a6(t,r,c,n),l=t.memoizedState),(o=aZ||a7(t,r,o,n,p,l,u))?(d||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4194308)):("function"==typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=n,t.memoizedState=l),i.props=n,i.state=l,i.context=u,n=o):("function"==typeof i.componentDidMount&&(t.flags|=4194308),n=!1)}else{i=t.stateNode,aY(e,t),o=t.memoizedProps,u=t.type===t.elementType?o:aM(t.type,o),i.props=u,d=t.pendingProps,p=i.context,l="object"==typeof(l=r.contextType)&&null!==l?aW(l):n5(t,l=n7(r)?n6:n3.current);var h=r.getDerivedStateFromProps;(c="function"==typeof h||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==d||p!==l)&&se(t,i,n,l),aZ=!1,p=t.memoizedState,i.state=p,a4(t,n,i,a);var f=t.memoizedState;o!==d||p!==f||n8.current||aZ?("function"==typeof h&&(a6(t,r,h,n),f=t.memoizedState),(u=aZ||a7(t,r,u,n,p,f,l)||!1)?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(n,f,l),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(n,f,l)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),t.memoizedProps=n,t.memoizedState=f),i.props=n,i.state=f,i.context=l,n=u):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&p===e.memoizedState||(t.flags|=1024),n=!1)}return iR(e,t,r,n,s,a)}function iR(e,t,r,n,a,s){iC(e,t);var i=0!=(128&t.flags);if(!n&&!i)return a&&an(t,r,!1),iV(e,t,s);n=t.stateNode,ix.current=t;var o=i&&"function"!=typeof r.getDerivedStateFromError?null:n.render();return t.flags|=1,null!==e&&i?(t.child=si(t,e.child,null,s),t.child=si(t,null,o,s)):ik(e,t,o,s),t.memoizedState=n.state,a&&an(t,r,!0),t.child}function i_(e){var t=e.stateNode;t.pendingContext?ae(e,t.pendingContext,t.pendingContext!==t.context):t.context&&ae(e,t.context,!1),sh(e,t.containerInfo)}function iO(e,t,r,n,a){return aP(),a$(a),t.flags|=256,ik(e,t,r,n),t.child}var iP={dehydrated:null,treeContext:null,retryLane:0};function i$(e){return{baseLanes:e,cachePool:null,transitions:null}}function iD(e,t,r){var n,a=t.pendingProps,s=sy.current,i=!1,o=0!=(128&t.flags);if((n=o)||(n=(null===e||null!==e.memoizedState)&&0!=(2&s)),n?(i=!0,t.flags&=-129):(null===e||null!==e.memoizedState)&&(s|=1),n2(sy,1&s),null===e)return(aA(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated))?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(o=a.children,e=a.fallback,i?(a=t.mode,i=t.child,o={mode:"hidden",children:o},0==(1&a)&&null!==i?(i.childLanes=0,i.pendingProps=o):i=ln(o,a,0,null),e=lr(e,a,r,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=i$(r),t.memoizedState=iP,e):iM(t,o));if(null!==(s=e.memoizedState)&&null!==(n=s.dehydrated))return function(e,t,r,n,a,s,i){if(r)return 256&t.flags?(t.flags&=-257,iF(e,t,i,n=id(Error(d(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(s=n.fallback,a=t.mode,n=ln({mode:"visible",children:n.children},a,0,null),s=lr(s,a,i,null),s.flags|=2,n.return=t,s.return=t,n.sibling=s,t.child=n,0!=(1&t.mode)&&si(t,e.child,null,i),t.child.memoizedState=i$(i),t.memoizedState=iP,s);if(0==(1&t.mode))return iF(e,t,i,null);if("$!"===a.data){if(n=a.nextSibling&&a.nextSibling.dataset)var o=n.dgst;return n=o,iF(e,t,i,n=id(s=Error(d(419)),n,void 0))}if(o=0!=(i&e.childLanes),iw||o){if(null!==(n=ou)){switch(i&-i){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!=(a&(n.suspendedLanes|i))?0:a)&&a!==s.retryLane&&(s.retryLane=a,aX(e,a),oM(n,e,a,-1))}return oX(),iF(e,t,i,n=id(Error(d(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=o8.bind(null,e),a._reactRetry=t,null):(e=s.treeContext,aS=nj(a.nextSibling),ak=t,aN=!0,aT=null,null!==e&&(ah[af++]=ag,ah[af++]=ay,ah[af++]=am,ag=e.id,ay=e.overflow,am=t),t=iM(t,n.children),t.flags|=4096,t)}(e,t,o,a,n,s,r);if(i){i=a.fallback,o=t.mode,n=(s=e.child).sibling;var l={mode:"hidden",children:a.children};return 0==(1&o)&&t.child!==s?((a=t.child).childLanes=0,a.pendingProps=l,t.deletions=null):(a=le(s,l)).subtreeFlags=14680064&s.subtreeFlags,null!==n?i=le(n,i):(i=lr(i,o,r,null),i.flags|=2),i.return=t,a.return=t,a.sibling=i,t.child=a,a=i,i=t.child,o=null===(o=e.child.memoizedState)?i$(r):{baseLanes:o.baseLanes|r,cachePool:null,transitions:o.transitions},i.memoizedState=o,i.childLanes=e.childLanes&~r,t.memoizedState=iP,a}return e=(i=e.child).sibling,a=le(i,{mode:"visible",children:a.children}),0==(1&t.mode)&&(a.lanes=r),a.return=t,a.sibling=null,null!==e&&(null===(r=t.deletions)?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=a,t.memoizedState=null,a}function iM(e,t){return(t=ln({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function iF(e,t,r,n){return null!==n&&a$(n),si(t,e.child,null,r),e=iM(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function iL(e,t,r){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),aG(e.return,t,r)}function ij(e,t,r,n,a){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:r,tailMode:a}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=n,s.tail=r,s.tailMode=a)}function iB(e,t,r){var n=t.pendingProps,a=n.revealOrder,s=n.tail;if(ik(e,t,n.children,r),0!=(2&(n=sy.current)))n=1&n|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&iL(e,r,t);else if(19===e.tag)iL(e,r,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(n2(sy,n),0==(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(a=null,r=t.child;null!==r;)null!==(e=r.alternate)&&null===sb(e)&&(a=r),r=r.sibling;null===(r=a)?(a=t.child,t.child=null):(a=r.sibling,r.sibling=null),ij(t,!1,a,r,s);break;case"backwards":for(r=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===sb(e)){t.child=a;break}e=a.sibling,a.sibling=r,r=a,a=e}ij(t,!0,r,null,s);break;case"together":ij(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function iz(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function iV(e,t,r){if(null!==e&&(t.dependencies=e.dependencies),og|=t.lanes,0==(r&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(d(153));if(null!==t.child){for(r=le(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=le(e,e.pendingProps)).return=t;r.sibling=null}return t.child}function iG(e,t){if(!aN)switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var n=null;null!==r;)null!==r.alternate&&(n=r),r=r.sibling;null===n?t||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function iU(e){var t=null!==e.alternate&&e.alternate.child===e.child,r=0,n=0;if(t)for(var a=e.child;null!==a;)r|=a.lanes|a.childLanes,n|=14680064&a.subtreeFlags,n|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)r|=a.lanes|a.childLanes,n|=a.subtreeFlags,n|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=n,e.childLanes=r,t}n=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},a=function(){},s=function(e,t,r,n){var a=e.memoizedProps;if(a!==n){e=t.stateNode,sp(su.current);var s,i=null;switch(r){case"input":a=ed(e,a),n=ed(e,n),i=[];break;case"select":a=er({},a,{value:void 0}),n=er({},n,{value:void 0}),i=[];break;case"textarea":a=ev(e,a),n=ev(e,n),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof n.onClick&&(e.onclick=nA)}for(u in e$(r,n),r=null,a)if(!n.hasOwnProperty(u)&&a.hasOwnProperty(u)&&null!=a[u]){if("style"===u){var o=a[u];for(s in o)o.hasOwnProperty(s)&&(r||(r={}),r[s]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(h.hasOwnProperty(u)?i||(i=[]):(i=i||[]).push(u,null))}for(u in n){var l=n[u];if(o=null!=a?a[u]:void 0,n.hasOwnProperty(u)&&l!==o&&(null!=l||null!=o)){if("style"===u){if(o){for(s in o)!o.hasOwnProperty(s)||l&&l.hasOwnProperty(s)||(r||(r={}),r[s]="");for(s in l)l.hasOwnProperty(s)&&o[s]!==l[s]&&(r||(r={}),r[s]=l[s])}else r||(i||(i=[]),i.push(u,r)),r=l}else"dangerouslySetInnerHTML"===u?(l=l?l.__html:void 0,o=o?o.__html:void 0,null!=l&&o!==l&&(i=i||[]).push(u,l)):"children"===u?"string"!=typeof l&&"number"!=typeof l||(i=i||[]).push(u,""+l):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(h.hasOwnProperty(u)?(null!=l&&"onScroll"===u&&nm("scroll",e),i||o===l||(i=[])):(i=i||[]).push(u,l))}}r&&(i=i||[]).push("style",r);var u=i;(t.updateQueue=u)&&(t.flags|=4)}},i=function(e,t,r,n){r!==n&&(t.flags|=4)};var iW=!1,iq=!1,iH="function"==typeof WeakSet?WeakSet:Set,iK=null;function iX(e,t){var r=e.ref;if(null!==r){if("function"==typeof r)try{r(null)}catch(r){o2(e,t,r)}else r.current=null}}function iZ(e,t,r){try{r()}catch(r){o2(e,t,r)}}var iQ=!1;function iY(e,t,r){var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var a=n=n.next;do{if((a.tag&e)===e){var s=a.destroy;a.destroy=void 0,void 0!==s&&iZ(t,r,s)}a=a.next}while(a!==n)}}function iJ(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var r=t=t.next;do{if((r.tag&e)===e){var n=r.create;r.destroy=n()}r=r.next}while(r!==t)}}function i0(e){var t=e.ref;if(null!==t){var r=e.stateNode;e.tag,e=r,"function"==typeof t?t(e):t.current=e}}function i1(e){return 5===e.tag||3===e.tag||4===e.tag}function i2(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||i1(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags||null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}var i4=null,i3=!1;function i8(e,t,r){for(r=r.child;null!==r;)i6(e,t,r),r=r.sibling}function i6(e,t,r){if(tc&&"function"==typeof tc.onCommitFiberUnmount)try{tc.onCommitFiberUnmount(tu,r)}catch(e){}switch(r.tag){case 5:iq||iX(r,t);case 6:var n=i4,a=i3;i4=null,i8(e,t,r),i4=n,i3=a,null!==i4&&(i3?(e=i4,r=r.stateNode,8===e.nodeType?e.parentNode.removeChild(r):e.removeChild(r)):i4.removeChild(r.stateNode));break;case 18:null!==i4&&(i3?(e=i4,r=r.stateNode,8===e.nodeType?nL(e.parentNode,r):1===e.nodeType&&nL(e,r),tq(e)):nL(i4,r.stateNode));break;case 4:n=i4,a=i3,i4=r.stateNode.containerInfo,i3=!0,i8(e,t,r),i4=n,i3=a;break;case 0:case 11:case 14:case 15:if(!iq&&null!==(n=r.updateQueue)&&null!==(n=n.lastEffect)){a=n=n.next;do{var s=a,i=s.destroy;s=s.tag,void 0!==i&&(0!=(2&s)?iZ(r,t,i):0!=(4&s)&&iZ(r,t,i)),a=a.next}while(a!==n)}i8(e,t,r);break;case 1:if(!iq&&(iX(r,t),"function"==typeof(n=r.stateNode).componentWillUnmount))try{n.props=r.memoizedProps,n.state=r.memoizedState,n.componentWillUnmount()}catch(e){o2(r,t,e)}i8(e,t,r);break;case 21:default:i8(e,t,r);break;case 22:1&r.mode?(iq=(n=iq)||null!==r.memoizedState,i8(e,t,r),iq=n):i8(e,t,r)}}function i5(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new iH),t.forEach(function(t){var n=o6.bind(null,e,t);r.has(t)||(r.add(t),t.then(n,n))})}}function i7(e,t){var r=t.deletions;if(null!==r)for(var n=0;n<r.length;n++){var a=r[n];try{var s=t,i=s;e:for(;null!==i;){switch(i.tag){case 5:i4=i.stateNode,i3=!1;break e;case 3:case 4:i4=i.stateNode.containerInfo,i3=!0;break e}i=i.return}if(null===i4)throw Error(d(160));i6(e,s,a),i4=null,i3=!1;var o=a.alternate;null!==o&&(o.return=null),a.return=null}catch(e){o2(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)i9(t,e),t=t.sibling}function i9(e,t){var r=e.alternate,n=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(i7(t,e),oe(e),4&n){try{iY(3,e,e.return),iJ(3,e)}catch(t){o2(e,e.return,t)}try{iY(5,e,e.return)}catch(t){o2(e,e.return,t)}}break;case 1:i7(t,e),oe(e),512&n&&null!==r&&iX(r,r.return);break;case 5:if(i7(t,e),oe(e),512&n&&null!==r&&iX(r,r.return),32&e.flags){var a=e.stateNode;try{eE(a,"")}catch(t){o2(e,e.return,t)}}if(4&n&&null!=(a=e.stateNode)){var s=e.memoizedProps,i=null!==r?r.memoizedProps:s,o=e.type,l=e.updateQueue;if(e.updateQueue=null,null!==l)try{"input"===o&&"radio"===s.type&&null!=s.name&&eh(a,s),eD(o,i);var u=eD(o,s);for(i=0;i<l.length;i+=2){var c=l[i],p=l[i+1];"style"===c?eO(a,p):"dangerouslySetInnerHTML"===c?eC(a,p):"children"===c?eE(a,p):T(a,c,p,u)}switch(o){case"input":ef(a,s);break;case"textarea":ew(a,s);break;case"select":var h=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!s.multiple;var f=s.value;null!=f?eb(a,!!s.multiple,f,!1):!!s.multiple!==h&&(null!=s.defaultValue?eb(a,!!s.multiple,s.defaultValue,!0):eb(a,!!s.multiple,s.multiple?[]:"",!1))}a[nG]=s}catch(t){o2(e,e.return,t)}}break;case 6:if(i7(t,e),oe(e),4&n){if(null===e.stateNode)throw Error(d(162));a=e.stateNode,s=e.memoizedProps;try{a.nodeValue=s}catch(t){o2(e,e.return,t)}}break;case 3:if(i7(t,e),oe(e),4&n&&null!==r&&r.memoizedState.isDehydrated)try{tq(t.containerInfo)}catch(t){o2(e,e.return,t)}break;case 4:default:i7(t,e),oe(e);break;case 13:i7(t,e),oe(e),8192&(a=e.child).flags&&(s=null!==a.memoizedState,a.stateNode.isHidden=s,s&&(null===a.alternate||null===a.alternate.memoizedState)&&(ow=tr())),4&n&&i5(e);break;case 22:if(c=null!==r&&null!==r.memoizedState,1&e.mode?(iq=(u=iq)||c,i7(t,e),iq=u):i7(t,e),oe(e),8192&n){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!c&&0!=(1&e.mode))for(iK=e,c=e.child;null!==c;){for(p=iK=c;null!==iK;){switch(f=(h=iK).child,h.tag){case 0:case 11:case 14:case 15:iY(4,h,h.return);break;case 1:iX(h,h.return);var m=h.stateNode;if("function"==typeof m.componentWillUnmount){n=h,r=h.return;try{t=n,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(e){o2(n,r,e)}}break;case 5:iX(h,h.return);break;case 22:if(null!==h.memoizedState){or(p);continue}}null!==f?(f.return=h,iK=f):or(p)}c=c.sibling}e:for(c=null,p=e;;){if(5===p.tag){if(null===c){c=p;try{a=p.stateNode,u?(s=a.style,"function"==typeof s.setProperty?s.setProperty("display","none","important"):s.display="none"):(o=p.stateNode,i=null!=(l=p.memoizedProps.style)&&l.hasOwnProperty("display")?l.display:null,o.style.display=e_("display",i))}catch(t){o2(e,e.return,t)}}}else if(6===p.tag){if(null===c)try{p.stateNode.nodeValue=u?"":p.memoizedProps}catch(t){o2(e,e.return,t)}}else if((22!==p.tag&&23!==p.tag||null===p.memoizedState||p===e)&&null!==p.child){p.child.return=p,p=p.child;continue}if(p===e)break;for(;null===p.sibling;){if(null===p.return||p.return===e)break e;c===p&&(c=null),p=p.return}c===p&&(c=null),p.sibling.return=p.return,p=p.sibling}}break;case 19:i7(t,e),oe(e),4&n&&i5(e);case 21:}}function oe(e){var t=e.flags;if(2&t){try{e:{for(var r=e.return;null!==r;){if(i1(r)){var n=r;break e}r=r.return}throw Error(d(160))}switch(n.tag){case 5:var a=n.stateNode;32&n.flags&&(eE(a,""),n.flags&=-33);var s=i2(e);!function e(t,r,n){var a=t.tag;if(5===a||6===a)t=t.stateNode,r?n.insertBefore(t,r):n.appendChild(t);else if(4!==a&&null!==(t=t.child))for(e(t,r,n),t=t.sibling;null!==t;)e(t,r,n),t=t.sibling}(e,s,a);break;case 3:case 4:var i=n.stateNode.containerInfo,o=i2(e);!function e(t,r,n){var a=t.tag;if(5===a||6===a)t=t.stateNode,r?8===n.nodeType?n.parentNode.insertBefore(t,r):n.insertBefore(t,r):(8===n.nodeType?(r=n.parentNode).insertBefore(t,n):(r=n).appendChild(t),null!=(n=n._reactRootContainer)||null!==r.onclick||(r.onclick=nA));else if(4!==a&&null!==(t=t.child))for(e(t,r,n),t=t.sibling;null!==t;)e(t,r,n),t=t.sibling}(e,o,i);break;default:throw Error(d(161))}}catch(t){o2(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function ot(e){for(;null!==iK;){var t=iK;if(0!=(8772&t.flags)){var r=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:iq||iJ(5,t);break;case 1:var n=t.stateNode;if(4&t.flags&&!iq){if(null===r)n.componentDidMount();else{var a=t.elementType===t.type?r.memoizedProps:aM(t.type,r.memoizedProps);n.componentDidUpdate(a,r.memoizedState,n.__reactInternalSnapshotBeforeUpdate)}}var s=t.updateQueue;null!==s&&a3(t,s,n);break;case 3:var i=t.updateQueue;if(null!==i){if(r=null,null!==t.child)switch(t.child.tag){case 5:case 1:r=t.child.stateNode}a3(t,i,r)}break;case 5:var o=t.stateNode;if(null===r&&4&t.flags){r=o;var l=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&r.focus();break;case"img":l.src&&(r.src=l.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var c=u.memoizedState;if(null!==c){var p=c.dehydrated;null!==p&&tq(p)}}}break;default:throw Error(d(163))}iq||512&t.flags&&i0(t)}catch(e){o2(t,t.return,e)}}if(t===e){iK=null;break}if(null!==(r=t.sibling)){r.return=t.return,iK=r;break}iK=t.return}}function or(e){for(;null!==iK;){var t=iK;if(t===e){iK=null;break}var r=t.sibling;if(null!==r){r.return=t.return,iK=r;break}iK=t.return}}function on(e){for(;null!==iK;){var t=iK;try{switch(t.tag){case 0:case 11:case 15:var r=t.return;try{iJ(4,t)}catch(e){o2(t,r,e)}break;case 1:var n=t.stateNode;if("function"==typeof n.componentDidMount){var a=t.return;try{n.componentDidMount()}catch(e){o2(t,a,e)}}var s=t.return;try{i0(t)}catch(e){o2(t,s,e)}break;case 5:var i=t.return;try{i0(t)}catch(e){o2(t,i,e)}}}catch(e){o2(t,t.return,e)}if(t===e){iK=null;break}var o=t.sibling;if(null!==o){o.return=t.return,iK=o;break}iK=t.return}}var oa=Math.ceil,os=I.ReactCurrentDispatcher,oi=I.ReactCurrentOwner,oo=I.ReactCurrentBatchConfig,ol=0,ou=null,oc=null,od=0,op=0,oh=n0(0),of=0,om=null,og=0,oy=0,ob=0,ov=null,ox=null,ow=0,ok=1/0,oS=null,oN=!1,oT=null,oI=null,oC=!1,oE=null,oA=0,oR=0,o_=null,oO=-1,oP=0;function o$(){return 0!=(6&ol)?tr():-1!==oO?oO:oO=tr()}function oD(e){return 0==(1&e.mode)?1:0!=(2&ol)&&0!==od?od&-od:null!==aD.transition?(0===oP&&(oP=tv()),oP):0!==(e=tS)?e:e=void 0===(e=window.event)?16:t0(e.type)}function oM(e,t,r,n){if(50<oR)throw oR=0,o_=null,Error(d(185));tw(e,r,n),(0==(2&ol)||e!==ou)&&(e===ou&&(0==(2&ol)&&(oy|=r),4===of&&oz(e,od)),oF(e,n),1===r&&0===ol&&0==(1&t.mode)&&(ok=tr()+500,as&&al()))}function oF(e,t){var r,n,a,s=e.callbackNode;!function(e,t){for(var r=e.suspendedLanes,n=e.pingedLanes,a=e.expirationTimes,s=e.pendingLanes;0<s;){var i=31-td(s),o=1<<i,l=a[i];-1===l?(0==(o&r)||0!=(o&n))&&(a[i]=function(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return -1}}(o,t)):l<=t&&(e.expiredLanes|=o),s&=~o}}(e,t);var i=ty(e,e===ou?od:0);if(0===i)null!==s&&e9(s),e.callbackNode=null,e.callbackPriority=0;else if(t=i&-i,e.callbackPriority!==t){if(null!=s&&e9(s),1===t)0===e.tag?(a=oV.bind(null,e),as=!0,ao(a)):ao(oV.bind(null,e)),nM(function(){0==(6&ol)&&al()}),s=null;else{switch(tN(i)){case 1:s=ta;break;case 4:s=ts;break;case 16:default:s=ti;break;case 536870912:s=tl}s=e7(s,oL.bind(null,e))}e.callbackPriority=t,e.callbackNode=s}}function oL(e,t){if(oO=-1,oP=0,0!=(6&ol))throw Error(d(327));var r=e.callbackNode;if(o0()&&e.callbackNode!==r)return null;var n=ty(e,e===ou?od:0);if(0===n)return null;if(0!=(30&n)||0!=(n&e.expiredLanes)||t)t=oZ(e,n);else{t=n;var a=ol;ol|=2;var s=oK();for((ou!==e||od!==t)&&(oS=null,ok=tr()+500,oq(e,t));;)try{(function(){for(;null!==oc&&!te();)oQ(oc)})();break}catch(t){oH(e,t)}az(),os.current=s,ol=a,null!==oc?t=0:(ou=null,od=0,t=of)}if(0!==t){if(2===t&&0!==(a=tb(e))&&(n=a,t=oj(e,a)),1===t)throw r=om,oq(e,0),oz(e,n),oF(e,tr()),r;if(6===t)oz(e,n);else{if(a=e.current.alternate,0==(30&n)&&!function(e){for(var t=e;;){if(16384&t.flags){var r=t.updateQueue;if(null!==r&&null!==(r=r.stores))for(var n=0;n<r.length;n++){var a=r[n],s=a.getSnapshot;a=a.value;try{if(!rX(s(),a))return!1}catch(e){return!1}}}if(r=t.child,16384&t.subtreeFlags&&null!==r)r.return=t,t=r;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=oZ(e,n))&&0!==(s=tb(e))&&(n=s,t=oj(e,s)),1===t))throw r=om,oq(e,0),oz(e,n),oF(e,tr()),r;switch(e.finishedWork=a,e.finishedLanes=n,t){case 0:case 1:throw Error(d(345));case 2:case 5:oJ(e,ox,oS);break;case 3:if(oz(e,n),(130023424&n)===n&&10<(t=ow+500-tr())){if(0!==ty(e,0))break;if(((a=e.suspendedLanes)&n)!==n){o$(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=nP(oJ.bind(null,e,ox,oS),t);break}oJ(e,ox,oS);break;case 4:if(oz(e,n),(4194240&n)===n)break;for(a=-1,t=e.eventTimes;0<n;){var i=31-td(n);s=1<<i,(i=t[i])>a&&(a=i),n&=~s}if(n=a,10<(n=(120>(n=tr()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*oa(n/1960))-n)){e.timeoutHandle=nP(oJ.bind(null,e,ox,oS),n);break}oJ(e,ox,oS);break;default:throw Error(d(329))}}}return oF(e,tr()),e.callbackNode===r?oL.bind(null,e):null}function oj(e,t){var r=ov;return e.current.memoizedState.isDehydrated&&(oq(e,t).flags|=256),2!==(e=oZ(e,t))&&(t=ox,ox=r,null!==t&&oB(t)),e}function oB(e){null===ox?ox=e:ox.push.apply(ox,e)}function oz(e,t){for(t&=~ob,t&=~oy,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var r=31-td(t),n=1<<r;e[r]=-1,t&=~n}}function oV(e){if(0!=(6&ol))throw Error(d(327));o0();var t=ty(e,0);if(0==(1&t))return oF(e,tr()),null;var r=oZ(e,t);if(0!==e.tag&&2===r){var n=tb(e);0!==n&&(t=n,r=oj(e,n))}if(1===r)throw r=om,oq(e,0),oz(e,t),oF(e,tr()),r;if(6===r)throw Error(d(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,oJ(e,ox,oS),oF(e,tr()),null}function oG(e,t){var r=ol;ol|=1;try{return e(t)}finally{0===(ol=r)&&(ok=tr()+500,as&&al())}}function oU(e){null!==oE&&0===oE.tag&&0==(6&ol)&&o0();var t=ol;ol|=1;var r=oo.transition,n=tS;try{if(oo.transition=null,tS=1,e)return e()}finally{tS=n,oo.transition=r,0==(6&(ol=t))&&al()}}function oW(){op=oh.current,n1(oh)}function oq(e,t){e.finishedWork=null,e.finishedLanes=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,n$(r)),null!==oc)for(r=oc.return;null!==r;){var n=r;switch(aw(n),n.tag){case 1:null!=(n=n.type.childContextTypes)&&n9();break;case 3:sf(),n1(n8),n1(n3),sx();break;case 5:sg(n);break;case 4:sf();break;case 13:case 19:n1(sy);break;case 10:aV(n.type._context);break;case 22:case 23:oW()}r=r.return}if(ou=e,oc=e=le(e.current,null),od=op=t,of=0,om=null,ob=oy=og=0,ox=ov=null,null!==aq){for(t=0;t<aq.length;t++)if(null!==(n=(r=aq[t]).interleaved)){r.interleaved=null;var a=n.next,s=r.pending;if(null!==s){var i=s.next;s.next=a,n.next=i}r.pending=n}aq=null}return e}function oH(e,t){for(;;){var r=oc;try{if(az(),sw.current=ii,sC){for(var n=sN.memoizedState;null!==n;){var a=n.queue;null!==a&&(a.pending=null),n=n.next}sC=!1}if(sS=0,sI=sT=sN=null,sE=!1,sA=0,oi.current=null,null===r||null===r.return){of=1,om=t,oc=null;break}e:{var s=e,i=r.return,o=r,l=t;if(t=od,o.flags|=32768,null!==l&&"object"==typeof l&&"function"==typeof l.then){var u=l,c=o,p=c.tag;if(0==(1&c.mode)&&(0===p||11===p||15===p)){var h=c.alternate;h?(c.updateQueue=h.updateQueue,c.memoizedState=h.memoizedState,c.lanes=h.lanes):(c.updateQueue=null,c.memoizedState=null)}var f=ib(i);if(null!==f){f.flags&=-257,iv(f,i,o,s,t),1&f.mode&&iy(s,u,t),t=f,l=u;var m=t.updateQueue;if(null===m){var g=new Set;g.add(l),t.updateQueue=g}else m.add(l);break e}if(0==(1&t)){iy(s,u,t),oX();break e}l=Error(d(426))}else if(aN&&1&o.mode){var y=ib(i);if(null!==y){0==(65536&y.flags)&&(y.flags|=256),iv(y,i,o,s,t),a$(ic(l,o));break e}}s=l=ic(l,o),4!==of&&(of=2),null===ov?ov=[s]:ov.push(s),s=i;do{switch(s.tag){case 3:s.flags|=65536,t&=-t,s.lanes|=t;var b=im(s,l,t);a2(s,b);break e;case 1:o=l;var v=s.type,x=s.stateNode;if(0==(128&s.flags)&&("function"==typeof v.getDerivedStateFromError||null!==x&&"function"==typeof x.componentDidCatch&&(null===oI||!oI.has(x)))){s.flags|=65536,t&=-t,s.lanes|=t;var w=ig(s,o,t);a2(s,w);break e}}s=s.return}while(null!==s)}oY(r)}catch(e){t=e,oc===r&&null!==r&&(oc=r=r.return);continue}break}}function oK(){var e=os.current;return os.current=ii,null===e?ii:e}function oX(){(0===of||3===of||2===of)&&(of=4),null===ou||0==(268435455&og)&&0==(268435455&oy)||oz(ou,od)}function oZ(e,t){var r=ol;ol|=2;var n=oK();for((ou!==e||od!==t)&&(oS=null,oq(e,t));;)try{(function(){for(;null!==oc;)oQ(oc)})();break}catch(t){oH(e,t)}if(az(),ol=r,os.current=n,null!==oc)throw Error(d(261));return ou=null,od=0,of}function oQ(e){var t=o(e.alternate,e,op);e.memoizedProps=e.pendingProps,null===t?oY(e):oc=t,oi.current=null}function oY(e){var t=e;do{var r=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(r=function(e,t,r){var o=t.pendingProps;switch(aw(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return iU(t),null;case 1:case 17:return n7(t.type)&&n9(),iU(t),null;case 3:return o=t.stateNode,sf(),n1(n8),n1(n3),sx(),o.pendingContext&&(o.context=o.pendingContext,o.pendingContext=null),(null===e||null===e.child)&&(a_(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==aT&&(oB(aT),aT=null))),a(e,t),iU(t),null;case 5:sg(t);var l=sp(sd.current);if(r=t.type,null!==e&&null!=t.stateNode)s(e,t,r,o,l),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!o){if(null===t.stateNode)throw Error(d(166));return iU(t),null}if(e=sp(su.current),a_(t)){o=t.stateNode,r=t.type;var u=t.memoizedProps;switch(o[nV]=t,o[nG]=u,e=0!=(1&t.mode),r){case"dialog":nm("cancel",o),nm("close",o);break;case"iframe":case"object":case"embed":nm("load",o);break;case"video":case"audio":for(l=0;l<nd.length;l++)nm(nd[l],o);break;case"source":nm("error",o);break;case"img":case"image":case"link":nm("error",o),nm("load",o);break;case"details":nm("toggle",o);break;case"input":ep(o,u),nm("invalid",o);break;case"select":o._wrapperState={wasMultiple:!!u.multiple},nm("invalid",o);break;case"textarea":ex(o,u),nm("invalid",o)}for(var c in e$(r,u),l=null,u)if(u.hasOwnProperty(c)){var p=u[c];"children"===c?"string"==typeof p?o.textContent!==p&&(!0!==u.suppressHydrationWarning&&nE(o.textContent,p,e),l=["children",p]):"number"==typeof p&&o.textContent!==""+p&&(!0!==u.suppressHydrationWarning&&nE(o.textContent,p,e),l=["children",""+p]):h.hasOwnProperty(c)&&null!=p&&"onScroll"===c&&nm("scroll",o)}switch(r){case"input":el(o),em(o,u,!0);break;case"textarea":el(o),ek(o);break;case"select":case"option":break;default:"function"==typeof u.onClick&&(o.onclick=nA)}o=l,t.updateQueue=o,null!==o&&(t.flags|=4)}else{c=9===l.nodeType?l:l.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=eS(r)),"http://www.w3.org/1999/xhtml"===e?"script"===r?((e=c.createElement("div")).innerHTML="<script></script>",e=e.removeChild(e.firstChild)):"string"==typeof o.is?e=c.createElement(r,{is:o.is}):(e=c.createElement(r),"select"===r&&(c=e,o.multiple?c.multiple=!0:o.size&&(c.size=o.size))):e=c.createElementNS(e,r),e[nV]=t,e[nG]=o,n(e,t,!1,!1),t.stateNode=e;e:{switch(c=eD(r,o),r){case"dialog":nm("cancel",e),nm("close",e),l=o;break;case"iframe":case"object":case"embed":nm("load",e),l=o;break;case"video":case"audio":for(l=0;l<nd.length;l++)nm(nd[l],e);l=o;break;case"source":nm("error",e),l=o;break;case"img":case"image":case"link":nm("error",e),nm("load",e),l=o;break;case"details":nm("toggle",e),l=o;break;case"input":ep(e,o),l=ed(e,o),nm("invalid",e);break;case"option":default:l=o;break;case"select":e._wrapperState={wasMultiple:!!o.multiple},l=er({},o,{value:void 0}),nm("invalid",e);break;case"textarea":ex(e,o),l=ev(e,o),nm("invalid",e)}for(u in e$(r,l),p=l)if(p.hasOwnProperty(u)){var f=p[u];"style"===u?eO(e,f):"dangerouslySetInnerHTML"===u?null!=(f=f?f.__html:void 0)&&eC(e,f):"children"===u?"string"==typeof f?("textarea"!==r||""!==f)&&eE(e,f):"number"==typeof f&&eE(e,""+f):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(h.hasOwnProperty(u)?null!=f&&"onScroll"===u&&nm("scroll",e):null!=f&&T(e,u,f,c))}switch(r){case"input":el(e),em(e,o,!1);break;case"textarea":el(e),ek(e);break;case"option":null!=o.value&&e.setAttribute("value",""+ei(o.value));break;case"select":e.multiple=!!o.multiple,null!=(u=o.value)?eb(e,!!o.multiple,u,!1):null!=o.defaultValue&&eb(e,!!o.multiple,o.defaultValue,!0);break;default:"function"==typeof l.onClick&&(e.onclick=nA)}switch(r){case"button":case"input":case"select":case"textarea":o=!!o.autoFocus;break e;case"img":o=!0;break e;default:o=!1}}o&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return iU(t),null;case 6:if(e&&null!=t.stateNode)i(e,t,e.memoizedProps,o);else{if("string"!=typeof o&&null===t.stateNode)throw Error(d(166));if(r=sp(sd.current),sp(su.current),a_(t)){if(o=t.stateNode,r=t.memoizedProps,o[nV]=t,(u=o.nodeValue!==r)&&null!==(e=ak))switch(e.tag){case 3:nE(o.nodeValue,r,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&nE(o.nodeValue,r,0!=(1&e.mode))}u&&(t.flags|=4)}else(o=(9===r.nodeType?r:r.ownerDocument).createTextNode(o))[nV]=t,t.stateNode=o}return iU(t),null;case 13:if(n1(sy),o=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(aN&&null!==aS&&0!=(1&t.mode)&&0==(128&t.flags))aO(),aP(),t.flags|=98560,u=!1;else if(u=a_(t),null!==o&&null!==o.dehydrated){if(null===e){if(!u)throw Error(d(318));if(!(u=null!==(u=t.memoizedState)?u.dehydrated:null))throw Error(d(317));u[nV]=t}else aP(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;iU(t),u=!1}else null!==aT&&(oB(aT),aT=null),u=!0;if(!u)return 65536&t.flags?t:null}if(0!=(128&t.flags))return t.lanes=r,t;return(o=null!==o)!=(null!==e&&null!==e.memoizedState)&&o&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&sy.current)?0===of&&(of=3):oX())),null!==t.updateQueue&&(t.flags|=4),iU(t),null;case 4:return sf(),a(e,t),null===e&&nb(t.stateNode.containerInfo),iU(t),null;case 10:return aV(t.type._context),iU(t),null;case 19:if(n1(sy),null===(u=t.memoizedState))return iU(t),null;if(o=0!=(128&t.flags),null===(c=u.rendering)){if(o)iG(u,!1);else{if(0!==of||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(c=sb(e))){for(t.flags|=128,iG(u,!1),null!==(o=c.updateQueue)&&(t.updateQueue=o,t.flags|=4),t.subtreeFlags=0,o=r,r=t.child;null!==r;)u=r,e=o,u.flags&=14680066,null===(c=u.alternate)?(u.childLanes=0,u.lanes=e,u.child=null,u.subtreeFlags=0,u.memoizedProps=null,u.memoizedState=null,u.updateQueue=null,u.dependencies=null,u.stateNode=null):(u.childLanes=c.childLanes,u.lanes=c.lanes,u.child=c.child,u.subtreeFlags=0,u.deletions=null,u.memoizedProps=c.memoizedProps,u.memoizedState=c.memoizedState,u.updateQueue=c.updateQueue,u.type=c.type,e=c.dependencies,u.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),r=r.sibling;return n2(sy,1&sy.current|2),t.child}e=e.sibling}null!==u.tail&&tr()>ok&&(t.flags|=128,o=!0,iG(u,!1),t.lanes=4194304)}}else{if(!o){if(null!==(e=sb(c))){if(t.flags|=128,o=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.flags|=4),iG(u,!0),null===u.tail&&"hidden"===u.tailMode&&!c.alternate&&!aN)return iU(t),null}else 2*tr()-u.renderingStartTime>ok&&1073741824!==r&&(t.flags|=128,o=!0,iG(u,!1),t.lanes=4194304)}u.isBackwards?(c.sibling=t.child,t.child=c):(null!==(r=u.last)?r.sibling=c:t.child=c,u.last=c)}if(null!==u.tail)return t=u.tail,u.rendering=t,u.tail=t.sibling,u.renderingStartTime=tr(),t.sibling=null,r=sy.current,n2(sy,o?1&r|2:1&r),t;return iU(t),null;case 22:case 23:return oW(),o=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==o&&(t.flags|=8192),o&&0!=(1&t.mode)?0!=(1073741824&op)&&(iU(t),6&t.subtreeFlags&&(t.flags|=8192)):iU(t),null;case 24:case 25:return null}throw Error(d(156,t.tag))}(r,t,op))){oc=r;return}}else{if(null!==(r=function(e,t){switch(aw(t),t.tag){case 1:return n7(t.type)&&n9(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return sf(),n1(n8),n1(n3),sx(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return sg(t),null;case 13:if(n1(sy),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(d(340));aP()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return n1(sy),null;case 4:return sf(),null;case 10:return aV(t.type._context),null;case 22:case 23:return oW(),null;default:return null}}(r,t))){r.flags&=32767,oc=r;return}if(null!==e)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{of=6,oc=null;return}}if(null!==(t=t.sibling)){oc=t;return}oc=t=e}while(null!==t)0===of&&(of=5)}function oJ(e,t,r){var n=tS,a=oo.transition;try{oo.transition=null,tS=1,function(e,t,r,n){do o0();while(null!==oE)if(0!=(6&ol))throw Error(d(327));r=e.finishedWork;var a=e.finishedLanes;if(null!==r){if(e.finishedWork=null,e.finishedLanes=0,r===e.current)throw Error(d(177));e.callbackNode=null,e.callbackPriority=0;var s=r.lanes|r.childLanes;if(function(e,t){var r=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var n=e.eventTimes;for(e=e.expirationTimes;0<r;){var a=31-td(r),s=1<<a;t[a]=0,n[a]=-1,e[a]=-1,r&=~s}}(e,s),e===ou&&(oc=ou=null,od=0),0==(2064&r.subtreeFlags)&&0==(2064&r.flags)||oC||(oC=!0,i=ti,o=function(){return o0(),null},e7(i,o)),s=0!=(15990&r.flags),0!=(15990&r.subtreeFlags)||s){s=oo.transition,oo.transition=null;var i,o,l,u,c,p=tS;tS=1;var h=ol;ol|=4,oi.current=null,function(e,t){if(nR=tK,r0(e=rJ())){if("selectionStart"in e)var r={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(r=(r=e.ownerDocument)&&r.defaultView||window).getSelection&&r.getSelection();if(n&&0!==n.rangeCount){r=n.anchorNode;var a,s=n.anchorOffset,i=n.focusNode;n=n.focusOffset;try{r.nodeType,i.nodeType}catch(e){r=null;break e}var o=0,l=-1,u=-1,c=0,p=0,h=e,f=null;t:for(;;){for(;h!==r||0!==s&&3!==h.nodeType||(l=o+s),h!==i||0!==n&&3!==h.nodeType||(u=o+n),3===h.nodeType&&(o+=h.nodeValue.length),null!==(a=h.firstChild);)f=h,h=a;for(;;){if(h===e)break t;if(f===r&&++c===s&&(l=o),f===i&&++p===n&&(u=o),null!==(a=h.nextSibling))break;f=(h=f).parentNode}h=a}r=-1===l||-1===u?null:{start:l,end:u}}else r=null}r=r||{start:0,end:0}}else r=null;for(n_={focusedElem:e,selectionRange:r},tK=!1,iK=t;null!==iK;)if(e=(t=iK).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,iK=e;else for(;null!==iK;){t=iK;try{var m=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,v=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:aM(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var x=t.stateNode.containerInfo;1===x.nodeType?x.textContent="":9===x.nodeType&&x.documentElement&&x.removeChild(x.documentElement);break;default:throw Error(d(163))}}catch(e){o2(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,iK=e;break}iK=t.return}m=iQ,iQ=!1}(e,r),i9(r,e),function(e){var t=rJ(),r=e.focusedElem,n=e.selectionRange;if(t!==r&&r&&r.ownerDocument&&function e(t,r){return!!t&&!!r&&(t===r||(!t||3!==t.nodeType)&&(r&&3===r.nodeType?e(t,r.parentNode):"contains"in t?t.contains(r):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(r))))}(r.ownerDocument.documentElement,r)){if(null!==n&&r0(r)){if(t=n.start,void 0===(e=n.end)&&(e=t),"selectionStart"in r)r.selectionStart=t,r.selectionEnd=Math.min(e,r.value.length);else if((e=(t=r.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=r.textContent.length,s=Math.min(n.start,a);n=void 0===n.end?s:Math.min(n.end,a),!e.extend&&s>n&&(a=n,n=s,s=a),a=rY(r,s);var i=rY(r,n);a&&i&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),s>n?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}}for(t=[],e=r;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof r.focus&&r.focus(),r=0;r<t.length;r++)(e=t[r]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}(n_),tK=!!nR,n_=nR=null,e.current=r,l=r,u=e,c=a,iK=l,function e(t,r,n){for(var a=0!=(1&t.mode);null!==iK;){var s=iK,i=s.child;if(22===s.tag&&a){var o=null!==s.memoizedState||iW;if(!o){var l=s.alternate,u=null!==l&&null!==l.memoizedState||iq;l=iW;var c=iq;if(iW=o,(iq=u)&&!c)for(iK=s;null!==iK;)u=(o=iK).child,22===o.tag&&null!==o.memoizedState?on(s):null!==u?(u.return=o,iK=u):on(s);for(;null!==i;)iK=i,e(i,r,n),i=i.sibling;iK=s,iW=l,iq=c}ot(t,r,n)}else 0!=(8772&s.subtreeFlags)&&null!==i?(i.return=s,iK=i):ot(t,r,n)}}(l,u,c),tt(),ol=h,tS=p,oo.transition=s}else e.current=r;if(oC&&(oC=!1,oE=e,oA=a),0===(s=e.pendingLanes)&&(oI=null),function(e){if(tc&&"function"==typeof tc.onCommitFiberRoot)try{tc.onCommitFiberRoot(tu,e,void 0,128==(128&e.current.flags))}catch(e){}}(r.stateNode,n),oF(e,tr()),null!==t)for(n=e.onRecoverableError,r=0;r<t.length;r++)n((a=t[r]).value,{componentStack:a.stack,digest:a.digest});if(oN)throw oN=!1,e=oT,oT=null,e;0!=(1&oA)&&0!==e.tag&&o0(),0!=(1&(s=e.pendingLanes))?e===o_?oR++:(oR=0,o_=e):oR=0,al()}}(e,t,r,n)}finally{oo.transition=a,tS=n}return null}function o0(){if(null!==oE){var e=tN(oA),t=oo.transition,r=tS;try{if(oo.transition=null,tS=16>e?16:e,null===oE)var n=!1;else{if(e=oE,oE=null,oA=0,0!=(6&ol))throw Error(d(331));var a=ol;for(ol|=4,iK=e.current;null!==iK;){var s=iK,i=s.child;if(0!=(16&iK.flags)){var o=s.deletions;if(null!==o){for(var l=0;l<o.length;l++){var u=o[l];for(iK=u;null!==iK;){var c=iK;switch(c.tag){case 0:case 11:case 15:iY(8,c,s)}var p=c.child;if(null!==p)p.return=c,iK=p;else for(;null!==iK;){var h=(c=iK).sibling,f=c.return;if(function e(t){var r=t.alternate;null!==r&&(t.alternate=null,e(r)),t.child=null,t.deletions=null,t.sibling=null,5===t.tag&&null!==(r=t.stateNode)&&(delete r[nV],delete r[nG],delete r[nW],delete r[nq],delete r[nH]),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}(c),c===u){iK=null;break}if(null!==h){h.return=f,iK=h;break}iK=f}}}var m=s.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}iK=s}}if(0!=(2064&s.subtreeFlags)&&null!==i)i.return=s,iK=i;else for(;null!==iK;){if(s=iK,0!=(2048&s.flags))switch(s.tag){case 0:case 11:case 15:iY(9,s,s.return)}var b=s.sibling;if(null!==b){b.return=s.return,iK=b;break}iK=s.return}}var v=e.current;for(iK=v;null!==iK;){var x=(i=iK).child;if(0!=(2064&i.subtreeFlags)&&null!==x)x.return=i,iK=x;else for(i=v;null!==iK;){if(o=iK,0!=(2048&o.flags))try{switch(o.tag){case 0:case 11:case 15:iJ(9,o)}}catch(e){o2(o,o.return,e)}if(o===i){iK=null;break}var w=o.sibling;if(null!==w){w.return=o.return,iK=w;break}iK=o.return}}if(ol=a,al(),tc&&"function"==typeof tc.onPostCommitFiberRoot)try{tc.onPostCommitFiberRoot(tu,e)}catch(e){}n=!0}return n}finally{tS=r,oo.transition=t}}return!1}function o1(e,t,r){t=im(e,t=ic(r,t),1),e=a0(e,t,1),t=o$(),null!==e&&(tw(e,1,t),oF(e,t))}function o2(e,t,r){if(3===e.tag)o1(e,e,r);else for(;null!==t;){if(3===t.tag){o1(t,e,r);break}if(1===t.tag){var n=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof n.componentDidCatch&&(null===oI||!oI.has(n))){e=ig(t,e=ic(r,e),1),t=a0(t,e,1),e=o$(),null!==t&&(tw(t,1,e),oF(t,e));break}}t=t.return}}function o4(e,t,r){var n=e.pingCache;null!==n&&n.delete(t),t=o$(),e.pingedLanes|=e.suspendedLanes&r,ou===e&&(od&r)===r&&(4===of||3===of&&(130023424&od)===od&&500>tr()-ow?oq(e,0):ob|=r),oF(e,t)}function o3(e,t){0===t&&(0==(1&e.mode)?t=1:(t=tm,0==(130023424&(tm<<=1))&&(tm=4194304)));var r=o$();null!==(e=aX(e,t))&&(tw(e,t,r),oF(e,r))}function o8(e){var t=e.memoizedState,r=0;null!==t&&(r=t.retryLane),o3(e,r)}function o6(e,t){var r=0;switch(e.tag){case 13:var n=e.stateNode,a=e.memoizedState;null!==a&&(r=a.retryLane);break;case 19:n=e.stateNode;break;default:throw Error(d(314))}null!==n&&n.delete(t),o3(e,r)}function o5(e,t,r,n){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function o7(e,t,r,n){return new o5(e,t,r,n)}function o9(e){return!(!(e=e.prototype)||!e.isReactComponent)}function le(e,t){var r=e.alternate;return null===r?((r=o7(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.type=e.type,r.flags=0,r.subtreeFlags=0,r.deletions=null),r.flags=14680064&e.flags,r.childLanes=e.childLanes,r.lanes=e.lanes,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function lt(e,t,r,n,a,s){var i=2;if(n=e,"function"==typeof e)o9(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case R:return lr(r.children,a,s,t);case _:i=8,a|=8;break;case O:return(e=o7(12,r,t,2|a)).elementType=O,e.lanes=s,e;case M:return(e=o7(13,r,t,a)).elementType=M,e.lanes=s,e;case F:return(e=o7(19,r,t,a)).elementType=F,e.lanes=s,e;case B:return ln(r,a,s,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:i=10;break e;case $:i=9;break e;case D:i=11;break e;case L:i=14;break e;case j:i=16,n=null;break e}throw Error(d(130,null==e?e:typeof e,""))}return(t=o7(i,r,t,a)).elementType=e,t.type=n,t.lanes=s,t}function lr(e,t,r,n){return(e=o7(7,e,n,t)).lanes=r,e}function ln(e,t,r,n){return(e=o7(22,e,n,t)).elementType=B,e.lanes=r,e.stateNode={isHidden:!1},e}function la(e,t,r){return(e=o7(6,e,null,t)).lanes=r,e}function ls(e,t,r){return(t=o7(4,null!==e.children?e.children:[],e.key,t)).lanes=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function li(e,t,r,n,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=tx(0),this.expirationTimes=tx(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=tx(0),this.identifierPrefix=n,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function lo(e,t,r,n,a,s,i,o,l){return e=new li(e,t,r,o,l),1===t?(t=1,!0===s&&(t|=8)):t=0,s=o7(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:n,isDehydrated:r,cache:null,transitions:null,pendingSuspenseBoundaries:null},aQ(s),e}function ll(e){if(!e)return n4;e=e._reactInternals;e:{if(e3(e)!==e||1!==e.tag)throw Error(d(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(n7(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t)throw Error(d(171))}if(1===e.tag){var r=e.type;if(n7(r))return at(e,r,t)}return t}function lu(e,t,r,n,a,s,i,o,l){return(e=lo(r,n,!0,e,a,s,i,o,l)).context=ll(null),r=e.current,(s=aJ(n=o$(),a=oD(r))).callback=null!=t?t:null,a0(r,s,a),e.current.lanes=a,tw(e,a,n),oF(e,n),e}function lc(e,t,r,n){var a=t.current,s=o$(),i=oD(a);return r=ll(r),null===t.context?t.context=r:t.pendingContext=r,(t=aJ(s,i)).payload={element:e},null!==(n=void 0===n?null:n)&&(t.callback=n),null!==(e=a0(a,t,i))&&(oM(e,a,i,s),a1(e,a,i)),i}function ld(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function lp(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var r=e.retryLane;e.retryLane=0!==r&&r<t?r:t}}function lh(e,t){lp(e,t),(e=e.alternate)&&lp(e,t)}o=function(e,t,r){if(null!==e){if(e.memoizedProps!==t.pendingProps||n8.current)iw=!0;else{if(0==(e.lanes&r)&&0==(128&t.flags))return iw=!1,function(e,t,r){switch(t.tag){case 3:i_(t),aP();break;case 5:sm(t);break;case 1:n7(t.type)&&ar(t);break;case 4:sh(t,t.stateNode.containerInfo);break;case 10:var n=t.type._context,a=t.memoizedProps.value;n2(aF,n._currentValue),n._currentValue=a;break;case 13:if(null!==(n=t.memoizedState)){if(null!==n.dehydrated)return n2(sy,1&sy.current),t.flags|=128,null;if(0!=(r&t.child.childLanes))return iD(e,t,r);return n2(sy,1&sy.current),null!==(e=iV(e,t,r))?e.sibling:null}n2(sy,1&sy.current);break;case 19:if(n=0!=(r&t.childLanes),0!=(128&e.flags)){if(n)return iB(e,t,r);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),n2(sy,sy.current),!n)return null;break;case 22:case 23:return t.lanes=0,iI(e,t,r)}return iV(e,t,r)}(e,t,r);iw=0!=(131072&e.flags)}}else iw=!1,aN&&0!=(1048576&t.flags)&&av(t,ap,t.index);switch(t.lanes=0,t.tag){case 2:var n=t.type;iz(e,t),e=t.pendingProps;var a=n5(t,n3.current);aU(t,r),a=sP(null,t,n,e,a,r);var s=s$();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,n7(n)?(s=!0,ar(t)):s=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,aQ(t),a.updater=a5,t.stateNode=a,a._reactInternals=t,st(t,n,e,r),t=iR(null,t,n,!0,s,r)):(t.tag=0,aN&&s&&ax(t),ik(null,t,a,r),t=t.child),t;case 16:n=t.elementType;e:{switch(iz(e,t),e=t.pendingProps,n=(a=n._init)(n._payload),t.type=n,a=t.tag=function(e){if("function"==typeof e)return o9(e)?1:0;if(null!=e){if((e=e.$$typeof)===D)return 11;if(e===L)return 14}return 2}(n),e=aM(n,e),a){case 0:t=iE(null,t,n,e,r);break e;case 1:t=iA(null,t,n,e,r);break e;case 11:t=iS(null,t,n,e,r);break e;case 14:t=iN(null,t,n,aM(n.type,e),r);break e}throw Error(d(306,n,""))}return t;case 0:return n=t.type,a=t.pendingProps,a=t.elementType===n?a:aM(n,a),iE(e,t,n,a,r);case 1:return n=t.type,a=t.pendingProps,a=t.elementType===n?a:aM(n,a),iA(e,t,n,a,r);case 3:e:{if(i_(t),null===e)throw Error(d(387));n=t.pendingProps,a=(s=t.memoizedState).element,aY(e,t),a4(t,n,null,r);var i=t.memoizedState;if(n=i.element,s.isDehydrated){if(s={element:n,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=s,t.memoizedState=s,256&t.flags){a=ic(Error(d(423)),t),t=iO(e,t,n,r,a);break e}if(n!==a){a=ic(Error(d(424)),t),t=iO(e,t,n,r,a);break e}for(aS=nj(t.stateNode.containerInfo.firstChild),ak=t,aN=!0,aT=null,r=so(t,null,n,r),t.child=r;r;)r.flags=-3&r.flags|4096,r=r.sibling}else{if(aP(),n===a){t=iV(e,t,r);break e}ik(e,t,n,r)}t=t.child}return t;case 5:return sm(t),null===e&&aA(t),n=t.type,a=t.pendingProps,s=null!==e?e.memoizedProps:null,i=a.children,nO(n,a)?i=null:null!==s&&nO(n,s)&&(t.flags|=32),iC(e,t),ik(e,t,i,r),t.child;case 6:return null===e&&aA(t),null;case 13:return iD(e,t,r);case 4:return sh(t,t.stateNode.containerInfo),n=t.pendingProps,null===e?t.child=si(t,null,n,r):ik(e,t,n,r),t.child;case 11:return n=t.type,a=t.pendingProps,a=t.elementType===n?a:aM(n,a),iS(e,t,n,a,r);case 7:return ik(e,t,t.pendingProps,r),t.child;case 8:case 12:return ik(e,t,t.pendingProps.children,r),t.child;case 10:e:{if(n=t.type._context,a=t.pendingProps,s=t.memoizedProps,i=a.value,n2(aF,n._currentValue),n._currentValue=i,null!==s){if(rX(s.value,i)){if(s.children===a.children&&!n8.current){t=iV(e,t,r);break e}}else for(null!==(s=t.child)&&(s.return=t);null!==s;){var o=s.dependencies;if(null!==o){i=s.child;for(var l=o.firstContext;null!==l;){if(l.context===n){if(1===s.tag){(l=aJ(-1,r&-r)).tag=2;var u=s.updateQueue;if(null!==u){var c=(u=u.shared).pending;null===c?l.next=l:(l.next=c.next,c.next=l),u.pending=l}}s.lanes|=r,null!==(l=s.alternate)&&(l.lanes|=r),aG(s.return,r,t),o.lanes|=r;break}l=l.next}}else if(10===s.tag)i=s.type===t.type?null:s.child;else if(18===s.tag){if(null===(i=s.return))throw Error(d(341));i.lanes|=r,null!==(o=i.alternate)&&(o.lanes|=r),aG(i,r,t),i=s.sibling}else i=s.child;if(null!==i)i.return=s;else for(i=s;null!==i;){if(i===t){i=null;break}if(null!==(s=i.sibling)){s.return=i.return,i=s;break}i=i.return}s=i}}ik(e,t,a.children,r),t=t.child}return t;case 9:return a=t.type,n=t.pendingProps.children,aU(t,r),n=n(a=aW(a)),t.flags|=1,ik(e,t,n,r),t.child;case 14:return a=aM(n=t.type,t.pendingProps),a=aM(n.type,a),iN(e,t,n,a,r);case 15:return iT(e,t,t.type,t.pendingProps,r);case 17:return n=t.type,a=t.pendingProps,a=t.elementType===n?a:aM(n,a),iz(e,t),t.tag=1,n7(n)?(e=!0,ar(t)):e=!1,aU(t,r),a9(t,n,a),st(t,n,a,r),iR(null,t,n,!0,e,r);case 19:return iB(e,t,r);case 22:return iI(e,t,r)}throw Error(d(156,t.tag))};var lf="function"==typeof reportError?reportError:function(e){console.error(e)};function lm(e){this._internalRoot=e}function lg(e){this._internalRoot=e}function ly(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function lb(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function lv(){}function lx(e,t,r,n,a){var s=r._reactRootContainer;if(s){var i=s;if("function"==typeof a){var o=a;a=function(){var e=ld(i);o.call(e)}}lc(t,i,e,a)}else i=function(e,t,r,n,a){if(a){if("function"==typeof n){var s=n;n=function(){var e=ld(i);s.call(e)}}var i=lu(t,n,e,0,null,!1,!1,"",lv);return e._reactRootContainer=i,e[nU]=i.current,nb(8===e.nodeType?e.parentNode:e),oU(),i}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof n){var o=n;n=function(){var e=ld(l);o.call(e)}}var l=lo(e,0,!1,null,null,!1,!1,"",lv);return e._reactRootContainer=l,e[nU]=l.current,nb(8===e.nodeType?e.parentNode:e),oU(function(){lc(t,l,r,n)}),l}(r,t,e,a,n);return ld(i)}lg.prototype.render=lm.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(d(409));lc(e,t,null,null)},lg.prototype.unmount=lm.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;oU(function(){lc(null,e,null,null)}),t[nU]=null}},lg.prototype.unstable_scheduleHydration=function(e){if(e){var t=tE();e={blockedOn:null,target:e,priority:t};for(var r=0;r<tF.length&&0!==t&&t<tF[r].priority;r++);tF.splice(r,0,e),0===r&&tz(e)}},tT=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var r=tg(t.pendingLanes);0!==r&&(tk(t,1|r),oF(t,tr()),0==(6&ol)&&(ok=tr()+500,al()))}break;case 13:oU(function(){var t=aX(e,1);null!==t&&oM(t,e,1,o$())}),lh(e,1)}},tI=function(e){if(13===e.tag){var t=aX(e,134217728);null!==t&&oM(t,e,134217728,o$()),lh(e,134217728)}},tC=function(e){if(13===e.tag){var t=oD(e),r=aX(e,t);null!==r&&oM(r,e,t,o$()),lh(e,t)}},tE=function(){return tS},tA=function(e,t){var r=tS;try{return tS=e,t()}finally{tS=r}},eL=function(e,t,r){switch(t){case"input":if(ef(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<r.length;t++){var n=r[t];if(n!==e&&n.form===e.form){var a=nQ(n);if(!a)throw Error(d(90));eu(n),ef(n,a)}}}break;case"textarea":ew(e,r);break;case"select":null!=(t=r.value)&&eb(e,!!r.multiple,t,!1)}},eU=oG,eW=oU;var lw={findFiberByHostInstance:nK,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},lk={bundleType:lw.bundleType,version:lw.version,rendererPackageName:lw.rendererPackageName,rendererConfig:lw.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:I.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=e5(e))?null:e.stateNode},findFiberByHostInstance:lw.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var lS=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!lS.isDisabled&&lS.supportsFiber)try{tu=lS.inject(lk),tc=lS}catch(e){}}G={usingClientEntryPoint:!1,Events:[nX,nZ,nQ,eV,eG,oG]},U=function(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ly(t))throw Error(d(200));return function(e,t,r){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:E,key:null==n?null:""+n,children:e,containerInfo:t,implementation:null}}(e,t,null,r)},W=function(e,t){if(!ly(e))throw Error(d(299));var r=!1,n="",a=lf;return null!=t&&(!0===t.unstable_strictMode&&(r=!0),void 0!==t.identifierPrefix&&(n=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=lo(e,1,!1,null,null,r,!1,n,a),e[nU]=t.current,nb(8===e.nodeType?e.parentNode:e),new lm(t)},q=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(d(188));throw Error(d(268,e=Object.keys(e).join(",")))}return e=null===(e=e5(t))?null:e.stateNode},H=function(e){return oU(e)},K=function(e,t,r){if(!lb(t))throw Error(d(200));return lx(null,e,t,!0,r)},X=function(e,t,r){if(!ly(e))throw Error(d(405));var n=null!=r&&r.hydratedSources||null,a=!1,s="",i=lf;if(null!=r&&(!0===r.unstable_strictMode&&(a=!0),void 0!==r.identifierPrefix&&(s=r.identifierPrefix),void 0!==r.onRecoverableError&&(i=r.onRecoverableError)),t=lu(t,null,e,1,null!=r?r:null,a,!1,s,i),e[nU]=t.current,nb(e),n)for(e=0;e<n.length;e++)a=(a=(r=n[e])._getVersion)(r._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[r,a]:t.mutableSourceEagerHydrationData.push(r,a);return new lg(t)},Z=function(e,t,r){if(!lb(t))throw Error(d(200));return lx(null,e,t,!1,r)},Q=function(e){if(!lb(e))throw Error(d(40));return!!e._reactRootContainer&&(oU(function(){lx(null,null,e,!1,function(){e._reactRootContainer=null,e[nU]=null})}),!0)},Y=oG,J=function(e,t,r,n){if(!lb(r))throw Error(d(200));if(null==e||void 0===e._reactInternals)throw Error(d(38));return lx(e,t,r,!1,n)},ee="18.2.0-next-9e3b772b8-20220608"}),R("fO90s",function(e,t){e.exports=A("gcnCG")}),R("gcnCG",function(e,t){function r(e,t){var r=e.length;for(e.push(t);0<r;){var n=r-1>>>1,a=e[n];if(0<s(a,t))e[n]=t,e[r]=a,r=n;else break}}function n(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],r=e.pop();if(r!==t){e[0]=r;for(var n=0,a=e.length,i=a>>>1;n<i;){var o=2*(n+1)-1,l=e[o],u=o+1,c=e[u];if(0>s(l,r))u<a&&0>s(c,l)?(e[n]=c,e[u]=r,n=u):(e[n]=l,e[o]=r,n=o);else if(u<a&&0>s(c,r))e[n]=c,e[u]=r,n=u;else break}}return t}function s(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}if(c(e.exports,"unstable_now",()=>i,e=>i=e),c(e.exports,"unstable_IdlePriority",()=>o,e=>o=e),c(e.exports,"unstable_ImmediatePriority",()=>l,e=>l=e),c(e.exports,"unstable_LowPriority",()=>u,e=>u=e),c(e.exports,"unstable_NormalPriority",()=>d,e=>d=e),c(e.exports,"unstable_Profiling",()=>p,e=>p=e),c(e.exports,"unstable_UserBlockingPriority",()=>h,e=>h=e),c(e.exports,"unstable_cancelCallback",()=>f,e=>f=e),c(e.exports,"unstable_continueExecution",()=>m,e=>m=e),c(e.exports,"unstable_forceFrameRate",()=>g,e=>g=e),c(e.exports,"unstable_getCurrentPriorityLevel",()=>y,e=>y=e),c(e.exports,"unstable_getFirstCallbackNode",()=>b,e=>b=e),c(e.exports,"unstable_next",()=>v,e=>v=e),c(e.exports,"unstable_pauseExecution",()=>x,e=>x=e),c(e.exports,"unstable_requestPaint",()=>w,e=>w=e),c(e.exports,"unstable_runWithPriority",()=>k,e=>k=e),c(e.exports,"unstable_scheduleCallback",()=>S,e=>S=e),c(e.exports,"unstable_shouldYield",()=>N,e=>N=e),c(e.exports,"unstable_wrapCallback",()=>T,e=>T=e),"object"==typeof performance&&"function"==typeof performance.now){var i,o,l,u,d,p,h,f,m,g,y,b,v,x,w,k,S,N,T,I,C=performance;i=function(){return C.now()}}else{var E=Date,A=E.now();i=function(){return E.now()-A}}var R=[],_=[],O=1,P=null,$=3,D=!1,M=!1,F=!1,L="function"==typeof setTimeout?setTimeout:null,j="function"==typeof clearTimeout?clearTimeout:null,B="undefined"!=typeof setImmediate?setImmediate:null;function z(e){for(var t=n(_);null!==t;){if(null===t.callback)a(_);else if(t.startTime<=e)a(_),t.sortIndex=t.expirationTime,r(R,t);else break;t=n(_)}}function V(e){if(F=!1,z(e),!M){if(null!==n(R))M=!0,J(G);else{var t=n(_);null!==t&&ee(V,t.startTime-e)}}}function G(e,t){M=!1,F&&(F=!1,j(q),q=-1),D=!0;var r=$;try{for(z(t),P=n(R);null!==P&&(!(P.expirationTime>t)||e&&!X());){var s=P.callback;if("function"==typeof s){P.callback=null,$=P.priorityLevel;var o=s(P.expirationTime<=t);t=i(),"function"==typeof o?P.callback=o:P===n(R)&&a(R),z(t)}else a(R);P=n(R)}if(null!==P)var l=!0;else{var u=n(_);null!==u&&ee(V,u.startTime-t),l=!1}return l}finally{P=null,$=r,D=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var U=!1,W=null,q=-1,H=5,K=-1;function X(){return!(i()-K<H)}function Z(){if(null!==W){var e=i();K=e;var t=!0;try{t=W(!0,e)}finally{t?I():(U=!1,W=null)}}else U=!1}if("function"==typeof B)I=function(){B(Z)};else if("undefined"!=typeof MessageChannel){var Q=new MessageChannel,Y=Q.port2;Q.port1.onmessage=Z,I=function(){Y.postMessage(null)}}else I=function(){L(Z,0)};function J(e){W=e,U||(U=!0,I())}function ee(e,t){q=L(function(){e(i())},t)}o=5,l=1,u=4,d=3,p=null,h=2,f=function(e){e.callback=null},m=function(){M||D||(M=!0,J(G))},g=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):H=0<e?Math.floor(1e3/e):5},y=function(){return $},b=function(){return n(R)},v=function(e){switch($){case 1:case 2:case 3:var t=3;break;default:t=$}var r=$;$=t;try{return e()}finally{$=r}},x=function(){},w=function(){},k=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=$;$=e;try{return t()}finally{$=r}},S=function(e,t,a){var s=i();switch(a="object"==typeof a&&null!==a&&"number"==typeof(a=a.delay)&&0<a?s+a:s,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return o=a+o,e={id:O++,callback:t,priorityLevel:e,startTime:a,expirationTime:o,sortIndex:-1},a>s?(e.sortIndex=a,r(_,e),null===n(R)&&e===n(_)&&(F?(j(q),q=-1):F=!0,ee(V,a-s))):(e.sortIndex=o,r(R,e),M||D||(M=!0,J(G))),e},N=X,T=function(e){var t=$;return function(){var r=$;$=t;try{return e.apply(this,arguments)}finally{$=r}}}}),R("30Ie1",function(e,t){c(e.exports,"useSyncExternalStore",()=>r,e=>r=e);var r,n=A("acw62"),a="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},s=n.useState,i=n.useEffect,o=n.useLayoutEffect,l=n.useDebugValue;function u(e){var t=e.getSnapshot;e=e.value;try{var r=t();return!a(e,r)}catch(e){return!0}}var d="undefined"==typeof window||void 0===window.document||void 0===window.document.createElement?function(e,t){return t()}:function(e,t){var r=t(),n=s({inst:{value:r,getSnapshot:t}}),a=n[0].inst,c=n[1];return o(function(){a.value=r,a.getSnapshot=t,u(a)&&c({inst:a})},[e,r,t]),i(function(){return u(a)&&c({inst:a}),e(function(){u(a)&&c({inst:a})})},[e]),l(r),r};r=void 0!==n.useSyncExternalStore?n.useSyncExternalStore:d}),R("6VZtt",function(e,t){c(e.exports,"useSyncExternalStoreWithSelector",()=>r,e=>r=e);var r,n=A("acw62"),a=A("hfliI"),s="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},i=a.useSyncExternalStore,o=n.useRef,l=n.useEffect,u=n.useMemo,d=n.useDebugValue;r=function(e,t,r,n,a){var c=o(null);if(null===c.current){var p={hasValue:!1,value:null};c.current=p}else p=c.current;var h=i(e,(c=u(function(){function e(e){if(!l){if(l=!0,i=e,e=n(e),void 0!==a&&p.hasValue){var t=p.value;if(a(t,e))return o=t}return o=e}if(t=o,s(i,e))return t;var r=n(e);return void 0!==a&&a(t,r)?t:(i=e,o=r)}var i,o,l=!1,u=void 0===r?null:r;return[function(){return e(t())},null===u?void 0:function(){return e(u())}]},[t,r,n,a]))[0],c[1]);return l(function(){p.hasValue=!0,p.value=h},[h]),d(h),h}}),R("hfliI",function(e,t){e.exports=A("30Ie1")}),R("dNL7g",function(e,t){c(e.exports,"AsyncMode",()=>r,e=>r=e),c(e.exports,"ConcurrentMode",()=>n,e=>n=e),c(e.exports,"ContextConsumer",()=>a,e=>a=e),c(e.exports,"ContextProvider",()=>s,e=>s=e),c(e.exports,"Element",()=>i,e=>i=e),c(e.exports,"ForwardRef",()=>o,e=>o=e),c(e.exports,"Fragment",()=>l,e=>l=e),c(e.exports,"Lazy",()=>u,e=>u=e),c(e.exports,"Memo",()=>d,e=>d=e),c(e.exports,"Portal",()=>p,e=>p=e),c(e.exports,"Profiler",()=>h,e=>h=e),c(e.exports,"StrictMode",()=>f,e=>f=e),c(e.exports,"Suspense",()=>m,e=>m=e),c(e.exports,"isAsyncMode",()=>g,e=>g=e),c(e.exports,"isConcurrentMode",()=>y,e=>y=e),c(e.exports,"isContextConsumer",()=>b,e=>b=e),c(e.exports,"isContextProvider",()=>v,e=>v=e),c(e.exports,"isElement",()=>x,e=>x=e),c(e.exports,"isForwardRef",()=>w,e=>w=e),c(e.exports,"isFragment",()=>k,e=>k=e),c(e.exports,"isLazy",()=>S,e=>S=e),c(e.exports,"isMemo",()=>N,e=>N=e),c(e.exports,"isPortal",()=>T,e=>T=e),c(e.exports,"isProfiler",()=>I,e=>I=e),c(e.exports,"isStrictMode",()=>C,e=>C=e),c(e.exports,"isSuspense",()=>E,e=>E=e),c(e.exports,"isValidElementType",()=>A,e=>A=e),c(e.exports,"typeOf",()=>R,e=>R=e);var r,n,a,s,i,o,l,u,d,p,h,f,m,g,y,b,v,x,w,k,S,N,T,I,C,E,A,R,_="function"==typeof Symbol&&Symbol.for,O=_?Symbol.for("react.element"):60103,P=_?Symbol.for("react.portal"):60106,$=_?Symbol.for("react.fragment"):60107,D=_?Symbol.for("react.strict_mode"):60108,M=_?Symbol.for("react.profiler"):60114,F=_?Symbol.for("react.provider"):60109,L=_?Symbol.for("react.context"):60110,j=_?Symbol.for("react.async_mode"):60111,B=_?Symbol.for("react.concurrent_mode"):60111,z=_?Symbol.for("react.forward_ref"):60112,V=_?Symbol.for("react.suspense"):60113,G=_?Symbol.for("react.suspense_list"):60120,U=_?Symbol.for("react.memo"):60115,W=_?Symbol.for("react.lazy"):60116,q=_?Symbol.for("react.block"):60121,H=_?Symbol.for("react.fundamental"):60117,K=_?Symbol.for("react.responder"):60118,X=_?Symbol.for("react.scope"):60119;function Z(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case O:switch(e=e.type){case j:case B:case $:case M:case D:case V:return e;default:switch(e=e&&e.$$typeof){case L:case z:case W:case U:case F:return e;default:return t}}case P:return t}}}function Q(e){return Z(e)===B}r=j,n=B,a=L,s=F,i=O,o=z,l=$,u=W,d=U,p=P,h=M,f=D,m=V,g=function(e){return Q(e)||Z(e)===j},y=Q,b=function(e){return Z(e)===L},v=function(e){return Z(e)===F},x=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===O},w=function(e){return Z(e)===z},k=function(e){return Z(e)===$},S=function(e){return Z(e)===W},N=function(e){return Z(e)===U},T=function(e){return Z(e)===P},I=function(e){return Z(e)===M},C=function(e){return Z(e)===D},E=function(e){return Z(e)===V},A=function(e){return"string"==typeof e||"function"==typeof e||e===$||e===B||e===M||e===D||e===V||e===G||"object"==typeof e&&null!==e&&(e.$$typeof===W||e.$$typeof===U||e.$$typeof===F||e.$$typeof===L||e.$$typeof===z||e.$$typeof===H||e.$$typeof===K||e.$$typeof===X||e.$$typeof===q)},R=Z}),R("9cCWX",function(e,t){c(e.exports,"ContextConsumer",()=>r,e=>r=e),c(e.exports,"ContextProvider",()=>n,e=>n=e),c(e.exports,"Element",()=>a,e=>a=e),c(e.exports,"ForwardRef",()=>s,e=>s=e),c(e.exports,"Fragment",()=>i,e=>i=e),c(e.exports,"Lazy",()=>o,e=>o=e),c(e.exports,"Memo",()=>l,e=>l=e),c(e.exports,"Portal",()=>u,e=>u=e),c(e.exports,"Profiler",()=>d,e=>d=e),c(e.exports,"StrictMode",()=>p,e=>p=e),c(e.exports,"Suspense",()=>h,e=>h=e),c(e.exports,"SuspenseList",()=>f,e=>f=e),c(e.exports,"isAsyncMode",()=>m,e=>m=e),c(e.exports,"isConcurrentMode",()=>g,e=>g=e),c(e.exports,"isContextConsumer",()=>y,e=>y=e),c(e.exports,"isContextProvider",()=>b,e=>b=e),c(e.exports,"isElement",()=>v,e=>v=e),c(e.exports,"isForwardRef",()=>x,e=>x=e),c(e.exports,"isFragment",()=>w,e=>w=e),c(e.exports,"isLazy",()=>k,e=>k=e),c(e.exports,"isMemo",()=>S,e=>S=e),c(e.exports,"isPortal",()=>N,e=>N=e),c(e.exports,"isProfiler",()=>T,e=>T=e),c(e.exports,"isStrictMode",()=>I,e=>I=e),c(e.exports,"isSuspense",()=>C,e=>C=e),c(e.exports,"isSuspenseList",()=>E,e=>E=e),c(e.exports,"isValidElementType",()=>A,e=>A=e),c(e.exports,"typeOf",()=>R,e=>R=e);var r,n,a,s,i,o,l,u,d,p,h,f,m,g,y,b,v,x,w,k,S,N,T,I,C,E,A,R,_,O=Symbol.for("react.element"),P=Symbol.for("react.portal"),$=Symbol.for("react.fragment"),D=Symbol.for("react.strict_mode"),M=Symbol.for("react.profiler"),F=Symbol.for("react.provider"),L=Symbol.for("react.context"),j=Symbol.for("react.server_context"),B=Symbol.for("react.forward_ref"),z=Symbol.for("react.suspense"),V=Symbol.for("react.suspense_list"),G=Symbol.for("react.memo"),U=Symbol.for("react.lazy"),W=Symbol.for("react.offscreen");function q(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case O:switch(e=e.type){case $:case M:case D:case z:case V:return e;default:switch(e=e&&e.$$typeof){case j:case L:case B:case U:case G:case F:return e;default:return t}}case P:return t}}}_=Symbol.for("react.module.reference"),r=L,n=F,a=O,s=B,i=$,o=U,l=G,u=P,d=M,p=D,h=z,f=V,m=function(){return!1},g=function(){return!1},y=function(e){return q(e)===L},b=function(e){return q(e)===F},v=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===O},x=function(e){return q(e)===B},w=function(e){return q(e)===$},k=function(e){return q(e)===U},S=function(e){return q(e)===G},N=function(e){return q(e)===P},T=function(e){return q(e)===M},I=function(e){return q(e)===D},C=function(e){return q(e)===z},E=function(e){return q(e)===V},A=function(e){return"string"==typeof e||"function"==typeof e||e===$||e===M||e===D||e===z||e===V||e===W||"object"==typeof e&&null!==e&&(e.$$typeof===U||e.$$typeof===G||e.$$typeof===F||e.$$typeof===L||e.$$typeof===B||e.$$typeof===_||void 0!==e.getModuleId)},R=q}),R("3E8gM",function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0,configurable:!0}),c(e.exports,"default",()=>u);var r=A("ayMG0"),n=A("acw62"),a=A("i6cHb"),s=A("gc0qX"),i=A("k3T0g"),o=A("2CwQF"),l=A("lzNIT"),u=()=>{let{show:e,setShow:t,crum:u}=(0,n.useContext)(i.default),[c,d]=(0,n.useState)("");return(// Filter tests based on search text
(0,n.useEffect)(()=>{let e=(0,o.AllTest).filter(e=>e.name.toLowerCase().includes(c.toLowerCase()));t(e)},[c,t]),/*#__PURE__*/(0,r.jsx)("div",{className:" container-fluid tw-bg-[#212A31] tw-mt-[74]",children:/*#__PURE__*/(0,r.jsxs)("div",{className:"row flex-xl-nowrap",children:[/*#__PURE__*/(0,r.jsxs)("div",{className:"col-12 col-md-2 tw-bg-[#F3F4F6] tw-p-2",children:[/*#__PURE__*/(0,r.jsx)("div",{className:"tw-flex tw-justify-center tw-items-center tw-w-full tw-p-2",children:/*#__PURE__*/(0,r.jsx)("input",{type:"search",className:"tw-w-full tw-p-2 tw-rounded-md tw-focus:outline-none form-control ds-input",value:c,onChange:e=>d(e.target.value),placeholder:"Search...."})}),/*#__PURE__*/(0,r.jsx)("div",{className:"border tw-mt-2 tw-mb-2"}),/*#__PURE__*/(0,r.jsx)(a.default,{})]}),/*#__PURE__*/(0,r.jsxs)("div",{className:"col-12 col-md-10 tw-p-2",children:[/*#__PURE__*/(0,r.jsxs)("div",{className:"tw-flex tw-justify-between tw-items-center tw-px-4 tw-mb-5",children:[/*#__PURE__*/(0,r.jsx)("h3",{className:"tw-text-white",children:u}),/*#__PURE__*/(0,r.jsxs)(l.Link,{to:"/customtest",className:"tw-no-underline tw-px-4 tw-py-2 tw-text-lg tw-bg-green-500 tw-text-white tw-rounded-md tw-shadow-md",children:["Custom Test \xa0 ",/*#__PURE__*/(0,r.jsx)("i",{className:"fa-solid fa-plus"})]})]}),/*#__PURE__*/(0,r.jsx)("div",{className:" tw-flex md:tw-justify-start tw-justify-center tw-flex-wrap",children:e.map(e=>/*#__PURE__*/(0,r.jsx)(s.default,{id:e.id,name:e.name,desc:e.desc,icon:e.icon},e.id))})]})]})}))}}),R("ayMG0",function(e,t){e.exports=A("1b2ls")}),R("i6cHb",function(e,t){c(e.exports,"default",()=>s);var r=A("ayMG0"),n=A("acw62");A("gib2g");var a=A("k3T0g"),s=()=>{let{aptitude:e,Foundation:t,technical:s,show:i,setShow:o,Role:l,Coding:u,setCrum:c,ALLTEST:d,newTest:p}=(0,n.useContext)(a.default),[h,f]=(0,n.useState)({o1:!0,o2:!1,o3:!1,o4:!1,o5:!1});return/*#__PURE__*/(0,r.jsx)(r.Fragment,{children:/*#__PURE__*/(0,r.jsxs)("div",{className:"tw-w-full md:tw-w-68 tw-bg-gray-100 tw-rounded-md",children:[/*#__PURE__*/(0,r.jsx)("h4",{className:"m-2 tw-text-slate-600",children:"Test Type"}),/*#__PURE__*/(0,r.jsx)("br",{}),/*#__PURE__*/(0,r.jsx)("div",{className:"hover:tw-bg-green-500 tw-cursor-pointer",children:/*#__PURE__*/(0,r.jsxs)("p",{className:"hover:tw-bg-gray-300 tw-text-start  tw-ml-1 p-2",onClick:function(e){o(d),c(e.target.innerText)},children:[/*#__PURE__*/(0,r.jsx)("i",{class:"fa-solid fa-children tw-text-green-300 tw-text-lg"}),"\xa0All Test"," "]})}),/*#__PURE__*/(0,r.jsx)("div",{className:"hover:tw-bg-green-500 tw-cursor-pointer",children:/*#__PURE__*/(0,r.jsxs)("p",{className:"hover:tw-bg-gray-300 tw-text-start  tw-ml-1 p-2",onClick:function(t){o(e),c(t.target.innerText)},children:[/*#__PURE__*/(0,r.jsx)("i",{class:"fa-solid fa-puzzle-piece tw-text-green-300 tw-text-lg"})," ","\xa0Aptitude & Reasoning"]})}),/*#__PURE__*/(0,r.jsx)("div",{className:"hover:tw-bg-green-500 tw-cursor-pointer",children:/*#__PURE__*/(0,r.jsxs)("p",{className:"hover:tw-bg-gray-300 tw-text-start  tw-ml-1 p-2",onClick:function(e){o(u),c(e.target.innerText)},children:[/*#__PURE__*/(0,r.jsx)("i",{class:"fa-solid fa-code tw-text-green-300 tw-text-lg"}),"\xa0Coding Programming"]})}),/*#__PURE__*/(0,r.jsx)("div",{className:"hover:tw-bg-green-500 tw-cursor-pointer",children:/*#__PURE__*/(0,r.jsxs)("p",{className:"hover:tw-bg-gray-300 tw-text-start  tw-ml-1 p-2",onClick:function(e){o(s),c(e.target.innerText)},children:[/*#__PURE__*/(0,r.jsx)("i",{class:"fa-brands fa-windows tw-text-green-300 tw-text-lg"}),"\xa0Technical Assessment"]})}),/*#__PURE__*/(0,r.jsx)("div",{className:"hover:tw-bg-green-500 tw-cursor-pointer",children:/*#__PURE__*/(0,r.jsxs)("p",{className:"hover:tw-bg-gray-300 tw-text-start  tw-ml-1 p-2",onClick:function(e){o(p),c(e.target.innerText)},children:[/*#__PURE__*/(0,r.jsx)("i",{class:"fa-brands fa-windows tw-text-green-300 tw-text-lg"}),"\xa0Your Tests"]})}),/*#__PURE__*/(0,r.jsx)("div",{className:"hover:tw-bg-green-500 tw-cursor-pointer",children:/*#__PURE__*/(0,r.jsxs)("p",{className:"hover:tw-bg-gray-300 tw-text-start  tw-ml-1 p-2",onClick:function(e){o(t),c(e.target.innerText)},children:[/*#__PURE__*/(0,r.jsx)("i",{class:"fa-solid fa-children tw-text-green-300 tw-text-lg"}),"\xa0Foundation schools"," "]})}),/*#__PURE__*/(0,r.jsx)("div",{className:"hover:tw-bg-green-500 tw-cursor-pointer",children:/*#__PURE__*/(0,r.jsxs)("p",{className:"hover:tw-bg-gray-300 tw-text-start  tw-ml-1 p-2",onClick:function(e){o(l),c(e.target.innerText)},children:[/*#__PURE__*/(0,r.jsx)("i",{class:"fa-solid fa-briefcase tw-text-green-300 tw-text-lg"}),"\xa0Domain Specific Roles"," "]})}),/*#__PURE__*/(0,r.jsx)("hr",{})]})})}}),R("gib2g",function(e,t){A("ayMG0"),A("acw62")}),R("k3T0g",function(e,t){c(e.exports,"default",()=>h);var r=A("acw62"),n=A("2CwQF");let a=(0,n.AllTest).filter(e=>"Aptitude & Reasoning"===e.part),s=(0,n.AllTest).filter(e=>"Coding Programming"===e.part),i=(0,n.AllTest).filter(e=>"Technical Assessment"===e.part),o=(0,n.AllTest).filter(e=>"Foundation schools"===e.part),l=(0,n.AllTest).filter(e=>"Domain Specific Roles"===e.part),u=(0,n.AllTest).filter(e=>"Your Tests"===e.part);var d=1;(0,n.AllTest).map(e=>Object.assign(e,{id:d++}));let p=/*#__PURE__*/(0,r.createContext)({ALLTEST:n.AllTest,aptitude:a,technical:i,Foundation:o,newTest:u,Role:l,Coding:s,breadcrum:"All Tests",title:"bdsjgcjsg",duration:" ",instruction:" "});var h=p}),R("2CwQF",function(e,t){c(e.exports,"AllTest",()=>r);let r=[{name:"Time & Work",desc:"Time and Work is one of the most common quantitative aptitude topics which is asked in the Government exams as well as in hiring procesess.",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Number System",desc:"A number system is a way of representing and expressing numerical quantities.It provides a framework for performing mathematical operations",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"HCF & LCM",desc:"Highest Common Factor (HCF) is defined as the Highest Common Factor found in two or more numbers.Least Common Multiple (LCM)",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"A.P",desc:"Arithmetic progression, or arithmetic sequence, is a numerical series in which the difference between consecutive terms is constant.",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Ages",desc:"Ages is defined as the length of time that an individual has existed. Age is expressed in hours, months, years, decades, etc. ",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Percentage",desc:"The term 'percent' or '%' means 'out of a hundred'. In mathematics, Percentage are used like fractions and decimals.....",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Coordinate Geometry",desc:"Coordinate geometry is a field of mathematics that assists in portraying geometric forms on a two-dimensional plane........",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",time:"30 min",level:"Intermediate"},{name:"Compound Interest",desc:"Compound interest (also known as compounding interest) is interest calculated on a loan or deposit depending upon......",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Profit & Loss",desc:"The Profit is the amount gained by selling an item at a price greater than its cost price. In contrast, the loss is the amount lost by selling an item.",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Order & Ranking ",desc:"Order and ranking refer to the arrangement or placement of items, entities, or individuals based on a specific criterion or criteria.",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Number& Series",desc:"Number series refer to a sequence of numbers that follow a specific pattern, rule, or relationship. These series can involve arithmetic.....",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Series Completition",desc:"Series completion refers to the process of identifying or predicting the next item or element in a given sequence or pattern.",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Coding Decoding",desc:"Coding and decoding involve the translation of information from one form to another using specific rules. In coding, information is encoded .......",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Blood Relation",desc:"Blood relation tests involve analyzing and determining the familial relationships between individuals based on their biological connections",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Seating Arrangement",desc:"Seating arrangement refers to the organization or placement of individuals in a specific order or configuration,",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Syllogism",desc:"Syllogism is a verbal reasoning method that involves drawing conclusions from two propositions, known as premises......",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",time:"30 min",level:"Intermediate"},{name:"Venn Diagrams",desc:"Venn diagrams are graphical representations that depict the relationships and overlaps between different sets or groups of objects........",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Data Sufficiency",desc:"Data sufficiency is a problem-solving approach that assesses whether the given information is adequate to answer a specific question .......",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Cube and Cuboid",desc:"A cube is a solid object with six equal square faces, where all edges and angles are of equal length. A cuboid, also known as a rectangular prism....",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"Pattern completion",desc:"Pattern completion refers to the ability to identify missing or incomplete parts of a pattern or sequence and accurately fill in the gaps.....",icon:"fa-solid fa-puzzle-piece tw-text-white tw-text-4xl m-auto",part:"Aptitude & Reasoning",hire:"Any role in which numerical aptitude is important, especially if it involves dealing with financials (budgets, forecasts, business cases, etc.) or interpreting and developing (number-heavy) spreadsheets.",summary:"This numerical reasoning test evaluates candidates’ general aptitude with numbers and their skill in interpreting them for a wide range of applications. This test will help you identify candidates with strong numerical skills.",time:"30 min",level:"Intermediate"},{name:"DBMS",desc:"In these online test on Database Management System, you will be presented with Multiple Choice Questions (MCQs) which will test your skills in Database ...",icon:"fa-solid fa-database tw-text-white tw-text-4xl m-auto",part:"Technical Assessment",time:"30 min",level:"Intermediate"},{name:"Operating System",desc:"Take this Online Operating Systems Concepts Test test and find out how well you score before you appear for your upcoming interviews......................",icon:"fa-brands fa-windows tw-text-white tw-text-4xl m-auto",part:"Technical Assessment",time:"30 min",level:"Intermediate"},{name:"Compute Network",desc:"In these online test on Computer Networks, you will be presented with Multiple Choice Questions (MCQs) which will test your skills in Computer Networks ....",icon:"fa-solid fa-network-wired tw-text-white tw-text-4xl m-auto",part:"Technical Assessment",time:"30 min",level:"Intermediate"},{name:"SQL",desc:"This SQL Online Test simulates a real world online  exams. You will be presented Multiple Choice Questions (MCQs) based on SQL query ........................",icon:"fa-solid fa-s tw-text-white tw-text-4xl m-auto",part:"Technical Assessment",time:"30 min",level:"Intermediate"},{name:"System Design",desc:"Assess your knowledge of system design through this Skill Assessment. It will help you identify gaps in your understanding of major concepts in distributed ...",icon:"fa-solid fa-computer tw-text-white tw-text-4xl m-auto",part:"Technical Assessment",time:"30 min",level:"Intermediate"},{name:"COA",desc:"This online test section contains the next top best multiple-choice type questions answers (MCQs) based on Computer Organization and Architecture.......",icon:"fa-solid fa-memory tw-text-white tw-text-4xl m-auto",part:"Technical Assessment",time:"30 min",level:"Intermediate"},{name:"Data Structure",desc:"This online test section contains the next top best multiple-choice type questions answers (MCQs) based on Data Structure and Algorithms related to Recursion",icon:"fa-solid fa-tree tw-text-white tw-text-4xl m-auto",part:"Technical Assessment",time:"30 min",level:"Intermediate"},{name:"DAA",desc:"These Design and Analysis of Algorithms MCQ with Answers are designed to test your knowledge and understanding of algorithm design and analysis ...",icon:"fa-solid fa-clock tw-text-white tw-text-4xl m-auto",part:"Technical Assessment",time:"30 min",level:"Intermediate"},{name:"C++",desc:"The C++ online test assesses knowledge of programming in the C++ language and commonly used parts of the C++ Standard Library. This test requires solving live ...",icon:"fa-solid fa-c tw-text-white tw-text-4xl m-auto",part:"Coding Programming",time:"30 min",level:"Intermediate"},{name:"java",desc:"This Java Online Test simulates a real online certification exams. You will be presented Multiple Choice Questions (MCQs) based on Core Java Concepts, ...",icon:"fa-brands fa-java tw-text-white tw-text-4xl m-auto",part:"Coding Programming",time:"30 min",level:"Intermediate"},{name:"Javascript",desc:"This Javascript Online Test simulates a real online certification exams. You will be presented Multiple Choice Questions (MCQs) based on Javascript ...",icon:"fa-brands fa-js tw-text-white tw-text-4xl m-auto",part:"Coding Programming",time:"30 min",level:"Intermediate"},{name:"Python",desc:"This Python Online Test simulates a real online certification exams. You will be presented Multiple Choice Questions (MCQs) based on Python Concepts, where you ...",icon:"fa-brands fa-python tw-text-white tw-text-4xl m-auto",part:"Coding Programming",time:"30 min",level:"Intermediate"},{name:"C#",desc:"This C# Online Test simulates a real online certification exams. You will be presented Multiple Choice Questions (MCQs) based on C# Concepts, where you will ...",icon:"fa-solid fa-c tw-text-white tw-text-4xl m-auto",part:"Coding Programming",time:"30 min",level:"Intermediate"},{name:"HTML",desc:"The HTML online test assesses knowledge of HTML through a series of live coding questions that test the ability to implement and style a user .........",icon:"fa-brands fa-html5 tw-text-white tw-text-4xl m-auto",part:"Coding Programming",time:"30 min",level:"Intermediate"},{name:"CSS3",desc:"The css online test assesses knowledge of css through a series of live coding questions that test the ability to implement and style a user .........",icon:"fa-brands fa-css3 tw-text-white tw-text-4xl m-auto",part:"Coding Programming",time:"30 min",level:"Intermediate"},{name:"React",desc:"ReactJS Online Test is an assessment or evaluation to gauge a developer's proficiency in using the React JavaScript library to build web ...........",icon:"fa-brands fa-react tw-text-white tw-text-4xl m-auto",part:"Coding Programming",time:"30 min",level:"Intermediate"},{name:"Array in C++",desc:"The C++ online test assesses knowledge of programming in the C++ language and commonly used parts of the C++ Standard Library. So, enhance your skills now!",icon:"fa-solid fa-a tw-text-white tw-text-4xl m-auto",part:"Coding Programming",time:"30 min",level:"Intermediate"},{name:"OOPS in C++",desc:"C++ Programming questions and answers section on OOPS Concepts for placement interviews and competitive exams: Fully solved C++ Programming problems with ..",icon:"fa-solid fa-o tw-text-white tw-text-4xl m-auto",part:"Coding Programming",time:"30 min",level:"Intermediate"},{name:"Maths For class 8",desc:"Students can practice all topics and chapters with free online mock tests or quizzes for Class 8 Maths. Practice these multiple-choice questions made by our ...",icon:"fa-solid fa-calculator tw-text-white tw-text-4xl m-auto",part:"Foundation schools",time:"30 min",level:"Intermediate"},{name:"Science For class 8",desc:"Students can practice all topics and chapters with free online mock tests or quizzes for Class 8 science. Practice these multiple-choice questions made by our ...",icon:"fa-solid fa-flask-vial tw-text-white tw-text-4xl m-auto",part:"Foundation schools",time:"30 min",level:"Intermediate"},{name:"S.S.T class 8",desc:"Students can practice all topics and chapters with free online mock tests or quizzes for Class 8 socials science. Practice these multiple-choice questions made by our ...",icon:"fa-solid fa-person tw-text-white tw-text-4xl m-auto",part:"Foundation schools",time:"30 min",level:"Intermediate"},{name:"Web Development",desc:"The Web Developer online test assesses knowledge of front-end web development skills (HTML, CSS, and JavaScript) through a series of live coding questions ...",icon:"fa-brands fa-node tw-text-white tw-text-4xl m-auto",part:"Domain Specific Roles",time:"30 min",level:"Intermediate"},{name:"Data Analytics",desc:"The Data Science online test assesses the ability to use tools and techniques to analyze large sets of data, extract information, suggest conclusions, ...",icon:"fa-solid fa-d tw-text-white tw-text-4xl m-auto",part:"Domain Specific Roles",time:"30 min",level:"Intermediate"},{name:"Human Resource HR",desc:"Human Resource Management mock test with old question most imp question 5 year old question. Question multiple choice questions answers ...",icon:"fa-solid fa-h tw-text-white tw-text-4xl m-auto",part:"Domain Specific Roles",time:"30 min",level:"Intermediate"},{name:"Database Adminstration(DBA)",desc:"The purpose of this online test is to help you evaluate your SQL server DBA knowledge yourself. These Multiple Choice Questions (MCQs) on SQL ...        ",icon:"fa-solid fa-b tw-text-white tw-text-4xl m-auto",part:"Domain Specific Roles",time:"30 min",level:"Intermediate"}]}),R("gc0qX",function(e,t){c(e.exports,"default",()=>a);var r=A("ayMG0");A("acw62");var n=A("lzNIT"),a=({name:e,desc:t,icon:a,id:s})=>/*#__PURE__*/(0,r.jsxs)("div",{className:"p-3 tw-group tw-m-4 tw-w-[245] border border-success tw-inline-block tw-text-white tw-rounded-lg hover:tw-shadow-md hover:tw-text-black hover:tw-bg-green-500 group",children:[/*#__PURE__*/(0,r.jsx)("div",{className:" tw-flex tw-justify-center tw-items-center rounded-circle border border-success tw-w-16 tw-h-16 tw-bg-green-500 group-[hover]:tw-bg-white",children:/*#__PURE__*/(0,r.jsx)("i",{className:`${a}`})}),/*#__PURE__*/(0,r.jsx)("br",{}),/*#__PURE__*/(0,r.jsx)("h4",{className:"text-start",children:e}),/*#__PURE__*/(0,r.jsx)("p",{className:"text-start",children:t}),/*#__PURE__*/(0,r.jsx)(n.Link,{to:`/details/${s}`,className:" tw-no-underline tw-flex tw-justify-center tw-items-center",children:/*#__PURE__*/(0,r.jsx)("button",{className:"tw-rounded-md tw-px-8 tw-py-2 tw-shadow-md tw-border-0 tw-bg-green-500 group-hover:tw-text-green-600 group-hover:tw-bg-white",children:"Start test"})})]})}),R("lzNIT",function(e,t){c(e.exports,"createBrowserRouter",()=>h),c(e.exports,"RouterProvider",()=>b),c(e.exports,"Link",()=>k),c(e.exports,"useSearchParams",()=>S),c(e.exports,"useLocation",()=>A("aphAM").useLocation),c(e.exports,"useNavigate",()=>A("aphAM").useNavigate);/**
 * React Router DOM v6.18.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */var r,n,a,s,i=A("acw62"),o=A("2vsP7"),l=A("aphAM"),o=A("2vsP7");function u(){return(u=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}/**
 * Creates a URLSearchParams object using the given initializer.
 *
 * This is identical to `new URLSearchParams(init)` except it also
 * supports arrays as values in the object form of the initializer
 * instead of just strings. This is convenient when you need multiple
 * values for a given key, but don't want to use an array initializer.
 *
 * For example, instead of:
 *
 *   let searchParams = new URLSearchParams([
 *     ['sort', 'name'],
 *     ['sort', 'price']
 *   ]);
 *
 * you can do:
 *
 *   let searchParams = createSearchParams({
 *     sort: ['name', 'price']
 *   });
 */function d(e){return void 0===e&&(e=""),new URLSearchParams("string"==typeof e||Array.isArray(e)||e instanceof URLSearchParams?e:Object.keys(e).reduce((t,r)=>{let n=e[r];return t.concat(Array.isArray(n)?n.map(e=>[r,e]):[[r,n]])},[]))}let p=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","unstable_viewTransition"];function h(e,t){var r;let n;return(0,o.createRouter)({basename:null==t?void 0:t.basename,future:u({},null==t?void 0:t.future,{v7_prependBasename:!0}),history:(0,o.createBrowserHistory)({window:null==t?void 0:t.window}),hydrationData:(null==t?void 0:t.hydrationData)||((n=null==(r=window)?void 0:r.__staticRouterHydrationData)&&n.errors&&(n=u({},n,{errors:function(e){if(!e)return null;let t=Object.entries(e),r={};for(let[e,n]of t)// Hey you!  If you change this, please change the corresponding logic in
// serializeErrors in react-router-dom/server.tsx :)
if(n&&"RouteErrorResponse"===n.__type)r[e]=new o.UNSAFE_ErrorResponseImpl(n.status,n.statusText,n.data,!0===n.internal);else if(n&&"Error"===n.__type){// Attempt to reconstruct the right type of Error (i.e., ReferenceError)
if(n.__subType){let t=window[n.__subType];if("function"==typeof t)try{// @ts-expect-error
let a=new t(n.message);// Wipe away the client-side stack trace.  Nothing to fill it in with
// because we don't serialize SSR stack traces for security reasons
a.stack="",r[e]=a}catch(e){// no-op - fall through and create a normal Error
}}if(null==r[e]){let t=Error(n.message);// Wipe away the client-side stack trace.  Nothing to fill it in with
// because we don't serialize SSR stack traces for security reasons
t.stack="",r[e]=t}}else r[e]=n;return r}(n.errors)})),n),routes:e,mapRouteProperties:l.UNSAFE_mapRouteProperties,window:null==t?void 0:t.window}).initialize()}let f=/*#__PURE__*/i.createContext({isTransitioning:!1}),m=/*#__PURE__*/i.createContext(new Map),g=i.startTransition;class y{constructor(){this.status="pending",this.promise=new Promise((e,t)=>{this.resolve=t=>{"pending"===this.status&&(this.status="resolved",e(t))},this.reject=e=>{"pending"===this.status&&(this.status="rejected",t(e))}})}}/**
 * Given a Remix Router instance, render the appropriate UI
 */function b(e){let{fallbackElement:t,router:r,future:n}=e,[a,s]=i.useState(r.state),[o,u]=i.useState(),[c,d]=i.useState({isTransitioning:!1}),[p,h]=i.useState(),[b,x]=i.useState(),[w,k]=i.useState(),S=i.useRef(new Map),{v7_startTransition:N}=n||{},T=i.useCallback(e=>{N&&g?g(e):e()},[N]),I=i.useCallback((e,t)=>{let{deletedFetchers:n,unstable_viewTransitionOpts:a}=t;n.forEach(e=>S.current.delete(e)),e.fetchers.forEach((e,t)=>{void 0!==e.data&&S.current.set(t,e.data)}),a&&null!=r.window&&"function"==typeof r.window.document.startViewTransition?b&&p?(// Interrupting an in-progress transition, cancel and let everything flush
// out, and then kick off a new transition from the interruption state
p.resolve(),b.skipTransition(),k({state:e,currentLocation:a.currentLocation,nextLocation:a.nextLocation})):(// Completed navigation update with opted-in view transitions, let 'er rip
u(e),d({isTransitioning:!0,currentLocation:a.currentLocation,nextLocation:a.nextLocation})):T(()=>s(e))},[r.window,b,p,S,T]);// Need to use a layout effect here so we are subscribed early enough to
// pick up on any render-driven redirects/navigations (useEffect/<Navigate>)
i.useLayoutEffect(()=>r.subscribe(I),[r,I]),// When we start a view transition, create a Deferred we can use for the
// eventual "completed" render
i.useEffect(()=>{c.isTransitioning&&h(new y)},[c.isTransitioning]),// Once the deferred is created, kick off startViewTransition() to update the
// DOM and then wait on the Deferred to resolve (indicating the DOM update has
// happened)
i.useEffect(()=>{if(p&&o&&r.window){let e=p.promise,t=r.window.document.startViewTransition(async()=>{T(()=>s(o)),await e});t.finished.finally(()=>{h(void 0),x(void 0),u(void 0),d({isTransitioning:!1})}),x(t)}},[T,o,p,r.window]),// When the new location finally renders and is committed to the DOM, this
// effect will run to resolve the transition
i.useEffect(()=>{p&&o&&a.location.key===o.location.key&&p.resolve()},[p,b,a.location,o]),// If we get interrupted with a new navigation during a transition, we skip
// the active transition, let it cleanup, then kick it off again here
i.useEffect(()=>{!c.isTransitioning&&w&&(u(w.state),d({isTransitioning:!0,currentLocation:w.currentLocation,nextLocation:w.nextLocation}),k(void 0))},[c.isTransitioning,w]);let C=i.useMemo(()=>({createHref:r.createHref,encodeLocation:r.encodeLocation,go:e=>r.navigate(e),push:(e,t,n)=>r.navigate(e,{state:t,preventScrollReset:null==n?void 0:n.preventScrollReset}),replace:(e,t,n)=>r.navigate(e,{replace:!0,state:t,preventScrollReset:null==n?void 0:n.preventScrollReset})}),[r]),E=r.basename||"/",A=i.useMemo(()=>({router:r,navigator:C,static:!1,basename:E}),[r,C,E]);// The fragment and {null} here are important!  We need them to keep React 18's
// useId happy when we are server-rendering since we may have a <script> here
// containing the hydrated server-side staticContext (from StaticRouterProvider).
// useId relies on the component tree structure to generate deterministic id's
// so we need to ensure it remains the same on the client even though
// we don't need the <script> tag
return /*#__PURE__*/i.createElement(i.Fragment,null,/*#__PURE__*/i.createElement(l.UNSAFE_DataRouterContext.Provider,{value:A},/*#__PURE__*/i.createElement(l.UNSAFE_DataRouterStateContext.Provider,{value:a},/*#__PURE__*/i.createElement(m.Provider,{value:S.current},/*#__PURE__*/i.createElement(f.Provider,{value:c},/*#__PURE__*/i.createElement(l.Router,{basename:E,location:a.location,navigationType:a.historyAction,navigator:C},a.initialized?/*#__PURE__*/i.createElement(v,{routes:r.routes,state:a}):t))))),null)}function v(e){let{routes:t,state:r}=e;return(0,l.UNSAFE_useRoutesImpl)(t,void 0,r)}let x="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement,w=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,k=/*#__PURE__*/i.forwardRef(function(e,t){let r,{onClick:n,relative:a,reloadDocument:s,replace:c,state:d,target:h,to:f,preventScrollReset:m,unstable_viewTransition:g}=e,y=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,p),{basename:b}=i.useContext(l.UNSAFE_NavigationContext),v=!1;if("string"==typeof f&&w.test(f)&&(// Render the absolute href server- and client-side
r=f,x))try{let e=new URL(window.location.href),t=new URL(f.startsWith("//")?e.protocol+f:f),r=(0,o.stripBasename)(t.pathname,b);t.origin===e.origin&&null!=r?f=r+t.search+t.hash:v=!0}catch(e){}// Rendered into <a href> for relative URLs
let k=(0,l.useHref)(f,{relative:a}),S=// External hooks
/**
 * Handles the click behavior for router `<Link>` components. This is useful if
 * you need to create custom `<Link>` components with the same click behavior we
 * use in our exported `<Link>`.
 */function(e,t){let{target:r,replace:n,state:a,preventScrollReset:s,relative:u,unstable_viewTransition:c}=void 0===t?{}:t,d=(0,l.useNavigate)(),p=(0,l.useLocation)(),h=(0,l.useResolvedPath)(e,{relative:u});return i.useCallback(t=>{0!==t.button||// Ignore everything but left clicks
r&&"_self"!==r||t.metaKey||t.altKey||t.ctrlKey||t.shiftKey||(t.preventDefault(),d(e,{replace:void 0!==n?n:(0,o.createPath)(p)===(0,o.createPath)(h),state:a,preventScrollReset:s,relative:u,unstable_viewTransition:c}))},[p,d,h,n,a,r,e,s,u,c])}(f,{replace:c,state:d,target:h,preventScrollReset:m,relative:a,unstable_viewTransition:g});return /*#__PURE__*/i.createElement("a",u({},y,{href:r||k,onClick:v||s?n:function(e){n&&n(e),e.defaultPrevented||S(e)},ref:t,target:h}))});/**
 * A convenient wrapper for reading and writing search parameters via the
 * URLSearchParams interface.
 */function S(e){let t=i.useRef(d(e)),r=i.useRef(!1),n=(0,l.useLocation)(),a=i.useMemo(()=>{var e,a;let s;return e=n.search,a=r.current?null:t.current,s=d(e),a&&// `defaultSearchParams.keys()` to work-around a bug in Firefox related to
// web extensions. Relevant Bugzilla tickets:
// https://bugzilla.mozilla.org/show_bug.cgi?id=1414602
// https://bugzilla.mozilla.org/show_bug.cgi?id=1023984
a.forEach((e,t)=>{s.has(t)||a.getAll(t).forEach(e=>{s.append(t,e)})}),s},[n.search]),s=(0,l.useNavigate)(),o=i.useCallback((e,t)=>{let n=d("function"==typeof e?e(a):e);r.current=!0,s("?"+n,t)},[s,a]);return[a,o]}(r=a||(a={})).UseScrollRestoration="useScrollRestoration",r.UseSubmit="useSubmit",r.UseSubmitFetcher="useSubmitFetcher",r.UseFetcher="useFetcher",r.useViewTransitionState="useViewTransitionState",(n=s||(s={})).UseFetcher="useFetcher",n.UseFetchers="useFetchers",n.UseScrollRestoration="useScrollRestoration"}),R("2vsP7",function(e,t){var r,n,a,s;/**
 * @remix-run/router v1.11.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function i(){return(i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}c(e.exports,"Action",()=>r),c(e.exports,"createMemoryHistory",()=>l),c(e.exports,"createPath",()=>g),c(e.exports,"parsePath",()=>y),c(e.exports,"createBrowserHistory",()=>u),c(e.exports,"createHashHistory",()=>d),c(e.exports,"UNSAFE_invariant",()=>p),c(e.exports,"matchRoutes",()=>w),c(e.exports,"stripBasename",()=>I),c(e.exports,"UNSAFE_convertRouteMatchToUiMatch",()=>k),c(e.exports,"joinPaths",()=>R),c(e.exports,"matchPath",()=>T),c(e.exports,"UNSAFE_getPathContributingMatches",()=>E),c(e.exports,"resolveTo",()=>A),c(e.exports,"AbortedDeferredError",()=>$),c(e.exports,"UNSAFE_ErrorResponseImpl",()=>D),c(e.exports,"isRouteErrorResponse",()=>M),c(e.exports,"IDLE_FETCHER",()=>U),c(e.exports,"IDLE_BLOCKER",()=>W),c(e.exports,"createRouter",()=>X),/**
   * A POP indicates a change to an arbitrary index in the history stack, such
   * as a back or forward navigation. It does not describe the direction of the
   * navigation, only that the current index changed.
   *
   * Note: This is the default action for newly created history objects.
   */(a=r||(r={})).Pop="POP",/**
   * A PUSH indicates a new entry being added to the history stack, such as when
   * a link is clicked and a new page loads. When this happens, all subsequent
   * entries in the stack are lost.
   */a.Push="PUSH",/**
   * A REPLACE indicates the entry at the current index in the history stack
   * being replaced by a new one.
   */a.Replace="REPLACE";let o="popstate";/**
 * Memory history stores the current location in memory. It is designed for use
 * in stateful non-browser environments like tests and React Native.
 */function l(e){let t;void 0===e&&(e={});let{initialEntries:n=["/"],initialIndex:a,v5Compat:s=!1}=e;t=n.map((e,t)=>c(e,"string"==typeof e?null:e.state,0===t?"default":void 0));let i=u(null==a?t.length-1:a),o=r.Pop,l=null;function u(e){return Math.min(Math.max(e,0),t.length-1)}function c(e,r,n){void 0===r&&(r=null);let a=m(t?t[i].pathname:"/",e,r,n);return h("/"===a.pathname.charAt(0),"relative pathnames are not supported in memory history: "+JSON.stringify(e)),a}function d(e){return"string"==typeof e?e:g(e)}return{get index(){return i},get action(){return o},get location(){return t[i]},createHref:d,createURL:e=>new URL(d(e),"http://localhost"),encodeLocation(e){let t="string"==typeof e?y(e):e;return{pathname:t.pathname||"",search:t.search||"",hash:t.hash||""}},push(e,n){o=r.Push;let a=c(e,n);i+=1,t.splice(i,t.length,a),s&&l&&l({action:o,location:a,delta:1})},replace(e,n){o=r.Replace;let a=c(e,n);t[i]=a,s&&l&&l({action:o,location:a,delta:0})},go(e){o=r.Pop;let n=u(i+e),a=t[n];i=n,l&&l({action:o,location:a,delta:e})},listen:e=>(l=e,()=>{l=null})}}/**
 * Browser history stores the location in regular URLs. This is the standard for
 * most web apps, but it requires some configuration on the server to ensure you
 * serve the same app at multiple URLs.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory
 */function u(e){return void 0===e&&(e={}),b(function(e,t){let{pathname:r,search:n,hash:a}=e.location;return m("",{pathname:r,search:n,hash:a},t.state&&t.state.usr||null,t.state&&t.state.key||"default")},function(e,t){return"string"==typeof t?t:g(t)},null,e)}/**
 * Hash history stores the location in window.location.hash. This makes it ideal
 * for situations where you don't want to send the location to the server for
 * some reason, either because you do cannot configure it or the URL space is
 * reserved for something else.
 *
 * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory
 */function d(e){return void 0===e&&(e={}),b(function(e,t){let{pathname:r="/",search:n="",hash:a=""}=y(e.location.hash.substr(1));return r.startsWith("/")||r.startsWith(".")||(r="/"+r),m("",{pathname:r,search:n,hash:a},t.state&&t.state.usr||null,t.state&&t.state.key||"default")},function(e,t){let r=e.document.querySelector("base"),n="";if(r&&r.getAttribute("href")){let t=e.location.href,r=t.indexOf("#");n=-1===r?t:t.slice(0,r)}return n+"#"+("string"==typeof t?t:g(t))},function(e,t){h("/"===e.pathname.charAt(0),"relative pathnames are not supported in hash history.push("+JSON.stringify(t)+")")},e)}function p(e,t){if(!1===e||null==e)throw Error(t)}function h(e,t){if(!e){// eslint-disable-next-line no-console
"undefined"!=typeof console&&console.warn(t);try{// Welcome to debugging history!
//
// This error is thrown as a convenience, so you can more easily
// find the source for a warning that appears in the console by
// enabling "pause on exceptions" in your JavaScript debugger.
throw Error(t);// eslint-disable-next-line no-empty
}catch(e){}}}/**
 * For browser-based histories, we combine the state and key into an object
 */function f(e,t){return{usr:e.state,key:e.key,idx:t}}/**
 * Creates a Location object with a unique key from the given Path
 */function m(e,t,r,n){return void 0===r&&(r=null),i({pathname:"string"==typeof e?e:e.pathname,search:"",hash:""},"string"==typeof t?y(t):t,{state:r,// TODO: This could be cleaned up.  push/replace should probably just take
// full Locations now and avoid the need to run through this flow at all
// But that's a pretty big refactor to the current test suite so going to
// keep as is for the time being and just let any incoming keys take precedence
key:t&&t.key||n||Math.random().toString(36).substr(2,8)})}/**
 * Creates a string URL path from the given pathname, search, and hash components.
 */function g(e){let{pathname:t="/",search:r="",hash:n=""}=e;return r&&"?"!==r&&(t+="?"===r.charAt(0)?r:"?"+r),n&&"#"!==n&&(t+="#"===n.charAt(0)?n:"#"+n),t}/**
 * Parses a string URL path into its separate pathname, search, and hash components.
 */function y(e){let t={};if(e){let r=e.indexOf("#");r>=0&&(t.hash=e.substr(r),e=e.substr(0,r));let n=e.indexOf("?");n>=0&&(t.search=e.substr(n),e=e.substr(0,n)),e&&(t.pathname=e)}return t}function b(e,t,n,a){void 0===a&&(a={});let{window:s=document.defaultView,v5Compat:l=!1}=a,u=s.history,c=r.Pop,d=null,h=y();function y(){return(u.state||{idx:null}).idx}function b(){c=r.Pop;let e=y(),t=null==e?null:e-h;h=e,d&&d({action:c,location:x.location,delta:t})}function v(e){// window.location.origin is "null" (the literal string value) in Firefox
// under certain conditions, notably when serving from a local HTML file
// See https://bugzilla.mozilla.org/show_bug.cgi?id=878297
let t="null"!==s.location.origin?s.location.origin:s.location.href,r="string"==typeof e?e:g(e);return p(t,"No window.location.(origin|href) available to create URL for href: "+r),new URL(r,t)}null==h&&(h=0,u.replaceState(i({},u.state,{idx:h}),""));let x={get action(){return c},get location(){return e(s,u)},listen(e){if(d)throw Error("A history only accepts one active listener");return s.addEventListener(o,b),d=e,()=>{s.removeEventListener(o,b),d=null}},createHref:e=>t(s,e),createURL:v,encodeLocation(e){// Encode a Location the same way window.location would
let t=v(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(e,t){c=r.Push;let a=m(x.location,e,t);n&&n(a,e);let i=f(a,h=y()+1),o=x.createHref(a);// try...catch because iOS limits us to 100 pushState calls :/
try{u.pushState(i,"",o)}catch(e){// If the exception is because `state` can't be serialized, let that throw
// outwards just like a replace call would so the dev knows the cause
// https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps
// https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal
if(e instanceof DOMException&&"DataCloneError"===e.name)throw e;// They are going to lose state here, but there is no real
// way to warn them about it since the page will refresh...
s.location.assign(o)}l&&d&&d({action:c,location:x.location,delta:1})},replace:function(e,t){c=r.Replace;let a=m(x.location,e,t);n&&n(a,e);let s=f(a,h=y()),i=x.createHref(a);u.replaceState(s,"",i),l&&d&&d({action:c,location:x.location,delta:0})},go:e=>u.go(e)};return x}(s=n||(n={})).data="data",s.deferred="deferred",s.redirect="redirect",s.error="error";let v=new Set(["lazy","caseSensitive","path","id","index","children"]);// Walk the route tree generating unique IDs where necessary, so we are working
// solely with AgnosticDataRouteObject's within the Router
function x(e,t,r,n){return void 0===r&&(r=[]),void 0===n&&(n={}),e.map((e,a)=>{let s=[...r,a],o="string"==typeof e.id?e.id:s.join("-");if(p(!0!==e.index||!e.children,"Cannot specify children on an index route"),p(!n[o],'Found a route id collision on id "'+o+"\".  Route id's must be globally unique within Data Router usages"),!0===e.index){let r=i({},e,t(e),{id:o});return n[o]=r,r}{let r=i({},e,t(e),{id:o,children:void 0});return n[o]=r,e.children&&(r.children=x(e.children,t,s,n)),r}})}/**
 * Matches the given routes to a location and returns the match data.
 *
 * @see https://reactrouter.com/utils/match-routes
 */function w(e,t,r){void 0===r&&(r="/");let n=I(("string"==typeof t?y(t):t).pathname||"/",r);if(null==n)return null;let a=function e(t,r,n,a){void 0===r&&(r=[]),void 0===n&&(n=[]),void 0===a&&(a="");let s=(t,s,i)=>{var o;let l,u,c={relativePath:void 0===i?t.path||"":i,caseSensitive:!0===t.caseSensitive,childrenIndex:s,route:t};c.relativePath.startsWith("/")&&(p(c.relativePath.startsWith(a),'Absolute route path "'+c.relativePath+'" nested under path "'+a+'" is not valid. An absolute child route path must start with the combined path of all its parent routes.'),c.relativePath=c.relativePath.slice(a.length));let d=R([a,c.relativePath]),h=n.concat(c);t.children&&t.children.length>0&&(p(// @ts-expect-error
!0!==t.index,'Index routes must not have child routes. Please remove all child routes from route path "'+d+'".'),e(t.children,r,h,d)),(null!=t.path||t.index)&&r.push({path:d,score:(o=t.index,u=(l=d.split("/")).length,l.some(N)&&(u+=-2),o&&(u+=2),l.filter(e=>!N(e)).reduce((e,t)=>e+(S.test(t)?3:""===t?1:10),u)),routesMeta:h})};return t.forEach((e,t)=>{var r;// coarse-grain check for optional params
if(""!==e.path&&null!=(r=e.path)&&r.includes("?"))for(let r of /**
 * Computes all combinations of optional path segments for a given path,
 * excluding combinations that are ambiguous and of lower priority.
 *
 * For example, `/one/:two?/three/:four?/:five?` explodes to:
 * - `/one/three`
 * - `/one/:two/three`
 * - `/one/three/:four`
 * - `/one/three/:five`
 * - `/one/:two/three/:four`
 * - `/one/:two/three/:five`
 * - `/one/three/:four/:five`
 * - `/one/:two/three/:four/:five`
 */function e(t){let r=t.split("/");if(0===r.length)return[];let[n,...a]=r,s=n.endsWith("?"),i=n.replace(/\?$/,"");if(0===a.length)// `["one", "", "three"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`
return s?[i,""]:[i];let o=e(a.join("/")),l=[];// for absolute paths, ensure `/` instead of empty segment
return(// All child paths with the prefix.  Do this for all children before the
// optional version for all children, so we get consistent ordering where the
// parent optional aspect is preferred as required.  Otherwise, we can get
// child sections interspersed where deeper optional segments are higher than
// parent optional segments, where for example, /:two would explode _earlier_
// then /:one.  By always including the parent as required _for all children_
// first, we avoid this issue
l.push(...o.map(e=>""===e?i:[i,e].join("/"))),s&&l.push(...o),l.map(e=>t.startsWith("/")&&""===e?"/":e))}(e.path))s(e,t,r);else s(e,t)}),r}(e);(function(e){e.sort((e,t)=>{var r,n;return e.score!==t.score?t.score-e.score// Higher score first
:(r=e.routesMeta.map(e=>e.childrenIndex),n=t.routesMeta.map(e=>e.childrenIndex),r.length===n.length&&r.slice(0,-1).every((e,t)=>e===n[t])?// first. This allows people to have fine-grained control over the matching
// behavior by simply putting routes with identical paths in the order they
// want them tried.
r[r.length-1]-n[n.length-1]:// so they sort equally.
0)})})(a);let s=null;for(let e=0;null==s&&e<a.length;++e)s=function(e,t){let{routesMeta:r}=e,n={},a="/",s=[];for(let e=0;e<r.length;++e){let i=r[e],o=e===r.length-1,l="/"===a?t:t.slice(a.length)||"/",u=T({path:i.relativePath,caseSensitive:i.caseSensitive,end:o},l);if(!u)return null;Object.assign(n,u.params);let c=i.route;s.push({// TODO: Can this as be avoided?
params:n,pathname:R([a,u.pathname]),pathnameBase:_(R([a,u.pathnameBase])),route:c}),"/"!==u.pathnameBase&&(a=R([a,u.pathnameBase]))}return s}(a[e],// or from router.navigate, but we want to match against the unencoded
// paths in the route definitions.  Memory router locations won't be
// encoded here but there also shouldn't be anything to decode so this
// should be a safe operation.  This avoids needing matchRoutes to be
// history-aware.
function(e){try{return decodeURI(e)}catch(t){return h(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent encoding ('+t+")."),e}}(n));return s}function k(e,t){let{route:r,pathname:n,params:a}=e;return{id:r.id,pathname:n,params:a,data:t[r.id],handle:r.handle}}let S=/^:\w+$/,N=e=>"*"===e;/**
 * Performs pattern matching on a URL pathname and returns information about
 * the match.
 *
 * @see https://reactrouter.com/utils/match-path
 */function T(e,t){var r,n,a;let s,i;"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[o,l]=(r=e.path,n=e.caseSensitive,a=e.end,void 0===n&&(n=!1),void 0===a&&(a=!0),h("*"===r||!r.endsWith("*")||r.endsWith("/*"),'Route path "'+r+'" will be treated as if it were "'+r.replace(/\*$/,"/*")+'" because the `*` character must always follow a `/` in the pattern. To get rid of this warning, please change the route path to "'+r.replace(/\*$/,"/*")+'".'),s=[],i="^"+r.replace(/\/*\*?$/,"")// Ignore trailing / and /*, we'll handle it below
.replace(/^\/*/,"/")// Make sure it has a leading /
.replace(/[\\.*+^${}|()[\]]/g,"\\$&")// Escape special regex chars
.replace(/\/:(\w+)(\?)?/g,(e,t,r)=>(s.push({paramName:t,isOptional:null!=r}),r?"/?([^\\/]+)?":"/([^\\/]+)")),r.endsWith("*")?(s.push({paramName:"*"}),i+="*"===r||"/*"===r?"(.*)$"// Already matched the initial /, just match the rest
:"(?:\\/(.+)|\\/*)$"):a?i+="\\/*$":""!==r&&"/"!==r&&// then we have _some_ form of path in our regex, so we should expect to
// match only if we find the end of this path segment.  Look for an optional
// non-captured trailing slash (to match a portion of the URL) or the end
// of the path (if we've matched to the end).  We used to do this with a
// word boundary but that gives false positives on routes like
// /user-preferences since `-` counts as a word boundary.
(i+="(?:(?=\\/|$))"),[new RegExp(i,n?void 0:"i"),s]),u=t.match(o);if(!u)return null;let c=u[0],d=c.replace(/(.)\/+$/,"$1"),p=u.slice(1);return{params:l.reduce((e,t,r)=>{let{paramName:n,isOptional:a}=t;// We need to compute the pathnameBase here using the raw splat value
// instead of using params["*"] later because it will be decoded then
if("*"===n){let e=p[r]||"";d=c.slice(0,c.length-e.length).replace(/(.)\/+$/,"$1")}let s=p[r];return a&&!s?e[n]=void 0:e[n]=function(e,t){try{return decodeURIComponent(e)}catch(r){return h(!1,'The value for the URL param "'+t+'" will not be decoded because the string "'+e+'" is a malformed URL segment. This is probably due to a bad percent encoding ('+r+")."),e}}(s||"",n),e},{}),pathname:c,pathnameBase:d,pattern:e}}/**
 * @private
 */function I(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;// We want to leave trailing slash behavior in the user's control, so if they
// specify a basename with a trailing slash, we should support it
let r=t.endsWith("/")?t.length-1:t.length,n=e.charAt(r);return n&&"/"!==n?null:e.slice(r)||"/"}function C(e,t,r,n){return"Cannot include a '"+e+"' character in a manually specified "+("`to."+t)+"` field ["+JSON.stringify(n)+"].  Please separate it out to the `to."+r+'` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.'}/**
 * @private
 *
 * When processing relative navigation we want to ignore ancestor routes that
 * do not contribute to the path, such that index/pathless layout routes don't
 * interfere.
 *
 * For example, when moving a route element into an index route and/or a
 * pathless layout route, relative link behavior contained within should stay
 * the same.  Both of the following examples should link back to the root:
 *
 *   <Route path="/">
 *     <Route path="accounts" element={<Link to=".."}>
 *   </Route>
 *
 *   <Route path="/">
 *     <Route path="accounts">
 *       <Route element={<AccountsLayout />}>       // <-- Does not contribute
 *         <Route index element={<Link to=".."} />  // <-- Does not contribute
 *       </Route
 *     </Route>
 *   </Route>
 */function E(e){return e.filter((e,t)=>0===t||e.route.path&&e.route.path.length>0)}/**
 * @private
 */function A(e,t,r,n){let a,s;void 0===n&&(n=!1),"string"==typeof e?a=y(e):(p(!(a=i({},e)).pathname||!a.pathname.includes("?"),C("?","pathname","search",a)),p(!a.pathname||!a.pathname.includes("#"),C("#","pathname","hash",a)),p(!a.search||!a.search.includes("#"),C("#","search","hash",a)));let o=""===e||""===a.pathname,l=o?"/":a.pathname;// Routing is relative to the current pathname if explicitly requested.
//
// If a pathname is explicitly provided in `to`, it should be relative to the
// route context. This is explained in `Note on `<Link to>` values` in our
// migration guide from v5 as a means of disambiguation between `to` values
// that begin with `/` and those that do not. However, this is problematic for
// `to` values that do not provide a pathname. `to` can simply be a search or
// hash string, in which case we should assume that the navigation is relative
// to the current location's pathname and *not* the route pathname.
if(n||null==l)s=r;else{let e=t.length-1;if(l.startsWith("..")){let t=l.split("/");// Each leading .. segment means "go up one route" instead of "go up one
// URL segment".  This is a key difference from how <a href> works and a
// major reason we call this a "to" value instead of a "href".
for(;".."===t[0];)t.shift(),e-=1;a.pathname=t.join("/")}// If there are more ".." segments than parent routes, resolve relative to
// the root / URL.
s=e>=0?t[e]:"/"}let u=/**
 * Returns a resolved path object relative to the given pathname.
 *
 * @see https://reactrouter.com/utils/resolve-path
 */function(e,t){let r;void 0===t&&(t="/");let{pathname:n,search:a="",hash:s=""}="string"==typeof e?y(e):e;return{pathname:n?n.startsWith("/")?n:(r=t.replace(/\/+$/,"").split("/"),n.split("/").forEach(e=>{".."===e?r.length>1&&r.pop():"."!==e&&r.push(e)}),r.length>1?r.join("/"):"/"):t,search:O(a),hash:P(s)}}(a,s),c=l&&"/"!==l&&l.endsWith("/"),d=(o||"."===l)&&r.endsWith("/");return!u.pathname.endsWith("/")&&(c||d)&&(u.pathname+="/"),u}/**
 * @private
 */let R=e=>e.join("/").replace(/\/\/+/g,"/"),_=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),O=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",P=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";class $ extends Error{}/**
 * @private
 * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies
 *
 * We don't export the class for public use since it's an implementation
 * detail, but we export the interface above so folks can build their own
 * abstractions around instances via isRouteErrorResponse()
 */class D{constructor(e,t,r,n){void 0===n&&(n=!1),this.status=e,this.statusText=t||"",this.internal=n,r instanceof Error?(this.data=r.toString(),this.error=r):this.data=r}}/**
 * Check if the given error is an ErrorResponse generated from a 4xx/5xx
 * Response thrown from an action/loader
 */function M(e){return null!=e&&"number"==typeof e.status&&"string"==typeof e.statusText&&"boolean"==typeof e.internal&&"data"in e}let F=["post","put","patch","delete"],L=new Set(F),j=["get",...F],B=new Set(j),z=new Set([301,302,303,307,308]),V=new Set([307,308]),G={state:"idle",location:void 0,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0},U={state:"idle",data:void 0,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0},W={state:"unblocked",proceed:void 0,reset:void 0,location:void 0},q=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,H=e=>({hasErrorBoundary:!!e.hasErrorBoundary}),K="remix-router-transitions";//#endregion
////////////////////////////////////////////////////////////////////////////////
//#region createRouter
////////////////////////////////////////////////////////////////////////////////
/**
 * Create a router and listen to history POP navigations
 */function X(e){let t,a,s,o;let l=e.window?e.window:"undefined"!=typeof window?window:void 0,u=void 0!==l&&void 0!==l.document&&void 0!==l.document.createElement,c=!u;if(p(e.routes.length>0,"You must provide a non-empty routes array to createRouter"),e.mapRouteProperties)t=e.mapRouteProperties;else if(e.detectErrorBoundary){// If they are still using the deprecated version, wrap it with the new API
let r=e.detectErrorBoundary;t=e=>({hasErrorBoundary:r(e)})}else t=H;// Routes keyed by ID
let d={},f=x(e.routes,t,void 0,d),g=e.basename||"/",y=i({v7_fetcherPersist:!1,v7_normalizeFormMethod:!1,v7_prependBasename:!1},e.future),b=null,v=new Set,S=null,N=null,T=null,C=null!=e.hydrationData,E=w(f,e.history.location,g),A=null;if(null==E){// If we do not match a user-provided-route, fall back to the root
// to allow the error boundary to take over
let t=ec(404,{pathname:e.history.location.pathname}),{matches:r,route:n}=eu(f);E=r,A={[n.id]:t}}let R=// functions around still then we'll need to run them in initialize()
!E.some(e=>e.route.lazy)&&// And we have to either have no loaders or have been provided hydrationData
(!E.some(e=>e.route.loader)||null!=e.hydrationData),_={historyAction:e.history.action,location:e.history.location,matches:E,initialized:R,navigation:G,// Don't restore on initial updateState() if we were SSR'd
restoreScrollPosition:null==e.hydrationData&&null,preventScrollReset:!1,revalidation:"idle",loaderData:e.hydrationData&&e.hydrationData.loaderData||{},actionData:e.hydrationData&&e.hydrationData.actionData||null,errors:e.hydrationData&&e.hydrationData.errors||A,fetchers:new Map,blockers:new Map},O=r.Pop,P=!1,$=!1,D=new Map,M=null,F=!1,L=!1,j=[],B=[],z=new Map,X=0,J=-1,ee=new Map,et=new Set,ea=new Map,es=new Map,ep=new Set,ev=new Map,eT=new Map,eI=!1;// Update our state and notify the calling context of the change
function eC(e,t){_=i({},_,e);// Prep fetcher cleanup so we can tell the UI which fetcher data entries
// can be removed
let r=[],n=[];y.v7_fetcherPersist&&_.fetchers.forEach((e,t)=>{"idle"===e.state&&(ep.has(t)?n.push(t):// revalidations and such
r.push(t))}),v.forEach(e=>e(_,{deletedFetchers:n,unstable_viewTransitionOpts:t})),y.v7_fetcherPersist&&(r.forEach(e=>_.fetchers.delete(e)),n.forEach(e=>eB(e)))}// Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION
// and setting state.[historyAction/location/matches] to the new route.
// - Location is a required param
// - Navigation will always be set to IDLE_NAVIGATION
// - Can pass any other state in newState
function eE(t,n){var s,o;let l,u;// Deduce if we're in a loading/actionReload state:
// - We have committed actionData in the store
// - The current navigation was a mutation submission
// - We're past the submitting state and into the loading state
// - The location being loaded is not the result of a redirect
let c=null!=_.actionData&&null!=_.navigation.formMethod&&eg(_.navigation.formMethod)&&"loading"===_.navigation.state&&(null==(s=t.state)?void 0:s._isRedirect)!==!0;l=n.actionData?Object.keys(n.actionData).length>0?n.actionData:null:c?_.actionData:null;// Always preserve any existing loaderData from re-used routes
let d=n.loaderData?eo(_.loaderData,n.loaderData,n.matches||[],n.errors):_.loaderData,p=_.blockers;p.size>0&&(p=new Map(p)).forEach((e,t)=>p.set(t,W));// Always respect the user flag.  Otherwise don't reset on mutation
// submission navigations unless they redirect
let h=!0===P||null!=_.navigation.formMethod&&eg(_.navigation.formMethod)&&(null==(o=t.state)?void 0:o._isRedirect)!==!0;// On POP, enable transitions if they were enabled on the original navigation
if(a&&(f=a,a=void 0),F||O===r.Pop||(O===r.Push?e.history.push(t,t.state):O===r.Replace&&e.history.replace(t,t.state)),O===r.Pop){// Forward takes precedence so they behave like the original navigation
let e=D.get(_.location.pathname);e&&e.has(t.pathname)?u={currentLocation:_.location,nextLocation:t}:D.has(t.pathname)&&// the new location and enable if that location previously enabled
(u={currentLocation:t,nextLocation:_.location})}else if($){// Store the applied transition on PUSH/REPLACE
let e=D.get(_.location.pathname);e?e.add(t.pathname):(e=new Set([t.pathname]),D.set(_.location.pathname,e)),u={currentLocation:_.location,nextLocation:t}}eC(i({},n,{actionData:l,loaderData:d,historyAction:O,location:t,initialized:!0,navigation:G,revalidation:"idle",restoreScrollPosition:eZ(t,n.matches||_.matches),preventScrollReset:h,blockers:p}),u),// Reset stateful navigation vars
O=r.Pop,P=!1,$=!1,F=!1,L=!1,j=[],B=[]}// Trigger a navigation event, which can either be a numerical POP or a PUSH
// replace with an optional submission
async function eA(t,n){if("number"==typeof t){e.history.go(t);return}let a=Z(_.location,_.matches,g,y.v7_prependBasename,t,null==n?void 0:n.fromRouteId,null==n?void 0:n.relative),{path:s,submission:o,error:l}=Q(y.v7_normalizeFormMethod,!1,a,n),u=_.location,c=m(_.location,s,n&&n.state);// When using navigate as a PUSH/REPLACE we aren't reading an already-encoded
// URL from window.location, so we need to encode it here so the behavior
// remains the same as POP and non-data-router usages.  new URL() does all
// the same encoding we'd get from a history.pushState/window.location read
// without having to touch history
c=i({},c,e.history.encodeLocation(c));let d=n&&null!=n.replace?n.replace:void 0,p=r.Push;!0===d?p=r.Replace:!1===d||null!=o&&eg(o.formMethod)&&o.formAction===_.location.pathname+_.location.search&&// users don't have to double-click the back button to get to the prior
// location.  If the user redirects to a different location from the
// action/loader this will be ignored and the redirect will be a PUSH
(p=r.Replace);let h=n&&"preventScrollReset"in n?!0===n.preventScrollReset:void 0,f=eH({currentLocation:u,nextLocation:c,historyAction:p});if(f){// Put the blocker into a blocked state
eq(f,{state:"blocked",location:c,proceed(){eq(f,{state:"proceeding",proceed:void 0,reset:void 0,location:c}),// Send the same navigation through
eA(t,n)},reset(){let e=new Map(_.blockers);e.set(f,W),eC({blockers:e})}});return}return await eR(p,c,{submission:o,// Send through the formData serialization error if we have one so we can
// render at the right error boundary after we match routes
pendingError:l,preventScrollReset:h,replace:n&&n.replace,enableViewTransition:n&&n.unstable_viewTransition})}// Start a navigation to the given action/location.  Can optionally provide a
// overrideNavigation which will override the normalLoad in the case of a redirect
// navigation
async function eR(t,r,n){var s,l,u;let c,d;// Abort any in-progress navigations and start a new one. Unset any ongoing
// uninterrupted revalidations unless told otherwise, since we want this
// new navigation to update history normally
o&&o.abort(),o=null,O=t,F=!0===(n&&n.startUninterruptedRevalidation),s=_.location,l=_.matches,S&&T&&(S[eX(s,l)]=T()),P=!0===(n&&n.preventScrollReset),$=!0===(n&&n.enableViewTransition);let p=a||f,h=n&&n.overrideNavigation,m=w(p,r,g);// Short circuit with a 404 on the root error boundary if we match nothing
if(!m){let e=ec(404,{pathname:r.pathname}),{matches:t,route:n}=eu(p);// Cancel all pending deferred on 404s since we don't keep any routes
eK(),eE(r,{matches:t,loaderData:{},errors:{[n.id]:e}});return}// Short circuit if it's only a hash change and not a revalidation or
// mutation submission.
//
// Ignore on initial page loads because since the initial load will always
// be "same hash".  For example, on /page#hash and submit a <Form method="post">
// which will default to a navigation to /page
if(_.initialized&&!L&&(u=_.location).pathname===r.pathname&&u.search===r.search&&(""===u.hash?""!==r.hash:u.hash===r.hash||""!==r.hash)&&!(n&&n.submission&&eg(n.submission.formMethod))){eE(r,{matches:m});return}// Create a controller/Request for this navigation
o=new AbortController;let y=en(e.history,r,o.signal,n&&n.submission);if(n&&n.pendingError)// with binary FormData so assign here and skip to handleLoaders.  That
// way we handle calling loaders above the boundary etc.  It's not really
// different from an actionError in that sense.
d={[el(m).route.id]:n.pendingError};else if(n&&n.submission&&eg(n.submission.formMethod)){// Call action if we received an action submission
let e=await e_(y,r,n.submission,m,{replace:n.replace});if(e.shortCircuited)return;c=e.pendingActionData,d=e.pendingActionError,h=ek(r,n.submission),// Create a GET request for the loaders
y=new Request(y.url,{signal:y.signal})}// Call loaders
let{shortCircuited:b,loaderData:v,errors:x}=await eO(y,r,m,h,n&&n.submission,n&&n.fetcherSubmission,n&&n.replace,c,d);b||(// Clean up now that the action/loaders have completed.  Don't clean up if
// we short circuited because pendingNavigationController will have already
// been assigned to a new controller for the next navigation
o=null,eE(r,i({matches:m},c?{actionData:c}:{},{loaderData:v,errors:x})))}// Call the action matched by the leaf route for this navigation and handle
// redirects/errors
async function e_(e,a,s,i,o){let l;void 0===o&&(o={}),eL(),eC({navigation:{state:"submitting",location:a,formMethod:s.formMethod,formAction:s.formAction,formEncType:s.formEncType,formData:s.formData,json:s.json,text:s.text}});let u=ex(i,a);if(u.route.action||u.route.lazy){if(l=await er("action",e,u,i,d,t,g),e.signal.aborted)return{shortCircuited:!0}}else l={type:n.error,error:ec(405,{method:e.method,pathname:a.pathname,routeId:u.route.id})};if(em(l)){let e;return e=o&&null!=o.replace?o.replace:l.location===_.location.pathname+_.location.search,await eM(_,l,{submission:s,replace:e}),{shortCircuited:!0}}if(ef(l)){// Store off the pending error - we use it to determine which loaders
// to call and will commit it when we complete the navigation
let e=el(i,u.route.id);return!0!==(o&&o.replace)&&(O=r.Push),{// Send back an empty object we can use to clear out any prior actionData
pendingActionData:{},pendingActionError:{[e.route.id]:l.error}}}if(eh(l))throw ec(400,{type:"defer-action"});return{pendingActionData:{[u.route.id]:l.data}}}// Call all applicable loaders for the given matches, handling redirects,
// errors, etc.
async function eO(t,r,n,s,l,u,c,d,p){// Figure out the right navigation we want to use for data loading
let h=s||ek(r,l),m=l||u||ew(h),y=a||f,[b,v]=Y(e.history,_,n,m,r,L,j,B,ea,et,y,g,d,p);// Short circuit if we have no loaders to run
if(// Cancel pending deferreds for no-longer-matched routes or routes we're
// about to reload.  Note that if this is an action reload we would have
// already cancelled all pending deferreds so this would be a no-op
eK(e=>!(n&&n.some(t=>t.route.id===e))||b&&b.some(t=>t.route.id===e)),J=++X,0===b.length&&0===v.length){let e=eG();return eE(r,i({matches:n,loaderData:{},// Commit pending error if we're short circuiting
errors:p||null},d?{actionData:d}:{},e?{fetchers:new Map(_.fetchers)}:{})),{shortCircuited:!0}}// If this is an uninterrupted revalidation, we remain in our current idle
// state.  If not, we need to switch to our loading state and load data,
// preserving any new action data or existing action data (in the case of
// a revalidation interrupting an actionReload)
if(!F){v.forEach(e=>{let t=_.fetchers.get(e.key),r=eS(void 0,t?t.data:void 0);_.fetchers.set(e.key,r)});let e=d||_.actionData;eC(i({navigation:h},e?0===Object.keys(e).length?{actionData:null}:{actionData:e}:{},v.length>0?{fetchers:new Map(_.fetchers)}:{}))}v.forEach(e=>{z.has(e.key)&&ez(e.key),e.controller&&// (via deleteFetcher) does not abort the triggering navigation that
// triggered the revalidation
z.set(e.key,e.controller)});// Proxy navigation abort through to revalidation fetchers
let x=()=>v.forEach(e=>ez(e.key));o&&o.signal.addEventListener("abort",x);let{results:w,loaderResults:k,fetcherResults:S}=await eF(_.matches,n,b,v,t);if(t.signal.aborted)return{shortCircuited:!0};o&&o.signal.removeEventListener("abort",x),v.forEach(e=>z.delete(e.key));// If any loaders returned a redirect Response, start a new REPLACE navigation
let N=ed(w);if(N){if(N.idx>=b.length){// If this redirect came from a fetcher make sure we mark it in
// fetchRedirectIds so it doesn't get revalidated on the next set of
// loader executions
let e=v[N.idx-b.length].key;et.add(e)}return await eM(_,N.result,{replace:c}),{shortCircuited:!0}}// Process and commit output from loaders
let{loaderData:T,errors:I}=ei(_,n,b,k,p,v,S,ev);// Wire up subscribers to update loaderData as promises settle
ev.forEach((e,t)=>{e.subscribe(r=>{// Note: No need to updateState here since the TrackedPromise on
// loaderData is stable across resolve/reject
// Remove this instance if we were aborted or if promises have settled
(r||e.done)&&ev.delete(t)})});let C=eG(),E=eU(J),A=C||E||v.length>0;return i({loaderData:T,errors:I},A?{fetchers:new Map(_.fetchers)}:{})}function eP(e){return y.v7_fetcherPersist&&(es.set(e,(es.get(e)||0)+1),ep.has(e)&&ep.delete(e)),_.fetchers.get(e)||U}// Call the action for the matched fetcher.submit(), and then handle redirects,
// errors, and revalidation
async function e$(r,n,s,i,l,u){var c;if(eL(),ea.delete(r),!i.route.action&&!i.route.lazy){let e=ec(405,{method:u.formMethod,pathname:s,routeId:n});ej(r,n,e);return}let h=(c=_.fetchers.get(r),{state:"submitting",formMethod:u.formMethod,formAction:u.formAction,formEncType:u.formEncType,formData:u.formData,json:u.json,text:u.text,data:c?c.data:void 0});_.fetchers.set(r,h),eC({fetchers:new Map(_.fetchers)});// Call the action for the fetcher
let m=new AbortController,y=en(e.history,s,m.signal,u);z.set(r,m);let b=X,v=await er("action",y,i,l,d,t,g);if(y.signal.aborted){// We can delete this so long as we weren't aborted by our own fetcher
// re-submit which would have put _new_ controller is in fetchControllers
z.get(r)===m&&z.delete(r);return}if(ep.has(r)){_.fetchers.set(r,eN(void 0)),eC({fetchers:new Map(_.fetchers)});return}if(em(v)){if(z.delete(r),J>b){// A new navigation was kicked off after our action started, so that
// should take precedence over this redirect navigation.  We already
// set isRevalidationRequired so all loaders for the new route should
// fire unless opted out via shouldRevalidate
let e=eN(void 0);_.fetchers.set(r,e),eC({fetchers:new Map(_.fetchers)});return}{et.add(r);let e=eS(u);return _.fetchers.set(r,e),eC({fetchers:new Map(_.fetchers)}),eM(_,v,{fetcherSubmission:u})}}// Process any non-redirect errors thrown
if(ef(v)){ej(r,n,v.error);return}if(eh(v))throw ec(400,{type:"defer-action"});// Start the data load for current matches, or the next location if we're
// in the middle of a navigation
let x=_.navigation.location||_.location,k=en(e.history,x,m.signal),S=a||f,N="idle"!==_.navigation.state?w(S,_.navigation.location,g):_.matches;p(N,"Didn't find any matches after fetcher action");let T=++X;ee.set(r,T);let I=eS(u,v.data);_.fetchers.set(r,I);let[C,E]=Y(e.history,_,N,u,x,L,j,B,ea,et,S,g,{[i.route.id]:v.data},void 0// No need to send through errors since we short circuit above
);// Put all revalidating fetchers into the loading state, except for the
// current fetcher which we want to keep in it's current loading state which
// contains it's action submission info + action data
E.filter(e=>e.key!==r).forEach(e=>{let t=e.key,r=_.fetchers.get(t),n=eS(void 0,r?r.data:void 0);_.fetchers.set(t,n),z.has(t)&&ez(t),e.controller&&z.set(t,e.controller)}),eC({fetchers:new Map(_.fetchers)});let A=()=>E.forEach(e=>ez(e.key));m.signal.addEventListener("abort",A);let{results:R,loaderResults:P,fetcherResults:$}=await eF(_.matches,N,C,E,k);if(m.signal.aborted)return;m.signal.removeEventListener("abort",A),ee.delete(r),z.delete(r),E.forEach(e=>z.delete(e.key));let D=ed(R);if(D){if(D.idx>=C.length){// If this redirect came from a fetcher make sure we mark it in
// fetchRedirectIds so it doesn't get revalidated on the next set of
// loader executions
let e=E[D.idx-C.length].key;et.add(e)}return eM(_,D.result)}// Process and commit output from loaders
let{loaderData:M,errors:F}=ei(_,_.matches,C,P,void 0,E,$,ev);// Since we let revalidations complete even if the submitting fetcher was
// deleted, only put it back to idle if it hasn't been deleted
if(_.fetchers.has(r)){let e=eN(v.data);_.fetchers.set(r,e)}eU(T),"loading"===_.navigation.state&&T>J?(p(O,"Expected pending action"),o&&o.abort(),eE(_.navigation.location,{matches:N,loaderData:M,errors:F,fetchers:new Map(_.fetchers)})):(// otherwise just update with the fetcher data, preserving any existing
// loaderData for loaders that did not need to reload.  We have to
// manually merge here since we aren't going through completeNavigation
eC({errors:F,loaderData:eo(_.loaderData,M,N,F),fetchers:new Map(_.fetchers)}),L=!1)}// Call the matched loader for fetcher.load(), handling redirects, errors, etc.
async function eD(r,n,a,s,i,o){let l=_.fetchers.get(r),u=eS(o,l?l.data:void 0);_.fetchers.set(r,u),eC({fetchers:new Map(_.fetchers)});// Call the loader for this fetcher route match
let c=new AbortController,h=en(e.history,a,c.signal);z.set(r,c);let f=X,m=await er("loader",h,s,i,d,t,g);if(eh(m)&&(m=await eb(m,h.signal,!0)||m),z.get(r)===c&&z.delete(r),h.signal.aborted)return;if(ep.has(r)){_.fetchers.set(r,eN(void 0)),eC({fetchers:new Map(_.fetchers)});return}// If the loader threw a redirect Response, start a new REPLACE navigation
if(em(m)){if(J>f){// A new navigation was kicked off after our loader started, so that
// should take precedence over this redirect navigation
let e=eN(void 0);_.fetchers.set(r,e),eC({fetchers:new Map(_.fetchers)});return}et.add(r),await eM(_,m);return}// Process any non-redirect errors thrown
if(ef(m)){ej(r,n,m.error);return}p(!eh(m),"Unhandled fetcher deferred data");// Put the fetcher back into an idle state
let y=eN(m.data);_.fetchers.set(r,y),eC({fetchers:new Map(_.fetchers)})}/**
   * Utility function to handle redirects returned from an action or loader.
   * Normally, a redirect "replaces" the navigation that triggered it.  So, for
   * example:
   *
   *  - user is on /a
   *  - user clicks a link to /b
   *  - loader for /b redirects to /c
   *
   * In a non-JS app the browser would track the in-flight navigation to /b and
   * then replace it with /c when it encountered the redirect response.  In
   * the end it would only ever update the URL bar with /c.
   *
   * In client-side routing using pushState/replaceState, we aim to emulate
   * this behavior and we also do not update history until the end of the
   * navigation (including processed redirects).  This means that we never
   * actually touch history until we've processed redirects, so we just use
   * the history action from the original navigation (PUSH or REPLACE).
   */async function eM(t,n,a){let{submission:s,fetcherSubmission:c,replace:d}=void 0===a?{}:a;n.revalidate&&(L=!0);let h=m(t.location,n.location,{_isRedirect:!0});if(p(h,"Expected a location on the redirect navigation"),u){let t=!1;if(n.reloadDocument)t=!0;else if(q.test(n.location)){let r=e.history.createURL(n.location);t=r.origin!==l.location.origin||// Hard reload if it's an absolute URL that does not match our basename
null==I(r.pathname,g)}if(t){d?l.location.replace(n.location):l.location.assign(n.location);return}}// There's no need to abort on redirects, since we don't detect the
// redirect until the action/loaders have settled
o=null;let f=!0===d?r.Replace:r.Push,{formMethod:y,formAction:b,formEncType:v}=t.navigation;!s&&!c&&y&&b&&v&&(s=ew(t.navigation));// If this was a 307/308 submission we want to preserve the HTTP method and
// re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the
// redirected location
let x=s||c;if(V.has(n.status)&&x&&eg(x.formMethod))await eR(f,h,{submission:i({},x,{formAction:n.location}),// Preserve this flag across redirects
preventScrollReset:P});else{// If we have a navigation submission, we will preserve it through the
// redirect navigation
let e=ek(h,s);await eR(f,h,{overrideNavigation:e,fetcherSubmission:c,// Preserve this flag across redirects
preventScrollReset:P})}}async function eF(r,a,s,i,o){// Call all navigation loaders and revalidating fetcher loaders in parallel,
// then slice off the results into separate arrays so we can handle them
// accordingly
let l=await Promise.all([...s.map(e=>er("loader",o,e,a,d,t,g)),...i.map(r=>r.matches&&r.match&&r.controller?er("loader",en(e.history,r.path,r.controller.signal),r.match,r.matches,d,t,g):{type:n.error,error:ec(404,{pathname:r.path})})]),u=l.slice(0,s.length),c=l.slice(s.length);return await Promise.all([ey(r,s,u,u.map(()=>o.signal),!1,_.loaderData),ey(r,i.map(e=>e.match),c,i.map(e=>e.controller?e.controller.signal:null),!0)]),{results:l,loaderResults:u,fetcherResults:c}}function eL(){// Every interruption triggers a revalidation
L=!0,// Cancel pending route-level deferreds and mark cancelled routes for
// revalidation
j.push(...eK()),// Abort in-flight fetcher loads
ea.forEach((e,t)=>{z.has(t)&&(B.push(t),ez(t))})}function ej(e,t,r){let n=el(_.matches,t);eB(e),eC({errors:{[n.route.id]:r},fetchers:new Map(_.fetchers)})}function eB(e){let t=_.fetchers.get(e);z.has(e)&&!(t&&"loading"===t.state&&ee.has(e))&&ez(e),ea.delete(e),ee.delete(e),et.delete(e),ep.delete(e),_.fetchers.delete(e)}function ez(e){let t=z.get(e);p(t,"Expected fetch controller: "+e),t.abort(),z.delete(e)}function eV(e){for(let t of e){let e=eN(eP(t).data);_.fetchers.set(t,e)}}function eG(){let e=[],t=!1;for(let r of et){let n=_.fetchers.get(r);p(n,"Expected fetcher: "+r),"loading"===n.state&&(et.delete(r),e.push(r),t=!0)}return eV(e),t}function eU(e){let t=[];for(let[r,n]of ee)if(n<e){let e=_.fetchers.get(r);p(e,"Expected fetcher: "+r),"loading"===e.state&&(ez(r),ee.delete(r),t.push(r))}return eV(t),t.length>0}function eW(e){_.blockers.delete(e),eT.delete(e)}// Utility function to update blockers, ensuring valid state transitions
function eq(e,t){let r=_.blockers.get(e)||W;// Poor mans state machine :)
// https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM
p("unblocked"===r.state&&"blocked"===t.state||"blocked"===r.state&&"blocked"===t.state||"blocked"===r.state&&"proceeding"===t.state||"blocked"===r.state&&"unblocked"===t.state||"proceeding"===r.state&&"unblocked"===t.state,"Invalid blocker state transition: "+r.state+" -> "+t.state);let n=new Map(_.blockers);n.set(e,t),eC({blockers:n})}function eH(e){let{currentLocation:t,nextLocation:r,historyAction:n}=e;if(0===eT.size)return;// We ony support a single active blocker at the moment since we don't have
// any compelling use cases for multi-blocker yet
eT.size>1&&h(!1,"A router only supports one blocker at a time");let a=Array.from(eT.entries()),[s,i]=a[a.length-1],o=_.blockers.get(s);if((!o||"proceeding"!==o.state)&&i({currentLocation:t,nextLocation:r,historyAction:n}))return s}function eK(e){let t=[];return ev.forEach((r,n)=>{(!e||e(n))&&(// Cancel the deferred - but do not remove from activeDeferreds here -
// we rely on the subscribers to do that so our tests can assert proper
// cleanup via _internalActiveDeferreds
r.cancel(),t.push(n),ev.delete(n))}),t}function eX(e,t){return N&&N(e,t.map(e=>k(e,_.loaderData)))||e.key}function eZ(e,t){if(S){let r=S[eX(e,t)];if("number"==typeof r)return r}return null}return s={get basename(){return g},get state(){return _},get routes(){return f},get window(){return l},initialize:// Initialize the router, all side effects should be kicked off from here.
// Implemented as a Fluent API for ease of:
//   let router = createRouter(init).initialize();
function(){if(// If history informs us of a POP navigation, start the navigation but do not update
// state.  We'll update our own state once the navigation completes
b=e.history.listen(t=>{let{action:r,location:n,delta:a}=t;// Ignore this event if it was just us resetting the URL from a
// blocked POP navigation
if(eI){eI=!1;return}h(0===eT.size||null!=a,"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");let s=eH({currentLocation:_.location,nextLocation:n,historyAction:r});if(s&&null!=a){// Restore the URL to match the current UI, but don't update router state
eI=!0,e.history.go(-1*a),// Put the blocker into a blocked state
eq(s,{state:"blocked",location:n,proceed(){eq(s,{state:"proceeding",proceed:void 0,reset:void 0,location:n}),// Re-do the same POP navigation we just blocked
e.history.go(a)},reset(){let e=new Map(_.blockers);e.set(s,W),eC({blockers:e})}});return}return eR(r,n)}),u){// FIXME: This feels gross.  How can we cleanup the lines between
// scrollRestoration/appliedTransitions persistance?
(function(e,t){try{let r=e.sessionStorage.getItem(K);if(r){let e=JSON.parse(r);for(let[r,n]of Object.entries(e||{}))n&&Array.isArray(n)&&t.set(r,new Set(n||[]))}}catch(e){// no-op, use default empty object
}})(l,D);let e=()=>(function(e,t){if(t.size>0){let r={};for(let[e,n]of t)r[e]=[...n];try{e.sessionStorage.setItem(K,JSON.stringify(r))}catch(e){h(!1,"Failed to save applied view transitions in sessionStorage ("+e+").")}}})(l,D);l.addEventListener("pagehide",e),M=()=>l.removeEventListener("pagehide",e)}return _.initialized||eR(r.Pop,_.location),s},subscribe:// Subscribe to state updates for the router
function(e){return v.add(e),()=>v.delete(e)},enableScrollRestoration:// Opt in to capturing and reporting scroll positions during navigations,
// used by the <ScrollRestoration> component
function(e,t,r){// Perform initial hydration scroll restoration, since we miss the boat on
// the initial updateState() because we've not yet rendered <ScrollRestoration/>
// and therefore have no savedScrollPositions available
if(S=e,T=t,N=r||null,!C&&_.navigation===G){C=!0;let e=eZ(_.location,_.matches);null!=e&&eC({restoreScrollPosition:e})}return()=>{S=null,T=null,N=null}},navigate:eA,fetch:// Trigger a fetcher load/submit for the given fetcher key
function(e,t,r,n){if(c)throw Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");z.has(e)&&ez(e);let s=a||f,i=Z(_.location,_.matches,g,y.v7_prependBasename,r,t,null==n?void 0:n.relative),o=w(s,i,g);if(!o){ej(e,t,ec(404,{pathname:i}));return}let{path:l,submission:u,error:d}=Q(y.v7_normalizeFormMethod,!0,i,n);if(d){ej(e,t,d);return}let p=ex(o,l);if(P=!0===(n&&n.preventScrollReset),u&&eg(u.formMethod)){e$(e,t,l,p,o,u);return}// Store off the match so we can call it's shouldRevalidate on subsequent
// revalidations
ea.set(e,{routeId:t,path:l}),eD(e,t,l,p,o,u)},revalidate:// Revalidate all current loaders.  If a navigation is in progress or if this
// is interrupted by a navigation, allow this to "succeed" by calling all
// loaders during the next loader round
function(){// If we're currently submitting an action, we don't need to start a new
// navigation, we'll just let the follow up loader execution call all loaders
if(eL(),eC({revalidation:"loading"}),"submitting"!==_.navigation.state){// If we're currently in an idle state, start a new navigation for the current
// action/location and mark it as uninterrupted, which will skip the history
// update in completeNavigation
if("idle"===_.navigation.state){eR(_.historyAction,_.location,{startUninterruptedRevalidation:!0});return}// Otherwise, if we're currently in a loading state, just start a new
// navigation to the navigation.location but do not trigger an uninterrupted
// revalidation so that history correctly updates once the navigation completes
eR(O||_.historyAction,_.navigation.location,{overrideNavigation:_.navigation})}},// Passthrough to history-aware createHref used by useHref so we get proper
// hash-aware URLs in DOM paths
createHref:t=>e.history.createHref(t),encodeLocation:t=>e.history.encodeLocation(t),getFetcher:eP,deleteFetcher:function(e){if(y.v7_fetcherPersist){let t=(es.get(e)||0)-1;t<=0?(es.delete(e),ep.add(e)):es.set(e,t)}else eB(e);eC({fetchers:new Map(_.fetchers)})},dispose:// Clean up a router and it's side effects
function(){b&&b(),M&&M(),v.clear(),o&&o.abort(),_.fetchers.forEach((e,t)=>eB(t)),_.blockers.forEach((e,t)=>eW(t))},getBlocker:function(e,t){let r=_.blockers.get(e)||W;return eT.get(e)!==t&&eT.set(e,t),r},deleteBlocker:eW,_internalFetchControllers:z,_internalActiveDeferreds:ev,_internalSetRoutes:function(e){a=x(e,t,void 0,d={})}}}function Z(e,t,r,n,a,s,i){let o,l;if(null!=s&&"path"!==i){for(let e of(// Grab matches up to the calling route so our route-relative logic is
// relative to the correct source route.  When using relative:path,
// fromRouteId is ignored since that is always relative to the current
// location path
o=[],t))if(o.push(e),e.route.id===s){l=e;break}}else o=t,l=t[t.length-1];// Resolve the relative path
let u=A(a||".",E(o).map(e=>e.pathnameBase),I(e.pathname,r)||e.pathname,"path"===i);return null==a&&(u.search=e.search,u.hash=e.hash),(null==a||""===a||"."===a)&&l&&l.route.index&&!ev(u.search)&&(u.search=u.search?u.search.replace(/^\?/,"?index&"):"?index"),n&&"/"!==r&&(u.pathname="/"===u.pathname?r:R([r,u.pathname])),g(u)}// Normalize navigation options by converting formMethod=GET formData objects to
// URLSearchParams so they behave identically to links with query params
function Q(e,t,r,n){var a;let s,i;// Return location verbatim on non-submission navigations
if(!n||!(null!=n&&("formData"in n&&null!=n.formData||"body"in n&&void 0!==n.body)))return{path:r};if(n.formMethod&&(a=n.formMethod,!B.has(a.toLowerCase())))return{path:r,error:ec(405,{method:n.formMethod})};let o=()=>({path:r,error:ec(400,{type:"invalid-body"})}),l=n.formMethod||"get",u=e?l.toUpperCase():l.toLowerCase(),c=ep(r);if(void 0!==n.body){if("text/plain"===n.formEncType){// text only support POST/PUT/PATCH/DELETE submissions
if(!eg(u))return o();let e="string"==typeof n.body?n.body:n.body instanceof FormData||n.body instanceof URLSearchParams?Array.from(n.body.entries()).reduce((e,t)=>{let[r,n]=t;return""+e+r+"="+n+"\n"},""):String(n.body);return{path:r,submission:{formMethod:u,formAction:c,formEncType:n.formEncType,formData:void 0,json:void 0,text:e}}}if("application/json"===n.formEncType){// json only supports POST/PUT/PATCH/DELETE submissions
if(!eg(u))return o();try{let e="string"==typeof n.body?JSON.parse(n.body):n.body;return{path:r,submission:{formMethod:u,formAction:c,formEncType:n.formEncType,formData:void 0,json:e,text:void 0}}}catch(e){return o()}}}if(p("function"==typeof FormData,"FormData is not available in this environment"),n.formData)s=ea(n.formData),i=n.formData;else if(n.body instanceof FormData)s=ea(n.body),i=n.body;else if(n.body instanceof URLSearchParams)i=es(s=n.body);else if(null==n.body)s=new URLSearchParams,i=new FormData;else try{s=new URLSearchParams(n.body),i=es(s)}catch(e){return o()}let d={formMethod:u,formAction:c,formEncType:n&&n.formEncType||"application/x-www-form-urlencoded",formData:i,json:void 0,text:void 0};if(eg(d.formMethod))return{path:r,submission:d};// Flatten submission onto URLSearchParams for GET submissions
let h=y(r);return t&&h.search&&ev(h.search)&&s.append("index",""),h.search="?"+s,{path:g(h),submission:d}}function Y(e,t,r,n,a,s,o,l,u,c,d,p,h,f){let m=f?Object.values(f)[0]:h?Object.values(h)[0]:void 0,g=e.createURL(t.location),y=e.createURL(a),b=// Filter out all routes below any caught error as they aren't going to
// render so we don't need to load them
(function(e,t){let r=e;if(t){let n=e.findIndex(e=>e.route.id===t);n>=0&&(r=e.slice(0,n))}return r})(r,f?Object.keys(f)[0]:void 0).filter((e,r)=>{var a,l;let u,c;if(e.route.lazy)return!0;if(null==e.route.loader)return!1;// Always call the loader on new route instances and pending defer cancellations
if(a=t.loaderData,u=!(l=t.matches[r])||// [a, b] -> [a, c]
e.route.id!==l.route.id,c=void 0===a[e.route.id],u||c||o.some(t=>t===e.route.id))return!0;// This is the default implementation for when we revalidate.  If the route
// provides it's own implementation, then we give them full control but
// provide this value so they can leverage it if needed after they check
// their own specific use cases
let d=t.matches[r];return ee(e,i({currentUrl:g,currentParams:d.params,nextUrl:y,nextParams:e.params},n,{actionResult:m,defaultShouldRevalidate:s||// Clicked the same link, resubmitted a GET form
g.pathname+g.search===y.pathname+y.search||// Search params affect all loaders
g.search!==y.search||J(d,e)}))}),v=[];return u.forEach((e,a)=>{// Don't revalidate if fetcher won't be present in the subsequent render
if(!r.some(t=>t.route.id===e.routeId))return;let o=w(d,e.path,p);// If the fetcher path no longer matches, push it in with null matches so
// we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is
// currently only a use-case for Remix HMR where the route tree can change
// at runtime and remove a route previously loaded via a fetcher
if(!o){v.push({key:a,routeId:e.routeId,path:e.path,matches:null,match:null,controller:null});return}// Revalidating fetchers are decoupled from the route matches since they
// load from a static href.  They revalidate based on explicit revalidation
// (submission, useRevalidator, or X-Remix-Revalidate)
let u=t.fetchers.get(a),h=ex(o,e.path);!c.has(a)&&(l.includes(a)||(u&&"idle"!==u.state&&void 0===u.data?s:ee(h,i({currentUrl:g,currentParams:t.matches[t.matches.length-1].params,nextUrl:y,nextParams:r[r.length-1].params},n,{actionResult:m,defaultShouldRevalidate:s}))))&&v.push({key:a,routeId:e.routeId,path:e.path,matches:o,match:h,controller:new AbortController})}),[b,v]}function J(e,t){let r=e.route.path;return e.pathname!==t.pathname||// splat param changed, which is not present in match.path
// e.g. /files/images/avatar.jpg -> files/finances.xls
null!=r&&r.endsWith("*")&&e.params["*"]!==t.params["*"]}function ee(e,t){if(e.route.shouldRevalidate){let r=e.route.shouldRevalidate(t);if("boolean"==typeof r)return r}return t.defaultShouldRevalidate}/**
 * Execute route.lazy() methods to lazily load route modules (loader, action,
 * shouldRevalidate) and update the routeManifest in place which shares objects
 * with dataRoutes so those get updated as well.
 */async function et(e,t,r){if(!e.lazy)return;let n=await e.lazy();// If the lazy route function was executed and removed by another parallel
// call then we can return - first lazy() to finish wins because the return
// value of lazy is expected to be static
if(!e.lazy)return;let a=r[e.id];p(a,"No route found in manifest");// Update the route in place.  This should be safe because there's no way
// we could yet be sitting on this route as we can't get there without
// resolving lazy() first.
//
// This is different than the HMR "update" use-case where we may actively be
// on the route being updated.  The main concern boils down to "does this
// mutation affect any ongoing navigations or any current state.matches
// values?".  If not, it should be safe to update in place.
let s={};for(let e in n){let t=void 0!==a[e]&&// This property isn't static since it should always be updated based
// on the route updates
"hasErrorBoundary"!==e;h(!t,'Route "'+a.id+'" has a static property "'+e+'" defined but its lazy function is also returning a value for this property. The lazy route property "'+e+'" will be ignored.'),t||v.has(e)||(s[e]=n[e])}// Mutate the route with the provided updates.  Do this first so we pass
// the updated version to mapRouteProperties
Object.assign(a,s),// Mutate the `hasErrorBoundary` property on the route based on the route
// updates and remove the `lazy` function so we don't resolve the lazy
// route again.
Object.assign(a,i({},t(a),{lazy:void 0}))}async function er(e,t,r,a,s,i,o,l){var u,c,d,h;let f,m,g;void 0===l&&(l={});let y=e=>{let n;let a=new Promise((e,t)=>n=t);return g=()=>n(),t.signal.addEventListener("abort",g),Promise.race([e({request:t,params:r.params,context:l.requestContext}),a])};try{let a=r.route[e];if(r.route.lazy){if(a){let e;let t=await Promise.all([// If the handler throws, don't let it immediately bubble out,
// since we need to let the lazy() execution finish so we know if this
// route has a boundary that can handle the error
y(a).catch(t=>{e=t}),et(r.route,i,s)]);if(e)throw e;m=t[0]}else if(// Load lazy route module, then run any returned handler
await et(r.route,i,s),a=r.route[e])// with un-abortable behavior of handler execution on non-lazy or
// previously-lazy-loaded routes
m=await y(a);else{if("action"!==e)// hit the invariant below that errors on returning undefined.
return{type:n.data,data:void 0};let a=new URL(t.url),s=a.pathname+a.search;throw ec(405,{method:t.method,pathname:s,routeId:r.route.id})}}else if(a)m=await y(a);else{let e=new URL(t.url),r=e.pathname+e.search;throw ec(404,{pathname:r})}p(void 0!==m,"You defined "+("action"===e?"an action":"a loader")+" for route "+('"'+r.route.id)+"\" but didn't return anything from your `"+e+"` function. Please return a value or `null`.")}catch(e){f=n.error,m=e}finally{g&&t.signal.removeEventListener("abort",g)}if(null!=(u=m)&&"number"==typeof u.status&&"string"==typeof u.statusText&&"object"==typeof u.headers&&void 0!==u.body){let e,s=m.status;// Process redirects
if(z.has(s)){let e=m.headers.get("Location");// Support relative routing in internal redirects
if(p(e,"Redirects returned/thrown from loaders/actions must have a Location header"),q.test(e)){if(!l.isStaticRequest){// Strip off the protocol+origin for same-origin + same-basename absolute
// redirects. If this is a static request, we can let it go back to the
// browser as-is
let r=new URL(t.url),n=new URL(e.startsWith("//")?r.protocol+e:e),a=null!=I(n.pathname,o);n.origin===r.origin&&a&&(e=n.pathname+n.search+n.hash)}}else e=Z(new URL(t.url),a.slice(0,a.indexOf(r)+1),o,!0,e);// Don't process redirects in the router during static requests requests.
// Instead, throw the Response and let the server handle it with an HTTP
// redirect.  We also update the Location header in place in this flow so
// basename and relative routing is taken into account
if(l.isStaticRequest)throw m.headers.set("Location",e),m;return{type:n.redirect,status:s,location:e,revalidate:null!==m.headers.get("X-Remix-Revalidate"),reloadDocument:null!==m.headers.get("X-Remix-Reload-Document")}}// For SSR single-route requests, we want to hand Responses back directly
// without unwrapping.  We do this with the QueryRouteResponse wrapper
// interface so we can know whether it was returned or thrown
if(l.isRouteRequest)throw{type:f===n.error?n.error:n.data,response:m};let i=m.headers.get("Content-Type");return(e=i&&/\bapplication\/json\b/.test(i)?await m.json():await m.text(),f===n.error)?{type:f,error:new D(s,m.statusText,e),headers:m.headers}:{type:n.data,data:e,statusCode:m.status,headers:m.headers}}return f===n.error?{type:f,error:m}:(c=m)&&"object"==typeof c&&"object"==typeof c.data&&"function"==typeof c.subscribe&&"function"==typeof c.cancel&&"function"==typeof c.resolveData?{type:n.deferred,deferredData:m,statusCode:null==(d=m.init)?void 0:d.status,headers:(null==(h=m.init)?void 0:h.headers)&&new Headers(m.init.headers)}:{type:n.data,data:m}}// Utility method for creating the Request instances for loaders/actions during
// client-side navigations and fetches.  During SSR we will always have a
// Request instance from the static handler (query/queryRoute)
function en(e,t,r,n){let a=e.createURL(ep(t)).toString(),s={signal:r};if(n&&eg(n.formMethod)){let{formMethod:e,formEncType:t}=n;// Didn't think we needed this but it turns out unlike other methods, patch
// won't be properly normalized to uppercase and results in a 405 error.
// See: https://fetch.spec.whatwg.org/#concept-method
s.method=e.toUpperCase(),"application/json"===t?(s.headers=new Headers({"Content-Type":t}),s.body=JSON.stringify(n.json)):"text/plain"===t?s.body=n.text:"application/x-www-form-urlencoded"===t&&n.formData?s.body=ea(n.formData):s.body=n.formData}return new Request(a,s)}function ea(e){let t=new URLSearchParams;for(let[r,n]of e.entries())t.append(r,"string"==typeof n?n:n.name);return t}function es(e){let t=new FormData;for(let[r,n]of e.entries())t.append(r,n);return t}function ei(e,t,r,n,a,s,o,l){var u;let c,d,h,f,m;let{loaderData:g,errors:y}=(u=a,d={},h=null,f=!1,m={},// Process loader results into state.loaderData/state.errors
n.forEach((e,n)=>{let a=r[n].route.id;if(p(!em(e),"Cannot handle redirect results in processLoaderData"),ef(e)){// Look upwards from the matched route for the closest ancestor
// error boundary, defaulting to the root match
let r=el(t,a),n=e.error;u&&(n=Object.values(u)[0],u=void 0),null==(h=h||{})[r.route.id]&&(h[r.route.id]=n),// Clear our any prior loaderData for the throwing route
d[a]=void 0,f||(f=!0,c=M(e.error)?e.error.status:500),e.headers&&(m[a]=e.headers)}else eh(e)?(l.set(a,e.deferredData),d[a]=e.deferredData.data):d[a]=e.data,null==e.statusCode||200===e.statusCode||f||(c=e.statusCode),e.headers&&(m[a]=e.headers)}),u&&(h=u,d[Object.keys(u)[0]]=void 0),{loaderData:d,errors:h,statusCode:c||200,loaderHeaders:m});// Process results from our revalidating fetchers
for(let t=0;t<s.length;t++){let{key:r,match:n,controller:a}=s[t];p(void 0!==o&&void 0!==o[t],"Did not find corresponding fetcher result");let l=o[t];// Process fetcher non-redirect errors
if(!a||!a.signal.aborted){if(ef(l)){let t=el(e.matches,null==n?void 0:n.route.id);y&&y[t.route.id]||(y=i({},y,{[t.route.id]:l.error})),e.fetchers.delete(r)}else if(em(l))// keep this to type narrow to a success result in the else
p(!1,"Unhandled fetcher revalidation redirect");else if(eh(l))// in resolveDeferredResults
p(!1,"Unhandled fetcher deferred data");else{let t=eN(l.data);e.fetchers.set(r,t)}}}return{loaderData:g,errors:y}}function eo(e,t,r,n){let a=i({},t);for(let s of r){let r=s.route.id;if(t.hasOwnProperty(r)?void 0!==t[r]&&(a[r]=t[r]):void 0!==e[r]&&s.route.loader&&// wasn't removed by HMR
(a[r]=e[r]),n&&n.hasOwnProperty(r))break}return a}// Find the nearest error boundary, looking upwards from the leaf route (or the
// route specified by routeId) for the closest ancestor error boundary,
// defaulting to the root match
function el(e,t){return(t?e.slice(0,e.findIndex(e=>e.route.id===t)+1):[...e]).reverse().find(e=>!0===e.route.hasErrorBoundary)||e[0]}function eu(e){// Prefer a root layout route if present, otherwise shim in a route object
let t=1===e.length?e[0]:e.find(e=>e.index||!e.path||"/"===e.path)||{id:"__shim-error-route__"};return{matches:[{params:{},pathname:"",pathnameBase:"",route:t}],route:t}}function ec(e,t){let{pathname:r,routeId:n,method:a,type:s}=void 0===t?{}:t,i="Unknown Server Error",o="Unknown @remix-run/router error";return 400===e?(i="Bad Request",a&&r&&n?o="You made a "+a+' request to "'+r+'" but did not provide a `loader` for route "'+n+'", so there is no way to handle the request.':"defer-action"===s?o="defer() is not supported in actions":"invalid-body"===s&&(o="Unable to encode submission body")):403===e?(i="Forbidden",o='Route "'+n+'" does not match URL "'+r+'"'):404===e?(i="Not Found",o='No route matches URL "'+r+'"'):405===e&&(i="Method Not Allowed",a&&r&&n?o="You made a "+a.toUpperCase()+' request to "'+r+'" but did not provide an `action` for route "'+n+'", so there is no way to handle the request.':a&&(o='Invalid request method "'+a.toUpperCase()+'"')),new D(e||500,i,Error(o),!0)}// Find any returned redirect errors, starting from the lowest match
function ed(e){for(let t=e.length-1;t>=0;t--){let r=e[t];if(em(r))return{result:r,idx:t}}}function ep(e){let t="string"==typeof e?y(e):e;return g(i({},t,{hash:""}))}function eh(e){return e.type===n.deferred}function ef(e){return e.type===n.error}function em(e){return(e&&e.type)===n.redirect}function eg(e){return L.has(e.toLowerCase())}async function ey(e,t,r,n,a,s){for(let i=0;i<r.length;i++){let o=r[i],l=t[i];// If we don't have a match, then we can have a deferred result to do
// anything with.  This is for revalidating fetchers where the route was
// removed during HMR
if(!l)continue;let u=e.find(e=>e.route.id===l.route.id),c=null!=u&&!J(u,l)&&(s&&s[l.route.id])!==void 0;if(eh(o)&&(a||c)){// Note: we do not have to touch activeDeferreds here since we race them
// against the signal in resolveDeferredData and they'll get aborted
// there if needed
let e=n[i];p(e,"Expected an AbortSignal for revalidating fetcher deferred result"),await eb(o,e,a).then(e=>{e&&(r[i]=e||r[i])})}}}async function eb(e,t,r){if(void 0===r&&(r=!1),!await e.deferredData.resolveData(t)){if(r)try{return{type:n.data,data:e.deferredData.unwrappedData}}catch(e){// Handle any TrackedPromise._error values encountered while unwrapping
return{type:n.error,error:e}}return{type:n.data,data:e.deferredData.data}}}function ev(e){return new URLSearchParams(e).getAll("index").some(e=>""===e)}function ex(e,t){let r="string"==typeof t?y(t).search:t.search;if(e[e.length-1].route.index&&ev(r||""))return e[e.length-1];// Otherwise grab the deepest "path contributing" match (ignoring index and
// pathless layout routes)
let n=E(e);return n[n.length-1]}function ew(e){let{formMethod:t,formAction:r,formEncType:n,text:a,formData:s,json:i}=e;if(t&&r&&n){if(null!=a)return{formMethod:t,formAction:r,formEncType:n,formData:void 0,json:void 0,text:a};if(null!=s)return{formMethod:t,formAction:r,formEncType:n,formData:s,json:void 0,text:void 0};if(void 0!==i)return{formMethod:t,formAction:r,formEncType:n,formData:void 0,json:i,text:void 0}}}function ek(e,t){return t?{state:"loading",location:e,formMethod:t.formMethod,formAction:t.formAction,formEncType:t.formEncType,formData:t.formData,json:t.json,text:t.text}:{state:"loading",location:e,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0}}function eS(e,t){return e?{state:"loading",formMethod:e.formMethod,formAction:e.formAction,formEncType:e.formEncType,formData:e.formData,json:e.json,text:e.text,data:t}:{state:"loading",formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0,data:t}}function eN(e){return{state:"idle",formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0,data:e}}Symbol("deferred")}),R("aphAM",function(e,t){c(e.exports,"UNSAFE_DataRouterContext",()=>l),c(e.exports,"UNSAFE_DataRouterStateContext",()=>u),c(e.exports,"UNSAFE_NavigationContext",()=>d),c(e.exports,"UNSAFE_RouteContext",()=>h),c(e.exports,"useHref",()=>m),c(e.exports,"useResolvedPath",()=>k),c(e.exports,"useLocation",()=>y),c(e.exports,"useNavigate",()=>v),c(e.exports,"useParams",()=>w),c(e.exports,"UNSAFE_useRoutesImpl",()=>S),c(e.exports,"UNSAFE_useRouteId",()=>P),c(e.exports,"useNavigation",()=>$),c(e.exports,"useMatches",()=>D),c(e.exports,"unstable_useBlocker",()=>F),c(e.exports,"Router",()=>j),c(e.exports,"Outlet",()=>L),c(e.exports,"UNSAFE_mapRouteProperties",()=>z);/**
 * React Router v6.18.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */var r,n,a,s=A("acw62"),i=A("2vsP7");function o(){return(o=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}// Create react-specific types from the agnostic types in @remix-run/router to
// export from react-router
let l=/*#__PURE__*/s.createContext(null),u=/*#__PURE__*/s.createContext(null),d=/*#__PURE__*/s.createContext(null),p=/*#__PURE__*/s.createContext(null),h=/*#__PURE__*/s.createContext({outlet:null,matches:[],isDataRoute:!1}),f=/*#__PURE__*/s.createContext(null);/**
 * Returns the full href for the given "to" value. This is useful for building
 * custom links that are also accessible and preserve right-click behavior.
 *
 * @see https://reactrouter.com/hooks/use-href
 */function m(e,t){let{relative:r}=void 0===t?{}:t;g()||(0,i.UNSAFE_invariant)(!1);let{basename:n,navigator:a}=s.useContext(d),{hash:o,pathname:l,search:u}=k(e,{relative:r}),c=l;return"/"!==n&&(c="/"===l?n:(0,i.joinPaths)([n,l])),a.createHref({pathname:c,search:u,hash:o})}/**
 * Returns true if this component is a descendant of a `<Router>`.
 *
 * @see https://reactrouter.com/hooks/use-in-router-context
 */function g(){return null!=s.useContext(p)}/**
 * Returns the current location object, which represents the current URL in web
 * browsers.
 *
 * Note: If you're using this it may mean you're doing some of your own
 * "routing" in your app, and we'd like to know what your use case is. We may
 * be able to provide something higher-level to better suit your needs.
 *
 * @see https://reactrouter.com/hooks/use-location
 */function y(){return g()||(0,i.UNSAFE_invariant)(!1),s.useContext(p).location}// Mute warnings for calls to useNavigate in SSR environments
function b(e){s.useContext(d).static||// See: https://github.com/facebook/react/pull/26395
// eslint-disable-next-line react-hooks/rules-of-hooks
s.useLayoutEffect(e)}/**
 * Returns an imperative method for changing the location. Used by `<Link>`s, but
 * may also be used by other elements to change the location.
 *
 * @see https://reactrouter.com/hooks/use-navigate
 */function v(){let{isDataRoute:e}=s.useContext(h);// Conditional usage is OK here because the usage of a data router is static
// eslint-disable-next-line react-hooks/rules-of-hooks
return e?/**
 * Stable version of useNavigate that is used when we are in the context of
 * a RouterProvider.
 */function(){let{router:e}=R(C.UseNavigateStable),t=O(E.UseNavigateStable),r=s.useRef(!1);return b(()=>{r.current=!0}),s.useCallback(function(n,a){void 0===a&&(a={}),r.current&&("number"==typeof n?e.navigate(n):e.navigate(n,o({fromRouteId:t},a)))},[e,t])}():function(){g()||(0,i.UNSAFE_invariant)(!1);let e=s.useContext(l),{basename:t,navigator:r}=s.useContext(d),{matches:n}=s.useContext(h),{pathname:a}=y(),o=JSON.stringify((0,i.UNSAFE_getPathContributingMatches)(n).map(e=>e.pathnameBase)),u=s.useRef(!1);return b(()=>{u.current=!0}),s.useCallback(function(n,s){// Short circuit here since if this happens on first render the navigate
// is useless because we haven't wired up our history listener yet
if(void 0===s&&(s={}),!u.current)return;if("number"==typeof n){r.go(n);return}let l=(0,i.resolveTo)(n,JSON.parse(o),a,"path"===s.relative);null==e&&"/"!==t&&(l.pathname="/"===l.pathname?t:(0,i.joinPaths)([t,l.pathname])),(s.replace?r.replace:r.push)(l,s.state,s)},[t,r,o,a,e])}()}let x=/*#__PURE__*/s.createContext(null);/**
 * Returns an object of key/value pairs of the dynamic params from the current
 * URL that were matched by the route path.
 *
 * @see https://reactrouter.com/hooks/use-params
 */function w(){let{matches:e}=s.useContext(h),t=e[e.length-1];return t?t.params:{}}/**
 * Resolves the pathname of the given `to` value against the current location.
 *
 * @see https://reactrouter.com/hooks/use-resolved-path
 */function k(e,t){let{relative:r}=void 0===t?{}:t,{matches:n}=s.useContext(h),{pathname:a}=y(),o=JSON.stringify((0,i.UNSAFE_getPathContributingMatches)(n).map(e=>e.pathnameBase));return s.useMemo(()=>(0,i.resolveTo)(e,JSON.parse(o),a,"path"===r),[e,o,a,r])}// Internal implementation with accept optional param for RouterProvider usage
function S(e,t,r){let n;g()||(0,i.UNSAFE_invariant)(!1);let{navigator:a}=s.useContext(d),{matches:l}=s.useContext(h),u=l[l.length-1],c=u?u.params:{};u&&u.pathname;let f=u?u.pathnameBase:"/";u&&u.route;let m=y();if(t){var b;let e="string"==typeof t?(0,i.parsePath)(t):t;"/"===f||(null==(b=e.pathname)?void 0:b.startsWith(f))||(0,i.UNSAFE_invariant)(!1),n=e}else n=m;let v=n.pathname||"/",x="/"===f?v:v.slice(f.length)||"/",w=(0,i.matchRoutes)(e,{pathname:x}),k=function(e,t,r){var n,a;if(void 0===t&&(t=[]),void 0===r&&(r=null),null==e){if(null==(a=r)||!a.errors)return null;// boundary.  Use the pre-matched (or shimmed) matches
e=r.matches}let o=e,l=null==(n=r)?void 0:n.errors;if(null!=l){let e=o.findIndex(e=>e.route.id&&(null==l?void 0:l[e.route.id]));e>=0||(0,i.UNSAFE_invariant)(!1),o=o.slice(0,Math.min(o.length,e+1))}return o.reduceRight((e,n,a)=>{let i=n.route.id?null==l?void 0:l[n.route.id]:null,u=null;r&&(u=n.route.errorElement||N);let c=t.concat(o.slice(0,a+1)),d=()=>{let t;return t=i?u:n.route.Component?/*#__PURE__*/s.createElement(n.route.Component,null):n.route.element?n.route.element:e,/*#__PURE__*/s.createElement(I,{match:n,routeContext:{outlet:e,matches:c,isDataRoute:null!=r},children:t})};// Only wrap in an error boundary within data router usages when we have an
// ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to
// an ancestor ErrorBoundary/errorElement
return r&&(n.route.ErrorBoundary||n.route.errorElement||0===a)?/*#__PURE__*/s.createElement(T,{location:r.location,revalidation:r.revalidation,component:u,error:i,children:d(),routeContext:{outlet:null,matches:c,isDataRoute:!0}}):d()},null)}(w&&w.map(e=>Object.assign({},e,{params:Object.assign({},c,e.params),pathname:(0,i.joinPaths)([f,// Re-encode pathnames that were decoded inside matchRoutes
    a.encodeLocation?a.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?f:(0,i.joinPaths)([f,// Re-encode pathnames that were decoded inside matchRoutes
    a.encodeLocation?a.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])})),l,r);return(// When a user passes in a `locationArg`, the associated routes need to
// be wrapped in a new `LocationContext.Provider` in order for `useLocation`
// to use the scoped location instead of the global location.
t&&k?/*#__PURE__*/s.createElement(p.Provider,{value:{location:o({pathname:"/",search:"",hash:"",state:null,key:"default"},n),navigationType:i.Action.Pop}},k):k)}let N=/*#__PURE__*/s.createElement(function(){var e;let t,r,n;let a=(t=s.useContext(f),r=_(E.UseRouteError),n=O(E.UseRouteError),// If this was a render error, we put it in a RouteError context inside
// of RenderErrorBoundary
t||(null==(e=r.errors)?void 0:e[n])),o=(0,i.isRouteErrorResponse)(a)?a.status+" "+a.statusText:a instanceof Error?a.message:JSON.stringify(a),l=a instanceof Error?a.stack:null;return /*#__PURE__*/s.createElement(s.Fragment,null,/*#__PURE__*/s.createElement("h2",null,"Unexpected Application Error!"),/*#__PURE__*/s.createElement("h3",{style:{fontStyle:"italic"}},o),l?/*#__PURE__*/s.createElement("pre",{style:{padding:"0.5rem",backgroundColor:"rgba(200,200,200, 0.5)"}},l):null,null)},null);class T extends s.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return(// When we get into an error state, the user will likely click "back" to the
// previous page that didn't have an error. Because this wraps the entire
// application, that will have no effect--the error page continues to display.
// This gives us a mechanism to recover from the error when the location changes.
//
// Whether we're in an error state or not, we update the location in state
// so that when we are in an error state, it gets reset when a new location
// comes in and the user recovers from the error.
t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:e.error||t.error,location:t.location,revalidation:e.revalidation||t.revalidation})}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return this.state.error?/*#__PURE__*/s.createElement(h.Provider,{value:this.props.routeContext},/*#__PURE__*/s.createElement(f.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function I(e){let{routeContext:t,match:r,children:n}=e,a=s.useContext(l);return a&&a.static&&a.staticContext&&(r.route.errorElement||r.route.ErrorBoundary)&&(a.staticContext._deepestRenderedBoundaryId=r.route.id),/*#__PURE__*/s.createElement(h.Provider,{value:t},n)}var C=((r=C||{}).UseBlocker="useBlocker",r.UseRevalidator="useRevalidator",r.UseNavigateStable="useNavigate",r),E=((n=E||{}).UseBlocker="useBlocker",n.UseLoaderData="useLoaderData",n.UseActionData="useActionData",n.UseRouteError="useRouteError",n.UseNavigation="useNavigation",n.UseRouteLoaderData="useRouteLoaderData",n.UseMatches="useMatches",n.UseRevalidator="useRevalidator",n.UseNavigateStable="useNavigate",n.UseRouteId="useRouteId",n);function R(e){let t=s.useContext(l);return t||(0,i.UNSAFE_invariant)(!1),t}function _(e){let t=s.useContext(u);return t||(0,i.UNSAFE_invariant)(!1),t}// Internal version with hookName-aware debugging
function O(e){let t;let r=((t=s.useContext(h))||(0,i.UNSAFE_invariant)(!1),t),n=r.matches[r.matches.length-1];return n.route.id||(0,i.UNSAFE_invariant)(!1),n.route.id}/**
 * Returns the ID for the nearest contextual route
 */function P(){return O(E.UseRouteId)}/**
 * Returns the current navigation, defaulting to an "idle" navigation when
 * no navigation is in progress
 */function $(){return _(E.UseNavigation).navigation}/**
 * Returns the active route matches, useful for accessing loaderData for
 * parent/child routes or the route "handle" property
 */function D(){let{matches:e,loaderData:t}=_(E.UseMatches);return s.useMemo(()=>e.map(e=>(0,i.UNSAFE_convertRouteMatchToUiMatch)(e,t)),[e,t])}let M=0;/**
 * Allow the application to block navigations within the SPA and present the
 * user a confirmation dialog to confirm the navigation.  Mostly used to avoid
 * using half-filled form data.  This does not handle hard-reloads or
 * cross-origin navigations.
 */function F(e){let{router:t,basename:r}=R(C.UseBlocker),n=_(E.UseBlocker),[a,l]=s.useState(""),u=s.useCallback(t=>{if("function"!=typeof e)return!!e;if("/"===r)return e(t);// If they provided us a function and we've got an active basename, strip
// it from the locations we expose to the user to match the behavior of
// useLocation
let{currentLocation:n,nextLocation:a,historyAction:s}=t;return e({currentLocation:o({},n,{pathname:(0,i.stripBasename)(n.pathname,r)||n.pathname}),nextLocation:o({},a,{pathname:(0,i.stripBasename)(a.pathname,r)||a.pathname}),historyAction:s})},[r,e]);// Prefer the blocker from `state` not `router.state` since DataRouterContext
// is memoized so this ensures we update on blocker state updates
return(// This effect is in charge of blocker key assignment and deletion (which is
// tightly coupled to the key)
s.useEffect(()=>{let e=String(++M);return l(e),()=>t.deleteBlocker(e)},[t]),// This effect handles assigning the blockerFunction.  This is to handle
// unstable blocker function identities, and happens only after the prior
// effect so we don't get an orphaned blockerFunction in the router with a
// key of "".  Until then we just have the IDLE_BLOCKER.
s.useEffect(()=>{""!==a&&t.getBlocker(a,u)},[t,a,u]),a&&n.blockers.has(a)?n.blockers.get(a):i.IDLE_BLOCKER)}/**
 * Renders the child route's element, if there is one.
 *
 * @see https://reactrouter.com/components/outlet
 */function L(e){var t;let r;return t=e.context,(r=s.useContext(h).outlet)?/*#__PURE__*/s.createElement(x.Provider,{value:t},r):r}/**
 * Provides location context for the rest of the app.
 *
 * Note: You usually won't render a `<Router>` directly. Instead, you'll render a
 * router that is more specific to your environment such as a `<BrowserRouter>`
 * in web browsers or a `<StaticRouter>` for server rendering.
 *
 * @see https://reactrouter.com/router-components/router
 */function j(e){let{basename:t="/",children:r=null,location:n,navigationType:a=i.Action.Pop,navigator:o,static:l=!1}=e;g()&&(0,i.UNSAFE_invariant)(!1);// Preserve trailing slashes on basename, so we can let the user control
// the enforcement of trailing slashes throughout the app
let u=t.replace(/^\/*/,"/"),c=s.useMemo(()=>({basename:u,navigator:o,static:l}),[u,o,l]);"string"==typeof n&&(n=(0,i.parsePath)(n));let{pathname:h="/",search:f="",hash:m="",state:y=null,key:b="default"}=n,v=s.useMemo(()=>{let e=(0,i.stripBasename)(h,u);return null==e?null:{location:{pathname:e,search:f,hash:m,state:y,key:b},navigationType:a}},[u,h,f,m,y,b,a]);return null==v?null:/*#__PURE__*/s.createElement(d.Provider,{value:c},/*#__PURE__*/s.createElement(p.Provider,{children:r,value:v}))}s.startTransition;var B=((a=B||{})[a.pending=0]="pending",a[a.success=1]="success",a[a.error=2]="error",a);function z(e){let t={// Note: this check also occurs in createRoutesFromChildren so update
// there if you change this -- please and thank you!
hasErrorBoundary:null!=e.ErrorBoundary||null!=e.errorElement};return e.Component&&Object.assign(t,{element:/*#__PURE__*/s.createElement(e.Component),Component:void 0}),e.ErrorBoundary&&Object.assign(t,{errorElement:/*#__PURE__*/s.createElement(e.ErrorBoundary),ErrorBoundary:void 0}),t}new Promise(()=>{})}),R("40l72",function(e,t){c(e.exports,"GraphModel",()=>A("bVQtG").GraphModel),c(e.exports,"loadGraphModel",()=>A("bVQtG").loadGraphModel),c(e.exports,"loadGraphModelSync",()=>A("bVQtG").loadGraphModelSync),c(e.exports,"deregisterOp",()=>A("dWfqP").deregisterOp),c(e.exports,"registerOp",()=>A("dWfqP").registerOp),c(e.exports,"version_converter",()=>A("1SddR").version),/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("1DtTd"),A("bVQtG"),A("dWfqP"),A("1SddR")}),R("1DtTd",function(e,t){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var r=A("ibsdL");let n=(0,r.env)();/** Whether to keep intermediate tensors. */n.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})}),R("i64bB",function(e,t){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// Required side effectful code.
A("99KqI");var r=A("5KHy0"),n=A("6th4t");(0,r.registerOptimizers)(),d(e.exports,n)}),R("99KqI",function(e,t){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// Required side effectful code for tfjs-core
// Set up Engine and ENV
var r=A("38WwN");A("dcHSK"),A("1MXhU"),A("lhiTQ");var n=A("iG87S"),a=A("inFmq"),s=A("5TuCW"),i=A("bSp5U"),o=A("9jCh7");(0,r.getOrMakeEngine)();let l={buffer:n.buffer,cast:a.cast,clone:s.clone,print:i.print};(0,o.setOpHandler)(l)}),R("38WwN",function(e,t){c(e.exports,"ENGINE",()=>v),c(e.exports,"getOrMakeEngine",()=>b);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("fJqML"),n=A("ibsdL"),a=A("grcJs"),s=A("hl418"),i=A("eky5o"),o=A("cgHNs"),l=A("8XpwP"),u=A("8zD9D"),d=A("9jCh7"),p=A("3w4Rg"),h=A("8cCb2"),f=A("jjNRA");function m(e){return null!=e.kernelName}class g{constructor(){// Public since optimizers will use it.
this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,// Number of nested tf.grad() statements when computing higher-order
// gradients. E.g. `1` for first-order gradients and `2` for second-order
// gradients. Used to track if the tape should be removed after a backprop.
this.gradientDepth=0,// Number of nested kernel calls. When kernel depth is greater than 1, we turn
// off the tape.
this.kernelDepth=0,this.scopeStack=[],/**
         * Keeps track of the number of data moves during a kernel execution. We
         * maintain a stack since kernels can call other kernels, recursively.
         */this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}}class y{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let r=e[t],n=await this.initializeBackend(r).success;if(n){await this.setBackend(r);return}}throw Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){// If the backend hasn't been initialized but we have a registry entry for
// it, initialize it and return it.
if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(o.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(null==this.registryFactory[e])throw Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:r}=this.initializeBackend(e),n=r?await t:t;if(!n)return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),// Reset the profiler.
this.profiler=new l.Profiler(this.backendInstance),!0}setupRegisteredKernels(){let e=(0,i.getKernelsForBackend)(this.backendName);e.forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){let t=(0,i.getKernelsForBackend)(e);t.forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}/**
     * Initializes a backend by looking up the backend name in the factory
     * registry and calling the factory method. Returns a boolean representing
     * whether the initialization of the backend suceeded. Throws an error if
     * there is no backend in the factory registry.
     */initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();/* Test if the factory returns a promise.
            Done in a more liberal way than
            previous 'Promise.resolve(backend)===backend'
            as we needed to account for custom Promise
            implementations (e.g. Angular) */if(!n||n instanceof r.KernelBackend||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,r=n.then(r=>// Outdated promise. Another backend was set in the meantime.
    !(t<this.pendingBackendInitId)&&(this.registry[e]=r,this.pendingBackendInit=null,!0)).catch(r=>// Outdated promise. Another backend was set in the meantime.
    !(t<this.pendingBackendInitId)&&(this.pendingBackendInit=null,o.warn(`Initialization of backend ${e} failed`),o.warn(r.stack||r.message),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return o.warn(`Initialization of backend ${e} failed`),o.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&// obsolete.
this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let r=e[t],{success:n,asyncInit:a}=this.initializeBackend(r);if(a||n)return{name:r,asyncInit:a}}throw Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let r=this.state.tensorInfo.get(t),n=r.backend,a=this.readSync(t),s=n.refCount(t);// Delete the tensor from the old backend and move it to the new
// backend.
n.disposeData(t,!0),r.backend=e,e.move(t,a,r.shape,r.dtype,s),this.shouldCheckForMemLeaks()&&// detect memory leaks.
this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r,n=null;if(null==t){// Called with only 1 argument.
if("function"!=typeof e)throw Error("Please provide a function to tidy()");t=e}else{// Called with 2 arguments.
if("string"!=typeof e&&!(e instanceof String))throw Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e;// TODO(nsthorat,smilkov): Do operation logging and performance
// profiling.
}return this.scopedRun(()=>this.startScope(n),()=>this.endScope(r),()=>((r=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,r){e();try{let e=r();return t(),e}catch(e){throw t(),e}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}/**
     * This method is called instead of the public-facing tensor.clone() when
     * saving a tensor for backwards pass. It makes sure to add the clone
     * operation to the tape regardless of being called inside a kernel
     * execution.
     */clone(e){let t=v.runKernel(s.Identity,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>v.runKernel(s.Cast,{x:e},{dtype:"float32"})}),[],{}),t}/**
     * Execute a kernel with the given name and return the output tensor.
     *
     * @param kernelName The name of the kernel to execute.
     * @param inputs A map of input names to tensors.
     * @param attrs A map of attribute names to their values. An attribute is a
     *     primitive (non-tensor) input to the kernel.
     * @param inputsToSave A list of tensors, inputs to save for the backprop
     *     computation.
     * @param outputsToSave A list of booleans, specifying which output to save
     *     for the backprop computation. These are booleans since the output
     * tensors are not visible to the user.
     */runKernel(e,t,r){null==this.backendName&&// can be deferred until an op/ kernel is run).
// The below getter has side effects that will try to initialize the
// backend and set properties like this.backendName
// tslint:disable-next-line: no-unused-expression
this.backend;let n=null!=(0,i.getKernel)(e,this.backendName);if(!n)throw Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){let n=this.backend.numDataIds(),a=0;r.forEach(e=>{// Complex numbers allocate 3 data ids, one for 'real', one for
// 'imaginary', and one for the container that holds the former two.
a+="complex64"===e.dtype?3:1});// Account for the number of moves during kernel execution. A "data move"
// can happen in the middle of a kernel execution, placing a new (key,value)
// pair in the data storage. Since data moves have net zero effect (we
// always remove the data from the old backend), we have to cancel them out
// when detecting memory leaks.
let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=n-t-a-s;if(i>0)throw Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}/**
     * Internal helper method to execute a kernel Func
     *
     * Use `runKernel` to execute kernels from outside of engine.
     */runKernelFunc(e){let t,r,n,a;let s=[],o=this.isTapeOn(),l=this.state.numBytes,u=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&// can be deferred until an op/ kernel is run).
// The below getter has side effects that will try to initialize the
// backend and set properties like this.backendName
// tslint:disable-next-line: no-unused-expression
this.backend;let c=m(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";// Create the kernelFunc from either a registered kernel OR passed in
// forward/backward functions (used by custom grad). In this context a
// kernelFunc wraps a kernel implementation with some bookkeeping.
if(m(e)){let{kernelName:t,inputs:a,attrs:l}=e;null==this.backendName&&// can be deferred until an op/ kernel is run).
// The below getter has side effects that will try to initialize the
// backend and set properties like this.backendName
// tslint:disable-next-line: no-unused-expression
this.backend;let u=(0,i.getKernel)(t,this.backendName);h.assert(null!=u,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),r=()=>{let e=this.backend.numDataIds();n=u.kernelFunc({inputs:a,attrs:l,backend:this.backend});let r=Array.isArray(n)?n:[n];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,r);let i=r.map(e=>// todo (yassogba) remove this option (Tensor) when node backend
    // methods have been modularized and they all return tensorInfo.
    // TensorInfos do not have a rank attribute.
    null!=e.rank?e:this.makeTensorFromTensorInfo(e));// Save any required inputs and outputs.
// Do not save unless we are recording to the tape. Otherwise it would
// cause a mem leak since there would be no backprop for these tensors
// (which would otherwise dispose them).
if(o){let e=this.getTensorsForGradient(t,a,i);s=this.saveTensorsForBackwardMode(e)}return i}}else{let{forwardFunc:t}=e,a=e=>{// Do not save unless we are recording to the tape. Otherwise it would
// cause a mem leak since we would never run backprop, which disposes
// the kept tensors.
o&&(s=e.map(e=>this.keep(this.clone(e))))};r=()=>{let e=this.backend.numDataIds();n=this.tidy(()=>t(this.backend,a));let r=Array.isArray(n)?n:[n];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,r),r}}//
// Run the kernelFunc. Optionally profiling it.
//
let{inputs:d,attrs:p}=e,f=m(e)?null:e.backwardsFunc;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(a=this.profiler.profileKernel(c,d,()=>r()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(a),t=a.outputs):t=r()}),o&&this.addTapeNode(c,d,t,f,s,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-l,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-u,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(e=>null!=d[e]?d[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:a.timeMs,extraInfo:a.extraInfo}),Array.isArray(n)?t:t[0]}/**
     * Saves tensors used in forward mode for use in backward mode.
     *
     * @param tensors the list of tensors to save.
     */saveTensorsForBackwardMode(e){let t=e.map(e=>this.keep(this.clone(e)));return t}/**
     * Returns a list of tensors to save for a given gradient calculation.
     *
     * @param kernelName name of kernel to look up gradient for.
     * @param inputs a map of input tensors.
     * @param outputs an array of output tensors from forward mode of kernel.
     */getTensorsForGradient(e,t,r){let n=(0,i.getGradient)(e);if(null!=n){let e;let a=n.inputsToSave||[],s=n.outputsToSave||[];n.saveAllInputs?(h.assert(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),e=Object.keys(t).map(e=>t[e])):e=a.map(e=>t[e]);let i=r.filter((e,t)=>s[t]);return e.concat(i)}// We return an empty list rather than throw an error because the kernel we
// are looking up may not actually be relevant to backproping through the
// overall function
//
// See 'does not error if irrelevant (pruned) ops are missing grads' test
// in gradients_test.ts for an example.
return[]}/**
     * Internal method used by public APIs for tensor creation. Makes a new
     * tensor with the provided shape, dtype and values. It always
     * creates a new data id and writes the values to the underlying backend.
     */makeTensor(e,t,r,n){if(null==e)throw Error("Values passed to engine.makeTensor() are null");r=r||"float32",n=n||this.backend;let a=e;"string"===r&&h.isString(e[0])&&(a=e.map(e=>f.encodeString(e)));let s=n.write(a,t,r),i=new d.Tensor(t,r,s,this.nextTensorId());// Count bytes for string tensors.
if(this.trackTensor(i,n),"string"===r){let e=this.state.tensorInfo.get(s),t=(0,h.bytesFromStringArray)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}/**
     * Internal method used by backends. Makes a new tensor
     * that is a wrapper around an existing data id. It doesn't create
     * a new data id, only increments the ref count used in memory tracking.
     * @deprecated
     */makeTensorFromDataId(e,t,r,n){r=r||"float32";let a={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(a,n)}/**
     * Internal method used by backends. Makes a new tensor that is a wrapper
     * around an existing data id in TensorInfo. It doesn't create a new data id,
     * only increments the ref count used in memory tracking.
     */makeTensorFromTensorInfo(e,t){let{dataId:r,shape:n,dtype:a}=e,s=new d.Tensor(n,a,r,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,r,n){r=r||this.nextVariableId().toString(),null!=n&&n!==e.dtype&&(e=e.cast(n));let a=new d.Variable(e,t,r,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;// Bytes for complex numbers are counted by their components. Bytes for
// string tensors are counted when writing values.
let r=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(r=e.size*h.bytesPerElement(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof d.Variable||this.track(e)}// Track the tensor by dataId and increase the refCount for the dataId in the
// backend.
// TODO(pyu10055): This is currently used by makeVariable method, to increase
// refCount on the backend for the dataId. It can potentially be replaced with
// Identity op indead of calling backend directly.
incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);// Don't count bytes for complex numbers as they are counted by their
// components.
if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*h.bytesPerElement(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend);// TODO(nsthorat): Construct an error and save the stack trace for
// debugging when in debug mode. Creating a stack trace is too expensive
// to do unconditionally.
}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,r=this.state.numTensors;for(let n of(this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r,this.state.activeProfile.kernels))n.kernelTimeMs=await n.kernelTimeMs,n.extraInfo=await n.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,r,n,a,s){let o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:a},l=(0,i.getGradient)(e);null!=l&&(n=l.gradFunc),null!=n&&(o.gradient=e=>(// TODO(smilkov): To optimize back-prop, pass dys that are not used in
    // the backprop graph to the user as null instead of zeros
    e=e.map((e,t)=>{if(null==e){let e=r[t],n=h.makeZerosTypedArray(e.size,e.dtype);return this.makeTensor(n,e.shape,e.dtype)}return e}),n(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}/**
     * Start a scope. Use this with endScope() to achieve the same functionality
     * as scope() without the need for a function closure.
     */startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}/**
     * End a scope. Use this with startScope() to achieve the same functionality
     * as scope() without the need for a function closure.
     */endScope(e){let t=(0,p.getTensorsInContainer)(e),r=new Set(t.map(e=>e.id));// Dispose the arrays tracked in this scope.
for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];t.kept||r.has(t.id)||t.dispose()}let n=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],// Track the current result in the parent scope.
t.forEach(e=>{// Only track the tensor if was allocated in the inner scope and is not
// globally kept.
e.kept||e.scopeId!==n.id||this.track(e)})}/**
     * Returns gradients of `f` with respect to each of the `xs`. The gradients
     * returned are of the same length as `xs`, but some might be null if `f`
     * was not a function of that `x`. It also takes optional dy to multiply the
     * gradient, which defaults to `1`.
     */gradients(e,t,r,n=!1){if(h.assert(t.length>0,()=>"gradients() received an empty list of xs."),null!=r&&"float32"!==r.dtype)throw Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);let a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));h.assert(a instanceof d.Tensor,()=>"The result y returned by f() must be a tensor.");// Filter out the nodes that don't connect x => y.
let s=(0,u.getFilteredNodesXToY)(this.state.activeTape,t,a);if(!n&&0===s.length&&t.length>0)throw Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let e={};e[a.id]=null==r?function(e){let t=(0,h.makeOnesTypedArray)((0,h.sizeFromShape)(e),"float32");return v.makeTensor(t,e,"float32")}(a.shape):r,// Backprop gradients through the filtered nodes.
(0,u.backpropagateGradients)(e,s,e=>this.tidy(e),x);let n=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(// This means that we are not computing higher-order gradients
// and can clean up the tape.
this.state.activeTape.forEach(e=>{for(let t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:n}})}customGrad(e){return h.assert(h.isFunction(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let r;h.assert(t.every(e=>e instanceof d.Tensor),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n={};return t.forEach((e,t)=>{n[t]=e}),this.runKernelFunc({forwardFunc:(n,a)=>(r=e(...[...t,a]),h.assert(r.value instanceof d.Tensor,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),h.assert(h.isFunction(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),backwardsFunc:(e,n)=>{let a=r.gradFunc(e,n),s=Array.isArray(a)?a:[a];h.assert(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),h.assert(s.every(e=>e instanceof d.Tensor),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let i={};return s.forEach((e,t)=>{i[t]=()=>e}),i},inputs:n})}}readSync(e){// Route the read to the correct backend.
let t=this.state.tensorInfo.get(e);return t.backend.readSync(e)}read(e){// Route the read to the correct backend.
let t=this.state.tensorInfo.get(e);return t.backend.read(e)}readToGPU(e,t){// Route the read to the correct backend.
let r=this.state.tensorInfo.get(e);return r.backend.readToGPU(e,t)}async time(e){let t=(0,f.now)(),r=await this.backend.time(e);return r.wallMs=(0,f.now)()-t,r}/**
     * Tracks a Tensor in the current scope to be automatically cleaned up
     * when the current scope ends, and returns the value.
     *
     * @param result The Tensor to track in the current scope.
     */track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}/**
     * Resets the engine state. Removes all backends but does not remove
     * registered backend factories.
     */reset(){for(let e in // Make any pending promise obsolete.
this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function b(){let e=(0,a.getGlobalNamespace)();if(null==e._tfengine){let t=new n.Environment(e);e._tfengine=new y(t)}return(0,n.setEnvironmentGlobal)(e._tfengine.ENV),// Tell the current tensor interface that the global engine is responsible
// for tracking.
(0,d.setTensorTracker)(()=>e._tfengine),e._tfengine}y.nextTensorId=0,y.nextVariableId=0;let v=b();function x(e,t){return v.runKernel(s.Add,{a:e,b:t})}}),R("fJqML",function(e,t){c(e.exports,"DataStorage",()=>r),c(e.exports,"KernelBackend",()=>n);class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class n{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}readToGPU(e,t){return a("readToGPU")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,r){return a("write")}move(e,t,r,n,s){return a("move")}createTensorFromGPUData(e,t,r){return a("createTensorFromGPUData")}memory(){return a("memory")}/** Returns the highest precision for floats in bits (e.g. 16 or 32) */floatPrecision(){return a("floatPrecision")}/** Returns the smallest representable number.  */epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}function a(e){throw Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}}),R("ibsdL",function(e,t){c(e.exports,"Environment",()=>a),c(e.exports,"env",()=>i),c(e.exports,"ENV",()=>o),c(e.exports,"setEnvironmentGlobal",()=>l);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2");// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.
let n="tfjsflags";class a{// tslint:disable-next-line: no-any
constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},// Jasmine spies on this in 'environment_test.ts'
this.getQueryParams=s,this.populateURLFlags()}setPlatform(e,t){null==this.platform||o.getBool("IS_TEST")||o.getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=e,this.platform=t}registerFlag(e,t,r){// Override the flag value from the URL. This has to happen here because
// the environment is initialized before flags get registered.
if(this.flagRegistry[e]={evaluationFn:t,setHook:r},null!=this.urlFlags[e]){let t=this.urlFlags[e];o.getBool("IS_TEST")||o.getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if((0,r.isPromise)(t))throw Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}// For backwards compatibility.
get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);if(n in e){let t=e[n].split(",");t.forEach(e=>{let[t,r]=e.split(":");this.urlFlags[t]=function(e,t){let r=t.toLowerCase();return"true"===r||"false"===r?"true"===r:`${+r}`===r?+r:t}(0,r)})}}}function s(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...r)=>{var n,a;return n=r[0],a=r[1],t[decodeURIComponent(n)]=decodeURIComponent(a||""),r.join("=")}),t}function i(){return o}let o=null;function l(e){o=e}}),R("8cCb2",function(e,t){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * Shuffles the array in-place using Fisher-Yates algorithm.
 *
 * ```js
 * const a = [1, 2, 3, 4, 5];
 * tf.util.shuffle(a);
 * console.log(a);
 * ```
 *
 * @param array The array to shuffle in-place.
 *
 * @doc {heading: 'Util', namespace: 'util'}
 */// tslint:disable-next-line:no-any
function r(e){let t=e.length,r=0;// While there are elements in the array
for(;t>0;)// Pick a random index
r=Math.random()*t|0,// And swap the last element with it
i(e,--t,r)}function n(e,t){if(e.length!==t.length)throw Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let r=e.length,n=0;// While there are elements in the array
for(;r>0;)// Pick a random index
n=Math.random()*r|0,// And swap the last element of each array with it
i(e,--r,n),i(t,r,n)}function a(e,t,r){return Math.max(e,Math.min(t,r))}function s(e){return e%2==0?e:e+1}function i(e,t,r){let n=e[t];e[t]=e[r],e[r]=n}function o(e){let t=0;for(let r=0;r<e.length;r++)t+=e[r];return t}function l(e,t){let r=Math.random();return t*r+(1-r)*e}function u(e,t){let r=0;for(let n=0;n<e.length;n++){let a=Number(e[n])-Number(t[n]);r+=a*a}return r}function d(e,t){if(!e)throw Error("string"==typeof t?t:t())}function p(e,t,r=""){d(y(e,t),()=>r+` Shapes ${e} and ${t} must match`)}function h(e){d(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function f(e){if(0===e.length)return 1;let t=e[0];for(let r=1;r<e.length;r++)t*=e[r];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(null!==e[r]&&null!==t[r]&&e[r]!==t[r])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}function b(e){return e%1==0}function v(e){// tslint:disable-next-line:no-any
if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;{if(e===-1/0)return -1;let t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){let t=new Uint32Array(e);for(let r=0;r<e;++r)t[r]=r;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e,t=e=>0,r,n){return new Promise((a,s)=>{let i=0,o=()=>{if(e()){a();return}i++;let l=t(i);if(null!=r&&i>=r){s();return}null!=n?n(o,l):// Don't refactor this so scheduleFn has a default value of setTimeout.
setTimeout(o,l)};o()})}function N(e,t){let r=1,n=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)r*=e[t];else if(-1===e[t]){if(-1!==n)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${t}`);n=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===n){if(t>0&&t!==r)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===r)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%r!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${r}`);let a=e.slice();return a[n]=t/r,a}function T(e,t){let r=t.length;// Handle negative axis.
return(// Check for valid range
d(// Normalize input
(e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-r&&e<r),()=>`All values in axis param must be in range [-${r}, ${r}) but got axis ${e}`),// Check for only integers
d(e.every(e=>b(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?r+e:e))}function I(e,t){let r=[],n=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:T(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(r.push(e[t]),n.push(t)),s[i]<=t&&i++}1!==e[t]&&(r.push(e[t]),n.push(t))}return{newShape:r,keptDims:n}}function C(e,t){return E(e,t)}function E(e,t){let r=null;if(null==e||"float32"===e)r=new Float32Array(t);else if("int32"===e)r=new Int32Array(t);else if("bool"===e)r=new Uint8Array(t);else if("string"===e)r=Array(t);else throw Error(`Unknown data type ${e}`);return r}function A(e,t){for(let r=0;r<e.length;r++){let n=e[r];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function R(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function _(e,t){return"complex64"!==t&&("float32"!==t||"complex64"===e)&&("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)}function O(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw Error(`Unknown dtype ${e}`)}function P(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function $(e){return"string"==typeof e||e instanceof String}function D(e){return"boolean"==typeof e}function M(e){return"number"==typeof e}function F(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let r=t;r<e;++r)if(e%r==0)return r;return e}function j(e){let t=e.length;if(t<2)return[];// Last dimension has implicit stride of 1, thus having D-1 (instead of D)
// strides.
let r=Array(t-1);r[t-2]=e[t-1];for(let n=t-3;n>=0;--n)r[n]=r[n+1]*e[n+1];return r}function B(e,t,r=!1){if(0===e.length)return t[0];let n=e.reduce((e,t)=>e*t)*(r?2:1);if(0===n)return[];if(n!==t.length)throw Error(`[${e}] does not match the input size ${t.length}${r?" for a complex tensor":""}.`);return function e(t,r,n,a=!1){let s=[];if(1===r.length){let e=r[0]*(a?2:1);for(let r=0;r<e;r++)s[r]=n[t+r]}else{let i=r[0],o=r.slice(1),l=o.reduce((e,t)=>e*t)*(a?2:1);for(let r=0;r<i;r++)s[r]=e(t+r*l,o,n,a)}return s}(0,e,t,r)}function z(e,t){// If is type Uint8Array[], return it directly.
if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw Error(`Unknown dtype ${t}`)}function V(e,t){let r=G(e,t);for(let e=0;e<r.length;e++)r[e]=1;return r}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw Error(`Unknown data type ${t}`)}function U(e,t){let r=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return B(e,new Float32Array(r));if("int32"===t)return B(e,new Int32Array(r));if("bool"===t)return B(e,new Uint8Array(r));throw Error(`Unknown data type ${t}`)}function W(e){e.forEach(t=>{d(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function q(e,t,r){if(0===t)return 0;if(1===t)return e[0];let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=r[t]*e[t];return n}function H(e,t,r){if(0===t)return[];if(1===t)return[e];let n=Array(t);for(let t=0;t<n.length-1;++t)n[t]=Math.floor(e/r[t]),e-=n[t]*r[t];return n[n.length-1]=e,n}function K(e){//  We chose to not use 'obj instanceOf Promise' for two reasons:
//  1. It only reliably works for es6 Promise, not other Promise
//  implementations.
//  2. It doesn't work with framework that uses zone.js. zone.js monkey
//  patch the async calls, so it is possible the obj (patched) is
//  comparing to a pre-patched Promise.
return e&&e.then&&"function"==typeof e.then}c(e.exports,"shuffle",()=>r),c(e.exports,"swap",()=>i),c(e.exports,"shuffleCombo",()=>n),c(e.exports,"clamp",()=>a),c(e.exports,"nearestLargerEven",()=>s),c(e.exports,"sum",()=>o),c(e.exports,"randUniform",()=>l),c(e.exports,"distSquared",()=>u),c(e.exports,"assert",()=>d),c(e.exports,"assertShapesMatch",()=>p),c(e.exports,"arraysEqual",()=>y),c(e.exports,"assertNonNull",()=>h),c(e.exports,"sizeFromShape",()=>f),c(e.exports,"isScalarShape",()=>m),c(e.exports,"arraysEqualWithNull",()=>g),c(e.exports,"isInt",()=>b),c(e.exports,"tanh",()=>v),c(e.exports,"sizeToSquarishShape",()=>x),c(e.exports,"createShuffledIndices",()=>w),c(e.exports,"rightPad",()=>k),c(e.exports,"repeatedTry",()=>S),c(e.exports,"inferFromImplicitShape",()=>N),c(e.exports,"parseAxisParam",()=>T),c(e.exports,"squeezeShape",()=>I),c(e.exports,"getTypedArrayFromDType",()=>C),c(e.exports,"getArrayFromDType",()=>E),c(e.exports,"checkConversionForErrors",()=>A),c(e.exports,"isValidDtype",()=>R),c(e.exports,"hasEncodingLoss",()=>_),c(e.exports,"bytesPerElement",()=>O),c(e.exports,"bytesFromStringArray",()=>P),c(e.exports,"isString",()=>$),c(e.exports,"isBoolean",()=>D),c(e.exports,"isNumber",()=>M),c(e.exports,"inferDtype",()=>function e(t){if(Array.isArray(t))return e(t[0]);if(t instanceof Float32Array);else if(t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray)return"int32";else if(M(t));else if($(t))return"string";else if(D(t))return"bool";return"float32"}),c(e.exports,"isFunction",()=>F),c(e.exports,"nearestDivisor",()=>L),c(e.exports,"computeStrides",()=>j),c(e.exports,"toNestedArray",()=>B),c(e.exports,"convertBackendValuesAndArrayBuffer",()=>z),c(e.exports,"makeOnesTypedArray",()=>V),c(e.exports,"makeZerosTypedArray",()=>G),c(e.exports,"makeZerosNestedTypedArray",()=>U),c(e.exports,"assertNonNegativeIntegerDimensions",()=>W),c(e.exports,"locToIndex",()=>q),c(e.exports,"indexToLoc",()=>H),c(e.exports,"isPromise",()=>K)}),R("grcJs",function(e,t){let r;c(e.exports,"getGlobalNamespace",()=>a),c(e.exports,"getGlobal",()=>s);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// Note that the identifier globalNameSpace is scoped to this module, but will
// always resolve to the same global object regardless of how the module is
// resolved.
// tslint:disable-next-line:no-any
var n=A("hPtJY");function a(){if(null==r){// tslint:disable-next-line:no-any
let e;if("undefined"!=typeof window)e=window;else if(void 0!==T)e=T;else if(void 0!==n)e=n;else if("undefined"!=typeof self)e=self;else throw Error("Could not find a global object");r=e}return r}function s(e,t){let r=// tslint:disable-next-line:no-any
function(){let e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(r.has(e))return r.get(e);{let n=t();return r.set(e,n),r.get(e)}}}),R("hPtJY",function(e,t){// shim for using process in browser
var r,n,a,s=e.exports={};function i(){throw Error("setTimeout has not been defined")}function o(){throw Error("clearTimeout has not been defined")}function l(e){if(r===setTimeout)return setTimeout(e,0);// if setTimeout wasn't available but was latter defined
if((r===i||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{// when when somebody has screwed with setTimeout but no I.E. maddness
return r(e,0)}catch(t){try{// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
return r.call(null,e,0)}catch(t){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
return r.call(this,e,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:i}catch(e){r=i}try{n="function"==typeof clearTimeout?clearTimeout:o}catch(e){n=o}}();var u=[],c=!1,d=-1;function p(){c&&a&&(c=!1,a.length?u=a.concat(u):d=-1,u.length&&h())}function h(){if(!c){var e=l(p);c=!0;for(var t=u.length;t;){for(a=u,u=[];++d<t;)a&&a[d].run();d=-1,t=u.length}a=null,c=!1,function(e){if(n===clearTimeout)return clearTimeout(e);// if clearTimeout wasn't available but was latter defined
if((n===o||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{// when when somebody has screwed with setTimeout but no I.E. maddness
n(e)}catch(t){try{// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
return n.call(null,e)}catch(t){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
// Some versions of I.E. have different rules for clearTimeout vs setTimeout
return n.call(this,e)}}}(e)}}// v8 likes predictible objects
function f(e,t){this.fun=e,this.array=t}function m(){}s.nextTick=function(e){var t=Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];u.push(new f(e,t)),1!==u.length||c||l(h)},f.prototype.run=function(){this.fun.apply(null,this.array)},s.title="browser",s.browser=!0,s.env={},s.argv=[],s.version="",s.versions={},s.on=m,s.addListener=m,s.once=m,s.off=m,s.removeListener=m,s.removeAllListeners=m,s.emit=m,s.prependListener=m,s.prependOnceListener=m,s.listeners=function(e){return[]},s.binding=function(e){throw Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(e){throw Error("process.chdir is not supported")},s.umask=function(){return 0}}),R("hl418",function(e,t){c(e.exports,"Abs",()=>r),c(e.exports,"Acos",()=>n),c(e.exports,"Acosh",()=>a),c(e.exports,"Add",()=>s),c(e.exports,"AddN",()=>i),c(e.exports,"All",()=>o),c(e.exports,"Any",()=>l),c(e.exports,"ArgMax",()=>u),c(e.exports,"ArgMin",()=>d),c(e.exports,"Asin",()=>p),c(e.exports,"Asinh",()=>h),c(e.exports,"Atan",()=>f),c(e.exports,"Atanh",()=>m),c(e.exports,"Atan2",()=>g),c(e.exports,"AvgPool",()=>y),c(e.exports,"AvgPoolGrad",()=>b),c(e.exports,"AvgPool3D",()=>v),c(e.exports,"AvgPool3DGrad",()=>x),c(e.exports,"BatchMatMul",()=>w),c(e.exports,"BatchToSpaceND",()=>k),c(e.exports,"Bincount",()=>S),c(e.exports,"BitwiseAnd",()=>N),c(e.exports,"BroadcastTo",()=>T),c(e.exports,"BroadcastArgs",()=>I),c(e.exports,"Cast",()=>C),c(e.exports,"Ceil",()=>E),c(e.exports,"ClipByValue",()=>A),c(e.exports,"Complex",()=>R),c(e.exports,"ComplexAbs",()=>_),c(e.exports,"Concat",()=>O),c(e.exports,"Conv2D",()=>P),c(e.exports,"Conv2DBackpropFilter",()=>$),c(e.exports,"Conv2DBackpropInput",()=>D),c(e.exports,"Conv3D",()=>M),c(e.exports,"Conv3DBackpropFilterV2",()=>F),c(e.exports,"Conv3DBackpropInputV2",()=>L),c(e.exports,"Cos",()=>j),c(e.exports,"Cosh",()=>B),c(e.exports,"Cumprod",()=>z),c(e.exports,"Cumsum",()=>V),c(e.exports,"CropAndResize",()=>G),c(e.exports,"DenseBincount",()=>U),c(e.exports,"DepthToSpace",()=>W),c(e.exports,"DepthwiseConv2dNative",()=>q),c(e.exports,"DepthwiseConv2dNativeBackpropFilter",()=>H),c(e.exports,"DepthwiseConv2dNativeBackpropInput",()=>K),c(e.exports,"Diag",()=>X),c(e.exports,"Dilation2D",()=>Z),c(e.exports,"Dilation2DBackpropInput",()=>Q),c(e.exports,"Dilation2DBackpropFilter",()=>Y),c(e.exports,"Draw",()=>J),c(e.exports,"RealDiv",()=>ee),c(e.exports,"Einsum",()=>et),c(e.exports,"Elu",()=>er),c(e.exports,"EluGrad",()=>en),c(e.exports,"Erf",()=>ea),c(e.exports,"Equal",()=>es),c(e.exports,"Exp",()=>ei),c(e.exports,"ExpandDims",()=>eo),c(e.exports,"Expm1",()=>el),c(e.exports,"FFT",()=>eu),c(e.exports,"Fill",()=>ec),c(e.exports,"FlipLeftRight",()=>ed),c(e.exports,"Floor",()=>ep),c(e.exports,"FloorDiv",()=>eh),c(e.exports,"FusedBatchNorm",()=>ef),c(e.exports,"GatherV2",()=>em),c(e.exports,"GatherNd",()=>eg),c(e.exports,"Greater",()=>ey),c(e.exports,"GreaterEqual",()=>eb),c(e.exports,"Identity",()=>ev),c(e.exports,"IFFT",()=>ex),c(e.exports,"Imag",()=>ew),c(e.exports,"IsFinite",()=>ek),c(e.exports,"IsInf",()=>eS),c(e.exports,"IsNan",()=>eN),c(e.exports,"LeakyRelu",()=>eT),c(e.exports,"Less",()=>eI),c(e.exports,"LessEqual",()=>eC),c(e.exports,"LinSpace",()=>eE),c(e.exports,"Log",()=>eA),c(e.exports,"Log1p",()=>eR),c(e.exports,"LogicalAnd",()=>e_),c(e.exports,"LogicalNot",()=>eO),c(e.exports,"LogicalOr",()=>eP),c(e.exports,"LogicalXor",()=>e$),c(e.exports,"LogSoftmax",()=>eD),c(e.exports,"LowerBound",()=>eM),c(e.exports,"LRN",()=>eF),c(e.exports,"LRNGrad",()=>eL),c(e.exports,"MatrixBandPart",()=>ej),c(e.exports,"Max",()=>eB),c(e.exports,"Maximum",()=>ez),c(e.exports,"MaxPool",()=>eV),c(e.exports,"MaxPoolGrad",()=>eG),c(e.exports,"MaxPool3D",()=>eU),c(e.exports,"MaxPool3DGrad",()=>eW),c(e.exports,"MaxPoolWithArgmax",()=>eq),c(e.exports,"Mean",()=>eH),c(e.exports,"Min",()=>eK),c(e.exports,"Minimum",()=>eX),c(e.exports,"MirrorPad",()=>eZ),c(e.exports,"Mod",()=>eQ),c(e.exports,"Multinomial",()=>eY),c(e.exports,"Multiply",()=>eJ),c(e.exports,"Neg",()=>e0),c(e.exports,"NotEqual",()=>e1),c(e.exports,"NonMaxSuppressionV3",()=>e2),c(e.exports,"NonMaxSuppressionV4",()=>e4),c(e.exports,"NonMaxSuppressionV5",()=>e3),c(e.exports,"OnesLike",()=>e8),c(e.exports,"OneHot",()=>e6),c(e.exports,"Pack",()=>e5),c(e.exports,"PadV2",()=>e7),c(e.exports,"Pool",()=>e9),c(e.exports,"Pow",()=>te),c(e.exports,"Prelu",()=>tt),c(e.exports,"Prod",()=>tr),c(e.exports,"RaggedGather",()=>tn),c(e.exports,"RaggedRange",()=>ta),c(e.exports,"RaggedTensorToTensor",()=>ts),c(e.exports,"Range",()=>ti),c(e.exports,"Real",()=>to),c(e.exports,"Reciprocal",()=>tl),c(e.exports,"Relu",()=>tu),c(e.exports,"Reshape",()=>tc),c(e.exports,"ResizeNearestNeighbor",()=>td),c(e.exports,"ResizeNearestNeighborGrad",()=>tp),c(e.exports,"ResizeBilinear",()=>th),c(e.exports,"ResizeBilinearGrad",()=>tf),c(e.exports,"Relu6",()=>tm),c(e.exports,"Reverse",()=>tg),c(e.exports,"Round",()=>ty),c(e.exports,"Rsqrt",()=>tb),c(e.exports,"ScatterNd",()=>tv),c(e.exports,"TensorScatterUpdate",()=>tx),c(e.exports,"SearchSorted",()=>tw),c(e.exports,"Select",()=>tk),c(e.exports,"Selu",()=>tS),c(e.exports,"Slice",()=>tN),c(e.exports,"Sin",()=>tT),c(e.exports,"Sinh",()=>tI),c(e.exports,"Sign",()=>tC),c(e.exports,"Sigmoid",()=>tE),c(e.exports,"Softplus",()=>tA),c(e.exports,"Sqrt",()=>tR),c(e.exports,"Sum",()=>t_),c(e.exports,"SpaceToBatchND",()=>tO),c(e.exports,"SplitV",()=>tP),c(e.exports,"Softmax",()=>t$),c(e.exports,"SparseFillEmptyRows",()=>tD),c(e.exports,"SparseReshape",()=>tM),c(e.exports,"SparseSegmentMean",()=>tF),c(e.exports,"SparseSegmentSum",()=>tL),c(e.exports,"SparseToDense",()=>tj),c(e.exports,"SquaredDifference",()=>tB),c(e.exports,"Square",()=>tz),c(e.exports,"StaticRegexReplace",()=>tV),c(e.exports,"StridedSlice",()=>tG),c(e.exports,"StringNGrams",()=>tU),c(e.exports,"StringSplit",()=>tW),c(e.exports,"StringToHashBucketFast",()=>tq),c(e.exports,"Sub",()=>tH),c(e.exports,"Tan",()=>tK),c(e.exports,"Tanh",()=>tX),c(e.exports,"Tile",()=>tZ),c(e.exports,"TopK",()=>tQ),c(e.exports,"Transform",()=>tY),c(e.exports,"Transpose",()=>tJ),c(e.exports,"Unique",()=>t0),c(e.exports,"Unpack",()=>t1),c(e.exports,"UnsortedSegmentSum",()=>t2),c(e.exports,"UpperBound",()=>t4),c(e.exports,"ZerosLike",()=>t3),c(e.exports,"Step",()=>t8),c(e.exports,"FromPixels",()=>t6),c(e.exports,"RotateWithOffset",()=>t5),c(e.exports,"_FusedMatMul",()=>t7),c(e.exports,"FusedConv2D",()=>t9),c(e.exports,"FusedDepthwiseConv2D",()=>re);let r="Abs",n="Acos",a="Acosh",s="Add",i="AddN",o="All",l="Any",u="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",v="AvgPool3D",x="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",S="Bincount",N="BitwiseAnd",T="BroadcastTo",I="BroadcastArgs",C="Cast",E="Ceil",A="ClipByValue",R="Complex",_="ComplexAbs",O="Concat",P="Conv2D",$="Conv2DBackpropFilter",D="Conv2DBackpropInput",M="Conv3D",F="Conv3DBackpropFilterV2",L="Conv3DBackpropInputV2",j="Cos",B="Cosh",z="Cumprod",V="Cumsum",G="CropAndResize",U="DenseBincount",W="DepthToSpace",q="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",K="DepthwiseConv2dNativeBackpropInput",X="Diag",Z="Dilation2D",Q="Dilation2DBackpropInput",Y="Dilation2DBackpropFilter",J="Draw",ee="RealDiv",et="Einsum",er="Elu",en="EluGrad",ea="Erf",es="Equal",ei="Exp",eo="ExpandDims",el="Expm1",eu="FFT",ec="Fill",ed="FlipLeftRight",ep="Floor",eh="FloorDiv",ef="FusedBatchNorm",em="GatherV2",eg="GatherNd",ey="Greater",eb="GreaterEqual",ev="Identity",ex="IFFT",ew="Imag",ek="IsFinite",eS="IsInf",eN="IsNan",eT="LeakyRelu",eI="Less",eC="LessEqual",eE="LinSpace",eA="Log",eR="Log1p",e_="LogicalAnd",eO="LogicalNot",eP="LogicalOr",e$="LogicalXor",eD="LogSoftmax",eM="LowerBound",eF="LRN",eL="LRNGrad",ej="MatrixBandPart",eB="Max",ez="Maximum",eV="MaxPool",eG="MaxPoolGrad",eU="MaxPool3D",eW="MaxPool3DGrad",eq="MaxPoolWithArgmax",eH="Mean",eK="Min",eX="Minimum",eZ="MirrorPad",eQ="Mod",eY="Multinomial",eJ="Multiply",e0="Neg",e1="NotEqual",e2="NonMaxSuppressionV3",e4="NonMaxSuppressionV4",e3="NonMaxSuppressionV5",e8="OnesLike",e6="OneHot",e5="Pack",e7="PadV2",e9="Pool",te="Pow",tt="Prelu",tr="Prod",tn="RaggedGather",ta="RaggedRange",ts="RaggedTensorToTensor",ti="Range",to="Real",tl="Reciprocal",tu="Relu",tc="Reshape",td="ResizeNearestNeighbor",tp="ResizeNearestNeighborGrad",th="ResizeBilinear",tf="ResizeBilinearGrad",tm="Relu6",tg="Reverse",ty="Round",tb="Rsqrt",tv="ScatterNd",tx="TensorScatterUpdate",tw="SearchSorted",tk="Select",tS="Selu",tN="Slice",tT="Sin",tI="Sinh",tC="Sign",tE="Sigmoid",tA="Softplus",tR="Sqrt",t_="Sum",tO="SpaceToBatchND",tP="SplitV",t$="Softmax",tD="SparseFillEmptyRows",tM="SparseReshape",tF="SparseSegmentMean",tL="SparseSegmentSum",tj="SparseToDense",tB="SquaredDifference",tz="Square",tV="StaticRegexReplace",tG="StridedSlice",tU="StringNGrams",tW="StringSplit",tq="StringToHashBucketFast",tH="Sub",tK="Tan",tX="Tanh",tZ="Tile",tQ="TopK",tY="Transform",tJ="Transpose",t0="Unique",t1="Unpack",t2="UnsortedSegmentSum",t4="UpperBound",t3="ZerosLike",t8="Step",t6="FromPixels",t5="RotateWithOffset",t7="_FusedMatMul",t9="FusedConv2D",re="FusedDepthwiseConv2D"}),R("eky5o",function(e,t){c(e.exports,"getKernel",()=>o),c(e.exports,"getGradient",()=>l),c(e.exports,"getKernelsForBackend",()=>u),c(e.exports,"registerKernel",()=>d),c(e.exports,"registerGradient",()=>p),c(e.exports,"unregisterKernel",()=>h),c(e.exports,"unregisterGradient",()=>f),c(e.exports,"copyRegisteredKernels",()=>m);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("ibsdL"),n=A("grcJs"),a=A("cgHNs");let s=(0,n.getGlobal)("kernelRegistry",()=>new Map),i=(0,n.getGlobal)("gradRegistry",()=>new Map);function o(e,t){let r=g(e,t);return s.get(r)}function l(e){return i.get(e)}function u(e){let t=s.entries(),r=[];for(;;){let{done:n,value:a}=t.next();if(n)break;let[s,i]=a,[o]=s.split("_");o===e&&r.push(i)}return r}function d(e){let{kernelName:t,backendName:r}=e,n=g(t,r);s.has(n)&&a.warn(`The kernel '${t}' for backend '${r}' is already registered`),s.set(n,e)}function p(e){let{kernelName:t}=e;i.has(t)&&(0,r.env)().getBool("DEBUG")&&a.warn(`Overriding the gradient for '${t}'`),i.set(t,e)}function h(e,t){let r=g(e,t);if(!s.has(r))throw Error(`The kernel '${e}' for backend '${t}' is not registered`);s.delete(r)}function f(e){if(!i.has(e))throw Error(`The gradient '${e}' for backend is not registered`);i.delete(e)}function m(e,t){let r=u(e);r.forEach(e=>{let r=Object.assign({},e,{backendName:t});d(r)})}function g(e,t){return`${t}_${e}`}}),R("cgHNs",function(e,t){c(e.exports,"warn",()=>n),c(e.exports,"log",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("ibsdL");function n(...e){(0,r.env)().getBool("IS_TEST")||(0,r.env)().getBool("PROD")||console.warn(...e)}function a(...e){(0,r.env)().getBool("IS_TEST")||(0,r.env)().getBool("PROD")||console.log(...e)}}),R("8XpwP",function(e,t){c(e.exports,"Profiler",()=>s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("ibsdL"),n=A("jjNRA"),a=A("8cCb2");class s{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new i)}profileKernel(e,t,a){let s,i;let o=()=>{s=a()},l=n.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(o);else{for(let e of(o(),s))e.dataSync();i=Promise.resolve({kernelMs:n.now()-l})}if((0,r.env)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){let r=s[t];// Dangling promise here because we don't want to propagate up
// asynchronicity.
r.data().then(t=>{(function(e,t,r){if("float32"===t)for(let t=0;t<e.length;t++){let n=e[t];if(isNaN(n)||!isFinite(n))return(// Throwing custom exception so behavior is testable.
console.warn(`Found ${n} in the result of '${r}'`),!0)}})(t,r.dtype,e)})}let u={kernelName:e,outputs:s,inputs:t,timeMs:i.then(e=>e.kernelMs),extraInfo:i.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")};return u}logKernelProfile(e){let{kernelName:t,outputs:r,timeMs:n,inputs:a,extraInfo:s}=e;r.forEach(e=>{Promise.all([e.data(),n,s]).then(r=>{this.logger.logKernelProfile(t,e,r[0],r[1],a,r[2])})})}}class i{logKernelProfile(e,t,r,n,s,i){let o="number"==typeof n?a.rightPad(`${n}ms`,9):n.error,l=a.rightPad(e,25),u=t.rank,c=t.size,d=a.rightPad(t.shape.toString(),14),p="";for(let e in s){let r=s[e];if(null!=r){// The input might be a non-tensor (e.g HTMLImageElement), in which case
// we claim the output shape as input shape.
let n=r.shape||t.shape,a=n.length;p+=`${e}: ${a}D ${a>0?n:""} `}}console.log(`%c${l}	%c${o}	%c${u}D ${d}	%c${c}	%c${p}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}}),R("jjNRA",function(e,t){c(e.exports,"createScalarValue",()=>i),c(e.exports,"encodeString",()=>p),c(e.exports,"toTypedArray",()=>o),c(e.exports,"flatten",()=>m),c(e.exports,"now",()=>l),c(e.exports,"fetch",()=>u),c(e.exports,"decodeString",()=>h),c(e.exports,"isTypedArray",()=>f);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("ibsdL"),n=A("6LqZS"),a=A("8cCb2"),s=A("dI8yQ");function i(e,t){return"string"===t?p(e):o([e],t)}function o(e,t){var n;if("string"===t)throw Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=m(e)),(0,r.env)().getBool("DEBUG")&&a.checkConversionForErrors(e,t),(n=e)instanceof Float32Array&&"float32"===t||n instanceof Int32Array&&"int32"===t||n instanceof Uint8Array&&"bool"===t)return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let r=0;r<t.length;++r)0!==Math.round(e[r])&&(t[r]=1);return t}throw Error(`Unknown data type ${t}`)}function l(){return(0,r.env)().platform.now()}function u(e,t){return(0,r.env)().platform.fetch(e,t)}function p(e,t="utf-8"){return t=t||"utf-8",(0,r.env)().platform.encode(e,t)}function h(e,t="utf-8"){return t=t||"utf-8",(0,r.env)().platform.decode(e,t)}function f(e){return(// TODO(mattsoulanille): Remove this fallback in 5.0.0
null!=(0,r.env)().platform.isTypedArray?(0,r.env)().platform.isTypedArray(e):(0,n.isTypedArrayBrowser)(e))}function m(e,t=[],r=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||a.isPromise(e)||null==e||f(e)&&r)t.push(e);else if(Array.isArray(e)||f(e))for(let n=0;n<e.length;++n)m(e[n],t,r);else{let n=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(n=Math.max(n,Number(t)));for(let a=0;a<=n;a++)m(e[a],t,r)}return t}d(e.exports,a),d(e.exports,s)}),R("6LqZS",function(e,t){c(e.exports,"isTypedArrayBrowser",()=>r);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}}),R("dI8yQ",function(e,t){c(e.exports,"hexToLong",()=>a),c(e.exports,"fingerPrint64",()=>m);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// Workaround for allowing cjs module to be included in bundle created by
// rollup.
var r=A("iPWI7");// tslint:disable-next-line
let n=r.default||r;function a(e){return n.fromString(e,!0,16)}// Some primes between 2^63 and 2^64 for various uses.
// Hex 0xc3a5c85c97cb3127
let s=a("c3a5c85c97cb3127"),i=a("b492b66fbe98f273"),o=a("9ae16a3b2f90404f");function l(e){return e.xor(e.shru(47))}function u(e,t,r){let a=e.slice(t,t+r);return n.fromBytes(Array.from(a),!0,!0)}function d(e,t){return u(e,t,8)}function p(e,t){// Avoid shifting by 64: doing so yields an undefined result.
return 0===t?e:e.shru(t).or(e.shl(64-t))}function h(e,t,r=a("9ddfea08eb382d69")){// Murmur-inspired hashing.
let n=e.xor(t).mul(r);n=n.xor(n.shru(47));let s=t.xor(n).mul(r);return(s=s.xor(s.shru(47))).mul(r)}function f(e,t,r,n){return(// Return a 16-byte hash for 48 bytes.  Quick and dirty.
// Callers do best to use "random-looking" values for a and b.
function(e,t,r,n,a,s){a=a.add(e),s=p(s.add(a).add(n),21);let i=a;return a=(a=a.add(t)).add(r),s=s.add(p(a,44)),[a.add(n),s.add(i)]}(d(e,t),d(e,t+8),d(e,t+16),d(e,t+24),r,n))}function m(e,t=e.length){let r=n.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){let r=o.add(2*t),n=d(e,0).add(o),a=d(e,t-8),s=p(a,37).mul(r).add(n),i=p(n,25).add(a).mul(r);return h(s,i,r)}if(t>=4){let r=o.add(2*t),n=u(e,0,4);return h(n.shl(3).add(t),u(e,t-4,4),r)}if(t>0){let r=e[0],n=e[t>>1],a=e[t-1],i=t+(a<<2);return l(o.mul(r+(n<<8)).xor(s.mul(i))).mul(o)}return o}(e,t):function(e,t=e.length){let r=o.add(2*t),n=d(e,0).mul(i),a=d(e,8),s=d(e,t-8).mul(r),l=d(e,t-16).mul(o);return h(p(n.add(a),43).add(p(s,30)).add(l),n.add(p(a.add(o),18)).add(s),r)}(e,t);if(t<=64)return function(e,t=e.length){let r=o.add(2*t),n=d(e,0).mul(o),a=d(e,8),s=d(e,t-8).mul(r),i=d(e,t-16).mul(o),l=p(n.add(a),43).add(p(s,30)).add(i),u=h(l,n.add(p(a.add(o),18)).add(s),r),c=d(e,16).mul(r),f=d(e,24),m=l.add(d(e,t-32)).mul(r),g=u.add(d(e,t-24)).mul(r);return h(p(c.add(f),43).add(p(m,30)).add(g),c.add(p(f.add(n),18)).add(m),r)}(e,t);// For strings over 64 bytes we loop.  Internal state consists of
// 56 bytes: v, w, x, y, and z.
let a=r,c=r.mul(i).add(113),m=l(c.mul(o).add(113)).mul(o),g=[n.UZERO,n.UZERO],y=[n.UZERO,n.UZERO];a=a.mul(o).add(d(e,0));let b=0,v=(t-1>>6)*64,x=v+(t-1&63)-63;do a=p(a.add(c).add(g[0]).add(d(e,b+8)),37).mul(i),c=p(c.add(g[1]).add(d(e,b+48)),42).mul(i),a=a.xor(y[1]),c=c.add(g[0]).add(d(e,b+40)),m=p(m.add(y[0]),33).mul(i),g=f(e,b,g[1].mul(i),a.add(y[0])),y=f(e,b+32,m.add(y[1]),c.add(d(e,b+16))),[m,a]=[a,m],b+=64;while(b!==v)let w=i.add(m.and(255).shl(1));return(// Point to the last 64 bytes of input.
b=x,y[0]=y[0].add(t-1&63),g[0]=g[0].add(y[0]),y[0]=y[0].add(g[0]),a=p(a.add(c).add(g[0]).add(d(e,b+8)),37).mul(w),c=p(c.add(g[1]).add(d(e,b+48)),42).mul(w),a=a.xor(y[1].mul(9)),c=c.add(g[0].mul(9).add(d(e,b+40))),m=p(m.add(y[0]),33).mul(w),g=f(e,b,g[1].mul(w),a.add(y[0])),y=f(e,b+32,m.add(y[1]),c.add(d(e,b+16))),[m,a]=[a,m],h(h(g[0],y[0],w).add(l(c).mul(s)).add(m),h(g[1],y[1],w).add(a),w))}}),R("iPWI7",function(e,t){e.exports=n;/**
 * wasm optimizations, to do native i64 multiplication and divide
 */var r=null;try{r=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){// no wasm support :(
}/**
 * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.
 *  See the from* functions below for more convenient ways of constructing Longs.
 * @exports Long
 * @class A Long class for representing a 64 bit two's-complement integer value.
 * @param {number} low The low (signed) 32 bits of the long
 * @param {number} high The high (signed) 32 bits of the long
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @constructor
 */function n(e,t,r){/**
     * The low 32 bits as a signed value.
     * @type {number}
     */this.low=0|e,/**
     * The high 32 bits as a signed value.
     * @type {number}
     */this.high=0|t,/**
     * Whether unsigned or not.
     * @type {boolean}
     */this.unsigned=!!r}/**
 * @function
 * @param {*} obj Object
 * @returns {boolean}
 * @inner
 */function a(e){return!0===(e&&e.__isLong__)}// The internal representation of a long is the two given signed, 32-bit values.
// We use 32-bit pieces because these are the size of integers on which
// Javascript performs bit-operations.  For operations like addition and
// multiplication, we split each number into 16 bit pieces, which can easily be
// multiplied within Javascript's floating-point representation without overflow
// or change in sign.
//
// In the algorithms below, we frequently reduce the negative case to the
// positive case by negating the input(s) and then post-processing the result.
// Note that we must ALWAYS check specially whether those values are MIN_VALUE
// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
// a positive number, it overflows back into a negative).  Not handling this
// case would often result in infinite recursion.
//
// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*
// methods on which they depend.
/**
 * An indicator used to reliably determine if an object is a Long or not.
 * @type {boolean}
 * @const
 * @private
 */n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),/**
 * Tests if the specified object is a Long.
 * @function
 * @param {*} obj Object
 * @returns {boolean}
 */n.isLong=a;/**
 * A cache of the Long representations of small integer values.
 * @type {!Object}
 * @inner
 */var s={},i={};/**
 * @param {number} value
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */function o(e,t){var r,n,a;return t?(e>>>=0,(a=0<=e&&e<256)&&(n=i[e]))?n:(r=u(e,(0|e)<0?-1:0,!0),a&&(i[e]=r),r):(e|=0,(a=-128<=e&&e<128)&&(n=s[e]))?n:(r=u(e,e<0?-1:0,!1),a&&(s[e]=r),r)}/**
 * @param {number} value
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */function l(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return S}else{if(e<=-m)return N;if(e+1>=m)return k}return e<0?l(-e,t).neg():u(e%h|0,e/h|0,t)}/**
 * @param {number} lowBits
 * @param {number} highBits
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */function u(e,t,r){return new n(e,t,r)}/**
 * Returns a Long representing the given 32 bit integer value.
 * @function
 * @param {number} value The 32 bit integer in question
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long} The corresponding Long value
 */n.fromInt=o,/**
 * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.
 * @function
 * @param {number} value The number in question
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long} The corresponding Long value
 */n.fromNumber=l,/**
 * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is
 *  assumed to use 32 bits.
 * @function
 * @param {number} lowBits The low 32 bits
 * @param {number} highBits The high 32 bits
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long} The corresponding Long value
 */n.fromBits=u;/**
 * @function
 * @param {number} base
 * @param {number} exponent
 * @returns {number}
 * @inner
 */var c=Math.pow;// Used 4 times (4*8 to 15+4)
/**
 * @param {string} str
 * @param {(boolean|number)=} unsigned
 * @param {number=} radix
 * @returns {!Long}
 * @inner
 */function d(e,t,r){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(r=t,t=!1):t=!!t,(r=r||10)<2||36<r)throw RangeError("radix");if((n=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===n)return d(e.substring(1),t,r).neg();for(var n,a=l(c(r,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),r);if(o<8){var p=l(c(r,o));s=s.mul(p).add(l(u))}else s=(s=s.mul(a)).add(l(u))}return s.unsigned=t,s}/**
 * @function
 * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val
 * @param {boolean=} unsigned
 * @returns {!Long}
 * @inner
 */function p(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?d(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}/**
 * Returns a Long representation of the given string, written using the specified radix.
 * @function
 * @param {string} str The textual representation of the Long
 * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed
 * @param {number=} radix The radix in which the text is written (2-36), defaults to 10
 * @returns {!Long} The corresponding Long value
 */n.fromString=d,/**
 * Converts the specified value to a Long using the appropriate from* function for its type.
 * @function
 * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {!Long}
 */n.fromValue=p;/**
 * @type {number}
 * @const
 * @inner
 */var h=4294967296,f=18446744073709552e3,m=0x7fffffffffffffff,g=o(16777216),y=o(0);/**
 * Signed zero.
 * @type {!Long}
 */n.ZERO=y;/**
 * @type {!Long}
 * @inner
 */var b=o(0,!0);/**
 * Unsigned zero.
 * @type {!Long}
 */n.UZERO=b;/**
 * @type {!Long}
 * @inner
 */var v=o(1);/**
 * Signed one.
 * @type {!Long}
 */n.ONE=v;/**
 * @type {!Long}
 * @inner
 */var x=o(1,!0);/**
 * Unsigned one.
 * @type {!Long}
 */n.UONE=x;/**
 * @type {!Long}
 * @inner
 */var w=o(-1);/**
 * Signed negative one.
 * @type {!Long}
 */n.NEG_ONE=w;/**
 * @type {!Long}
 * @inner
 */var k=u(-1,2147483647,!1);/**
 * Maximum signed value.
 * @type {!Long}
 */n.MAX_VALUE=k;/**
 * @type {!Long}
 * @inner
 */var S=u(-1,-1,!0);/**
 * Maximum unsigned value.
 * @type {!Long}
 */n.MAX_UNSIGNED_VALUE=S;/**
 * @type {!Long}
 * @inner
 */var N=u(0,-2147483648,!1);/**
 * Minimum signed value.
 * @type {!Long}
 */n.MIN_VALUE=N;/**
 * @alias Long.prototype
 * @inner
 */var T=n.prototype;/**
 * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.
 * @returns {number}
 */T.toInt=function(){return this.unsigned?this.low>>>0:this.low},/**
 * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).
 * @returns {number}
 */T.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},/**
 * Converts the Long to a string written in the specified radix.
 * @param {number=} radix Radix (2-36), defaults to 10
 * @returns {string}
 * @override
 * @throws {RangeError} If `radix` is out of range
 */T.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(!this.eq(N))return"-"+this.neg().toString(e);// We need to change the Long value before it can be negated, so we remove
// the bottom-most digit in this base and then recurse to do the rest.
var t=l(e),r=this.div(t),n=r.mul(t).sub(this);return r.toString(e)+n.toInt().toString(e)}for(// Do several (6) digits each time through the loop, so as to
// minimize the calls to the very expensive emulated div.
var a=l(c(e,6),this.unsigned),s=this,i="";;){var o=s.div(a),u=(s.sub(o.mul(a)).toInt()>>>0).toString(e);if((s=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},/**
 * Gets the high 32 bits as a signed integer.
 * @returns {number} Signed high bits
 */T.getHighBits=function(){return this.high},/**
 * Gets the high 32 bits as an unsigned integer.
 * @returns {number} Unsigned high bits
 */T.getHighBitsUnsigned=function(){return this.high>>>0},/**
 * Gets the low 32 bits as a signed integer.
 * @returns {number} Signed low bits
 */T.getLowBits=function(){return this.low},/**
 * Gets the low 32 bits as an unsigned integer.
 * @returns {number} Unsigned low bits
 */T.getLowBitsUnsigned=function(){return this.low>>>0},/**
 * Gets the number of bits needed to represent the absolute value of this Long.
 * @returns {number}
 */T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(N)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return 0!=this.high?t+33:t+1},/**
 * Tests if this Long's value equals zero.
 * @returns {boolean}
 */T.isZero=function(){return 0===this.high&&0===this.low},/**
 * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.
 * @returns {boolean}
 */T.eqz=T.isZero,/**
 * Tests if this Long's value is negative.
 * @returns {boolean}
 */T.isNegative=function(){return!this.unsigned&&this.high<0},/**
 * Tests if this Long's value is positive.
 * @returns {boolean}
 */T.isPositive=function(){return this.unsigned||this.high>=0},/**
 * Tests if this Long's value is odd.
 * @returns {boolean}
 */T.isOdd=function(){return(1&this.low)==1},/**
 * Tests if this Long's value is even.
 * @returns {boolean}
 */T.isEven=function(){return(1&this.low)==0},/**
 * Tests if this Long's value equals the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.equals=function(e){return a(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},/**
 * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.eq=T.equals,/**
 * Tests if this Long's value differs from the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.notEquals=function(e){return!this.eq(/* validates */e)},/**
 * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.neq=T.notEquals,/**
 * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.ne=T.notEquals,/**
 * Tests if this Long's value is less than the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.lessThan=function(e){return 0>this.comp(/* validates */e)},/**
 * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.lt=T.lessThan,/**
 * Tests if this Long's value is less than or equal the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.lessThanOrEqual=function(e){return 0>=this.comp(/* validates */e)},/**
 * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.lte=T.lessThanOrEqual,/**
 * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.le=T.lessThanOrEqual,/**
 * Tests if this Long's value is greater than the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.greaterThan=function(e){return this.comp(/* validates */e)>0},/**
 * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.gt=T.greaterThan,/**
 * Tests if this Long's value is greater than or equal the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.greaterThanOrEqual=function(e){return this.comp(/* validates */e)>=0},/**
 * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.gte=T.greaterThanOrEqual,/**
 * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {boolean}
 */T.ge=T.greaterThanOrEqual,/**
 * Compares this Long's value with the specified's.
 * @param {!Long|number|string} other Other value
 * @returns {number} 0 if they are the same, 1 if the this is greater and -1
 *  if the given one is greater
 */T.compare=function(e){if(a(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},/**
 * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.
 * @function
 * @param {!Long|number|string} other Other value
 * @returns {number} 0 if they are the same, 1 if the this is greater and -1
 *  if the given one is greater
 */T.comp=T.compare,/**
 * Negates this Long's value.
 * @returns {!Long} Negated Long
 */T.negate=function(){return!this.unsigned&&this.eq(N)?N:this.not().add(v)},/**
 * Negates this Long's value. This is an alias of {@link Long#negate}.
 * @function
 * @returns {!Long} Negated Long
 */T.neg=T.negate,/**
 * Returns the sum of this and the specified Long.
 * @param {!Long|number|string} addend Addend
 * @returns {!Long} Sum
 */T.add=function(e){a(e)||(e=p(e));// Divide each number into 4 chunks of 16 bits, and then sum the chunks.
var t,r,n=this.high>>>16,s=65535&this.high,i=this.low>>>16,o=65535&this.low,l=e.high>>>16,c=65535&e.high,d=e.low>>>16,h=65535&e.low,f=0,m=0;return t=0+((r=0+(o+h))>>>16),r&=65535,t+=i+d,m+=t>>>16,t&=65535,m+=s+c,f+=m>>>16,m&=65535,f+=n+l,u(t<<16|r,(f&=65535)<<16|m,this.unsigned)},/**
 * Returns the difference of this and the specified Long.
 * @param {!Long|number|string} subtrahend Subtrahend
 * @returns {!Long} Difference
 */T.subtract=function(e){return a(e)||(e=p(e)),this.add(e.neg())},/**
 * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.
 * @function
 * @param {!Long|number|string} subtrahend Subtrahend
 * @returns {!Long} Difference
 */T.sub=T.subtract,/**
 * Returns the product of this and the specified Long.
 * @param {!Long|number|string} multiplier Multiplier
 * @returns {!Long} Product
 */T.multiply=function(e){if(this.isZero())return y;// use wasm support if present
if(a(e)||(e=p(e)),r)return u(r.mul(this.low,this.high,e.low,e.high),r.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(N))return e.isOdd()?N:y;if(e.eq(N))return this.isOdd()?N:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();// If both longs are small, use float multiplication
if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);// Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
// We can skip products that would overflow.
var t,n,s=this.high>>>16,i=65535&this.high,o=this.low>>>16,c=65535&this.low,d=e.high>>>16,h=65535&e.high,f=e.low>>>16,m=65535&e.low,b=0,v=0;return t=0+((n=0+c*m)>>>16),n&=65535,t+=o*m,v+=t>>>16,t&=65535,t+=c*f,v+=t>>>16,t&=65535,v+=i*m,b+=v>>>16,v&=65535,v+=o*f,b+=v>>>16,v&=65535,v+=c*h,b+=v>>>16,v&=65535,b+=s*m+i*f+o*h+c*d,u(t<<16|n,(b&=65535)<<16|v,this.unsigned)},/**
 * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.
 * @function
 * @param {!Long|number|string} multiplier Multiplier
 * @returns {!Long} Product
 */T.mul=T.multiply,/**
 * Returns this Long divided by the specified. The result is signed if this Long is signed or
 *  unsigned if this Long is unsigned.
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Quotient
 */T.divide=function(e){if(a(e)||(e=p(e)),e.isZero())throw Error("division by zero");// use wasm support if present
if(r){var t,n,s;return(// guard against signed division overflow: the largest
// negative number / -1 would be 1 larger than the largest
// positive number, due to two's complement.
this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?r.div_u:r.div_s)(this.low,this.high,e.low,e.high),r.get_high(),this.unsigned):this)}if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return x;s=b}else{// This section is only relevant for signed longs and is derived from the
// closure library as a whole.
if(this.eq(N))return e.eq(v)||e.eq(w)?N:e.eq(N)?v:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?v:w:(n=this.sub(e.mul(t)),s=t.add(n.div(e)));if(e.eq(N))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(// Repeat the following until the remainder is less than other:  find a
// floating-point that approximates remainder / other *from below*, add this
// into the result, and subtract it from the remainder.  It is critical that
// the approximate value is less than or equal to the real value so that the
// remainder never becomes negative.
n=this;n.gte(e);){for(// We will tweak the approximate result by changing it in the 48-th digit or
// the smallest non-fractional digit, whichever is larger.
var i=Math.ceil(Math.log(// Approximate the result of division. This may be a little greater or
// smaller than the actual value.
t=Math.max(1,Math.floor(n.toNumber()/e.toNumber())))/Math.LN2),o=i<=48?1:c(2,i-48),// that if it is too large, the product overflows and is negative.
d=l(t),h=d.mul(e);h.isNegative()||h.gt(n);)t-=o,h=(d=l(t,this.unsigned)).mul(e);d.isZero()&&(d=v),s=s.add(d),n=n.sub(h)}return s},/**
 * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.
 * @function
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Quotient
 */T.div=T.divide,/**
 * Returns this Long modulo the specified.
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Remainder
 */T.modulo=function(e){return(// use wasm support if present
(a(e)||(e=p(e)),r)?u((this.unsigned?r.rem_u:r.rem_s)(this.low,this.high,e.low,e.high),r.get_high(),this.unsigned):this.sub(this.div(e).mul(e)))},/**
 * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.
 * @function
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Remainder
 */T.mod=T.modulo,/**
 * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.
 * @function
 * @param {!Long|number|string} divisor Divisor
 * @returns {!Long} Remainder
 */T.rem=T.modulo,/**
 * Returns the bitwise NOT of this Long.
 * @returns {!Long}
 */T.not=function(){return u(~this.low,~this.high,this.unsigned)},/**
 * Returns the bitwise AND of this Long and the specified.
 * @param {!Long|number|string} other Other Long
 * @returns {!Long}
 */T.and=function(e){return a(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},/**
 * Returns the bitwise OR of this Long and the specified.
 * @param {!Long|number|string} other Other Long
 * @returns {!Long}
 */T.or=function(e){return a(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},/**
 * Returns the bitwise XOR of this Long and the given one.
 * @param {!Long|number|string} other Other Long
 * @returns {!Long}
 */T.xor=function(e){return a(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},/**
 * Returns this Long with bits shifted to the left by the given amount.
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */T.shiftLeft=function(e){return(a(e)&&(e=e.toInt()),0==(e&=63))?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},/**
 * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */T.shl=T.shiftLeft,/**
 * Returns this Long with bits arithmetically shifted to the right by the given amount.
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */T.shiftRight=function(e){return(a(e)&&(e=e.toInt()),0==(e&=63))?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},/**
 * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */T.shr=T.shiftRight,/**
 * Returns this Long with bits logically shifted to the right by the given amount.
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */T.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):32===e?u(t,0,this.unsigned):u(t>>>e-32,0,this.unsigned)},/**
 * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */T.shru=T.shiftRightUnsigned,/**
 * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.
 * @function
 * @param {number|!Long} numBits Number of bits
 * @returns {!Long} Shifted Long
 */T.shr_u=T.shiftRightUnsigned,/**
 * Converts this Long to signed.
 * @returns {!Long} Signed long
 */T.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},/**
 * Converts this Long to unsigned.
 * @returns {!Long} Unsigned long
 */T.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},/**
 * Converts this Long to its byte representation.
 * @param {boolean=} le Whether little or big endian, defaults to big endian
 * @returns {!Array.<number>} Byte representation
 */T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},/**
 * Converts this Long to its little endian byte representation.
 * @returns {!Array.<number>} Little endian byte representation
 */T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},/**
 * Converts this Long to its big endian byte representation.
 * @returns {!Array.<number>} Big endian byte representation
 */T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},/**
 * Creates a Long from its byte representation.
 * @param {!Array.<number>} bytes Byte representation
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @param {boolean=} le Whether little or big endian, defaults to big endian
 * @returns {Long} The corresponding Long value
 */n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},/**
 * Creates a Long from its little endian byte representation.
 * @param {!Array.<number>} bytes Little endian byte representation
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {Long} The corresponding Long value
 */n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},/**
 * Creates a Long from its big endian byte representation.
 * @param {!Array.<number>} bytes Big endian byte representation
 * @param {boolean=} unsigned Whether unsigned or not, defaults to signed
 * @returns {Long} The corresponding Long value
 */n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}),R("8zD9D",function(e,t){c(e.exports,"getFilteredNodesXToY",()=>n),c(e.exports,"backpropagateGradients",()=>a);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2");function n(e,t,r){// Forward pass to compute all the nodes and Tensors that are transitively a
// function of x.
let n={},a={};for(let e=0;e<t.length;e++)n[t[e].id]=!0;for(let r=0;r<e.length;r++){let s=e[r],i=s.inputs;for(let e in i){let r=i[e],o=!1;for(let e=0;e<t.length;e++)if(n[r.id]){s.outputs.forEach(e=>n[e.id]=!0),o=!0,a[s.id]=!0;break}if(o)break}}// Backward pass to find all of the nodes and Tensors that lead to y.
let s={};s[r.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let r=e[t],n=r.inputs;// If any of the outputs lead to y, mark all of the inputs as leading to y.
for(let e=0;e<r.outputs.length;e++)if(s[r.outputs[e].id]){for(let e in n)s[n[e].id]=!0,i[r.id]=!0;break}}// Return the paths that come from x and lead to y.
let o=[];for(let t=0;t<e.length;t++){let r=e[t];if(a[r.id]&&i[r.id]){// Prune the inputs from the node that aren't a function of x.
let e={};for(let t in r.inputs){let a=r.inputs[t];n[a.id]&&(e[t]=a)}// Copy the node and overwrite inputsAndArgs to the pruned version.
let t=Object.assign({},r);t.inputs=e,t.outputs=r.outputs,o.push(t)}}return o}function a(e,t,n,a){// Walk the tape backward and keep a map of Tensor to its gradient.
for(let s=t.length-1;s>=0;s--){let i=t[s],o=[];if(i.outputs.forEach(t=>{let r=e[t.id];null!=r?o.push(r):// does not affect the final output, thus we put null for its dy.
o.push(null)}),null==i.gradient)throw Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);// Backprop dy through this node and accumulate gradients over the inputs.
let l=i.gradient(o);for(let t in i.inputs){if(!(t in l))throw Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(l)}.`);// Call the gradient function.
let s=n(()=>l[t]());if("float32"!==s.dtype)throw Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);let o=i.inputs[t];if(!r.arraysEqual(s.shape,o.shape))throw Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=s;else{let t=e[o.id];e[o.id]=a(t,s),t.dispose()}}}}}),R("9jCh7",function(e,t){c(e.exports,"TensorBuffer",()=>i),c(e.exports,"setTensorTracker",()=>u),c(e.exports,"setOpHandler",()=>d),c(e.exports,"setDeprecationWarningFn",()=>p),c(e.exports,"Tensor",()=>h),c(e.exports,"getGlobalTensorClass",()=>f),c(e.exports,"Variable",()=>m);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265
/// <reference types="@webgpu/types/dist" />
var r=A("grcJs"),n=A("iODUZ"),a=A("8cCb2"),s=A("jjNRA");class i{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=a.sizeFromShape(e),null!=r){let e=r.length;a.assert(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||a.getArrayFromDType(t,this.size),this.strides=(0,a.computeStrides)(e)}/**
     * Sets a value in the buffer at a given location.
     *
     * @param value The value to set.
     * @param locs  The location indices.
     *
     * @doc {heading: 'Tensors', subheading: 'Creation'}
     */set(e,...t){0===t.length&&(t=[0]),a.assert(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let r=this.locToIndex(t);this.values[r]=e}/**
     * Returns the value in the buffer at the provided location.
     *
     * @param locs The location indices.
     *
     * @doc {heading: 'Tensors', subheading: 'Creation'}
     */get(...e){0===e.length&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw Error(t)}t++}let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=this.strides[t]*e[t];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}/**
     * Creates an immutable `tf.Tensor` object from the buffer.
     *
     * @doc {heading: 'Tensors', subheading: 'Creation'}
     */toTensor(){return o().makeTensor(this.values,this.shape,this.dtype)}}// For tracking tensor creation and disposal.
let o=null,l=null;function u(e){o=e}function d(e){l=e}function p(e){}class h{constructor(e,t,r,n){/** Whether this tensor has been globally kept. */this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.sizeFromShape(e),this.strides=(0,a.computeStrides)(e),this.dataId=r,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}/**
     * Returns a promise of `tf.TensorBuffer` that holds the underlying data.
     *
     * @doc {heading: 'Tensors', subheading: 'Classes'}
     */async buffer(){let e=await this.data();return l.buffer(this.shape,this.dtype,e)}/**
     * Returns a `tf.TensorBuffer` that holds the underlying data.
     * @doc {heading: 'Tensors', subheading: 'Classes'}
     */bufferSync(){return l.buffer(this.shape,this.dtype,this.dataSync())}/**
     * Returns the tensor data as a nested array. The transfer of data is done
     * asynchronously.
     *
     * @doc {heading: 'Tensors', subheading: 'Classes'}
     */async array(){let e=await this.data();return(0,a.toNestedArray)(this.shape,e,"complex64"===this.dtype)}/**
     * Returns the tensor data as a nested array. The transfer of data is done
     * synchronously.
     *
     * @doc {heading: 'Tensors', subheading: 'Classes'}
     */arraySync(){return(0,a.toNestedArray)(this.shape,this.dataSync(),"complex64"===this.dtype)}/**
     * Asynchronously downloads the values from the `tf.Tensor`. Returns a
     * promise of `TypedArray` that resolves when the computation has finished.
     *
     * @doc {heading: 'Tensors', subheading: 'Classes'}
     */async data(){this.throwIfDisposed();let e=o().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map(e=>s.decodeString(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}/**
     * Copy the tensor's data to a new GPU resource. Comparing to the `dataSync()`
     * and `data()`, this method prevents data from being downloaded to CPU.
     *
     * For WebGL backend, the data will be stored on a densely packed texture.
     * This means that the texture will use the RGBA channels to store value.
     *
     * For WebGPU backend, the data will be stored on a buffer. There is no
     * parameter, so can not use a user-defined size to create the buffer.
     *
     * @param options:
     *     For WebGL,
     *         - customTexShape: Optional. If set, will use the user defined
     *     texture shape to create the texture.
     *
     * @returns For WebGL backend, a GPUData contains the new texture and
     *     its information.
     *     {
     *        tensorRef: The tensor that is associated with this texture,
     *        texture: WebGLTexture,
     *        texShape: [number, number] // [height, width]
     *     }
     *
     *     For WebGPU backend, a GPUData contains the new buffer.
     *     {
     *        tensorRef: The tensor that is associated with this buffer,
     *        buffer: GPUBuffer,
     *     }
     *
     *     Remember to dispose the GPUData after it is used by
     *     `res.tensorRef.dispose()`.
     *
     * @doc {heading: 'Tensors', subheading: 'Classes'}
     */dataToGPU(e){return this.throwIfDisposed(),o().readToGPU(this.dataId,e)}/**
     * Synchronously downloads the values from the `tf.Tensor`. This blocks the
     * UI thread until the values are ready, which can cause performance issues.
     *
     * @doc {heading: 'Tensors', subheading: 'Classes'}
     */dataSync(){this.throwIfDisposed();let e=o().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>s.decodeString(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}/** Returns the underlying bytes of the tensor's data. */async bytes(){this.throwIfDisposed();let e=await o().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}/**
     * Disposes `tf.Tensor` from memory.
     *
     * @doc {heading: 'Tensors', subheading: 'Classes'}
     */dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),o().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw Error("Tensor is disposed.")}/**
     * Prints the `tf.Tensor`. See `tf.print` for details.
     *
     * @param verbose Whether to print verbose information about the tensor,
     *    including dtype and size.
     *
     * @doc {heading: 'Tensors', subheading: 'Classes'}
     */print(e=!1){return l.print(this,e)}/**
     * Returns a copy of the tensor. See `tf.clone` for details.
     * @doc {heading: 'Tensors', subheading: 'Classes'}
     */clone(){return this.throwIfDisposed(),l.clone(this)}/**
     * Returns a human-readable description of the tensor. Useful for logging.
     *
     * @doc {heading: 'Tensors', subheading: 'Classes'}
     */toString(e=!1){let t=this.dataSync();return(0,n.tensorToString)(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),l.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),o().makeVariable(this,e,t,r)}}function f(){// Use getGlobal so that we can augment the Tensor class across package
// boundaries becase the node resolution alg may result in different modules
// being returned for this file depending on the path they are loaded from.
return(0,r.getGlobal)("Tensor",()=>h)}Object.defineProperty(h,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),// Global side effect. Cache global reference to Tensor class
f();class m extends h{constructor(e,t,r,n){super(e.shape,e.dtype,e.dataId,n),this.trainable=t,this.name=r}/**
     * Assign a new `tf.Tensor` to this variable. The new `tf.Tensor` must have
     * the same shape and dtype as the old `tf.Tensor`.
     *
     * @param newValue New tensor to be assigned to this variable.
     *
     * @doc {heading: 'Tensors', subheading: 'Classes'}
     */assign(e){if(e.dtype!==this.dtype)throw Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.arraysEqual(e.shape,this.shape))throw Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);o().disposeTensor(this),this.dataId=e.dataId,o().incRef(this,null)}dispose(){o().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(m,Symbol.hasInstance,{value:e=>e instanceof h&&null!=e.assign&&e.assign instanceof Function})}),R("iODUZ",function(e,t){c(e.exports,"tensorToString",()=>n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2");function n(e,t,n,o){let l=(0,r.computeStrides)(t),u=function(e,t,n,s){let o=(0,r.sizeFromShape)(t),l=s[s.length-1],u=Array(l).fill(0),c=t.length,d="complex64"===n?i(e):e;if(c>1)for(let e=0;e<o/l;e++){let t=e*l;for(let e=0;e<l;e++)u[e]=Math.max(u[e],a(d[t+e],0,n).length)}return u}(e,t,n,l),c=t.length,d=function e(t,r,n,o,l,u=!0){let c="complex64"===n?2:1,d=r[0],p=r.length;if(0===p){if("complex64"===n){let e=i(t);return[a(e[0],0,n)]}return"bool"===n?[s(t[0])]:[t[0].toString()]}if(1===p){if(d>20){let e=3*c,r=Array.from(t.slice(0,e)),s=Array.from(t.slice((d-3)*c,d*c));return"complex64"===n&&(r=i(r),s=i(s)),["["+r.map((e,t)=>a(e,l[t],n)).join(", ")+", ..., "+s.map((e,t)=>a(e,l[d-3+t],n)).join(", ")+"]"]}let e="complex64"===n?i(t):Array.from(t);return["["+e.map((e,t)=>a(e,l[t],n)).join(", ")+"]"]}// The array is rank 2 or more.
let h=r.slice(1),f=o.slice(1),m=o[0]*c,g=[];if(d>20){for(let r=0;r<3;r++){let a=r*m,s=a+m;g.push(...e(t.slice(a,s),h,n,f,l,!1))}g.push("...");for(let r=d-3;r<d;r++){let a=r*m,s=a+m;g.push(...e(t.slice(a,s),h,n,f,l,r===d-1/* isLast */))}}else for(let r=0;r<d;r++){let a=r*m,s=a+m;g.push(...e(t.slice(a,s),h,n,f,l,r===d-1/* isLast */))}let y=2===p?",":"";g[0]="["+(d>0?g[0]+y:"");for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+y;let b=",\n";for(let e=2;e<p;e++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(u?"":b),g}(e,t,n,l,u),p=["Tensor"];return o&&(p.push(`  dtype: ${n}`),p.push(`  rank: ${c}`),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(d.map(e=>"    "+e).join("\n")),p.join("\n")}function a(e,t,n){let a;return a=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,r.isString)(e)?`'${e}'`:"bool"===n?s(e):parseFloat(e.toFixed(7)).toString(),(0,r.rightPad)(a,t)}function s(e){return 0===e?"false":"true"}function i(e){let t=[];for(let r=0;r<e.length;r+=2)t.push([e[r],e[r+1]]);return t}}),R("3w4Rg",function(e,t){c(e.exports,"makeTypesMatch",()=>s),c(e.exports,"assertTypesMatch",()=>i),c(e.exports,"isTensorInList",()=>o),c(e.exports,"getTensorsInContainer",()=>l);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("9jCh7"),n=A("2MDja"),a=A("8cCb2");function s(e,t){if(e.dtype===t.dtype)return[e,t];let r=(0,n.upcastType)(e.dtype,t.dtype);return[e.cast(r),t.cast(r)]}function i(e,t){(0,a.assert)(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function o(e,t){return t.some(t=>t.id===e.id)}function l(e){let t=[],n=new Set;return function e(t,n,a){if(null!=t){if(t instanceof r.Tensor){n.push(t);return}if(Array.isArray(t)||"object"==typeof t)for(let r in t){let s=t[r];a.has(s)||(a.add(s),e(s,n,a))}}}(e,t,n),t}}),R("2MDja",function(e,t){var r,n,a,s,i,o,l,u,d,p;c(e.exports,"Rank",()=>r),c(e.exports,"upcastType",()=>f),c(e.exports,"sumOutType",()=>m),c(e.exports,"isWebGLData",()=>g),c(e.exports,"isWebGPUData",()=>y),(o=r||(r={})).R0="R0",o.R1="R1",o.R2="R2",o.R3="R3",o.R4="R4",o.R5="R5",o.R6="R6",(l=n||(n={})).float32="float32",l.int32="int32",l.bool="int32",l.complex64="complex64",(u=a||(a={})).float32="float32",u.int32="int32",u.bool="bool",u.complex64="complex64",(d=s||(s={})).float32="float32",d.int32="float32",d.bool="float32",d.complex64="complex64",(p=i||(i={})).float32="complex64",p.int32="complex64",p.bool="complex64",p.complex64="complex64";let h={float32:s,int32:n,bool:a,complex64:i};function f(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw Error(`Can not upcast ${e} with ${t}`)}return h[e][t]}function m(e){return f(e,"int32")}function g(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function y(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}}),R("dcHSK",function(e,t){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("38WwN");var r=A("4GTZ3"),n=A("ibsdL"),a=A("hPtJY");let s=(0,n.env)();/**
 * This file contains environment-related flag registrations.
 *//** Whether to enable debug mode. */s.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),/** Whether we are in a browser (as versus, say, node.js) environment. */s.registerFlag("IS_BROWSER",()=>r.isBrowser()),/** Whether we are in a browser (as versus, say, node.js) environment. */s.registerFlag("IS_NODE",()=>void 0!==a&&void 0!==a.versions&&void 0!==a.versions.node),/** Whether this browser is Chrome. */s.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),/** Whether this browser is Safari. */s.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),/**
 * True when the environment is "production" where we disable safety checks
 * to gain performance.
 */s.registerFlag("PROD",()=>!1),/**
 * Whether to do sanity checks when inferring a shape from user-provided
 * values, used when creating a new tensor.
 */s.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>s.getBool("DEBUG")),/** Whether deprecation warnings are enabled. */s.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),/** True if running unit tests. */s.registerFlag("IS_TEST",()=>!1),/** Whether to check computation result for errors. */s.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>s.getBool("DEBUG")),/** Whether the backend needs to wrap input to imageBitmap. */s.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),/** Whether to enable canvas2d willReadFrequently for GPU backends */s.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),/** Whether to use setTimeoutCustom */s.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1)}),R("4GTZ3",function(e,t){let r;function n(e){r=e}function a(e){if(void 0!==r)return r;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||// tslint:disable-next-line:no-any
("undefined"!=typeof window?window.opera:"");// Use `navigator.userAgentData.mobile` as fallback.
if(!t){// tslint:disable-next-line:no-any
let t=e;return t.userAgentData&&t.userAgentData.mobile}// tslint:disable-next-line:max-line-length
return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||// tslint:disable-next-line:max-line-length
/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function s(){return"undefined"!=typeof window&&null!=window.document||//@ts-ignore
"undefined"!=typeof WorkerGlobalScope}c(e.exports,"mockIsMobile",()=>n),c(e.exports,"isMobile",()=>a),c(e.exports,"isBrowser",()=>s)}),R("1MXhU",function(e,t){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("dcHSK");var r=A("ibsdL"),n=A("caMdQ"),a=A("h6KCl"),s=A("1PMKz"),i=A("6LqZS");if((0,r.env)().get("IS_BROWSER")){(0,r.env)().setPlatform("browser",new class{constructor(){// For setTimeoutCustom
this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}// If the setTimeout nesting level is greater than 5 and timeout is less
// than 4ms, timeout will be clamped to 4ms, which hurts the perf.
// Interleaving window.postMessage and setTimeout will trick the browser and
// avoid the clamp.
setTimeoutCustom(e,t){if("undefined"==typeof window||!(0,r.env)().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();let t=this.functionRefs[e.data.index];t(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return(0,i.isTypedArrayBrowser)(e)}});// Register LocalStorage IOHandler
try{(0,s.ModelStoreManagerRegistry).registerManager(a.BrowserLocalStorage.URL_SCHEME,new a.BrowserLocalStorageManager)}catch(e){}// Register IndexedDB IOHandler
try{(0,s.ModelStoreManagerRegistry).registerManager(n.BrowserIndexedDB.URL_SCHEME,new n.BrowserIndexedDBManager)}catch(e){}}}),R("caMdQ",function(e,t){c(e.exports,"BrowserIndexedDB",()=>p),c(e.exports,"BrowserIndexedDBManager",()=>f),/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("dcHSK");var r=A("ibsdL"),n=A("4FRLN"),a=A("9RUNn"),s=A("hBb8J");let i="tensorflowjs",o="models_store",l="model_info_store";function u(){if(!(0,r.env)().getBool("IS_BROWSER"))//   Maybe point to a doc page on the web and/or automatically determine
//   the available IOHandlers and print them in the error message.
throw Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");// tslint:disable-next-line:no-any
let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw Error("The current browser does not appear to support IndexedDB.");return t}function d(e){let t=e.result;t.createObjectStore(o,{keyPath:"modelPath"}),t.createObjectStore(l,{keyPath:"modelPath"})}/**
 * IOHandler subclass: Browser IndexedDB.
 *
 * See the doc string of `browserIndexedDB` for more details.
 */class p{constructor(e){if(this.indexedDB=u(),null==e||!e)throw Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){// TODO(cais): Support saving GraphDef models.
if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}/**
     * Perform database action to put model artifacts into or read model artifacts
     * from IndexedDB object store.
     *
     * Whether the action is put or get depends on whether `modelArtifacts` is
     * specified. If it is specified, the action will be put; otherwise the action
     * will be get.
     *
     * @param modelPath A unique string path for the model.
     * @param modelArtifacts If specified, it will be the model artifacts to be
     *   stored in IndexedDB.
     * @returns A `Promise` of `SaveResult`, if the action is put, or a `Promise`
     *   of `ModelArtifacts`, if the action is get.
     */databaseAction(e,t){return new Promise((e,r)=>{let a=this.indexedDB.open(i,1);a.onupgradeneeded=()=>d(a),a.onsuccess=()=>{let i=a.result;if(null==t){// Read model out from object store.
let t=i.transaction(o,"readonly"),n=t.objectStore(o),a=n.get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return i.close(),r(Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(i.close(),r(a.error)),t.oncomplete=()=>i.close()}else{let a,u;// Put model into object store.
// Concatenate all the model weights into a single ArrayBuffer. Large
// models (~1GB) have problems saving if they are not concatenated.
// TODO(mattSoulanille): Save large models to multiple indexeddb
// records.
t.weightData=(0,s.CompositeArrayBuffer).join(t.weightData);let c=(0,n.getModelArtifactsInfoForJSON)(t),d=i.transaction(l,"readwrite"),p=d.objectStore(l);try{a=p.put({modelPath:this.modelPath,modelArtifactsInfo:c})}catch(e){return r(e)}a.onsuccess=()=>{let n;// Second, put model data into model store.
u=i.transaction(o,"readwrite");let a=u.objectStore(o);try{n=a.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:c})}catch(e){// Sometimes, the serialized value is too large to store.
return r(e)}n.onsuccess=()=>e({modelArtifactsInfo:c}),n.onerror=e=>{// If the put-model request fails, roll back the info entry as
// well.
p=d.objectStore(l);let t=p.delete(this.modelPath);t.onsuccess=()=>(i.close(),r(n.error)),t.onerror=e=>(i.close(),r(n.error))}},a.onerror=e=>(i.close(),r(a.error)),d.oncomplete=()=>{null==u?i.close():u.oncomplete=()=>i.close()}}},a.onerror=e=>r(a.error)})}}p.URL_SCHEME="indexeddb://";let h=e=>{var t;return(0,r.env)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(p.URL_SCHEME)?(t=e.slice(p.URL_SCHEME.length),new p(t)):null};(0,a.IORouterRegistry).registerSaveRouter(h),(0,a.IORouterRegistry).registerLoadRouter(h);class f{constructor(){this.indexedDB=u()}async listModels(){return new Promise((e,t)=>{let r=this.indexedDB.open(i,1);r.onupgradeneeded=()=>d(r),r.onsuccess=()=>{let n=r.result,a=n.transaction(l,"readonly"),s=a.objectStore(l),i=s.getAll();i.onsuccess=()=>{let t={};for(let e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(n.close(),t(i.error)),a.oncomplete=()=>n.close()},r.onerror=e=>t(r.error)})}async removeModel(e){var t;return e=(t=e).startsWith(p.URL_SCHEME)?t.slice(p.URL_SCHEME.length):t,new Promise((t,r)=>{let n=this.indexedDB.open(i,1);n.onupgradeneeded=()=>d(n),n.onsuccess=()=>{let a;let s=n.result,i=s.transaction(l,"readwrite"),u=i.objectStore(l),c=u.get(e);c.onsuccess=()=>{if(null==c.result)return s.close(),r(Error(`Cannot find model with path '${e}' in IndexedDB.`));{// First, delete the entry in the info store.
let n=u.delete(e),i=()=>{// Second, delete the entry in the model store.
a=s.transaction(o,"readwrite");let n=a.objectStore(o),i=n.delete(e);i.onsuccess=()=>t(c.result.modelArtifactsInfo),i.onerror=e=>r(c.error)};// Proceed with deleting model data regardless of whether deletion
// of info data succeeds or not.
n.onsuccess=i,n.onerror=e=>(i(),s.close(),r(c.error))}},c.onerror=e=>(s.close(),r(c.error)),i.oncomplete=()=>{null==a?s.close():a.oncomplete=()=>s.close()}},n.onerror=e=>r(n.error)})}}}),R("4FRLN",function(e,t){c(e.exports,"encodeWeights",()=>l),c(e.exports,"decodeWeights",()=>u),c(e.exports,"arrayBufferToBase64String",()=>h),c(e.exports,"base64StringToArrayBuffer",()=>f),c(e.exports,"concatenateArrayBuffers",()=>m),c(e.exports,"basename",()=>g),c(e.exports,"getModelJSONForModelArtifacts",()=>y),c(e.exports,"getModelArtifactsForJSONSync",()=>b),c(e.exports,"getModelArtifactsForJSON",()=>v),c(e.exports,"getModelArtifactsInfoForJSON",()=>x),c(e.exports,"getWeightSpecs",()=>w);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("20oDZ"),n=A("erbmM"),a=A("8cCb2"),s=A("2bXta"),i=A("hBb8J"),o=A("6ZWSX").Buffer;async function l(e,t){// TODO(adarob, cais): Support quantization.
let r=[],n=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<a.length;++s){let i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise(async e=>{let t=await o.bytes(),r=t.reduce((e,t)=>e+t.length,0)+4*t.length,n=new Uint8Array(r),a=0;for(let e=0;e<t.length;e++){let r=t[e],s=new Uint8Array(new Uint32Array([r.length]).buffer);n.set(s,a),a+=4,n.set(r,a),a+=r.length}e(n)});n.push(e)}else n.push(o.data());null!=t&&(l.group=t),r.push(l)}let s=await Promise.all(n);return{data:function(e){// TODO(adarob, cais): Support quantization.
if(null===e)throw Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,r=[];e.forEach(e=>{if(t+=e.byteLength,// tslint:disable:no-any
r.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw Error(`Unsupported TypedArray subtype: ${e.constructor.name}`);// tslint:enable:no-any
});let n=new Uint8Array(t),a=0;return r.forEach(e=>{n.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),n.buffer}(s),specs:r}}function u(e,t){let o;// TODO(adarob, cais): Support quantization.
let l=new i.CompositeArrayBuffer(e),u={},c=0;for(let e of t){let t;let i=e.name,d=e.dtype,p=e.shape,h=(0,a.sizeFromShape)(p);if("quantization"in e){let r=e.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r&&"scale"in r))throw Error(`Weight ${e.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else if("float16"===r.dtype){if("float32"!==d)throw Error(`Weight ${e.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${d}.`)}else throw Error(`Weight ${e.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let n=s.DTYPE_VALUE_SIZE_MAP[r.dtype],a=l.slice(c,c+h*n),u="uint8"===r.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===d){if("uint8"===r.dtype||"uint16"===r.dtype){t=new Float32Array(u.length);for(let e=0;e<u.length;e++){let n=u[e];t[e]=n*r.scale+r.min}}else if("float16"===r.dtype)void 0===o&&(o=function(){// Algorithm is based off of
// http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf
// Cache lookup tables
let e=/**
 * Computes mantisa table for casting Float16 to Float32
 * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf
 *
 * @returns Uint32Array, 2048 mantissa lookup values.
 */function(){let e=e=>{let t=e<<13,r=0;for(;(8388608&t)==0;)r-=8388608,t<<=1;return(t&=-8388609)|(r+=947912704)},t=new Uint32Array(2048);t[0]=0;for(let r=1;r<1024;r++)t[r]=e(r);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=/**
 * Computes exponent table for casting Float16 to Float32
 * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf
 *
 * @returns Uint32Array, 64 exponent lookup values.
 */function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),r=/**
 * Computes offset table for casting Float16 to Float32
 * See http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf
 *
 * @returns Uint32Array, 6d offset values.
 */function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return n=>{let a=new ArrayBuffer(4*n.length),s=new Uint32Array(a);for(let a=0;a<n.length;a++){let i=n[a],o=e[r[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}()),t=o(u);else throw Error(`Unsupported quantization type ${r.dtype} for weight type float32.`)}else if("int32"===d){if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);t=new Int32Array(u.length);for(let e=0;e<u.length;e++){let n=u[e];t[e]=Math.round(n*r.scale+r.min)}}else throw Error(`Unsupported dtype in weight '${i}': ${d}`);c+=h*n}else if("string"===d){let r=(0,a.sizeFromShape)(e.shape);t=[];for(let e=0;e<r;e++){let e=new Uint32Array(l.slice(c,c+4))[0];c+=4;let r=new Uint8Array(l.slice(c,c+e));t.push(r),c+=e}}else{let e=s.DTYPE_VALUE_SIZE_MAP[d],a=l.slice(c,c+h*e);if("float32"===d)t=new Float32Array(a);else if("int32"===d)t=new Int32Array(a);else if("bool"===d)t=new Uint8Array(a);else if("complex64"===d){t=new Float32Array(a);let e=new Float32Array(t.length/2),s=new Float32Array(t.length/2);for(let r=0;r<e.length;r++)e[r]=t[2*r],s[r]=t[2*r+1];let o=(0,n.tensor)(e,p,"float32"),l=(0,n.tensor)(s,p,"float32");u[i]=(0,r.complex)(o,l),o.dispose(),l.dispose()}else throw Error(`Unsupported dtype in weight '${i}': ${d}`);c+=h*e}"complex64"!==d&&(u[i]=(0,n.tensor)(t,p,d))}return u}// Use Buffer on Node.js instead of Blob/atob/btoa
let d=void 0!==o&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function p(e){return d?o.byteLength(e,"utf8"):new Blob([e]).size}function h(e){if(d)return o.from(e).toString("base64");let t=new Uint8Array(e),r="";for(let e=0,n=t.length;e<n;e++)r+=String.fromCharCode(t[e]);return btoa(r)}function f(e){if(d){let t=o.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r.set([t.charCodeAt(e)],e);return r.buffer}function m(e){return(0,i.CompositeArrayBuffer).join(e)}function g(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function y(e,t){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),r}function b(e,t,r){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw Error("modelJSON has weightsManifest but weightSpecs is null");if(!r)throw Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=t,n.weightData=r}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),n}async function v(e,t){let r,n;return null!=e.weightsManifest&&([r,n]=await t(e.weightsManifest)),b(e,r,n)}function x(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:p(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:p(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new i.CompositeArrayBuffer(e.weightData).byteLength}}function w(e){let t=[];for(let r of e)t.push(...r.weights);return t}}),R("20oDZ",function(e,t){c(e.exports,"complex",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({complex_:/**
 * Converts two real numbers to a complex number.
 *
 * Given a tensor `real` representing the real part of a complex number, and a
 * tensor `imag` representing the imaginary part of a complex number, this
 * operation returns complex numbers elementwise of the form [r0, i0, r1, i1],
 * where r represents the real part and i represents the imag part.
 *
 * The input tensors real and imag must have the same shape.
 *
 * ```js
 * const real = tf.tensor1d([2.25, 3.25]);
 * const imag = tf.tensor1d([4.75, 5.75]);
 * const complex = tf.complex(real, imag);
 *
 * complex.print();
 * ```
 *
 * @doc {heading: 'Tensors', subheading: 'Creation'}
 */function(e,t){let i=(0,a.convertToTensor)(e,"real","complex"),o=(0,a.convertToTensor)(t,"imag","complex");return s.assertShapesMatch(i.shape,o.shape,`real and imag shapes, ${i.shape} and ${o.shape}, must match in call to tf.complex().`),(0,r.ENGINE).runKernel(n.Complex,{real:i,imag:o})}})}),R("5xBLk",function(e,t){c(e.exports,"inferShape",()=>l),c(e.exports,"convertToTensor",()=>d),c(e.exports,"convertToTensorArray",()=>p);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("ibsdL"),a=A("9jCh7"),s=A("2MDja"),i=A("8cCb2"),o=A("jjNRA"),i=A("8cCb2");function l(e,t){let r=e;if((0,o.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,s.isWebGLData)(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,s.isWebGPUData)(e))return[e.buffer.size/(null==t?4:(0,i.bytesPerElement)(t))];if(!Array.isArray(e))return[];// Scalar.
let a=[];for(;Array.isArray(r)||(0,o.isTypedArray)(r)&&"string"!==t;)a.push(r.length),r=r[0];return Array.isArray(e)&&(0,n.env)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,r,n){if(n=n||[],!Array.isArray(t)&&!(0,o.isTypedArray)(t)){(0,i.assert)(0===r.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${r[0]} elements`);return}(0,i.assert)(r.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),(0,i.assert)(t.length===r[0],()=>`Element arr[${n.join("][")}] should have ${r[0]} elements, but has ${t.length} elements`);let a=r.slice(1);for(let r=0;r<t.length;++r)e(t[r],a,n.concat(r))}(e,a,[]),a}function u(e,t,r,n){if("string_or_numeric"!==e){if(null==e)throw Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw Error(`Argument '${r}' passed to '${n}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n,s="numeric"){if(e instanceof(0,a.getGlobalTensorClass)())return u(s,e.dtype,t,n),e;let c=(0,i.inferDtype)(e);if("string"!==c&&["bool","int32","float32"].indexOf(s)>=0&&(c=s),u(s,c,t,n),null==e||!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let r=null==e?"null":e.constructor.name;throw Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}let d=l(e,c);(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]);let p="string"!==c?(0,o.toTypedArray)(e,c):(0,o.flatten)(e,[],!0);return(0,r.ENGINE).makeTensor(p,d,c)}function p(e,t,r,n="numeric"){if(!Array.isArray(e))throw Error(`Argument ${t} passed to ${r} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>d(e,`${t}[${a}]`,r,n))}}),R("jqSCG",function(e,t){c(e.exports,"OP_SCOPE_SUFFIX",()=>a),c(e.exports,"op",()=>s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("8cCb2");let a="__op";function s(e){let t=Object.keys(e);if(1!==t.length)throw Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let s=t[0],i=e[s];s.endsWith("_")&&(s=s.substring(0,s.length-1)),// add an __op suffix to distinguish ops from kernels in tf.profile
s+=a;// tslint:disable-next-line:no-any
let o=(...e)=>{(0,r.ENGINE).startScope(s);try{let t=i(...e);return(0,n.isPromise)(t)&&console.error("Cannot return a Promise inside of tidy."),(0,r.ENGINE).endScope(t),t}catch(e){throw(0,r.ENGINE).endScope(null),e}};// tslint:disable-next-line:no-any
return Object.defineProperty(o,"name",{value:s,configurable:!0}),o}}),R("erbmM",function(e,t){c(e.exports,"tensor",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("dKr4X");function a(e,t,a){let s=(0,r.inferShape)(e,a);return(0,n.makeTensor)(e,t,s,a)}}),R("dKr4X",function(e,t){c(e.exports,"makeTensor",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("2MDja"),a=A("8cCb2"),s=A("jjNRA");function i(e,t,i,o){if(null==o)o=(0,a.inferDtype)(e);else if("complex64"===o)throw Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,n.isWebGPUData)(e)||(0,n.isWebGLData)(e)){if("float32"!==o&&"int32"!==o)throw Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${o}.`);return(0,r.ENGINE).backend.createTensorFromGPUData(e,t||i,o)}if(!(0,s.isTypedArray)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");// Verify that the shape matches the inferred shape.
if(null!=t){(0,a.assertNonNegativeIntegerDimensions)(t);let e=(0,a.sizeFromShape)(t),r=(0,a.sizeFromShape)(i);(0,a.assert)(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<i.length;++e){let r=i[e],n=e!==i.length-1||r!==(0,a.sizeFromShape)(t.slice(e));(0,a.assert)(i[e]===t[e]||!n,()=>`Error creating a new Tensor. Inferred shape (${i}) does not match the provided shape (${t}). `)}}return(0,s.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||i,e="string"!==o?(0,s.toTypedArray)(e,o):(0,s.flatten)(e,[],!0),(0,r.ENGINE).makeTensor(e,t,o)}}),R("2bXta",function(e,t){c(e.exports,"DTYPE_VALUE_SIZE_MAP",()=>r);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//* Type definitions for exporting and importing of models. *//**
 * A map from Tensor dtype to number of bytes per element of the Tensor.
 */let r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}}),R("hBb8J",function(e,t){c(e.exports,"CompositeArrayBuffer",()=>n);var r=A("jjNRA");class n{/**
     * Concatenate a number of ArrayBuffers into one.
     *
     * @param buffers An array of ArrayBuffers to concatenate, or a single
     *     ArrayBuffer.
     * @returns Result of concatenating `buffers` in order.
     */static join(e){return new n(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map(e=>r.isTypedArray(e)?e.buffer:e)).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let r=0;r<e.length;r++){let n=e[r];r!==e.length-1&&n.byteLength!==this.bufferUniformSize&&// uniform.
(this.bufferUniformSize=void 0);// Create the shards, including their start and end points.
let a=t+n.byteLength;this.shards.push({buffer:n,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){// If there are no shards, then the CompositeArrayBuffer was initialized
// with no data.
if(0===this.shards.length||(// NaN is treated as zero for slicing. This matches ArrayBuffer's behavior.
e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,// Fix the bounds to within the array.
e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e))return new ArrayBuffer(0);let r=this.findShardForByte(e);if(-1===r)// within 0 and the composite array's length.
throw Error(`Could not find start shard for byte ${e}`);let n=t-e,a=new ArrayBuffer(n),s=new Uint8Array(a),i=0;for(let n=r;n<this.shards.length;n++){let r=this.shards[n],a=e+i,o=a-r.start,l=i,u=Math.min(t,r.end),c=u-r.start,d=new Uint8Array(r.buffer,o,c-o);if(s.set(d,l),i+=d.length,t<r.end)break}return a}/**
     * Get the index of the shard that contains the byte at `byteIndex`.
     */findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return -1;// If the buffers have a uniform size, compute the shard directly.
if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;// If the buffers don't have a uniform size, we need to search for the
// shard. That means we need a function to check where the byteIndex lies
// relative to a given shard.
function t(t){return e<t.start?-1:e>=t.end?1:0}// For efficiency, try the previous shard first.
if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;// Otherwise, use a generic search function.
// This should almost never end up being used in practice since the weight
// entries should always be in order.
let r=function(e,t){// Binary search
let r=0,n=e.length;for(;r<=n;){let a=Math.floor((n-r)/2)+r,s=t(e[a]);if(0===s)return a;s<0?n=a:r=a+1}return -1}(this.shards,t);return -1===r?-1:(this.previousShardIndex=r,this.previousShardIndex)}}}),R("6ZWSX",function(e,t){c(e.exports,"Buffer",()=>r,e=>r=e),c(e.exports,"INSPECT_MAX_BYTES",()=>n,e=>n=e);var r,n,a=A("kuxul"),s=A("9NvM5");let i="function"==typeof Symbol&&"function"// eslint-disable-line dot-notation
==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom")// eslint-disable-line dot-notation
:null;function o(e){if(e>2147483647)throw RangeError('The value "'+e+'" is invalid for option "size"');// Return an augmented `Uint8Array` instance
let t=new Uint8Array(e);return Object.setPrototypeOf(t,l.prototype),t}/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */function l(e,t,r){// Common case.
if("number"==typeof e){if("string"==typeof t)throw TypeError('The "string" argument must be of type string. Received type number');return p(e)}return u(e,t,r)}function u(e,t,r){if("string"==typeof e)return function(e,t){if(("string"!=typeof t||""===t)&&(t="utf8"),!l.isEncoding(t))throw TypeError("Unknown encoding: "+t);let r=0|g(e,t),n=o(r),a=n.write(e,t);return a!==r&&// cause everything after the first invalid character to be ignored. (e.g.
// 'abxxcd' will be treated as 'ab')
(n=n.slice(0,a)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(B(e,Uint8Array)){let t=new Uint8Array(e);return f(t.buffer,t.byteOffset,t.byteLength)}return h(e)}(e);if(null==e)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(B(e,ArrayBuffer)||e&&B(e.buffer,ArrayBuffer)||"undefined"!=typeof SharedArrayBuffer&&(B(e,SharedArrayBuffer)||e&&B(e.buffer,SharedArrayBuffer)))return f(e,t,r);if("number"==typeof e)throw TypeError('The "value" argument must not be of type number. Received type number');let n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return l.from(n,t,r);let a=function(e){var t;if(l.isBuffer(e)){let t=0|m(e.length),r=o(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?"number"!=typeof e.length||(t=e.length)!=t// eslint-disable-line no-self-compare
?o(0):h(e):"Buffer"===e.type&&Array.isArray(e.data)?h(e.data):void 0}(e);if(a)return a;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return l.from(e[Symbol.toPrimitive]("string"),t,r);throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function d(e){if("number"!=typeof e)throw TypeError('"size" argument must be of type number');if(e<0)throw RangeError('The value "'+e+'" is invalid for option "size"')}function p(e){return d(e),o(e<0?0:0|m(e))}function h(e){let t=e.length<0?0:0|m(e.length),r=o(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function f(e,t,r){let n;if(t<0||e.byteLength<t)throw RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw RangeError('"length" is outside of buffer bounds');return(// Return an augmented `Uint8Array` instance
Object.setPrototypeOf(n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),l.prototype),n)}function m(e){// Note: cannot use `length < K_MAX_LENGTH` here because that fails when
// length is NaN (which is otherwise coerced to zero.)
if(e>=2147483647)throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");return 0|e}function g(e,t){if(l.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||B(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);let r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;// Use a for loop to avoid recursion
let a=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return F(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return L(e).length;default:if(a)return n?-1:F(e).length// assume utf8
;t=(""+t).toLowerCase(),a=!0}}function y(e,t,r){let n=!1;// Return early if start > this.length. Done here to prevent potential uint32
// coercion fail below.
if((void 0===t||t<0)&&(t=0),t>this.length||((void 0===r||r>this.length)&&(r=this.length),r<=0||// Force coercion to uint32. This will also coerce falsey/NaN values to 0.
(r>>>=0)<=(t>>>=0)))return"";for(e||(e="utf8");;)switch(e){case"hex":return function(e,t,r){let n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let a="";for(let n=t;n<r;++n)a+=z[e[n]];return a}(this,t,r);case"utf8":case"utf-8":return w(this,t,r);case"ascii":return function(e,t,r){let n="";r=Math.min(e.length,r);for(let a=t;a<r;++a)n+=String.fromCharCode(127&e[a]);return n}(this,t,r);case"latin1":case"binary":return function(e,t,r){let n="";r=Math.min(e.length,r);for(let a=t;a<r;++a)n+=String.fromCharCode(e[a]);return n}(this,t,r);case"base64":var s,i;return s=t,i=r,0===s&&i===this.length?a.fromByteArray(this):a.fromByteArray(this.slice(s,i));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return function(e,t,r){let n=e.slice(t,r),a="";// If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
for(let e=0;e<n.length-1;e+=2)a+=String.fromCharCode(n[e]+256*n[e+1]);return a}(this,t,r);default:if(n)throw TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function b(e,t,r){let n=e[t];e[t]=e[r],e[r]=n}// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function v(e,t,r,n,a){var s;// Empty buffer means no match
if(0===e.length)return -1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),(s=r=+r// Coerce to Number.
)!=s&&(r=a?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(a)return -1;r=e.length-1}else if(r<0){if(!a)return -1;r=0}// Finally, search either indexOf (if dir is true) or lastIndexOf
if("string"==typeof t&&(t=l.from(t,n)),l.isBuffer(t))return(// Special case: looking for empty string/buffer always fails
0===t.length?-1:x(e,t,r,n,a));if("number"==typeof t)return(t&=255// Search for a byte value [0-255]
,"function"==typeof Uint8Array.prototype.indexOf)?a?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):x(e,[t],r,n,a);throw TypeError("val must be string, number or Buffer")}function x(e,t,r,n,a){let s,i=1,o=e.length,l=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return -1;i=2,o/=2,l/=2,r/=2}function u(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(a){let n=-1;for(s=r;s<o;s++)if(u(e,s)===u(t,-1===n?0:s-n)){if(-1===n&&(n=s),s-n+1===l)return n*i}else -1!==n&&(s-=s-n),n=-1}else for(r+l>o&&(r=o-l),s=r;s>=0;s--){let r=!0;for(let n=0;n<l;n++)if(u(e,s+n)!==u(t,n)){r=!1;break}if(r)return s}return -1}function w(e,t,r){r=Math.min(e.length,r);let n=[],a=t;for(;a<r;){let t=e[a],s=null,i=t>239?4:t>223?3:t>191?2:1;if(a+i<=r){let r,n,o,l;switch(i){case 1:t<128&&(s=t);break;case 2:(192&(r=e[a+1]))==128&&(l=(31&t)<<6|63&r)>127&&(s=l);break;case 3:r=e[a+1],n=e[a+2],(192&r)==128&&(192&n)==128&&(l=(15&t)<<12|(63&r)<<6|63&n)>2047&&(l<55296||l>57343)&&(s=l);break;case 4:r=e[a+1],n=e[a+2],o=e[a+3],(192&r)==128&&(192&n)==128&&(192&o)==128&&(l=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&o)>65535&&l<1114112&&(s=l)}}null===s?(// we did not generate a valid codePoint so insert a
// replacement char (U+FFFD) and advance only 1 byte
s=65533,i=1):s>65535&&(// encode to utf16 (surrogate pair dance)
s-=65536,n.push(s>>>10&1023|55296),s=56320|1023&s),n.push(s),a+=i}return function(e){let t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e)// avoid extra slice()
;// Decode in chunks to avoid "call stack size exceeded".
let r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=4096));return r}(n)}/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */function k(e,t,r){if(e%1!=0||e<0)throw RangeError("offset is not uint");if(e+t>r)throw RangeError("Trying to access beyond buffer length")}function S(e,t,r,n,a,s){if(!l.isBuffer(e))throw TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<s)throw RangeError('"value" argument is out of bounds');if(r+n>e.length)throw RangeError("Index out of range")}function N(e,t,r,n,a){P(t,n,a,e,r,7);let s=Number(t&BigInt(4294967295));e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,r}function T(e,t,r,n,a){P(t,n,a,e,r,7);let s=Number(t&BigInt(4294967295));e[r+7]=s,s>>=8,e[r+6]=s,s>>=8,e[r+5]=s,s>>=8,e[r+4]=s;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=i,i>>=8,e[r+2]=i,i>>=8,e[r+1]=i,i>>=8,e[r]=i,r+8}function I(e,t,r,n,a,s){if(r+n>e.length||r<0)throw RangeError("Index out of range")}function C(e,t,r,n,a){return t=+t,r>>>=0,a||I(e,t,r,4,34028234663852886e22,-34028234663852886e22),s.write(e,t,r,n,23,4),r+4}function E(e,t,r,n,a){return t=+t,r>>>=0,a||I(e,t,r,8,17976931348623157e292,-17976931348623157e292),s.write(e,t,r,n,52,8),r+8}r=l,n=50,/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */l.TYPED_ARRAY_SUPPORT=function(){// Can typed array instances can be augmented?
try{let e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),l.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(l.prototype,"parent",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.buffer}}),Object.defineProperty(l.prototype,"offset",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.byteOffset}}),l.poolSize=8192// not used by this implementation
,/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/l.from=function(e,t,r){return u(e,t,r)},// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(l.prototype,Uint8Array.prototype),Object.setPrototypeOf(l,Uint8Array),/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/l.alloc=function(e,t,r){return(d(e),e<=0)?o(e):void 0!==t?"string"==typeof r?o(e).fill(t,r):o(e).fill(t):o(e)},/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */l.allocUnsafe=function(e){return p(e)},/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */l.allocUnsafeSlow=function(e){return p(e)},l.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==l.prototype// so Buffer.isBuffer(Buffer.prototype) will be false
},l.compare=function(e,t){if(B(e,Uint8Array)&&(e=l.from(e,e.offset,e.byteLength)),B(t,Uint8Array)&&(t=l.from(t,t.offset,t.byteLength)),!l.isBuffer(e)||!l.isBuffer(t))throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let a=0,s=Math.min(r,n);a<s;++a)if(e[a]!==t[a]){r=e[a],n=t[a];break}return r<n?-1:n<r?1:0},l.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(e,t){let r;if(!Array.isArray(e))throw TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return l.alloc(0);if(void 0===t)for(r=0,t=0;r<e.length;++r)t+=e[r].length;let n=l.allocUnsafe(t),a=0;for(r=0;r<e.length;++r){let t=e[r];if(B(t,Uint8Array))a+t.length>n.length?(l.isBuffer(t)||(t=l.from(t)),t.copy(n,a)):Uint8Array.prototype.set.call(n,t,a);else if(l.isBuffer(t))t.copy(n,a);else throw TypeError('"list" argument must be an Array of Buffers');a+=t.length}return n},l.byteLength=g,// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
l.prototype._isBuffer=!0,l.prototype.swap16=function(){let e=this.length;if(e%2!=0)throw RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)b(this,t,t+1);return this},l.prototype.swap32=function(){let e=this.length;if(e%4!=0)throw RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)b(this,t,t+3),b(this,t+1,t+2);return this},l.prototype.swap64=function(){let e=this.length;if(e%8!=0)throw RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)b(this,t,t+7),b(this,t+1,t+6),b(this,t+2,t+5),b(this,t+3,t+4);return this},l.prototype.toString=function(){let e=this.length;return 0===e?"":0==arguments.length?w(this,0,e):y.apply(this,arguments)},l.prototype.toLocaleString=l.prototype.toString,l.prototype.equals=function(e){if(!l.isBuffer(e))throw TypeError("Argument must be a Buffer");return this===e||0===l.compare(this,e)},l.prototype.inspect=function(){let e="",t=n;return e=this.toString("hex",0,t).replace(/(.{2})/g,"$1 ").trim(),this.length>t&&(e+=" ... "),"<Buffer "+e+">"},i&&(l.prototype[i]=l.prototype.inspect),l.prototype.compare=function(e,t,r,n,a){if(B(e,Uint8Array)&&(e=l.from(e,e.offset,e.byteLength)),!l.isBuffer(e))throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===a&&(a=this.length),t<0||r>e.length||n<0||a>this.length)throw RangeError("out of range index");if(n>=a&&t>=r)return 0;if(n>=a)return -1;if(t>=r)return 1;if(t>>>=0,r>>>=0,n>>>=0,a>>>=0,this===e)return 0;let s=a-n,i=r-t,o=Math.min(s,i),u=this.slice(n,a),c=e.slice(t,r);for(let e=0;e<o;++e)if(u[e]!==c[e]){s=u[e],i=c[e];break}return s<i?-1:i<s?1:0},l.prototype.includes=function(e,t,r){return -1!==this.indexOf(e,t,r)},l.prototype.indexOf=function(e,t,r){return v(this,e,t,r,!0)},l.prototype.lastIndexOf=function(e,t,r){return v(this,e,t,r,!1)},l.prototype.write=function(e,t,r,n){var a,s,i,o,l,u,c,d;// Buffer#write(string)
if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else if(isFinite(t))t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0);else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");let p=this.length-t;if((void 0===r||r>p)&&(r=p),e.length>0&&(r<0||t<0)||t>this.length)throw RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let h=!1;for(;;)switch(n){case"hex":return function(e,t,r,n){let a;r=Number(r)||0;let s=e.length-r;n?(n=Number(n))>s&&(n=s):n=s;let i=t.length;for(n>i/2&&(n=i/2),a=0;a<n;++a){let n=parseInt(t.substr(2*a,2),16);if(n!=n)break;e[r+a]=n}return a}(this,e,t,r);case"utf8":case"utf-8":return a=t,s=r,j(F(e,this.length-a),this,a,s);case"ascii":case"latin1":case"binary":return i=t,o=r,j(function(e){let t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(e),this,i,o);case"base64":// Warning: maxLength not taken into account in base64Write
return l=t,u=r,j(L(e),this,l,u);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return c=t,d=r,j(function(e,t){let r,n;let a=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)n=(r=e.charCodeAt(s))>>8,a.push(r%256),a.push(n);return a}(e,this.length-c),this,c,d);default:if(h)throw TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),h=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},l.prototype.slice=function(e,t){let r=this.length;e=~~e,t=void 0===t?r:~~t,e<0?(e+=r)<0&&(e=0):e>r&&(e=r),t<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);let n=this.subarray(e,t);return(// Return an augmented `Uint8Array` instance
Object.setPrototypeOf(n,l.prototype),n)},l.prototype.readUintLE=l.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||k(e,t,this.length);let n=this[e],a=1,s=0;for(;++s<t&&(a*=256);)n+=this[e+s]*a;return n},l.prototype.readUintBE=l.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||k(e,t,this.length);let n=this[e+--t],a=1;for(;t>0&&(a*=256);)n+=this[e+--t]*a;return n},l.prototype.readUint8=l.prototype.readUInt8=function(e,t){return e>>>=0,t||k(e,1,this.length),this[e]},l.prototype.readUint16LE=l.prototype.readUInt16LE=function(e,t){return e>>>=0,t||k(e,2,this.length),this[e]|this[e+1]<<8},l.prototype.readUint16BE=l.prototype.readUInt16BE=function(e,t){return e>>>=0,t||k(e,2,this.length),this[e]<<8|this[e+1]},l.prototype.readUint32LE=l.prototype.readUInt32LE=function(e,t){return e>>>=0,t||k(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},l.prototype.readUint32BE=l.prototype.readUInt32BE=function(e,t){return e>>>=0,t||k(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},l.prototype.readBigUInt64LE=V(function(e){$(e>>>=0,"offset");let t=this[e],r=this[e+7];(void 0===t||void 0===r)&&D(e,this.length-8);let n=t+256*this[++e]+65536*this[++e]+16777216*this[++e],a=this[++e]+256*this[++e]+65536*this[++e]+16777216*r;return BigInt(n)+(BigInt(a)<<BigInt(32))}),l.prototype.readBigUInt64BE=V(function(e){$(e>>>=0,"offset");let t=this[e],r=this[e+7];(void 0===t||void 0===r)&&D(e,this.length-8);let n=16777216*t+65536*this[++e]+256*this[++e]+this[++e],a=16777216*this[++e]+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(a)}),l.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||k(e,t,this.length);let n=this[e],a=1,s=0;for(;++s<t&&(a*=256);)n+=this[e+s]*a;return n>=(a*=128)&&(n-=Math.pow(2,8*t)),n},l.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||k(e,t,this.length);let n=t,a=1,s=this[e+--n];for(;n>0&&(a*=256);)s+=this[e+--n]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*t)),s},l.prototype.readInt8=function(e,t){return(e>>>=0,t||k(e,1,this.length),128&this[e])?-((255-this[e]+1)*1):this[e]},l.prototype.readInt16LE=function(e,t){e>>>=0,t||k(e,2,this.length);let r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},l.prototype.readInt16BE=function(e,t){e>>>=0,t||k(e,2,this.length);let r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},l.prototype.readInt32LE=function(e,t){return e>>>=0,t||k(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},l.prototype.readInt32BE=function(e,t){return e>>>=0,t||k(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},l.prototype.readBigInt64LE=V(function(e){$(e>>>=0,"offset");let t=this[e],r=this[e+7];(void 0===t||void 0===r)&&D(e,this.length-8);let n=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24// Overflow
);return(BigInt(n)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+16777216*this[++e])}),l.prototype.readBigInt64BE=V(function(e){$(e>>>=0,"offset");let t=this[e],r=this[e+7];(void 0===t||void 0===r)&&D(e,this.length-8);let n=(t<<24)+// Overflow
65536*this[++e]+256*this[++e]+this[++e];return(BigInt(n)<<BigInt(32))+BigInt(16777216*this[++e]+65536*this[++e]+256*this[++e]+r)}),l.prototype.readFloatLE=function(e,t){return e>>>=0,t||k(e,4,this.length),s.read(this,e,!0,23,4)},l.prototype.readFloatBE=function(e,t){return e>>>=0,t||k(e,4,this.length),s.read(this,e,!1,23,4)},l.prototype.readDoubleLE=function(e,t){return e>>>=0,t||k(e,8,this.length),s.read(this,e,!0,52,8)},l.prototype.readDoubleBE=function(e,t){return e>>>=0,t||k(e,8,this.length),s.read(this,e,!1,52,8)},l.prototype.writeUintLE=l.prototype.writeUIntLE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){let n=Math.pow(2,8*r)-1;S(this,e,t,r,n,0)}let a=1,s=0;for(this[t]=255&e;++s<r&&(a*=256);)this[t+s]=e/a&255;return t+r},l.prototype.writeUintBE=l.prototype.writeUIntBE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){let n=Math.pow(2,8*r)-1;S(this,e,t,r,n,0)}let a=r-1,s=1;for(this[t+a]=255&e;--a>=0&&(s*=256);)this[t+a]=e/s&255;return t+r},l.prototype.writeUint8=l.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,1,255,0),this[t]=255&e,t+1},l.prototype.writeUint16LE=l.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeUint16BE=l.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeUint32LE=l.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},l.prototype.writeUint32BE=l.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigUInt64LE=V(function(e,t=0){return N(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),l.prototype.writeBigUInt64BE=V(function(e,t=0){return T(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),l.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){let n=Math.pow(2,8*r-1);S(this,e,t,r,n-1,-n)}let a=0,s=1,i=0;for(this[t]=255&e;++a<r&&(s*=256);)e<0&&0===i&&0!==this[t+a-1]&&(i=1),this[t+a]=(e/s>>0)-i&255;return t+r},l.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){let n=Math.pow(2,8*r-1);S(this,e,t,r,n-1,-n)}let a=r-1,s=1,i=0;for(this[t+a]=255&e;--a>=0&&(s*=256);)e<0&&0===i&&0!==this[t+a+1]&&(i=1),this[t+a]=(e/s>>0)-i&255;return t+r},l.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},l.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},l.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||S(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigInt64LE=V(function(e,t=0){return N(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),l.prototype.writeBigInt64BE=V(function(e,t=0){return T(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),l.prototype.writeFloatLE=function(e,t,r){return C(this,e,t,!0,r)},l.prototype.writeFloatBE=function(e,t,r){return C(this,e,t,!1,r)},l.prototype.writeDoubleLE=function(e,t,r){return E(this,e,t,!0,r)},l.prototype.writeDoubleBE=function(e,t,r){return E(this,e,t,!1,r)},// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
l.prototype.copy=function(e,t,r,n){if(!l.isBuffer(e))throw TypeError("argument should be a Buffer");// Copy 0 bytes; we're done
if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r||0===e.length||0===this.length)return 0;// Fatal error conditions
if(t<0)throw RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw RangeError("Index out of range");if(n<0)throw RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);let a=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),a},// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
l.prototype.fill=function(e,t,r,n){let a;// Handle string cases:
if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw TypeError("encoding must be a string");if("string"==typeof n&&!l.isEncoding(n))throw TypeError("Unknown encoding: "+n);if(1===e.length){let t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));// Invalid ranges are not set to a default, so can range check early.
if(t<0||this.length<t||this.length<r)throw RangeError("Out of range index");if(r<=t)return this;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(a=t;a<r;++a)this[a]=e;else{let s=l.isBuffer(e)?e:l.from(e,n),i=s.length;if(0===i)throw TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<r-t;++a)this[a+t]=s[a%i]}return this};// CUSTOM ERRORS
// =============
// Simplified versions from Node, changed for Buffer-only usage
let R={};function _(e,t,r){R[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),// Add the error code to the name to include it in the stack trace.
this.name=`${this.name} [${e}]`,// Access the stack to generate the error message including the error code
// from the name.
this.stack// eslint-disable-line no-unused-expressions
,// Reset the name to the actual name.
delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function O(e){let t="",r=e.length,n="-"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function P(e,t,r,n,a,s){if(e>r||e<t){let n;let a="bigint"==typeof t?"n":"";throw n=s>3?0===t||t===BigInt(0)?`>= 0${a} and < 2${a} ** ${(s+1)*8}${a}`:`>= -(2${a} ** ${(s+1)*8-1}${a}) and < 2 ** ${(s+1)*8-1}${a}`:`>= ${t}${a} and <= ${r}${a}`,new R.ERR_OUT_OF_RANGE("value",n,e)}$(a,"offset"),(void 0===n[a]||void 0===n[a+s])&&D(a,n.length-(s+1))}function $(e,t){if("number"!=typeof e)throw new R.ERR_INVALID_ARG_TYPE(t,"number",e)}function D(e,t,r){if(Math.floor(e)!==e)throw $(e,r),new R.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new R.ERR_BUFFER_OUT_OF_BOUNDS;throw new R.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}_("ERR_BUFFER_OUT_OF_BOUNDS",function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),_("ERR_INVALID_ARG_TYPE",function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`},TypeError),_("ERR_OUT_OF_RANGE",function(e,t,r){let n=`The value of "${e}" is out of range.`,a=r;return Number.isInteger(r)&&Math.abs(r)>4294967296?a=O(String(r)):"bigint"==typeof r&&(a=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(a=O(a)),a+="n"),n+=` It must be ${t}. Received ${a}`},RangeError);// HELPER FUNCTIONS
// ================
let M=/[^+/0-9A-Za-z-_]/g;function F(e,t){let r;t=t||1/0;let n=e.length,a=null,s=[];for(let i=0;i<n;++i){// is surrogate component
if((r=e.charCodeAt(i))>55295&&r<57344){// last char was a lead
if(!a){// no lead yet
if(r>56319||i+1===n){// unexpected trail
(t-=3)>-1&&s.push(239,191,189);continue}// valid lead
a=r;continue}// 2 leads in a row
if(r<56320){(t-=3)>-1&&s.push(239,191,189),a=r;continue}// valid surrogate pair
r=(a-55296<<10|r-56320)+65536}else a&&(t-=3)>-1&&s.push(239,191,189);// encode utf8
if(a=null,r<128){if((t-=1)<0)break;s.push(r)}else if(r<2048){if((t-=2)<0)break;s.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;s.push(r>>12|224,r>>6&63|128,63&r|128)}else if(r<1114112){if((t-=4)<0)break;s.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}else throw Error("Invalid code point")}return s}function L(e){return a.toByteArray(function(e){// Node converts strings with length < 2 to ''
if(// Node strips out invalid characters like \n and \t from the string, base64-js does not
(e=// Node takes equal signs as end of the Base64 encoding
(e=e.split("=")[0]).trim().replace(M,"")).length<2)return"";// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
for(;e.length%4!=0;)e+="=";return e}(e))}function j(e,t,r,n){let a;for(a=0;a<n&&!(a+r>=t.length)&&!(a>=e.length);++a)t[a+r]=e[a];return a}// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function B(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
let z=function(){let e="0123456789abcdef",t=Array(256);for(let r=0;r<16;++r){let n=16*r;for(let a=0;a<16;++a)t[n+a]=e[r]+e[a]}return t}();// Return not function with Error if BigInt not supported
function V(e){return"undefined"==typeof BigInt?G:e}function G(){throw Error("BigInt not supported")}}),R("kuxul",function(e,t){c(e.exports,"toByteArray",()=>r,e=>r=e),c(e.exports,"fromByteArray",()=>n,e=>n=e),r=function(e){var t,r,n=function(e){var t=e.length;if(t%4>0)throw Error("Invalid string. Length must be a multiple of 4");// Trim off extra bytes after placeholder bytes are found
// See: https://github.com/beatgammit/base64-js/issues/42
var r=e.indexOf("=");-1===r&&(r=t);var n=r===t?0:4-r%4;return[r,n]}(e),a=n[0],o=n[1],l=new i((a+o)*3/4-o),u=0,c=o>0?a-4:a;for(r=0;r<c;r+=4)t=s[e.charCodeAt(r)]<<18|s[e.charCodeAt(r+1)]<<12|s[e.charCodeAt(r+2)]<<6|s[e.charCodeAt(r+3)],l[u++]=t>>16&255,l[u++]=t>>8&255,l[u++]=255&t;return 2===o&&(t=s[e.charCodeAt(r)]<<2|s[e.charCodeAt(r+1)]>>4,l[u++]=255&t),1===o&&(t=s[e.charCodeAt(r)]<<10|s[e.charCodeAt(r+1)]<<4|s[e.charCodeAt(r+2)]>>2,l[u++]=t>>8&255,l[u++]=255&t),l},n=function(e){// go through the array every three bytes, we'll deal with trailing stuff later
for(var t,r=e.length,n=r%3// if we have 1 byte left, pad 2 bytes
,s=[],i=0,o=r-n;i<o;i+=16383// must be multiple of 3
)s.push(function(e,t,r){for(var n,s=[],i=t;i<r;i+=3)s.push(a[(n=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]))>>18&63]+a[n>>12&63]+a[n>>6&63]+a[63&n]);return s.join("")}(e,i,i+16383>o?o:i+16383));return 1===n?s.push(a[(t=e[r-1])>>2]+a[t<<4&63]+"=="):2===n&&s.push(a[(t=(e[r-2]<<8)+e[r-1])>>10]+a[t>>4&63]+a[t<<2&63]+"="),s.join("")};for(var r,n,a=[],s=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",l=0,u=o.length;l<u;++l)a[l]=o[l],s[o.charCodeAt(l)]=l;// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
s["-".charCodeAt(0)]=62,s["_".charCodeAt(0)]=63}),R("9NvM5",function(e,t){var r,n;c(e.exports,"read",()=>r,e=>r=e),c(e.exports,"write",()=>n,e=>n=e),r=function(e,t,r,n,a){var s,i,o=8*a-n-1,l=(1<<o)-1,u=l>>1,c=-7,d=r?a-1:0,p=r?-1:1,h=e[t+d];for(d+=p,s=h&(1<<-c)-1,h>>=-c,c+=o;c>0;s=256*s+e[t+d],d+=p,c-=8);for(i=s&(1<<-c)-1,s>>=-c,c+=n;c>0;i=256*i+e[t+d],d+=p,c-=8);if(0===s)s=1-u;else{if(s===l)return i?NaN:(h?-1:1)*(1/0);i+=Math.pow(2,n),s-=u}return(h?-1:1)*i*Math.pow(2,s-n)},n=function(e,t,r,n,a,s){var i,o,l,u=8*s-a-1,c=(1<<u)-1,d=c>>1,p=23===a?5960464477539062e-23:0,h=n?0:s-1,f=n?1:-1,m=t<0||0===t&&1/t<0?1:0;for(isNaN(t=Math.abs(t))||t===1/0?(o=isNaN(t)?1:0,i=c):(i=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-i))<1&&(i--,l*=2),i+d>=1?t+=p/l:t+=p*Math.pow(2,1-d),t*l>=2&&(i++,l/=2),i+d>=c?(o=0,i=c):i+d>=1?(o=(t*l-1)*Math.pow(2,a),i+=d):(o=t*Math.pow(2,d-1)*Math.pow(2,a),i=0));a>=8;e[r+h]=255&o,h+=f,o/=256,a-=8);for(i=i<<a|o,u+=a;u>0;e[r+h]=255&i,h+=f,i/=256,u-=8);e[r+h-f]|=128*m}}),R("9RUNn",function(e,t){c(e.exports,"IORouterRegistry",()=>r),c(e.exports,"registerSaveRouter",()=>n),c(e.exports,"registerLoadRouter",()=>a),c(e.exports,"getSaveHandlers",()=>s),c(e.exports,"getLoadHandlers",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==r.instance&&(r.instance=new r),r.instance}/**
     * Register a save-handler router.
     *
     * @param saveRouter A function that maps a URL-like string onto an instance
     * of `IOHandler` with the `save` method defined or `null`.
     */static registerSaveRouter(e){r.getInstance().saveRouters.push(e)}/**
     * Register a load-handler router.
     *
     * @param loadRouter A function that maps a URL-like string onto an instance
     * of `IOHandler` with the `load` method defined or `null`.
     */static registerLoadRouter(e){r.getInstance().loadRouters.push(e)}/**
     * Look up IOHandler for saving, given a URL-like string.
     *
     * @param url
     * @returns If only one match is found, an instance of IOHandler with the
     * `save` method defined. If no match is found, `null`.
     * @throws Error, if more than one match is found.
     */static getSaveHandlers(e){return r.getHandlers(e,"save")}/**
     * Look up IOHandler for loading, given a URL-like string.
     *
     * @param url
     * @param loadOptions Optional, custom load options.
     * @returns All valid handlers for `url`, given the currently registered
     *   handler routers.
     */static getLoadHandlers(e,t){return r.getHandlers(e,"load",t)}static getHandlers(e,t,n){let a=[],s="load"===t?r.getInstance().loadRouters:r.getInstance().saveRouters;return s.forEach(t=>{let r=t(e,n);null!==r&&a.push(r)}),a}}let n=e=>r.registerSaveRouter(e),a=e=>r.registerLoadRouter(e),s=e=>r.getSaveHandlers(e),i=(e,t)=>r.getLoadHandlers(e,t)}),R("h6KCl",function(e,t){c(e.exports,"BrowserLocalStorage",()=>p),c(e.exports,"BrowserLocalStorageManager",()=>f),/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("dcHSK");var r=A("ibsdL"),n=A("8cCb2"),a=A("4FRLN"),s=A("hBb8J"),i=A("9RUNn");let o="tensorflowjs_models",l="info";function u(e){return{info:[o,e,l].join("/"),topology:[o,e,"model_topology"].join("/"),weightSpecs:[o,e,"weight_specs"].join("/"),weightData:[o,e,"weight_data"].join("/"),modelMetadata:[o,e,"model_metadata"].join("/")}}function d(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}/**
 * IOHandler subclass: Browser Local Storage.
 *
 * See the doc string to `browserLocalStorage` for more details.
 */class p{constructor(e){if(!(0,r.env)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)// available.
//   Maybe point to a doc page on the web and/or automatically determine
//   the available IOHandlers and print them in the error message.
throw Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=u(this.modelPath)}/**
     * Save model artifacts to browser local storage.
     *
     * See the documentation to `browserLocalStorage` for details on the saved
     * artifacts.
     *
     * @param modelArtifacts The model artifacts to be stored.
     * @returns An instance of SaveResult.
     */async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),n=(0,a.getModelArtifactsInfoForJSON)(e),i=(0,s.CompositeArrayBuffer).join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(n)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,(0,a.arrayBufferToBase64String)(i));// Note that JSON.stringify doesn't write out keys that have undefined
// values, so for some keys, we set undefined instead of a null-ish
// value.
let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:n}}catch(e){throw(// If saving failed, clean up all items saved so far.
d(this.keys),Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${n.modelTopologyBytes}, weightSpecsBytes=${n.weightSpecsBytes}, weightDataBytes=${n.weightDataBytes}.`))}}}/**
     * Load a model from local storage.
     *
     * See the documentation to `browserLocalStorage` for details on the saved
     * artifacts.
     *
     * @returns The loaded model (if loading succeeds).
     */async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(null==r)throw Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;// Load weight specs.
let n=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==n)throw Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=n;// Load meta-data fields.
let s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){let e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}// Load weight data.
let i=this.LS.getItem(this.keys.weightData);if(null==i)throw Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=(0,a.base64StringToArrayBuffer)(i),t}}p.URL_SCHEME="localstorage://";let h=e=>{var t;return(0,r.env)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(p.URL_SCHEME)?(t=e.slice(p.URL_SCHEME.length),new p(t)):null};(0,i.IORouterRegistry).registerSaveRouter(h),(0,i.IORouterRegistry).registerLoadRouter(h);class f{constructor(){(0,n.assert)((0,r.env)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),(0,n.assert)("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=o+"/",r="/"+l;for(let n=0;n<this.LS.length;++n){let a=this.LS.key(n);if(a.startsWith(t)&&a.endsWith(r)){let t=/**
 * Get model path from a local-storage key.
 *
 * E.g., 'tensorflowjs_models/my/model/1/info' --> 'my/model/1'
 *
 * @param key
 */function(e){let t=e.split("/");if(t.length<3)throw Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join("/")}(a);e[t]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;e=(t=e).startsWith(p.URL_SCHEME)?t.slice(p.URL_SCHEME.length):t;let r=u(e);if(null==this.LS.getItem(r.info))throw Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(r.info));return d(r),n}}}),R("1PMKz",function(e,t){c(e.exports,"ModelStoreManagerRegistry",()=>a),c(e.exports,"listModels",()=>o),c(e.exports,"removeModel",()=>l),c(e.exports,"copyModel",()=>u),c(e.exports,"moveModel",()=>d);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * Classes and functions for model management across multiple storage mediums.
 *
 * Supported client actions:
 * - Listing models on all registered storage mediums.
 * - Remove model by URL from any registered storage mediums, by using URL
 *   string.
 * - Moving or copying model from one path to another in the same medium or from
 *   one medium to another, by using URL strings.
 */var r=A("8cCb2"),n=A("9RUNn");class a{constructor(){this.managers={}}static getInstance(){return null==a.instance&&(a.instance=new a),a.instance}/**
     * Register a save-handler router.
     *
     * @param saveRouter A function that maps a URL-like string onto an instance
     * of `IOHandler` with the `save` method defined or `null`.
     */static registerManager(e,t){(0,r.assert)(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),(0,r.assert)(e.length>0,()=>"scheme must not be an empty string.");let n=a.getInstance();(0,r.assert)(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=a.getInstance().managers[e];if(null==t)throw Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(a.getInstance().managers)}}/**
 * Helper method for parsing a URL string into a scheme and a path.
 *
 * @param url E.g., 'localstorage://my-model'
 * @returns A dictionary with two fields: scheme and path.
 *   Scheme: e.g., 'localstorage' in the example above.
 *   Path: e.g., 'my-model' in the example above.
 */function s(e){if(-1===e.indexOf("://"))throw Error(`The url string provided does not contain a scheme. Supported schemes are: ${a.getSchemes().join(",")}`);return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function i(e,t,i=!1){(0,r.assert)(e!==t,()=>`Old path and new path are the same: '${e}'`);let o=(0,n.IORouterRegistry).getLoadHandlers(e);(0,r.assert)(o.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),(0,r.assert)(o.length<2,()=>`Copying failed because more than one (${o.length}) load handlers for source URL ${e}.`);let l=o[0],u=(0,n.IORouterRegistry).getSaveHandlers(t);(0,r.assert)(u.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),(0,r.assert)(u.length<2,()=>`Copying failed because more than one (${o.length}) save handlers for destination URL ${t}.`);let c=u[0],d=s(e).scheme,p=s(e).path,h=d===s(e).scheme,f=await l.load();i&&h&&await a.getManager(d).removeModel(p);let m=await c.save(f);return i&&!h&&await a.getManager(d).removeModel(p),m.modelArtifactsInfo}/**
 * List all models stored in registered storage mediums.
 *
 * For a web browser environment, the registered mediums are Local Storage and
 * IndexedDB.
 *
 * ```js
 * // First create and save a model.
 * const model = tf.sequential();
 * model.add(tf.layers.dense(
 *     {units: 1, inputShape: [10], activation: 'sigmoid'}));
 * await model.save('localstorage://demo/management/model1');
 *
 * // Then list existing models.
 * console.log(JSON.stringify(await tf.io.listModels()));
 *
 * // Delete the model.
 * await tf.io.removeModel('localstorage://demo/management/model1');
 *
 * // List models again.
 * console.log(JSON.stringify(await tf.io.listModels()));
 * ```
 *
 * @returns A `Promise` of a dictionary mapping URLs of existing models to
 * their model artifacts info. URLs include medium-specific schemes, e.g.,
 *   'indexeddb://my/model/1'. Model artifacts info include type of the
 * model's topology, byte sizes of the topology, weights, etc.
 *
 * @doc {
 *   heading: 'Models',
 *   subheading: 'Management',
 *   namespace: 'io',
 *   ignoreCI: true
 * }
 */async function o(){let e=a.getSchemes(),t={};for(let r of e){let e=await a.getManager(r).listModels();for(let n in e){let a=r+"://"+n;t[a]=e[n]}}return t}/**
 * Remove a model specified by URL from a registered storage medium.
 *
 * ```js
 * // First create and save a model.
 * const model = tf.sequential();
 * model.add(tf.layers.dense(
 *     {units: 1, inputShape: [10], activation: 'sigmoid'}));
 * await model.save('localstorage://demo/management/model1');
 *
 * // Then list existing models.
 * console.log(JSON.stringify(await tf.io.listModels()));
 *
 * // Delete the model.
 * await tf.io.removeModel('localstorage://demo/management/model1');
 *
 * // List models again.
 * console.log(JSON.stringify(await tf.io.listModels()));
 * ```
 *
 * @param url A URL to a stored model, with a scheme prefix, e.g.,
 *   'localstorage://my-model-1', 'indexeddb://my/model/2'.
 * @returns ModelArtifactsInfo of the deleted model (if and only if deletion
 *   is successful).
 * @throws Error if deletion fails, e.g., if no model exists at `path`.
 *
 * @doc {
 *   heading: 'Models',
 *   subheading: 'Management',
 *   namespace: 'io',
 *   ignoreCI: true
 * }
 */async function l(e){let t=s(e),r=a.getManager(t.scheme);return r.removeModel(t.path)}/**
 * Copy a model from one URL to another.
 *
 * This function supports:
 *
 * 1. Copying within a storage medium, e.g.,
 *    `tf.io.copyModel('localstorage://model-1', 'localstorage://model-2')`
 * 2. Copying between two storage mediums, e.g.,
 *    `tf.io.copyModel('localstorage://model-1', 'indexeddb://model-1')`
 *
 * ```js
 * // First create and save a model.
 * const model = tf.sequential();
 * model.add(tf.layers.dense(
 *     {units: 1, inputShape: [10], activation: 'sigmoid'}));
 * await model.save('localstorage://demo/management/model1');
 *
 * // Then list existing models.
 * console.log(JSON.stringify(await tf.io.listModels()));
 *
 * // Copy the model, from Local Storage to IndexedDB.
 * await tf.io.copyModel(
 *     'localstorage://demo/management/model1',
 *     'indexeddb://demo/management/model1');
 *
 * // List models again.
 * console.log(JSON.stringify(await tf.io.listModels()));
 *
 * // Remove both models.
 * await tf.io.removeModel('localstorage://demo/management/model1');
 * await tf.io.removeModel('indexeddb://demo/management/model1');
 * ```
 *
 * @param sourceURL Source URL of copying.
 * @param destURL Destination URL of copying.
 * @returns ModelArtifactsInfo of the copied model (if and only if copying
 *   is successful).
 * @throws Error if copying fails, e.g., if no model exists at `sourceURL`, or
 *   if `oldPath` and `newPath` are identical.
 *
 * @doc {
 *   heading: 'Models',
 *   subheading: 'Management',
 *   namespace: 'io',
 *   ignoreCI: true
 * }
 */async function u(e,t){return i(e,t,!1)}/**
 * Move a model from one URL to another.
 *
 * This function supports:
 *
 * 1. Moving within a storage medium, e.g.,
 *    `tf.io.moveModel('localstorage://model-1', 'localstorage://model-2')`
 * 2. Moving between two storage mediums, e.g.,
 *    `tf.io.moveModel('localstorage://model-1', 'indexeddb://model-1')`
 *
 * ```js
 * // First create and save a model.
 * const model = tf.sequential();
 * model.add(tf.layers.dense(
 *     {units: 1, inputShape: [10], activation: 'sigmoid'}));
 * await model.save('localstorage://demo/management/model1');
 *
 * // Then list existing models.
 * console.log(JSON.stringify(await tf.io.listModels()));
 *
 * // Move the model, from Local Storage to IndexedDB.
 * await tf.io.moveModel(
 *     'localstorage://demo/management/model1',
 *     'indexeddb://demo/management/model1');
 *
 * // List models again.
 * console.log(JSON.stringify(await tf.io.listModels()));
 *
 * // Remove the moved model.
 * await tf.io.removeModel('indexeddb://demo/management/model1');
 * ```
 *
 * @param sourceURL Source URL of moving.
 * @param destURL Destination URL of moving.
 * @returns ModelArtifactsInfo of the copied model (if and only if copying
 *   is successful).
 * @throws Error if moving fails, e.g., if no model exists at `sourceURL`, or
 *   if `oldPath` and `newPath` are identical.
 *
 * @doc {
 *   heading: 'Models',
 *   subheading: 'Management',
 *   namespace: 'io',
 *   ignoreCI: true
 * }
 */async function d(e,t){return i(e,t,!0)}}),R("lhiTQ",function(e,t){let r;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var n=A("ibsdL"),a=A("hPtJY");let s={// tslint:disable-next-line:no-require-imports
importFetch:()=>A("kjyEk")};(0,n.env)().get("IS_NODE")&&!(0,n.env)().get("IS_BROWSER")&&(0,n.env)().setPlatform("node",new class{constructor(){// tslint:disable-next-line:no-require-imports
this.util=A("kjyEk"),// According to the spec, the built-in encoder can do only UTF-8 encoding.
// https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder/TextEncoder
this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,n.env)().global.fetch?(0,n.env)().global.fetch(e,t):(null==r&&(r=s.importFetch()),r(e,t))}now(){let e=a.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}})}),R("kjyEk",function(e,t){}),R("iG87S",function(e,t){c(e.exports,"buffer",()=>a);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("9jCh7"),n=A("8cCb2");function a(e,t="float32",a){return t=t||"float32",n.assertNonNegativeIntegerDimensions(e),new r.TensorBuffer(e,t,a)}}),R("inFmq",function(e,t){c(e.exports,"cast",()=>o);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({cast_:/**
 * Casts a `tf.Tensor` to a new dtype.
 *
 * ```js
 * const x = tf.tensor1d([1.5, 2.5, 3]);
 * tf.cast(x, 'int32').print();
 * ```
 * @param x The input tensor to be casted.
 * @param dtype The dtype to cast the input tensor to.
 *
 * @doc {heading: 'Tensors', subheading: 'Transformations'}
 */function(e,t){let i=(0,a.convertToTensor)(e,"x","cast");// Sanity checks.
if(!s.isValidDtype(t))throw Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==i.dtype||"string"!==t&&"string"===i.dtype)throw Error("Only strings can be casted to strings");return(0,r.ENGINE).runKernel(n.Cast,{x:i},{dtype:t})}})}),R("5TuCW",function(e,t){c(e.exports,"clone",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({clone_:/**
 * Creates a new tensor with the same values and shape as the specified
 * tensor.
 *
 * ```js
 * const x = tf.tensor([1, 2]);
 *
 * x.clone().print();
 * ```
 *
 * @param x The tensor to clone.
 *
 * @doc {heading: 'Tensors', subheading: 'Creation'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","clone","string_or_numeric");// Note this op is called tf.identity in python. Hence the kernel name used
// here.
return(0,r.ENGINE).runKernel(n.Identity,{x:t})}})}),R("bSp5U",function(e,t){c(e.exports,"print",()=>r);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * Prints information about the `tf.Tensor` including its data.
 *
 * ```js
 * const verbose = true;
 * tf.tensor2d([1, 2, 3, 4], [2, 2]).print(verbose);
 * ```
 * @param x The tensor to be printed.
 * @param verbose Whether to print verbose information about the ` Tensor`,
 * including dtype and size.
 *
 * @doc {heading: 'Tensors', subheading: 'Creation'}
 */function r(e,t=!1){console.log(e.toString(t))}}),R("5KHy0",function(e,t){c(e.exports,"registerOptimizers",()=>p);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("Haryc"),n=A("7740A"),a=A("cdIoP"),s=A("9sl63"),i=A("7GJGN"),o=A("7qglv"),l=A("hR6PP"),u=A("5IZxH");let d=[r.AdadeltaOptimizer,n.AdagradOptimizer,a.AdamOptimizer,s.AdamaxOptimizer,i.MomentumOptimizer,o.RMSPropOptimizer,l.SGDOptimizer];function p(){for(let e of d)(0,u.registerClass)(e)}}),R("Haryc",function(e,t){c(e.exports,"AdadeltaOptimizer",()=>p);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("c2DT1"),a=A("hgacW"),s=A("1QPqB"),i=A("jZc0w"),o=A("iAb3z"),l=A("iDd8d"),u=A("8EjnK"),d=A("kULIJ");class p extends d.Optimizer{/** @nocollapse */static get className(){// Name matters for Python compatibility.
// This is a getter instead of a property because when it's a property, it
// prevents the entire class from being tree-shaken.
return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=(0,r.ENGINE).backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,c)=>{let d=r.ENGINE.registeredVariables[t];null==this.accumulatedGrads[c]&&(this.accumulatedGrads[c]={originalName:`${t}/accum_grad`,variable:(0,n.tidy)(()=>(0,u.zerosLike)(d).variable(!1))}),null==this.accumulatedUpdates[c]&&(this.accumulatedUpdates[c]={originalName:`${t}/accum_var`,variable:(0,n.tidy)(()=>(0,u.zerosLike)(d).variable(!1))});let p=Array.isArray(e)?e[c].tensor:e[t];if(null==p)return;let h=this.accumulatedGrads[c].variable,f=this.accumulatedUpdates[c].variable;(0,n.tidy)(()=>{let e=(0,a.add)((0,i.mul)(h,this.rho),(0,i.mul)((0,l.square)(p),1-this.rho)),t=(0,i.mul)((0,s.div)((0,o.sqrt)((0,a.add)(f,this.epsilon)),(0,o.sqrt)((0,a.add)(h,this.epsilon))),p),r=(0,a.add)((0,i.mul)(f,this.rho),(0,i.mul)((0,l.square)(t),1-this.rho));h.assign(e),f.assign(r);let n=(0,a.add)((0,i.mul)(t,-this.learningRate),d);d.assign(n)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,n.dispose)(this.accumulatedGrads.map(e=>e.variable)),(0,n.dispose)(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){// Order matters for Python compatibility.
let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}/** @nocollapse */static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}}),R("c2DT1",function(e,t){c(e.exports,"enableProdMode",()=>i),c(e.exports,"enableDebugMode",()=>o),c(e.exports,"disableDeprecationWarnings",()=>l),c(e.exports,"deprecationWarn",()=>u),c(e.exports,"disposeVariables",()=>d),c(e.exports,"engine",()=>p),c(e.exports,"memory",()=>h),c(e.exports,"profile",()=>f),c(e.exports,"tidy",()=>m),c(e.exports,"dispose",()=>g),c(e.exports,"keep",()=>y),c(e.exports,"time",()=>b),c(e.exports,"setBackend",()=>v),c(e.exports,"ready",()=>x),c(e.exports,"getBackend",()=>w),c(e.exports,"removeBackend",()=>k),c(e.exports,"findBackend",()=>S),c(e.exports,"findBackendFactory",()=>N),c(e.exports,"registerBackend",()=>T),c(e.exports,"backend",()=>I),c(e.exports,"setPlatform",()=>C);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("ibsdL"),a=A("9jCh7"),s=A("3w4Rg");function i(){(0,n.env)().set("PROD",!0)}function o(){(0,n.env)().set("DEBUG",!0)}function l(){(0,n.env)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function u(e){(0,n.env)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){(0,r.ENGINE).disposeVariables()}function p(){return r.ENGINE}function h(){return(0,r.ENGINE).memory()}function f(e){return(0,r.ENGINE).profile(e)}function m(e,t){return(0,r.ENGINE).tidy(e,t)}function g(e){let t=(0,s.getTensorsInContainer)(e);t.forEach(e=>e.dispose())}function y(e){return(0,r.ENGINE).keep(e)}function b(e){return(0,r.ENGINE).time(e)}function v(e){return(0,r.ENGINE).setBackend(e)}function x(){return(0,r.ENGINE).ready()}function w(){return r.ENGINE.backendName}function k(e){(0,r.ENGINE).removeBackend(e)}function S(e){return(0,r.ENGINE).findBackend(e)}function N(e){return(0,r.ENGINE).findBackendFactory(e)}function T(e,t,n=1){return(0,r.ENGINE).registerBackend(e,t,n)}function I(){return r.ENGINE.backend}function C(e,t){(0,n.env)().setPlatform(e,t)}(0,a.setDeprecationWarningFn)(u)}),R("hgacW",function(e,t){c(e.exports,"add",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({add_:/**
 * Adds two `tf.Tensor`s element-wise, A + B. Supports broadcasting.
 *
 *
 * ```js
 * const a = tf.tensor1d([1, 2, 3, 4]);
 * const b = tf.tensor1d([10, 20, 30, 40]);
 *
 * a.add(b).print();  // or tf.add(a, b)
 * ```
 *
 * ```js
 * // Broadcast add a with b.
 * const a = tf.scalar(5);
 * const b = tf.tensor1d([10, 20, 30, 40]);
 *
 * a.add(b).print();  // or tf.add(a, b)
 * ```
 * @param a The first `tf.Tensor` to add.
 * @param b The second `tf.Tensor` to add. Must have the same type as `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Arithmetic'}
 */function(e,t){let i=(0,s.convertToTensor)(e,"a","add"),o=(0,s.convertToTensor)(t,"b","add");[i,o]=(0,a.makeTypesMatch)(i,o);let l={a:i,b:o};return(0,r.ENGINE).runKernel(n.Add,l)}})}),R("1QPqB",function(e,t){c(e.exports,"div",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("6a2Ft"),o=A("jqSCG");let l=/* @__PURE__ */(0,o.op)({div_:/**
 * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.
 *
 * ```js
 * const a = tf.tensor1d([1, 4, 9, 16]);
 * const b = tf.tensor1d([1, 2, 3, 4]);
 *
 * a.div(b).print();  // or tf.div(a, b)
 * ```
 *
 * ```js
 * // Broadcast div a with b.
 * const a = tf.tensor1d([2, 4, 6, 8]);
 * const b = tf.scalar(2);
 *
 * a.div(b).print();  // or tf.div(a, b)
 * ```
 *
 * @param a The first tensor as the numerator.
 * @param b The second tensor as the denominator. Must have the same dtype as
 * `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Arithmetic'}
 */function(e,t){let o=(0,s.convertToTensor)(e,"a","div"),l=(0,s.convertToTensor)(t,"b","div");if([o,l]=(0,a.makeTypesMatch)(o,l),"int32"===o.dtype&&"int32"===l.dtype)return(0,i.floorDiv)(o,l);let u={a:o,b:l};// tslint:disable-next-line: no-unnecessary-type-assertion
return(0,r.ENGINE).runKernel(n.RealDiv,u,{})}})}),R("6a2Ft",function(e,t){c(e.exports,"floorDiv",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({floorDiv_:/**
 * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.
 * The result is rounded with floor function.
 *
 *
 * ```js
 * const a = tf.tensor1d([1, 4, 9, 16]);
 * const b = tf.tensor1d([1, 2, 3, 4]);
 *
 * a.floorDiv(b).print();  // or tf.div(a, b)
 * ```
 *
 * ```js
 * // Broadcast div a with b.
 * const a = tf.tensor1d([2, 4, 6, 8]);
 * const b = tf.scalar(2);
 *
 * a.floorDiv(b).print();  // or tf.floorDiv(a, b)
 * ```
 *
 * @param a The first tensor as the numerator.
 * @param b The second tensor as the denominator. Must have the same dtype as
 * `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Arithmetic'}
 */function(e,t){let i=(0,s.convertToTensor)(e,"a","floorDiv"),o=(0,s.convertToTensor)(t,"b","floorDiv");[i,o]=(0,a.makeTypesMatch)(i,o);let l={a:i,b:o};return(0,r.ENGINE).runKernel(n.FloorDiv,l)}})}),R("jZc0w",function(e,t){c(e.exports,"mul",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({mul_:/**
 * Multiplies two `tf.Tensor`s element-wise, A * B. Supports broadcasting.
 *
 * We also expose `tf.mulStrict` which has the same signature as this op and
 * asserts that `a` and `b` are the same shape (does not broadcast).
 *
 * ```js
 * const a = tf.tensor1d([1, 2, 3, 4]);
 * const b = tf.tensor1d([2, 3, 4, 5]);
 *
 * a.mul(b).print();  // or tf.mul(a, b)
 * ```
 *
 * ```js
 * // Broadcast mul a with b.
 * const a = tf.tensor1d([1, 2, 3, 4]);
 * const b = tf.scalar(5);
 *
 * a.mul(b).print();  // or tf.mul(a, b)
 * ```
 * @param a The first tensor to multiply.
 * @param b The second tensor to multiply. Must have the same dtype as `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Arithmetic'}
 */function(e,t){let i=(0,s.convertToTensor)(e,"a","mul"),o=(0,s.convertToTensor)(t,"b","mul");[i,o]=(0,a.makeTypesMatch)(i,o);let l={a:i,b:o};return(0,r.ENGINE).runKernel(n.Multiply,l)}})}),R("iAb3z",function(e,t){c(e.exports,"sqrt",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({sqrt_:/**
 * Computes square root of the input `tf.Tensor` element-wise: `y = sqrt(x)`
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 4, -1]);
 *
 * x.sqrt().print();  // or tf.sqrt(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","sqrt","float32");return(0,r.ENGINE).runKernel(n.Sqrt,{x:t})}})}),R("iDd8d",function(e,t){c(e.exports,"square",()=>s);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("5xBLk"),a=A("jqSCG");let s=/* @__PURE__ */(0,a.op)({square_:/**
 * Computes square of `x` element-wise: `x ^ 2`
 *
 * ```js
 * const x = tf.tensor1d([1, 2, Math.sqrt(2), -1]);
 *
 * x.square().print();  // or tf.square(x)
 * ```
 * @param x The input Tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,n.convertToTensor)(e,"x","square");return(0,r.ENGINE).runKernel("Square",{x:t},{})}})}),R("8EjnK",function(e,t){c(e.exports,"zerosLike",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({zerosLike_:/**
 * Creates a `tf.Tensor` with all elements set to 0 with the same shape as the
 * given tensor.
 *
 * ```js
 * const x = tf.tensor([1, 2]);
 * tf.zerosLike(x).print();
 * ```
 *
 * @param x The tensor of required shape.
 *
 * @doc {heading: 'Tensors', subheading: 'Creation'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","zerosLike");return(0,r.ENGINE).runKernel(n.ZerosLike,{x:t})}})}),R("kULIJ",function(e,t){c(e.exports,"Optimizer",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("c2DT1"),n=A("92fpA"),a=A("3xp7o"),s=A("5IZxH");class i extends s.Serializable{/**
     * Executes `f()` and minimizes the scalar output of `f()` by computing
     * gradients of y with respect to the list of trainable variables provided by
     * `varList`. If no list is provided, it defaults to all trainable variables.
     *
     * @param f The function to execute and whose output to minimize.
     * @param returnCost Whether to return the scalar cost value produced by
     * executing `f()`.
     * @param varList An optional list of variables to update. If specified, only
     * the trainable variables in varList will be updated by minimize. Defaults to
     * all trainable variables.
     *
     * @doc {heading: 'Training', subheading: 'Optimizers'}
     */minimize(e,t=!1,n){let{value:a,grads:s}=this.computeGradients(e,n);if(null!=n){let e=n.map(e=>({name:e.name,tensor:s[e.name]}));this.applyGradients(e)}else this.applyGradients(s);return(// Dispose gradients.
(0,r.dispose)(s),t)?a:(a.dispose(),null)}/**
     * The number of iterations that this optimizer instance has been invoked for.
     */get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}/**
     * Executes f() and computes the gradient of the scalar output of f() with
     * respect to the list of trainable variables provided by `varList`. If no
     * list is provided, it defaults to all trainable variables.
     *
     * @param f The function to execute and whose output to use for computing
     * gradients with respect to variables.
     * @param varList An optional list of variables to compute gradients with
     * respect to. If specified, only the trainable variables in varList will have
     * gradients computed with respect to. Defaults to all trainable variables.
     *
     * @doc {heading: 'Training', subheading: 'Optimizers'}
     */computeGradients(e,t){return(0,n.variableGrads)(e,t)}/**
     * Dispose the variables (if any) owned by this optimizer instance.
     */dispose(){null!=this.iterations_&&(0,r.dispose)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",// TODO(cais): Use 'int64' type when available.
tensor:(0,a.scalar)(this.iterations_,"int32")}}async getWeights(){throw Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}/**
     * Extract the first element of the weight values and set it
     * as the iterations counter variable of this instance of optimizer.
     *
     * @param weightValues
     * @returns Weight values with the first element consumed and excluded.
     */async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(i,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients})}),R("92fpA",function(e,t){c(e.exports,"grad",()=>i),c(e.exports,"grads",()=>o),c(e.exports,"valueAndGrad",()=>l),c(e.exports,"valueAndGrads",()=>u),c(e.exports,"variableGrads",()=>d),c(e.exports,"customGrad",()=>p);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("9jCh7"),a=A("5xBLk"),s=A("8cCb2");/**
 * Provided `f(x)`, returns another function `g(x, dy?)`, which gives the
 * gradient of `f(x)` with respect to `x`.
 *
 * If `dy` is provided, the gradient of `f(x).mul(dy).sum()` with respect to
 * `x` is computed instead. `f(x)` must take a single tensor `x` and return a
 * single tensor `y`. If `f()` takes multiple inputs, use `tf.grads` instead.
 *
 * ```js
 * // f(x) = x ^ 2
 * const f = x => x.square();
 * // f'(x) = 2x
 * const g = tf.grad(f);
 *
 * const x = tf.tensor1d([2, 3]);
 * g(x).print();
 * ```
 *
 * ```js
 * // f(x) = x ^ 3
 * const f = x => x.pow(tf.scalar(3, 'int32'));
 * // f'(x) = 3x ^ 2
 * const g = tf.grad(f);
 * // f''(x) = 6x
 * const gg = tf.grad(g);
 *
 * const x = tf.tensor1d([2, 3]);
 * gg(x).print();
 * ```
 *
 * @param f The function f(x), to compute gradient for.
 *
 * @doc {heading: 'Training', subheading: 'Gradients'}
 */function i(e){return s.assert(s.isFunction(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{// x can be of any dtype, thus null as the last argument.
let i=(0,a.convertToTensor)(t,"x","tf.grad","string_or_numeric"),o=null!=n?(0,a.convertToTensor)(n,"dy","tf.grad"):null;return(0,r.ENGINE).tidy(()=>{let{value:t,grads:n}=(0,r.ENGINE).gradients(()=>e(i),[i],o);return null!=o&&s.assertShapesMatch(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),h(n),n[0]})}}/**
 * Provided `f(x1, x2,...)`, returns another function `g([x1, x2,...], dy?)`,
 * which gives an array of gradients of `f()` with respect to each input
 * [`x1`,`x2`,...].
 *
 * If `dy` is passed when calling `g()`, the gradient of
 * `f(x1,...).mul(dy).sum()` with respect to each input is computed instead.
 * The provided `f` must take one or more tensors and return a single tensor
 * `y`. If `f()` takes a single input, we recommend using `tf.grad` instead.
 *
 * ```js
 * // f(a, b) = a * b
 * const f = (a, b) => a.mul(b);
 * // df / da = b, df / db = a
 * const g = tf.grads(f);
 *
 * const a = tf.tensor1d([2, 3]);
 * const b = tf.tensor1d([-2, -3]);
 * const [da, db] = g([a, b]);
 * console.log('da');
 * da.print();
 * console.log('db');
 * db.print();
 * ```
 *
 * @param f The function `f(x1, x2,...)` to compute gradients for.
 *
 * @doc {heading: 'Training', subheading: 'Gradients'}
 */function o(e){return s.assert(s.isFunction(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{s.assert(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");// args can be of any dtype, thus null as the last argument.
let i=(0,a.convertToTensorArray)(t,"args","tf.grads","string_or_numeric"),o=null!=n?(0,a.convertToTensor)(n,"dy","tf.grads"):null;return(0,r.ENGINE).tidy(()=>{let{value:t,grads:n}=(0,r.ENGINE).gradients(()=>e(...i),i,o);return null!=o&&s.assertShapesMatch(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(n),n})}}/**
 * Like `tf.grad`, but also returns the value of `f()`. Useful when `f()`
 * returns a metric you want to show.
 *
 * The result is a rich object with the following properties:
 * - grad: The gradient of `f(x)` w.r.t. `x` (result of `tf.grad`).
 * - value: The value returned by `f(x)`.
 *
 * ```js
 * // f(x) = x ^ 2
 * const f = x => x.square();
 * // f'(x) = 2x
 * const g = tf.valueAndGrad(f);
 *
 * const x = tf.tensor1d([2, 3]);
 * const {value, grad} = g(x);
 *
 * console.log('value');
 * value.print();
 * console.log('grad');
 * grad.print();
 * ```
 *
 * @doc {heading: 'Training', subheading: 'Gradients'}
 */function l(e){return s.assert(s.isFunction(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,a)=>{s.assert(t instanceof n.Tensor,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),s.assert(null==a||a instanceof n.Tensor,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:i,value:o}=(0,r.ENGINE).gradients(()=>e(t),[t],a);return h(i),{grad:i[0],value:o}}}/**
 * Like `tf.grads`, but returns also the value of `f()`. Useful when `f()`
 * returns a metric you want to show.
 *
 * The result is a rich object with the following properties:
 * - grads: The gradients of `f()` w.r.t. each input (result of `tf.grads`).
 * - value: The value returned by `f(x)`.
 *
 * ```js
 * // f(a, b) = a * b
 * const f = (a, b) => a.mul(b);
 * // df/da = b, df/db = a
 * const g = tf.valueAndGrads(f);
 *
 * const a = tf.tensor1d([2, 3]);
 * const b = tf.tensor1d([-2, -3]);
 * const {value, grads} = g([a, b]);
 *
 * const [da, db] = grads;
 *
 * console.log('value');
 * value.print();
 *
 * console.log('da');
 * da.print();
 * console.log('db');
 * db.print();
 * ```
 *
 * @doc {heading: 'Training', subheading: 'Gradients'}
 */function u(e){return s.assert(s.isFunction(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,a)=>{s.assert(Array.isArray(t)&&t.every(e=>e instanceof n.Tensor),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),s.assert(null==a||a instanceof n.Tensor,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let i=(0,r.ENGINE).gradients(()=>e(...t),t,a);return null!=a&&s.assertShapesMatch(i.value.shape,a.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(i.grads),i}}/**
 * Computes and returns the gradient of f(x) with respect to the list of
 * trainable variables provided by `varList`. If no list is provided, it
 * defaults to all trainable variables.
 *
 * ```js
 * const a = tf.variable(tf.tensor1d([3, 4]));
 * const b = tf.variable(tf.tensor1d([5, 6]));
 * const x = tf.tensor1d([1, 2]);
 *
 * // f(a, b) = a * x ^ 2 + b * x
 * const f = () => a.mul(x.square()).add(b.mul(x)).sum();
 * // df/da = x ^ 2, df/db = x
 * const {value, grads} = tf.variableGrads(f);
 *
 * Object.keys(grads).forEach(varName => grads[varName].print());
 * ```
 *
 * @param f The function to execute. f() should return a scalar.
 * @param varList The list of variables to compute the gradients with respect
 *     to. Defaults to all trainable variables.
 * @returns An object with the following keys and values:
 *   - `value`: The value of the function `f`.
 *   - `grads`: A map from the names of the variables to the gradients.
 *     If the `varList` argument is provided explicitly and contains a subset of
 *     non-trainable variables, this map in the return value will contain keys
 *     that map the names of the non-trainable variables to `null`.
 *
 * @doc {heading: 'Training', subheading: 'Gradients'}
 */function d(e,t){s.assert(s.isFunction(e),()=>"The f passed in variableGrads(f) must be a function"),s.assert(null==t||Array.isArray(t)&&t.every(e=>e instanceof n.Variable),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let a=null!=t;if(!a)for(let e in // Get all of the trainable variables.
t=[],r.ENGINE.registeredVariables)t.push(r.ENGINE.registeredVariables[e]);let i=a?t.filter(e=>!e.trainable):null,o=t.length;t=t.filter(e=>e.trainable),s.assert(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let{value:l,grads:u}=(0,r.ENGINE).gradients(e,t,null,!0);s.assert(u.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),s.assert(0===l.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${l.rank} tensor`);let c={};return t.forEach((e,t)=>{null!=u[t]&&(c[e.name]=u[t])}),null!=i&&// add them to the returned gradients with `null` values.
i.forEach(e=>c[e.name]=null),{value:l,grads:c}}/**
 * Overrides the gradient computation of a function `f`.
 *
 * Takes a function
 * `f(...inputs, save) => {value: Tensor, gradFunc: (dy, saved) => Tensor[]}`
 * and returns another function `g(...inputs)` which takes the same inputs as
 * `f`. When called, `g` returns `f().value`. In backward mode, custom gradients
 * with respect to each input of `f` are computed using `f().gradFunc`.
 *
 * The `save` function passed to `f` should be used for saving tensors needed
 * in the gradient. And the `saved` passed to the `gradFunc` is a
 * `NamedTensorMap`, which contains those saved tensors.
 *
 * ```js
 * const customOp = tf.customGrad((x, save) => {
 *   // Save x to make sure it's available later for the gradient.
 *   save([x]);
 *   // Override gradient of our custom x ^ 2 op to be dy * abs(x);
 *   return {
 *     value: x.square(),
 *     // Note `saved.x` which points to the `x` we saved earlier.
 *     gradFunc: (dy, saved) => [dy.mul(saved[0].abs())]
 *   };
 * });
 *
 * const x = tf.tensor1d([-1, -2, 3]);
 * const dx = tf.grad(x => customOp(x));
 *
 * console.log(`f(x):`);
 * customOp(x).print();
 * console.log(`f'(x):`);
 * dx(x).print();
 * ```
 *
 * @param f The function to evaluate in forward mode, which should return
 *     `{value: Tensor, gradFunc: (dy, saved) => Tensor[]}`, where `gradFunc`
 *     returns the custom gradients of `f` with respect to its inputs.
 *
 * @doc {heading: 'Training', subheading: 'Gradients'}
 */function p(e){return(0,r.ENGINE).customGrad(e)}function h(e){let t=e.filter(e=>null==e).length;if(t>0)throw Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}}),R("3xp7o",function(e,t){c(e.exports,"scalar",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("jjNRA"),n=A("dKr4X");function a(e,t){if(((0,r.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.isTypedArray)(e)&&!(e instanceof Uint8Array))throw Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,n.makeTensor)(e,[],[],t)}}),R("5IZxH",function(e,t){c(e.exports,"Serializable",()=>s),c(e.exports,"SerializationMap",()=>i),c(e.exports,"registerClass",()=>o),c(e.exports,"getRegisteredName",()=>l);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2");/**
 * Maps to mapping between the custom object and its name.
 *
 * After registering a custom class, these two maps will add key-value pairs
 * for the class object and the registered name.
 *
 * Therefore we can get the relative registered name by calling
 * getRegisteredName() function.
 *
 * For example:
 * GLOBAL_CUSTOM_OBJECT: {key=registeredName: value=corresponding
 * CustomObjectClass}
 *
 * GLOBAL_CUSTOM_NAMES: {key=CustomObjectClass: value=corresponding
 * registeredName}
 *
 */let n=new Map,a=new Map;class s{/**
     * Return the class name for this class to use in serialization contexts.
     *
     * Generally speaking this will be the same thing that constructor.name
     * would have returned.  However, the class name needs to be robust
     * against minification for serialization/deserialization to work properly.
     *
     * There's also places such as initializers.VarianceScaling, where
     * implementation details between different languages led to different
     * class hierarchies and a non-leaf node is used for serialization purposes.
     */getClassName(){return this.constructor.className}/**
     * Creates an instance of T from a ConfigDict.
     *
     * This works for most descendants of serializable.  A few need to
     * provide special handling.
     * @param cls A Constructor for the class to instantiate.
     * @param config The Configuration for the object.
     *//** @nocollapse */static fromConfig(e,t){return new e(t)}}class i{constructor(){this.classNameMap={}}/**
     * Returns the singleton instance of the map.
     */static getMap(){return null==i.instance&&(i.instance=new i),i.instance}/**
     * Registers the class as serializable.
     */static register(e){i.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function o(e,t,s){(0,r.assert)(null!=e.className,()=>"Class being registered does not have the static className property defined."),(0,r.assert)("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),(0,r.assert)(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),void 0===t&&(t="Custom"),void 0===s&&(s=e.className);let o=s,l=t+">"+o;return i.register(e),n.set(l,e),a.set(e,l),e}function l(e){return a.has(e)?a.get(e):e.className}}),R("7740A",function(e,t){c(e.exports,"AdagradOptimizer",()=>p);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("c2DT1"),a=A("hgacW"),s=A("1QPqB"),i=A("gYive"),o=A("jZc0w"),l=A("iAb3z"),u=A("iDd8d"),d=A("kULIJ");class p extends d.Optimizer{/** @nocollapse */static get className(){// Name matters for Python compatibility.
// This is a getter instead of a property because when it's a property, it
// prevents the entire class from being tree-shaken.
return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,c)=>{let d=r.ENGINE.registeredVariables[t];null==this.accumulatedGrads[c]&&(this.accumulatedGrads[c]={originalName:`${t}/accumulator`,variable:(0,n.tidy)(()=>(0,i.fill)(d.shape,this.initialAccumulatorValue).variable(!1))});let p=Array.isArray(e)?e[c].tensor:e[t];if(null==p)return;let h=this.accumulatedGrads[c].variable;(0,n.tidy)(()=>{let e=(0,a.add)(h,(0,u.square)(p));h.assign(e);let t=(0,a.add)((0,o.mul)((0,s.div)(p,(0,l.sqrt)((0,a.add)(e,(0,r.ENGINE).backend.epsilon()))),-this.learningRate),d);d.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,n.dispose)(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){// Order matters for Python compatibility.
return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}/** @nocollapse */static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}}),R("gYive",function(e,t){c(e.exports,"fill",()=>s);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=(A("8cCb2"),A("8cCb2"));/**
 * Creates a `tf.Tensor` filled with a scalar value.
 *
 * ```js
 * tf.fill([2, 2], 4).print();
 * ```
 *
 * @param shape An array of integers defining the output tensor shape.
 * @param value The scalar value to fill the tensor with.
 * @param dtype The type of an element in the resulting tensor. Defaults to
 *     'float32' if the given param value is a number, otherwise 'string'.
 *
 * @doc {heading: 'Tensors', subheading: 'Creation'}
 */function s(e,t,s){(0,a.assertNonNegativeIntegerDimensions)(e),s=s||(0,a.inferDtype)(t);let i={shape:e,value:t,dtype:s};return(0,r.ENGINE).runKernel(n.Fill,{},i)}}),R("cdIoP",function(e,t){c(e.exports,"AdamOptimizer",()=>m);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("c2DT1"),a=A("hgacW"),s=A("1QPqB"),i=A("jZc0w"),o=A("ad1of"),l=A("3xp7o"),u=A("iAb3z"),d=A("iDd8d"),p=A("7kouu"),h=A("8EjnK"),f=A("kULIJ");class m extends f.Optimizer{/** @nocollapse */static get className(){// Name matters for Python compatibility.
// This is a getter instead of a property because when it's a property, it
// prevents the entire class from being tree-shaken.
return"Adam"}constructor(e,t,a,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=a,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,n.tidy)(()=>{// accB* will be updated by batch.
this.accBeta1=(0,l.scalar)(t).variable(),this.accBeta2=(0,l.scalar)(a).variable()}),null==s&&(this.epsilon=(0,r.ENGINE).backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);(0,n.tidy)(()=>{let o=(0,p.sub)(1,this.accBeta1),l=(0,p.sub)(1,this.accBeta2);t.forEach((t,c)=>{let p=r.ENGINE.registeredVariables[t];null==this.accumulatedFirstMoment[c]&&(this.accumulatedFirstMoment[c]={originalName:`${t}/m`,variable:(0,n.tidy)(()=>(0,h.zerosLike)(p).variable(!1))}),null==this.accumulatedSecondMoment[c]&&(this.accumulatedSecondMoment[c]={originalName:`${t}/v`,variable:(0,n.tidy)(()=>(0,h.zerosLike)(p).variable(!1))});let f=Array.isArray(e)?e[c].tensor:e[t];if(null==f)return;let m=this.accumulatedFirstMoment[c].variable,g=this.accumulatedSecondMoment[c].variable,y=(0,a.add)((0,i.mul)(m,this.beta1),(0,i.mul)(f,1-this.beta1)),b=(0,a.add)((0,i.mul)(g,this.beta2),(0,i.mul)((0,d.square)(f),1-this.beta2)),v=(0,s.div)(y,o),x=(0,s.div)(b,l);m.assign(y),g.assign(b);let w=(0,a.add)((0,i.mul)((0,s.div)(v,(0,a.add)((0,u.sqrt)(x),this.epsilon)),-this.learningRate),p);p.assign(w)}),this.accBeta1.assign((0,i.mul)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,i.mul)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,n.dispose)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&(0,n.dispose)(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){// Order matters for Python compatibility.
let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),(0,n.tidy)(()=>{this.accBeta1.assign((0,o.pow)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,o.pow)(this.beta2,this.iterations_+1))});let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}/** @nocollapse */static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}}),R("ad1of",function(e,t){c(e.exports,"pow",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({pow_:/**
 * Computes the power of one `tf.Tensor` to another. Supports broadcasting.
 *
 * Given a `tf.Tensor` x and a `tf.Tensor` y, this operation computes x^y for
 * corresponding elements in x and y. The result's dtype will be the upcasted
 * type of the `base` and `exp` dtypes.
 *
 * ```js
 * const a = tf.tensor([[2, 3], [4, 5]])
 * const b = tf.tensor([[1, 2], [3, 0]]).toInt();
 *
 * a.pow(b).print();  // or tf.pow(a, b)
 * ```
 *
 * ```js
 * const a = tf.tensor([[1, 2], [3, 4]])
 * const b = tf.tensor(2).toInt();
 *
 * a.pow(b).print();  // or tf.pow(a, b)
 * ```
 * We also expose `powStrict` which has the same signature as this op and
 * asserts that `base` and `exp` are the same shape (does not broadcast).
 *
 * @param base The base `tf.Tensor` to pow element-wise.
 * @param exp The exponent `tf.Tensor` to pow element-wise.
 *
 * @doc {heading: 'Operations', subheading: 'Arithmetic'}
 */function(e,t){let i=(0,s.convertToTensor)(e,"base","pow"),o=(0,s.convertToTensor)(t,"exp","pow");[i,o]=(0,a.makeTypesMatch)(i,o);let l={a:i,b:o};return(0,r.ENGINE).runKernel(n.Pow,l)}})}),R("7kouu",function(e,t){c(e.exports,"sub",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({sub_:/**
 * Subtracts two `tf.Tensor`s element-wise, A - B. Supports broadcasting.
 *
 * ```js
 * const a = tf.tensor1d([10, 20, 30, 40]);
 * const b = tf.tensor1d([1, 2, 3, 4]);
 *
 * a.sub(b).print();  // or tf.sub(a, b)
 * ```
 *
 * ```js
 * // Broadcast subtract a with b.
 * const a = tf.tensor1d([10, 20, 30, 40]);
 * const b = tf.scalar(5);
 *
 * a.sub(b).print();  // or tf.sub(a, b)
 * ```
 * @param a The first `tf.Tensor` to subtract from.
 * @param b The second `tf.Tensor` to be subtracted. Must have the same dtype as
 * `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Arithmetic'}
 */function(e,t){let i=(0,s.convertToTensor)(e,"a","sub"),o=(0,s.convertToTensor)(t,"b","sub");[i,o]=(0,a.makeTypesMatch)(i,o);let l={a:i,b:o};return(0,r.ENGINE).runKernel(n.Sub,l)}})}),R("9sl63",function(e,t){c(e.exports,"AdamaxOptimizer",()=>f);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("c2DT1"),a=A("7j49I"),s=A("hgacW"),i=A("1QPqB"),o=A("g5Jt1"),l=A("jZc0w"),u=A("3xp7o"),d=A("7kouu"),p=A("8EjnK"),h=A("kULIJ");class f extends h.Optimizer{/** @nocollapse */static get className(){// Name matters for Python compatibility.
// This is a getter instead of a property because when it's a property, it
// prevents the entire class from being tree-shaken.
return"Adamax"}constructor(e,t,a,s=null,i=0){super(),this.learningRate=e,this.beta1=t,this.beta2=a,this.epsilon=s,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,n.tidy)(()=>{this.iteration=(0,u.scalar)(0).variable(),this.accBeta1=(0,u.scalar)(t).variable()}),null==s&&(this.epsilon=(0,r.ENGINE).backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);(0,n.tidy)(()=>{let n=(0,d.sub)(1,this.accBeta1),u=(0,i.div)(-this.learningRate,(0,s.add)((0,l.mul)(this.iteration,this.decay),1));t.forEach((t,c)=>{let d=r.ENGINE.registeredVariables[t];null==this.accumulatedFirstMoment[c]&&(this.accumulatedFirstMoment[c]={originalName:`${t}/m`,variable:(0,p.zerosLike)(d).variable(!1)}),null==this.accumulatedWeightedInfNorm[c]&&(this.accumulatedWeightedInfNorm[c]={originalName:`${t}/v`,variable:(0,p.zerosLike)(d).variable(!1)});let h=Array.isArray(e)?e[c].tensor:e[t];if(null==h)return;let f=this.accumulatedFirstMoment[c].variable,m=this.accumulatedWeightedInfNorm[c].variable,g=(0,s.add)((0,l.mul)(f,this.beta1),(0,l.mul)(h,1-this.beta1)),y=(0,l.mul)(m,this.beta2),b=(0,a.abs)(h),v=(0,o.maximum)(y,b);f.assign(g),m.assign(v);let x=(0,s.add)((0,l.mul)((0,i.div)(u,n),(0,i.div)(g,(0,s.add)(v,this.epsilon))),d);d.assign(x)}),this.iteration.assign((0,s.add)(this.iteration,1)),this.accBeta1.assign((0,l.mul)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,n.dispose)(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&(0,n.dispose)(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}/** @nocollapse */static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}}),R("7j49I",function(e,t){c(e.exports,"abs",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({abs_:/**
 * Computes absolute value element-wise: `abs(x)`
 *
 * ```js
 * const x = tf.tensor1d([-1, 2, -3, 4]);
 *
 * x.abs().print();  // or tf.abs(x)
 * ```
 * @param x The input `tf.Tensor`.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","abs");return"complex64"===t.dtype?(0,r.ENGINE).runKernel(n.ComplexAbs,{x:t}):(0,r.ENGINE).runKernel(n.Abs,{x:t})}})}),R("g5Jt1",function(e,t){c(e.exports,"maximum",()=>u);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("8BaGO"),o=A("inFmq"),l=A("jqSCG");let u=/* @__PURE__ */(0,l.op)({maximum_:/**
 * Returns the max of a and b (`a > b ? a : b`) element-wise.
 * Supports broadcasting.
 *
 * We also expose `tf.maximumStrict` which has the same signature as this op and
 * asserts that `a` and `b` are the same shape (does not broadcast).
 *
 * ```js
 * const a = tf.tensor1d([1, 4, 3, 16]);
 * const b = tf.tensor1d([1, 2, 9, 4]);
 *
 * a.maximum(b).print();  // or tf.maximum(a, b)
 * ```
 *
 * ```js
 * // Broadcast maximum a with b.
 * const a = tf.tensor1d([2, 4, 6, 8]);
 * const b = tf.scalar(5);
 *
 * a.maximum(b).print();  // or tf.maximum(a, b)
 * ```
 *
 * @param a The first tensor.
 * @param b The second tensor. Must have the same type as `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Arithmetic'}
 */function(e,t){let l=(0,s.convertToTensor)(e,"a","maximum"),u=(0,s.convertToTensor)(t,"b","maximum");[l,u]=(0,a.makeTypesMatch)(l,u),"bool"===l.dtype&&(l=(0,o.cast)(l,"int32"),u=(0,o.cast)(u,"int32")),(0,i.assertAndGetBroadcastShape)(l.shape,u.shape);let c={a:l,b:u};return(0,r.ENGINE).runKernel(n.Maximum,c)}})}),R("8BaGO",function(e,t){/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * Returns the dimensions in the input shape that are broadcasted to
 * produce the provided output shape.
 *
 * The returned dimensions are 0-indexed and sorted. An example:
 * inShape = [4, 1, 3]
 * outShape = [5, 4, 3, 3]
 * result = [1]. Dimension 1 (2nd dimension of input) gets broadcasted 1 => 3.
 */function r(e,t){let r=e.length,n=[];for(let a=0;a<r;a++){let s=r-1-a,i=e[s]||1,o=t[t.length-1-a]||1;o>1&&1===i&&n.unshift(s)}return n}function n(e,t){let r=[];for(let n=0;n<t.length;n++){let a=e[e.length-n-1],s=t.length-n-1,i=t[s];(null==a||1===a&&i>1)&&r.unshift(s)}return r}function a(e,t){let r=Math.max(e.length,t.length),n=Array(r);for(let a=0;a<r;a++){let s=e[e.length-a-1];null==s&&(s=1);let i=t[t.length-a-1];if(null==i&&(i=1),1===s)n[r-a-1]=i;else if(1===i)n[r-a-1]=s;else if(s!==i){let r=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(r)}else n[r-a-1]=s}return n}c(e.exports,"getBroadcastDims",()=>r),c(e.exports,"getReductionAxes",()=>n),c(e.exports,"assertAndGetBroadcastShape",()=>a)}),R("7GJGN",function(e,t){c(e.exports,"MomentumOptimizer",()=>u);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("c2DT1"),a=A("hgacW"),s=A("jZc0w"),i=A("3xp7o"),o=A("8EjnK"),l=A("hR6PP");class u extends l.SGDOptimizer{/** @nocollapse */// Name matters for Python compatibility.
static get className(){// Name matters for Python compatibility.
// This is a getter instead of a property because when it's a property, it
// prevents the entire class from being tree-shaken.
return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=(0,i.scalar)(this.momentum)}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,i)=>{let l=r.ENGINE.registeredVariables[t];null==this.accumulations[i]&&(this.accumulations[i]={originalName:`${t}/momentum`,variable:(0,n.tidy)(()=>(0,o.zerosLike)(l).variable(!1))});let u=this.accumulations[i].variable,c=Array.isArray(e)?e[i].tensor:e[t];null!=c&&(0,n.tidy)(()=>{let e;let t=(0,a.add)((0,s.mul)(this.m,u),c);e=this.useNesterov?(0,a.add)((0,s.mul)(this.c,(0,a.add)(c,(0,s.mul)(t,this.m))),l):(0,a.add)((0,s.mul)(this.c,t),l),u.assign(t),l.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,n.dispose)(this.accumulations.map(e=>e.variable))}/**
     * Sets the momentum of the optimizer.
     *
     * @param momentum
     */setMomentum(e){this.momentum=e}async getWeights(){// Order matters for Python compatibility.
return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}/** @nocollapse */static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}}),R("hR6PP",function(e,t){c(e.exports,"SGDOptimizer",()=>l);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("c2DT1"),a=A("hgacW"),s=A("jZc0w"),i=A("3xp7o"),o=A("kULIJ");class l extends o.Optimizer{/** @nocollapse */static get className(){// Name matters for Python compatibility.
// This is a getter instead of a property because when it's a property, it
// prevents the entire class from being tree-shaken.
return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,i)=>{let o=Array.isArray(e)?e[i].tensor:e[t];if(null==o)return;let l=r.ENGINE.registeredVariables[t];(0,n.tidy)(()=>{let e=(0,a.add)((0,s.mul)(this.c,o),l);l.assign(e)})}),this.incrementIterations()}/**
     * Sets the learning rate of the optimizer.
     */setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,n.keep)((0,i.scalar)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}/** @nocollapse */static fromConfig(e,t){return new e(t.learningRate)}}}),R("7qglv",function(e,t){c(e.exports,"RMSPropOptimizer",()=>h);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("c2DT1"),a=A("hgacW"),s=A("1QPqB"),i=A("jZc0w"),o=A("iAb3z"),l=A("iDd8d"),u=A("7kouu"),d=A("8EjnK"),p=A("kULIJ");class h extends p.Optimizer{/** @nocollapse */static get className(){// Name matters for Python compatibility.
// This is a getter instead of a property because when it's a property, it
// prevents the entire class from being tree-shaken.
return"RMSProp"}constructor(e,t=.9,n=0,a=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==a&&(this.epsilon=(0,r.ENGINE).backend.epsilon()),null==e)throw Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);t.forEach((t,c)=>{let p=r.ENGINE.registeredVariables[t];null==this.accumulatedMeanSquares[c]&&(this.accumulatedMeanSquares[c]={originalName:`${t}/rms`,variable:(0,n.tidy)(()=>(0,d.zerosLike)(p).variable(!1))}),null==this.accumulatedMoments[c]&&(this.accumulatedMoments[c]={originalName:`${t}/momentum`,variable:(0,n.tidy)(()=>(0,d.zerosLike)(p).variable(!1))}),null==this.accumulatedMeanGrads[c]&&this.centered&&(this.accumulatedMeanGrads[c]={originalName:`${t}/mg`,variable:(0,n.tidy)(()=>(0,d.zerosLike)(p).variable(!1))});let h=Array.isArray(e)?e[c].tensor:e[t];if(null==h)return;let f=this.accumulatedMeanSquares[c].variable,m=this.accumulatedMoments[c].variable;(0,n.tidy)(()=>{let e=(0,a.add)((0,i.mul)(f,this.decay),(0,i.mul)((0,l.square)(h),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[c].variable,r=(0,a.add)((0,i.mul)(t,this.decay),(0,i.mul)(h,1-this.decay)),n=(0,s.div)((0,i.mul)(h,this.learningRate),(0,o.sqrt)((0,u.sub)(e,(0,a.add)((0,l.square)(r),this.epsilon)))),d=(0,a.add)((0,i.mul)(m,this.momentum),n);f.assign(e),t.assign(r),m.assign(d);let g=(0,u.sub)(p,d);p.assign(g)}else{// Plain gradient
let e=(0,a.add)((0,i.mul)(f,this.decay),(0,i.mul)((0,l.square)(h),1-this.decay)),t=(0,a.add)((0,i.mul)(m,this.momentum),(0,s.div)((0,i.mul)(h,this.learningRate),(0,o.sqrt)((0,a.add)(e,this.epsilon))));f.assign(e),m.assign(t);let r=(0,u.sub)(p,t);p.assign(r)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,n.dispose)(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&(0,n.dispose)(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&(0,n.dispose)(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){// Order matters for Python compatibility.
let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}/** @nocollapse */static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}}),R("6th4t",function(e,t){c(e.exports,"AdadeltaOptimizer",()=>A("Haryc").AdadeltaOptimizer),c(e.exports,"AdagradOptimizer",()=>A("7740A").AdagradOptimizer),c(e.exports,"AdamOptimizer",()=>A("cdIoP").AdamOptimizer),c(e.exports,"AdamaxOptimizer",()=>A("9sl63").AdamaxOptimizer),c(e.exports,"MomentumOptimizer",()=>A("7GJGN").MomentumOptimizer),c(e.exports,"Optimizer",()=>A("kULIJ").Optimizer),c(e.exports,"OptimizerConstructors",()=>A("bO4Xu").OptimizerConstructors),c(e.exports,"RMSPropOptimizer",()=>A("7qglv").RMSPropOptimizer),c(e.exports,"SGDOptimizer",()=>A("hR6PP").SGDOptimizer),c(e.exports,"Tensor",()=>A("9jCh7").Tensor),c(e.exports,"TensorBuffer",()=>A("9jCh7").TensorBuffer),c(e.exports,"Variable",()=>A("9jCh7").Variable),c(e.exports,"Rank",()=>A("2MDja").Rank),c(e.exports,"sumOutType",()=>A("2MDja").sumOutType),c(e.exports,"upcastType",()=>A("2MDja").upcastType),c(e.exports,"Reduction",()=>A("i8gZm").Reduction),c(e.exports,"customGrad",()=>A("92fpA").customGrad),c(e.exports,"grad",()=>A("92fpA").grad),c(e.exports,"grads",()=>A("92fpA").grads),c(e.exports,"valueAndGrad",()=>A("92fpA").valueAndGrad),c(e.exports,"valueAndGrads",()=>A("92fpA").valueAndGrads),c(e.exports,"variableGrads",()=>A("92fpA").variableGrads),c(e.exports,"Environment",()=>A("ibsdL").Environment),c(e.exports,"env",()=>A("ibsdL").env),c(e.exports,"ENV",()=>A("ibsdL").ENV),c(e.exports,"version_core",()=>A("kWDmn").version),c(e.exports,"nextFrame",()=>A("9LtVT").nextFrame),c(e.exports,"browser",()=>A("cpgue")),c(e.exports,"io",()=>A("9ELKf")),c(e.exports,"math",()=>A("9soOW")),c(e.exports,"serialization",()=>A("5IZxH")),c(e.exports,"test_util",()=>A("6thPa")),c(e.exports,"util",()=>A("jjNRA")),c(e.exports,"backend_util",()=>A("7MaPk")),c(e.exports,"broadcast_util",()=>A("8BaGO")),c(e.exports,"tensor_util",()=>A("3w4Rg")),c(e.exports,"slice_util",()=>A("bszZn")),c(e.exports,"gather_util",()=>A("4EvS9")),c(e.exports,"scatter_util",()=>A("7wQGW")),c(e.exports,"device_util",()=>A("4GTZ3")),c(e.exports,"kernel_impls",()=>A("lzjc8")),c(e.exports,"KernelBackend",()=>A("fJqML").KernelBackend),c(e.exports,"DataStorage",()=>A("fJqML").DataStorage),A("9ELKf"),A("9soOW"),A("8BaGO"),A("cpgue"),A("4EvS9"),A("7wQGW"),A("bszZn"),A("5IZxH"),A("3w4Rg"),A("6thPa"),A("jjNRA"),A("kWDmn"),A("Haryc"),A("7740A"),A("cdIoP"),A("9sl63"),A("7GJGN"),A("kULIJ"),A("bO4Xu"),A("7qglv"),A("hR6PP"),A("9jCh7"),A("2MDja");var r=A("aosGd");A("i8gZm");var n=A("dXS8M"),a=A("c2DT1"),s=A("eky5o");A("92fpA"),A("ibsdL"),A("9LtVT"),A("7MaPk"),A("4GTZ3"),A("lzjc8"),A("fJqML");var i=A("hl418");d(e.exports,r),d(e.exports,n),d(e.exports,a),d(e.exports,s),d(e.exports,i)}),R("9ELKf",function(e,t){c(e.exports,"copyModel",()=>A("1PMKz").copyModel),c(e.exports,"listModels",()=>A("1PMKz").listModels),c(e.exports,"moveModel",()=>A("1PMKz").moveModel),c(e.exports,"removeModel",()=>A("1PMKz").removeModel),c(e.exports,"browserFiles",()=>A("GOEuS").browserFiles),c(e.exports,"browserHTTPRequest",()=>A("jbPC7").browserHTTPRequest),c(e.exports,"CompositeArrayBuffer",()=>A("hBb8J").CompositeArrayBuffer),c(e.exports,"concatenateArrayBuffers",()=>A("4FRLN").concatenateArrayBuffers),c(e.exports,"decodeWeights",()=>A("4FRLN").decodeWeights),c(e.exports,"encodeWeights",()=>A("4FRLN").encodeWeights),c(e.exports,"fromMemory",()=>A("hfd1o").fromMemory),c(e.exports,"fromMemorySync",()=>A("hfd1o").fromMemorySync),c(e.exports,"getLoadHandlers",()=>A("9RUNn").getLoadHandlers),c(e.exports,"getModelArtifactsForJSON",()=>A("4FRLN").getModelArtifactsForJSON),c(e.exports,"getModelArtifactsForJSONSync",()=>A("4FRLN").getModelArtifactsForJSONSync),c(e.exports,"getModelArtifactsInfoForJSON",()=>A("4FRLN").getModelArtifactsInfoForJSON),c(e.exports,"getSaveHandlers",()=>A("9RUNn").getSaveHandlers),c(e.exports,"getWeightSpecs",()=>A("4FRLN").getWeightSpecs),c(e.exports,"http",()=>A("jbPC7").http),c(e.exports,"isHTTPScheme",()=>A("jbPC7").isHTTPScheme),c(e.exports,"loadWeights",()=>A("wfkqW").loadWeights),c(e.exports,"registerLoadRouter",()=>A("9RUNn").registerLoadRouter),c(e.exports,"registerSaveRouter",()=>A("9RUNn").registerSaveRouter),c(e.exports,"weightsLoaderFactory",()=>A("wfkqW").weightsLoaderFactory),c(e.exports,"withSaveHandler",()=>A("hfd1o").withSaveHandler),c(e.exports,"withSaveHandlerSync",()=>A("hfd1o").withSaveHandlerSync),/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// Importing local_storage and indexed_db is necessary for the routers to be
// registered.
A("caMdQ"),A("h6KCl"),A("GOEuS"),A("jbPC7"),A("4FRLN"),A("hfd1o"),A("9RUNn"),A("wfkqW"),A("hBb8J"),A("1PMKz")}),R("GOEuS",function(e,t){c(e.exports,"browserFiles",()=>u),/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * IOHandlers related to files, such as browser-triggered file downloads,
 * user-selected files in browser.
 */A("dcHSK");var r=A("ibsdL"),n=A("4FRLN"),a=A("9RUNn"),s=A("hBb8J");function i(e){return new Promise(e=>setTimeout(e)).then(e)}class o{constructor(e){if(!(0,r.env)().getBool("IS_BROWSER"))//   current environment.
throw Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(o.URL_SCHEME)&&(e=e.slice(o.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw Error("Browser downloads are not supported in this environment since `document` is not present");// TODO(mattsoulanille): Support saving models over 2GB that exceed
// Chrome's ArrayBuffer size limit.
let t=(0,s.CompositeArrayBuffer).join(e.weightData),r=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a=(0,n.getModelJSONForModelArtifacts)(e,t),s=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),o=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=s,// Trigger downloads by evoking a click event on the download anchors.
// When multiple downloads are started synchronously, Firefox will only
// save the last one.
await i(()=>o.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=r,await i(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:(0,n.getModelArtifactsInfoForJSON)(e)}}}}o.URL_SCHEME="downloads://";class l{constructor(e){if(null==e||e.length<1)throw Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let r=new FileReader;r.onload=r=>{// tslint:disable-next-line:no-any
let a=JSON.parse(r.target.result),s=a.modelTopology;if(null==s){t(Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}let i=a.weightsManifest;if(null==i){t(Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(0===this.weightsFiles.length){e({modelTopology:s});return}let o=(0,n.getModelArtifactsForJSON)(a,e=>this.loadWeights(e));e(o)},r.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){let t=[],r=[];for(let n of e)t.push(...n.weights),r.push(...n.paths);let n=this.checkManifestAndWeightFiles(e),a=r.map(e=>this.loadWeightsFile(e,n[e]));return Promise.all(a).then(e=>[t,e])}loadWeightsFile(e,t){return new Promise((r,n)=>{let a=new FileReader;a.onload=e=>{// tslint:disable-next-line:no-any
let t=e.target.result;r(t)},a.onerror=t=>n(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}/**
     * Check the compatibility between weights manifest and weight files.
     */checkManifestAndWeightFiles(e){let t=[],r=this.weightsFiles.map(e=>(0,n.basename)(e.name)),a={};for(let s of e)s.paths.forEach(e=>{let s=(0,n.basename)(e);if(-1!==t.indexOf(s))throw Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===r.indexOf(s))throw Error(`Weight file with basename '${s}' is not provided.`);a[e]=this.weightsFiles[r.indexOf(s)]});if(t.length!==this.weightsFiles.length)throw Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}}function u(e){return new l(e)}(0,a.IORouterRegistry).registerSaveRouter(e=>(0,r.env)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(o.URL_SCHEME)?function(e="model"){return new o(e)}(e.slice(o.URL_SCHEME.length)):null)}),R("jbPC7",function(e,t){c(e.exports,"isHTTPScheme",()=>u),c(e.exports,"http",()=>p),c(e.exports,"browserHTTPRequest",()=>h);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * IOHandler implementations based on HTTP requests in the web browser.
 *
 * Uses [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).
 */var r=A("ibsdL"),n=A("8cCb2"),a=A("4FRLN"),s=A("hBb8J"),i=A("9RUNn"),o=A("wfkqW");class l{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,n.assert)("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=(0,r.env)().platform.fetch,(0,n.assert)(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&(0,n.assert)(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],n=(0,a.getModelJSONForModelArtifacts)(e,r);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){// TODO(mattsoulanille): Support saving models over 2GB that exceed
// Chrome's ArrayBuffer size limit.
let r=(0,s.CompositeArrayBuffer).join(e.weightData);t.body.append("model.weights.bin",new Blob([r],{type:"application/octet-stream"}),"model.weights.bin")}let i=await this.fetch(this.path,t);if(i.ok)return{modelArtifactsInfo:(0,a.getModelArtifactsInfoForJSON)(e),responses:[i]};throw Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}/**
     * Load model artifacts via HTTP request(s).
     *
     * See the documentation to `tf.io.http` for details on the saved
     * artifacts.
     *
     * @returns The loaded model artifacts (if loading succeeds).
     */async load(){let e;let t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",Error(e)}// We do not allow both modelTopology and weightsManifest to be missing.
let r=e.modelTopology,n=e.weightsManifest;if(null==r&&null==n)throw Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return(0,a.getModelArtifactsForJSON)(e,e=>this.loadWeights(e))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[r,n]=function(e){let t=e.lastIndexOf("/"),r=e.lastIndexOf("?"),n=e.substring(0,t),a=r>t?e.substring(r):"";return[n+"/",a]}(t),s=this.weightPathPrefix||r,i=(0,a.getWeightSpecs)(e),l=[],u=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?u.push(this.weightUrlConverter(e)):l.push(s+e+n);this.weightUrlConverter&&l.push(...await Promise.all(u));let c=await (0,o.loadWeightsAsArrayBuffer)(l,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,c]}}function u(e){return null!=e.match(l.URL_SCHEME_REGEX)}l.URL_SCHEME_REGEX=/^https?:\/\//;let d=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc));else if(Array.isArray(e)?e.every(e=>u(e)):u(e))return p(e,t);return null};function p(e,t){return new l(e,t)}function h(e,t){return p(e,t)}(0,i.IORouterRegistry).registerSaveRouter(d),(0,i.IORouterRegistry).registerLoadRouter(d)}),R("wfkqW",function(e,t){c(e.exports,"loadWeightsAsArrayBuffer",()=>l),c(e.exports,"loadWeights",()=>u),c(e.exports,"weightsLoaderFactory",()=>d);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("ibsdL"),n=A("8cCb2"),a=A("hBb8J"),s=A("4FRLN"),i=A("cYV5g"),o=A("2bXta");async function l(e,t){null==t&&(t={});let n=null==t.fetchFunc?(0,r.env)().platform.fetch:t.fetchFunc,a=e.map(e=>n(e,t.requestInit,{isBinary:!0})),s=null==t.onProgress?await Promise.all(a):await (0,i.monitorPromisesProgress)(a,t.onProgress,0,.5),o=s.map(e=>e.arrayBuffer()),l=null==t.onProgress?await Promise.all(o):await (0,i.monitorPromisesProgress)(o,t.onProgress,.5,1);return l}async function u(e,t="",r,n){let a=d(e=>l(e,{requestInit:n}));return a(e,t,r)}function d(e){return async(t,r="",i)=>{// Collect all the groups, weights, and their relative offsets to be
// fetched.
let l=t.map(()=>!1),u={},c=null!=i?i.map(()=>!1):[],d=[];if(t.forEach((e,t)=>{let r=0;e.weights.forEach(e=>{let a="quantization"in e?e.quantization.dtype:e.dtype,s=o.DTYPE_VALUE_SIZE_MAP[a]*n.sizeFromShape(e.shape),p=()=>{l[t]=!0,null==u[t]&&(u[t]=[]),u[t].push({manifestEntry:e,groupOffset:r,sizeBytes:s})};null!=i?i.forEach((t,r)=>{t===e.name&&(p(),c[r]=!0)}):p(),d.push(e.name),r+=s})}),!c.every(e=>e)){let e=i.filter((e,t)=>!c[t]);throw Error(`Could not find weights in manifest with names: ${e.join(", ")}. 
Manifest JSON has weights with names: ${d.join(", ")}.`)}// Convert the one-hot boolean groupId => shouldFetch map to a list of group
// IDs.
let p=l.reduce((e,t,r)=>(t&&e.push(r),e),[]),h=[];p.forEach(e=>{t[e].paths.forEach(e=>{let t=r+(r.endsWith("/")?"":"/")+e;h.push(t)})});let f=await e(h),m={},g=0;return p.forEach(e=>{let r=t[e].paths.length,n=new a.CompositeArrayBuffer(f.slice(g,g+r)),i=u[e];i.forEach(e=>{let t=n.slice(e.groupOffset,e.groupOffset+e.sizeBytes),r=(0,s.decodeWeights)(t,[e.manifestEntry]);for(let e in r)m[e]=r[e]}),g+=r}),m}}}),R("cYV5g",function(e,t){c(e.exports,"monitorPromisesProgress",()=>n);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2");function n(e,t,n,a){var s,i;(0,r.assert)(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array"),s=n=null==n?0:n,i=a=null==a?1:a,(0,r.assert)(s>=0&&s<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${s}`),(0,r.assert)(i>=0&&i<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${i}`),(0,r.assert)(i>=s,()=>`startFraction must be no more than endFraction, but got startFraction ${s} and endFraction ${i}`);let o=0;return Promise.all(e.map(r=>(r.then(r=>{let s=n+ ++o/e.length*(a-n);return(// pass fraction as parameter to callback function.
    t(s),r)}),r)))}}),R("hfd1o",function(e,t){c(e.exports,"fromMemory",()=>s),c(e.exports,"fromMemorySync",()=>i),c(e.exports,"withSaveHandler",()=>o),c(e.exports,"withSaveHandlerSync",()=>l);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class n{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class a{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function s(e,t,r,n){let s=arguments;return new a(i(...s))}function i(e,t,n,a){if(1!=arguments.length)return(// Legacy support.
// TODO(cais): Remove this deprecated API.
console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new r({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a}));{let t=null!=e.modelTopology||null!=e.weightSpecs;return t?new r(e):(// Legacy support: with only modelTopology.
// TODO(cais): Remove this deprecated API.
console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new r({modelTopology:e}))}}function o(e){return new n(e)}function l(e){return new n(e)}}),R("9soOW",function(e,t){c(e.exports,"confusionMatrix",()=>A("4UAJF").confusionMatrix),A("4UAJF")}),R("4UAJF",function(e,t){c(e.exports,"confusionMatrix",()=>u);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("inFmq"),s=A("aUFou"),i=A("i3U4j"),o=A("jqSCG"),l=A("aDHKy");let u=/* @__PURE__ */(0,o.op)({confusionMatrix_:function(e,t,o){let u=(0,r.convertToTensor)(e,"labels","confusionMatrix"),c=(0,r.convertToTensor)(t,"predictions","confusionMatrix");n.assert(null==o||o>0&&Number.isInteger(o),()=>`If provided, numClasses must be a positive integer, but got ${o}`),n.assert(1===u.rank,()=>`Expected the rank of labels to be 1, but got ${u.rank}`),n.assert(1===c.rank,()=>`Expected the rank of predictions to be 1, but got ${c.rank}`),n.assert(u.shape[0]===c.shape[0],()=>`Mismatch in the number of examples: ${u.shape[0]} vs. ${c.shape[0]}. Labels and predictions should have the same number of elements.`),n.assert(o>0&&Number.isInteger(o),()=>`numClasses is required to be a positive integer, but got ${o}`);// TODO(cais): In the future, if oneHot supports tensors inputs for
//   `numClasses`, `confusionMatrix` can make `numClasses` optional.
let d=(0,i.oneHot)((0,a.cast)(u,"int32"),o),p=(0,i.oneHot)((0,a.cast)(c,"int32"),o),h=(0,l.transpose)(d),f=(0,s.matMul)(h,p);return(0,a.cast)(f,"int32")}})}),R("aUFou",function(e,t){c(e.exports,"matMul",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({matMul_:/**
 * Computes the dot product of two matrices, A * B. These must be matrices.
 *
 * ```js
 * const a = tf.tensor2d([1, 2], [1, 2]);
 * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);
 *
 * a.matMul(b).print();  // or tf.matMul(a, b)
 * ```
 * @param a First matrix in dot product operation.
 * @param b Second matrix in dot product operation.
 * @param transposeA If true, `a` is transposed before multiplication.
 * @param transposeB If true, `b` is transposed before multiplication.
 *
 * @doc {heading: 'Operations', subheading: 'Matrices'}
 */function(e,t,i=!1,o=!1){let l=(0,s.convertToTensor)(e,"a","matMul"),u=(0,s.convertToTensor)(t,"b","matMul");[l,u]=(0,a.makeTypesMatch)(l,u);let c={a:l,b:u};return(0,r.ENGINE).runKernel(n.BatchMatMul,c,{transposeA:i,transposeB:o})}})}),R("i3U4j",function(e,t){c(e.exports,"oneHot",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({oneHot_:/**
 * Creates a one-hot `tf.Tensor`. The locations represented by `indices` take
 * value `onValue` (defaults to 1), while all other locations take value
 * `offValue` (defaults to 0). If `indices` is rank `R`, the output has rank
 * `R+1` with the last axis of size `depth`.
 * `indices` used to encode prediction class must start from 0. For example,
 *  if you have 3 classes of data, class 1 should be encoded as 0, class 2
 *  should be 1, and class 3 should be 2.
 *
 * ```js
 * tf.oneHot(tf.tensor1d([0, 1], 'int32'), 3).print();
 * ```
 *
 * @param indices `tf.Tensor` of indices with dtype `int32`. Indices must
 * start from 0.
 * @param depth The depth of the one hot dimension.
 * @param onValue A number used to fill in the output when the index matches
 * the location.
 * @param offValue A number used to fill in the output when the index does
 *     not match the location.
 * @param dtype The dtype of the output tensor, default to 'int32'.
 *
 * @doc {heading: 'Tensors', subheading: 'Creation'}
 */function(e,t,s=1,i=0,o="int32"){if(t<2)throw Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let l=(0,a.convertToTensor)(e,"indices","oneHot","int32");return(0,r.ENGINE).runKernel(n.OneHot,{indices:l},{dtype:o,depth:t,onValue:s,offValue:i})}})}),R("aDHKy",function(e,t){c(e.exports,"transpose",()=>h);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("c2DT1"),a=A("hl418"),s=A("5xBLk"),i=A("8cCb2"),o=A("20oDZ"),l=A("1d8KH"),u=A("15cGp"),d=A("jqSCG"),p=A("b7x1G");let h=/* @__PURE__ */(0,d.op)({transpose_:/**
 * Transposes the `tf.Tensor`. Permutes the dimensions according to `perm`.
 *
 * The returned `tf.Tensor`'s dimension `i` will correspond to the input
 * dimension `perm[i]`. If `perm` is not given, it is set to `[n-1...0]`,
 * where `n` is the rank of the input `tf.Tensor`. Hence by default, this
 * operation performs a regular matrix transpose on 2-D input `tf.Tensor`s.
 *
 * ```js
 * const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);
 *
 * a.transpose().print();  // or tf.transpose(a)
 * ```
 *
 * @param x The tensor to transpose.
 * @param perm The permutation of the dimensions of a.
 * @param conjugate Will conjugate complex input if true.
 *
 * @doc {heading: 'Operations', subheading: 'Matrices'}
 */function(e,t,c){let d=(0,s.convertToTensor)(e,"x","transpose");if(null==t&&(t=d.shape.map((e,t)=>t).reverse()),i.assert(d.rank===t.length,()=>`Error in transpose: rank of input ${d.rank} must match length of perm ${t}.`),t.forEach(e=>{i.assert(e>=0&&e<d.rank,()=>`All entries in 'perm' must be between 0 and ${d.rank-1} but got ${t}`)}),d.rank<=1)return d.clone();let h={perm:t};return"complex64"===d.dtype?(0,n.tidy)(()=>{let e=(0,p.real)(d),t=(0,l.imag)(d);return e=(0,r.ENGINE).runKernel(a.Transpose,{x:e},h),t=(0,r.ENGINE).runKernel(a.Transpose,{x:t},h),c&&(t=(0,u.neg)(t)),(0,o.complex)(e,t)}):(0,r.ENGINE).runKernel(a.Transpose,{x:d},h)}})}),R("1d8KH",function(e,t){c(e.exports,"imag",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({imag_:/**
 * Returns the imaginary part of a complex (or real) tensor.
 *
 * Given a tensor input, this operation returns a tensor of type float that is
 * the imaginary part of each element in input considered as a complex number.
 * If input is real, a tensor of all zeros is returned.
 *
 * ```js
 * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);
 * tf.imag(x).print();
 * ```
 *
 * @doc {heading: 'Tensors', subheading: 'Creation'}
 */function(e){let t=(0,a.convertToTensor)(e,"input","imag");return(0,r.ENGINE).runKernel(n.Imag,{input:t})}})}),R("15cGp",function(e,t){c(e.exports,"neg",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({neg_:/**
 * Computes `-1 * x` element-wise.
 *
 * ```js
 * const x = tf.tensor2d([1, 2, -2, 0], [2, 2]);
 *
 * x.neg().print();  // or tf.neg(x)
 * ```
 *
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","neg");return(0,r.ENGINE).runKernel(n.Neg,{x:t})}})}),R("b7x1G",function(e,t){c(e.exports,"real",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({real_:/**
 * Returns the real part of a complex (or real) tensor.
 *
 * Given a tensor input, this operation returns a tensor of type float that is
 * the real part of each element in input considered as a complex number.
 *
 * If the input is real, it simply makes a clone.
 *
 * ```js
 * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);
 * tf.real(x).print();
 * ```
 *
 * @doc {heading: 'Tensors', subheading: 'Creation'}
 */function(e){let t=(0,a.convertToTensor)(e,"input","real");return(0,r.ENGINE).runKernel(n.Real,{input:t})}})}),R("cpgue",function(e,t){let r;c(e.exports,"fromPixelsAsync",()=>m),c(e.exports,"toPixels",()=>y),c(e.exports,"draw",()=>b),c(e.exports,"fromPixels",()=>v);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var n=A("38WwN"),a=A("ibsdL"),s=A("hl418"),i=A("eky5o"),o=A("9jCh7"),l=A("5xBLk"),u=A("inFmq"),d=A("jqSCG"),p=A("6Fl9Q");let h=!1;/**
 * Creates a `tf.Tensor` from an image.
 *
 * ```js
 * const image = new ImageData(1, 1);
 * image.data[0] = 100;
 * image.data[1] = 150;
 * image.data[2] = 200;
 * image.data[3] = 255;
 *
 * tf.browser.fromPixels(image).print();
 * ```
 *
 * @param pixels The input image to construct the tensor from. The
 * supported image types are all 4-channel. You can also pass in an image
 * object with following attributes:
 * `{data: Uint8Array; width: number; height: number}`
 * @param numChannels The number of channels of the output tensor. A
 * numChannels value less than 4 allows you to ignore channels. Defaults to
 * 3 (ignores alpha channel of input image).
 *
 * @returns A Tensor3D with the shape `[height, width, numChannels]`.
 *
 * Note: fromPixels can be lossy in some cases, same image may result in
 * slightly different tensor values, if rendered by different rendering
 * engines. This means that results from different browsers, or even same
 * browser with CPU and GPU rendering engines can be different. See discussion
 * in details:
 * https://github.com/tensorflow/tfjs/issues/5482
 *
 * @doc {heading: 'Browser', namespace: 'browser', ignoreCI: true}
 */function f(e,t=3){let a,o;// Sanity checks.
if(t>4)throw Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw Error("pixels passed to tf.browser.fromPixels() can not be null");let l=!1,u=!1,c=!1,d=!1,h=!1,f=!1;if(e.data instanceof Uint8Array)l=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)u=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)c=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)d=!0;else if(null!=e.getContext)h=!0;else if("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap)f=!0;else throw Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);// If the current backend has 'FromPixels' registered, it has a more
// efficient way of handling pixel uploads, so we call that.
let m=(0,i.getKernel)(s.FromPixels,n.ENGINE.backendName);if(null!=m)return(0,n.ENGINE).runKernel(s.FromPixels,{pixels:e},{numChannels:t});let[g,y]=c?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(h)a=e.getContext("2d").getImageData(0,0,g,y).data;else if(u||l)a=e.data;else if(d||c||f){if(null==r){if("undefined"==typeof document){if("undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof OffscreenCanvasRenderingContext2D)r=new OffscreenCanvas(1,1).getContext("2d");else throw Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.")}else r=document.createElement("canvas").getContext("2d",{willReadFrequently:!0})}r.canvas.width=g,r.canvas.height=y,r.drawImage(e,0,0,g,y),a=r.getImageData(0,0,g,y).data}if(4===t)o=new Int32Array(a);else{let e=g*y;o=new Int32Array(e*t);for(let r=0;r<e;r++)for(let e=0;e<t;++e)o[r*t+e]=a[4*r+e]}let b=[y,g,t];return(0,p.tensor3d)(o,b,"int32")}async function m(e,t=3){var r;let n=null;// Check whether the backend needs to wrap |pixels| to imageBitmap and
// whether |pixels| can be wrapped to imageBitmap.
if((0,a.env)().getBool("WRAP_TO_IMAGEBITMAP")&&"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&null!=(r=e)&&0!==r.width&&0!==r.height&&!(null!=e&&e.data instanceof Uint8Array)){// Force the imageBitmap creation to not do any premultiply alpha
// ops.
let t;try{// wrap in try-catch block, because createImageBitmap may not work
// properly in some browsers, e.g.
// https://bugzilla.mozilla.org/show_bug.cgi?id=1335594
// tslint:disable-next-line: no-any
t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}// createImageBitmap will clip the source size.
// In some cases, the input will have larger size than its content.
// E.g. new Image(10, 10) but with 1 x 1 content. Using
// createImageBitmap will clip the size from 10 x 10 to 1 x 1, which
// is not correct. We should avoid wrapping such resouce to
// imageBitmap.
n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return f(n,t)}function g(e){if(2!==e.rank&&3!==e.rank)throw Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function y(e,t){let r=(0,l.convertToTensor)(e,"img","toPixels");if(!(e instanceof o.Tensor)){// Assume int32 if user passed a native array.
let e=r;r=(0,u.cast)(e,"int32"),e.dispose()}g(r);let[a,c]=r.shape.slice(0,2),d=2===r.rank?1:r.shape[2],p=await r.data(),f="float32"===r.dtype?255:1,m=new Uint8ClampedArray(c*a*4);for(let e=0;e<a*c;++e){let t=[0,0,0,255];for(let n=0;n<d;n++){let a=p[e*d+n];if("float32"===r.dtype){if(a<0||a>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===r.dtype&&(a<0||a>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===d?(t[0]=a*f,t[1]=a*f,t[2]=a*f):t[n]=a*f}let n=4*e;m[n+0]=Math.round(t[0]),m[n+1]=Math.round(t[1]),m[n+2]=Math.round(t[2]),m[n+3]=Math.round(t[3])}if(null!=t){if(!h){let e=(0,i.getKernel)(s.Draw,n.ENGINE.backendName);null!=e&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),h=!0)}t.width=c,t.height=a;let e=t.getContext("2d"),r=new ImageData(m,c,a);e.putImageData(r,0,0)}return r!==e&&r.dispose(),m}function b(e,t,r){let a=(0,l.convertToTensor)(e,"img","draw");if(!(e instanceof o.Tensor)){// Assume int32 if user passed a native array.
let e=a;a=(0,u.cast)(e,"int32"),e.dispose()}g(a),function(e){let t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==r?void 0:r.imageOptions);let i={image:a};(0,n.ENGINE).runKernel(s.Draw,i,{canvas:t,options:r})}let v=/* @__PURE__ */(0,d.op)({fromPixels_:f})}),R("6Fl9Q",function(e,t){c(e.exports,"tensor3d",()=>s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("dKr4X");function s(e,t,s){if((0,n.assertNonNull)(e),null!=t&&3!==t.length)throw Error("tensor3d() requires shape to have three numbers");let i=(0,r.inferShape)(e,s);if(3!==i.length&&1!==i.length)throw Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,a.makeTensor)(e,t,i,s)}}),R("4EvS9",function(e,t){c(e.exports,"prepareAndValidate",()=>n);var r=A("8cCb2");function n(e,t){let n=e.shape.length,a=t.shape.length;if(n<1)throw Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if("int32"!==t.dtype)throw Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(0===(0,r.sizeFromShape)(e.shape))throw Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let s=t.shape,i=s[s.length-1],o=1;for(let e=0;e<s.length-1;++e)o*=s[e];let l=e.shape,u=s.slice();u.pop();let c=1;for(let e=i;e<n;++e)c*=l[e],u.push(l[e]);let d=[...(0,r.computeStrides)(e.shape).map(e=>e/c),1].slice(0,i);return[u,o,c,d]}}),R("7wQGW",function(e,t){c(e.exports,"validateUpdateShape",()=>n),c(e.exports,"validateInput",()=>a),c(e.exports,"calculateShapes",()=>s);var r=A("8cCb2");function n(e,t,r){let n=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${r.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${n}, and batchDim: ${a}.`;if(r.rank<a)throw Error(s+` update.rank < ${a}. `);if(e.length<n+(r.rank-a))throw Error(s+` Output shape length < ${n+(r.rank-a)}`);if(r.rank!==a+e.length-n)throw Error(s+` update.rank != ${a+e.length-n}`);for(let e=0;e<a;++e)if(r.shape[e]!==t.shape[e])throw Error(s+` updates.shape[${e}] (${r.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<r.rank-a;++t)if(r.shape[t+a]!==e[t+n])throw Error(s+` updates.shape[${t+a}] (${r.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function a(e,t,r){if(t.rank<1)throw Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(r.length<1)throw Error(`Output rank must be greater or equal to 1, but got shape: ${r}`);if(0===r.length){if(0===t.size)throw Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw Error(`Updates specified for empty output. updates shape: ${e.shape}`)}n(r,t,e)}function s(e,t,n){// Calculate the number of dimensions in indices
let a=t.shape.length,s=a>1?t.shape[a-1]:1,i=n.length,o=1;for(let e=s;e<i;++e)o*=n[e];let l=s<1?1:s,u=(0,r.sizeFromShape)(t.shape)/l,c=[...(0,r.computeStrides)(n.slice(0,s)),1],d=(0,r.sizeFromShape)(n);return{sliceRank:s,numUpdates:u,sliceSize:o,strides:c,outputSize:d}}}),R("bszZn",function(e,t){c(e.exports,"assertParamsValid",()=>n),c(e.exports,"maskToAxes",()=>a),c(e.exports,"computeOutShape",()=>s),c(e.exports,"stridesWithElidedDims",()=>i),c(e.exports,"getNormalizedAxes",()=>l),c(e.exports,"startIndicesWithElidedDims",()=>u),c(e.exports,"stopIndicesWithElidedDims",()=>d),c(e.exports,"startForAxis",()=>h),c(e.exports,"stopForAxis",()=>f),c(e.exports,"stridesForAxis",()=>p),c(e.exports,"isSliceContinous",()=>m),c(e.exports,"computeFlatOffset",()=>g),c(e.exports,"parseSliceParams",()=>y),c(e.exports,"sliceInfo",()=>b);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2");function n(e,t,n){let a=e.shape.length;r.assert(a===t.length,()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`),r.assert(a===n.length,()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`);for(let s=0;s<a;++s)r.assert(t[s]+n[s]<=e.shape[s],()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`)}function a(e){let t=[],r=0;for(;e>0;)1&e&&t.push(r),e/=2,r++;return t}function s(e,t,r){let n=[];for(let a=0;a<e.length;a++)n[a]=Math.ceil((t[a]-e[a])/r[a]);return n}function i(e,t,r,n){let a=[...e];for(let e=a.length;e<n.length;e++)a.push(1);for(let e=0;e<r;e++)0===e?a[t]=1:(a.splice(t,0/* num elements to delete */,1/* element to add */),a.pop());return a}function o(e,t){let r=[];for(let n=0;n<e;n++)r.push(t+n);return r}function l(e,t,r,n,a,s,o,l,c){let m=e.length,g=Array(m),y=Array(m),b=Array(m);if(t.length&&r>0){let c=t[0],p=r+1;g=u(o,c,p,n,e),y=d(l,c,p,a,e),b=i(s,c,p,e)}else for(let t=0;t<m;t++)g[t]=h(o,n,s,e,t,c),y[t]=f(l,a,s,e,t,c),b[t]=p(s,t,c);return{begin:g,end:y,strides:b}}function u(e,t,r,n,a){let s=[...a],i=o(r,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{var l;let i=(l=a)<=t?l:l-(r-1),o=n[i];e&1<<i&&(o=0),s[a]=o}return s}function d(e,t,n,a,s){let i=[...s],l=o(n,t);for(let r=0;r<i.length;r++)if(l.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{var u;let s=(u=r)<=t?u:u-(n-1),o=a[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let e=0;e<i.length;e++){// Handle negative indices
let t=s[e];i[e]<0&&(i[e]+=t),i[e]=r.clamp(0,i[e],s[e])}return i}function p(e,t,r){let n=e[t];return(r&1<<t||null==n)&&(n=1),n}function h(e,t,n,a,s,i){// Begin with the specified index
let o=t[s],l=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(// clamped below (Note: We could have set them to 0 and axis_size-1, but
// use lowest() and max() to maintain symmetry with StopForAxis())
o=l>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);// Handle negative indices
let u=a[s];return o<0&&(o+=u),// Clamping
o=r.clamp(0,o,u-1)}function f(e,t,n,a,s,i){// Begin with the specified index
let o=t[s],l=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(// clamped below
o=l>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);// Handle negative indices
let u=a[s];return o<0&&(o+=u),o=l>0?r.clamp(0,o,u):r.clamp(-1,o,u-1)}function m(e,t,r){// Index of the first axis that has size > 1.
let n=r.length;for(let e=0;e<r.length;e++)if(r[e]>1){n=e;break}for(let a=n+1;a<r.length;a++)if(t[a]>0||r[a]!==e[a])return!1;return!0}function g(e,t){let r=e.length>0?e[e.length-1]:1;for(let n=0;n<e.length-1;n++)r+=e[n]*t[n];return r}function y(e,t,n){let a,s;let i=e.shape.length;return(a="number"==typeof t?[t,...Array(i-1).fill(0)]:t.length<i?t.concat(Array(i-t.length).fill(0)):t.slice()).forEach(e=>{r.assert(-1!==e,()=>"slice() does not support negative begin indexing.")}),s=(s=null==n?Array(i).fill(-1):"number"==typeof n?[n,...Array(i-1).fill(-1)]:n.length<i?n.concat(Array(i-n.length).fill(-1)):n).map((t,n)=>t>=0?t:(r.assert(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-a[n])),[a,s]}function b(e,t,r,n,a,s,i,o,l){let u;// Only one non-zero bit is allowed in ellipsisMask, which means ellipsisMask
// is a power of 2. Use bit compares to ensure ellipsisMask is 0 or a power
// of 2. When i is a power of 2, i & (i - 1) is always 0.
// Also ref:
// https://stackoverflow.com/questions/600293/how-to-check-if-a-number-is-a-power-of-2
if(null==n?(u=Array(t.length)).fill(1):u=n,null!=i&&(i&i-1)!=0)throw Error("Multiple ellipses in slice is not allowed.");// Step 1: Account for ellipsis and new axis.
// Check for ellipsis and count how many non-newaxis there are after.
let c=!1,d={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:r.slice(),strides:u.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<d.dims;e++)c&&(1<<e&o)!=0&&d.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);!c&&(d.ellipsisMask|=1<<d.dims,d.dims++);// Step 2: Make a sparse spec into a full index spec.
//
// The sparse spec deos not correspond to the number of dimensions.
// Make a dense spec that cooresponds to the number of dimensions.
//
// For example suppose foo[...,3:] on foo.shape = [2, 2, 3] then we need to
// produce the missing beginMask for the first two dimensions i.e. from
// beginMaskSpec = 0, endMaskSpec = 2, we achieve beginMask = 6 (110),
// endMask = 7 (111).
let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};(function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let r=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=Array(t.dims),t.end=Array(t.dims),t.strides=Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=Array(t.dims);for(let n=0;n<e.dims;n++)if(1<<n&e.ellipsisMask){// Only the bit that has ellipsis will fall in this condition.
// Expand the ellipsis into the appropriate indices
// Note: this only works because we guaranteed one ellipsis.
let a=Math.min(t.dims-(e.dims-n)+1+e.numAddAxisAfterEllipsis,t.dims);for(;r<a;r++)// newAxis aren't real axis so you have to skip.
t.begin[r]=0,t.end[r]=0,t.strides[r]=1,t.beginMask|=1<<r,t.endMask|=1<<r,t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[r]=n}else if(1<<n&e.newAxisMask)// Only the bit that has newAxis will fall in this condition.
t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(r===t.begin.length)throw Error(`Index out of range using input dim ${r}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[r]=e.begin[n]),null!=e.end&&(t.end[r]=e.end[n]),t.strides[r]=e.strides[n],e.beginMask&1<<n&&(t.beginMask|=1<<r),e.endMask&1<<n&&(t.endMask|=1<<r),e.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<r):(t.finalShapeGatherIndices.push(r),// Remember that where in the sparse shape the dense dim comes from.
t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[r]=n,r++}})(d,p);// Step 3: Make implicit ranges (non-zero beginMasks and endMasks) explicit
// and bounds check.
let h=!0,f=!0,m=!0,g=[],y=[];for(let t=0;t<e.length;++t){let r;if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(p.shrinkAxisMask&1<<t),a=e[t];if(-1===a){g.push(n?1:-1);continue}let s=[p.beginMask&1<<t,p.endMask&1<<t],i=[p.strides[t]>0?0:-1,p.strides[t]>0?a:a-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];let o=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){// If we are shrinking, the end index is now possibly incorrect. In
// particular foo[-1] produces sparseBegin = -1, sparseEnd = 0.
// and canonical puts these to n-1 and 0, which implies a degenerate
// interval. Fortunately, it is now safe to re-create end as begin + 1.
let e=p.begin[t]<0?a+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=a)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=v(p.begin[t],0,p.strides[t],a,s,i),p.end[t]=v(p.end[t],1,p.strides[t],a,s,i);// Update optimization values
let e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===a;h=h&&e,f=f&&(0===t&&1===p.strides[t]||e)}else h=h&&1===p.strides[t]&&o,f=f&&(0===t&&1===p.strides[t]||o);let l=!1;if(p.beginValid&&p.endValid?(r=p.end[t]-p.begin[t],l=!0):n?(// The dimension is still known as 1 for the processingShape, but will be
// discarded for the final shape.
r=1,l=!0):o&&a>=0&&(r=p.strides[t]<0?-a:a,l=!0),l){let e;e=0===r||r<0!=p.strides[t]<0?0:Math.trunc(r/p.strides[t])+(r%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}// Step 4: Compute the final shape
//
// newAxis will increase dimension by 1 (with a one-size dimension)
// slices like foo[3, ...] will reduce dimension by 1.
// This cannot be done earlier, because it depends on Step 3.
for(let e=0;e<p.finalShapeGatherIndices.length;++e){let t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}let b=y.filter((e,t)=>-2!==p.finalShapeGatherIndices[t]);return{finalShapeSparse:b,finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function v(e,t,r,n,a,s){if(a[t])return r>0?s[t]:s[t+1&1];{let t=e<0?n+e:e;// make negative indices positive
return t<s[0]?s[0]:t>s[1]?s[1]:t}}}),R("6thPa",function(e,t){c(e.exports,"TEST_EPSILON_FLOAT16",()=>i),c(e.exports,"expectArraysClose",()=>o),c(e.exports,"testEpsilon",()=>l),c(e.exports,"expectPromiseToFail",()=>d),c(e.exports,"expectArraysEqual",()=>p),c(e.exports,"expectNumbersClose",()=>h),c(e.exports,"expectValuesInRange",()=>m),c(e.exports,"expectArrayBuffersEqual",()=>g),c(e.exports,"encodeStrings",()=>function e(t){for(let r=0;r<t.length;r++){let n=t[r];Array.isArray(n)?e(n):t[r]=(0,s.encodeString)(n)}return t}),c(e.exports,"createVideoElement",()=>y),c(e.exports,"play",()=>b);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("5xBLk"),a=A("8cCb2"),s=A("jjNRA");let i=.1;function o(e,t,r){return null==r&&(r=l()),u(e,t,(e,t)=>f(e,t,r))}function l(){return 32===(0,r.ENGINE).backend.floatPrecision()?.001:i}function u(e,t,r){let i=!0;if(((0,s.isTypedArray)(e)||(0,s.isTypedArray)(t))&&(i=!1),(0,s.isTypedArray)(e)&&(0,s.isTypedArray)(t)&&(i=!0),i){let r=e.constructor.name,n=t.constructor.name;if(r!==n)throw Error(`Arrays are of different type. Actual: ${r}. Expected: ${n}`)}if(Array.isArray(e)&&Array.isArray(t)){let r=(0,n.inferShape)(e),s=(0,n.inferShape)(t);if(!(0,a.arraysEqual)(r,s))throw Error(`Arrays have different shapes. Actual: [${r}]. Expected: [${s}]`)}let o=(0,s.isTypedArray)(e)?e:(0,s.flatten)(e),l=(0,s.isTypedArray)(t)?t:(0,s.flatten)(t);if(o.length!==l.length)throw Error(`Arrays have different lengths actual: ${o.length} vs expected: ${l.length}.
Actual:   ${o}.
Expected: ${l}.`);for(let e=0;e<l.length;++e){let t=o[e],n=l[e];if(!r(t,n))throw Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${n}.
Actual:   ${o}.
Expected: ${l}.`)}"undefined"!=typeof expect&&expect().nothing()}function d(e,t){e().then(()=>t.fail(),()=>t()),"undefined"!=typeof expect&&expect().nothing()}function p(e,t){let r="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return(0,a.isString)(e)||(0,a.isString)(e[0])||(0,a.isString)(t)||(0,a.isString)(t[0])?u(e,r,(e,t)=>e==t):u(e,t,(e,t)=>f(e,t,0))}function h(e,t,r){if(null==r&&(r=l()),!f(e,t,r))throw Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function f(e,t,r){return!(isFinite(e)||isFinite(t))||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>r)}function m(e,t,r){for(let n=0;n<e.length;n++)if(e[n]<t||e[n]>r)throw Error(`Value out of range:${e[n]} low: ${t}, high: ${r}`)}function g(e,t){// Safari does not like comparing ArrayBuffers directly. Wrapping in
// a Float32Array solves this issue.
let r=new Float32Array(e),n=new Float32Array(t);if(r.length!==n.length)throw Error(`Expected ArrayBuffer to be of length ${n.length}, but it was ${r.length}`);for(let e=0;e<n.length;e++)if(r[e]!==n[e])throw Error(`Expected ArrayBuffer value at ${e} to be ${n[e]} but got ${r[e]} instead`)}function y(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(e=>{t.addEventListener("loadeddata",r=>e(t)),t.load()})}async function b(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{// tslint:disable-next-line:no-any
e.requestVideoFrameCallback(t)})}}),R("kWDmn",function(e,t){c(e.exports,"version",()=>r);/** @license See the LICENSE file. */// This code is auto-generated, do not modify this file!
let r="4.13.0"}),R("bO4Xu",function(e,t){c(e.exports,"OptimizerConstructors",()=>u);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("Haryc"),n=A("7740A"),a=A("cdIoP"),s=A("9sl63"),i=A("7GJGN"),o=A("7qglv"),l=A("hR6PP");class u{/**
     * Constructs a `tf.SGDOptimizer` that uses stochastic gradient descent.
     *
     * ```js
     * // Fit a quadratic function by learning the coefficients a, b, c.
     * const xs = tf.tensor1d([0, 1, 2, 3]);
     * const ys = tf.tensor1d([1.1, 5.9, 16.8, 33.9]);
     *
     * const a = tf.scalar(Math.random()).variable();
     * const b = tf.scalar(Math.random()).variable();
     * const c = tf.scalar(Math.random()).variable();
     *
     * // y = a * x^2 + b * x + c.
     * const f = x => a.mul(x.square()).add(b.mul(x)).add(c);
     * const loss = (pred, label) => pred.sub(label).square().mean();
     *
     * const learningRate = 0.01;
     * const optimizer = tf.train.sgd(learningRate);
     *
     * // Train the model.
     * for (let i = 0; i < 10; i++) {
     *   optimizer.minimize(() => loss(f(xs), ys));
     * }
     *
     * // Make predictions.
     * console.log(
     *     `a: ${a.dataSync()}, b: ${b.dataSync()}, c: ${c.dataSync()}`);
     * const preds = f(xs).dataSync();
     * preds.forEach((pred, i) => {
     *   console.log(`x: ${i}, pred: ${pred}`);
     * });
     * ```
     *
     * @param learningRate The learning rate to use for the SGD algorithm.
     *
     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}
     */static sgd(e){return new l.SGDOptimizer(e)}/**
     * Constructs a `tf.MomentumOptimizer` that uses momentum gradient
     * descent.
     *
     * See
     * [http://proceedings.mlr.press/v28/sutskever13.pdf](
     * http://proceedings.mlr.press/v28/sutskever13.pdf)
     *
     * @param learningRate The learning rate to use for the Momentum gradient
     * descent algorithm.
     * @param momentum The momentum to use for the momentum gradient descent
     * algorithm.
     *
     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}
     */static momentum(e,t,r=!1){return new i.MomentumOptimizer(e,t,r)}/**
     * Constructs a `tf.RMSPropOptimizer` that uses RMSProp gradient
     * descent. This implementation uses plain momentum and is not centered
     * version of RMSProp.
     *
     * See
     * [http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf](
     * http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf)
     *
     * @param learningRate The learning rate to use for the RMSProp gradient
     * descent algorithm.
     * @param decay The discounting factor for the history/coming gradient.
     * @param momentum The momentum to use for the RMSProp gradient descent
     * algorithm.
     * @param epsilon Small value to avoid zero denominator.
     * @param centered If true, gradients are normalized by the estimated
     * variance of the gradient.
     *
     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}
     */static rmsprop(e,t=.9,r=0,n=null,a=!1){return new o.RMSPropOptimizer(e,t,r,n,a)}/**
     * Constructs a `tf.AdamOptimizer` that uses the Adam algorithm.
     * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)
     *
     * @param learningRate The learning rate to use for the Adam gradient
     * descent algorithm.
     * @param beta1 The exponential decay rate for the 1st moment estimates.
     * @param beta2 The exponential decay rate for the 2nd moment estimates.
     * @param epsilon A small constant for numerical stability.
     *
     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}
     */static adam(e=.001,t=.9,r=.999,n=null){return new a.AdamOptimizer(e,t,r,n)}/**
     * Constructs a `tf.AdadeltaOptimizer` that uses the Adadelta algorithm.
     * See [https://arxiv.org/abs/1212.5701](https://arxiv.org/abs/1212.5701)
     *
     * @param learningRate The learning rate to use for the Adadelta gradient
     * descent algorithm.
     * @param rho The learning rate decay over each update.
     * @param epsilon A constant epsilon used to better condition the grad
     * update.
     *
     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}
     */static adadelta(e=.001,t=.95,n=null){return new r.AdadeltaOptimizer(e,t,n)}/**
     * Constructs a `tf.AdamaxOptimizer` that uses the Adamax algorithm.
     * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)
     *
     * @param learningRate The learning rate to use for the Adamax gradient
     * descent algorithm.
     * @param beta1 The exponential decay rate for the 1st moment estimates.
     * @param beta2 The exponential decay rate for the 2nd moment estimates.
     * @param epsilon A small constant for numerical stability.
     * @param decay The learning rate decay over each update.
     *
     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}
     */static adamax(e=.002,t=.9,r=.999,n=null,a=0){return new s.AdamaxOptimizer(e,t,r,n,a)}/**
     * Constructs a `tf.AdagradOptimizer` that uses the Adagrad algorithm.
     * See
     * [http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf](
     * http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf)
     * or
     * [http://ruder.io/optimizing-gradient-descent/index.html#adagrad](
     * http://ruder.io/optimizing-gradient-descent/index.html#adagrad)
     *
     * @param learningRate The learning rate to use for the Adagrad gradient
     * descent algorithm.
     * @param initialAccumulatorValue Starting value for the accumulators, must be
     * positive.
     *
     * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}
     */static adagrad(e,t=.1){return new n.AdagradOptimizer(e,t)}}}),R("aosGd",function(e,t){c(e.exports,"spectral",()=>es),c(e.exports,"signal",()=>ei),c(e.exports,"image",()=>eo),c(e.exports,"linalg",()=>el),c(e.exports,"losses",()=>eu),c(e.exports,"sparse",()=>ec),c(e.exports,"string",()=>ed),c(e.exports,"abs",()=>A("7j49I").abs),c(e.exports,"acos",()=>A("lhgWX").acos),c(e.exports,"acosh",()=>A("c0yr6").acosh),c(e.exports,"add",()=>A("hgacW").add),c(e.exports,"addN",()=>A("rRJGt").addN),c(e.exports,"all",()=>A("baxp3").all),c(e.exports,"any",()=>A("3cXYO").any),c(e.exports,"argMax",()=>A("jctS7").argMax),c(e.exports,"argMin",()=>A("hNrdr").argMin),c(e.exports,"asin",()=>A("8ZwsA").asin),c(e.exports,"asinh",()=>A("9a9km").asinh),c(e.exports,"atan",()=>A("PYQvk").atan),c(e.exports,"atan2",()=>A("8ikBQ").atan2),c(e.exports,"atanh",()=>A("5vfVv").atanh),c(e.exports,"avgPool",()=>A("j4oHC").avgPool),c(e.exports,"avgPool3d",()=>A("ku2lx").avgPool3d),c(e.exports,"basicLSTMCell",()=>A("eHiMt").basicLSTMCell),c(e.exports,"batchToSpaceND",()=>A("31sZ7").batchToSpaceND),c(e.exports,"batchNorm",()=>A("5ULLz").batchNorm),c(e.exports,"batchNorm2d",()=>A("kKS8R").batchNorm2d),c(e.exports,"batchNorm3d",()=>A("3KWPF").batchNorm3d),c(e.exports,"batchNorm4d",()=>A("34sL5").batchNorm4d),c(e.exports,"bincount",()=>A("f3UMy").bincount),c(e.exports,"bitwiseAnd",()=>A("dmptO").bitwiseAnd),c(e.exports,"broadcastArgs",()=>A("k4fG6").broadcastArgs),c(e.exports,"broadcastTo",()=>A("aeB3Z").broadcastTo),c(e.exports,"buffer",()=>A("iG87S").buffer),c(e.exports,"cast",()=>A("inFmq").cast),c(e.exports,"ceil",()=>A("jDrkY").ceil),c(e.exports,"clipByValue",()=>A("cOWuO").clipByValue),c(e.exports,"clone",()=>A("5TuCW").clone),c(e.exports,"complex",()=>A("20oDZ").complex),c(e.exports,"concat",()=>A("iTu6j").concat),c(e.exports,"concat1d",()=>A("4TU82").concat1d),c(e.exports,"concat2d",()=>A("7PZdE").concat2d),c(e.exports,"concat3d",()=>A("ljqPW").concat3d),c(e.exports,"concat4d",()=>A("9Grxx").concat4d),c(e.exports,"conv1d",()=>A("ebPOp").conv1d),c(e.exports,"conv2d",()=>A("5Nkm1").conv2d),c(e.exports,"conv2dTranspose",()=>A("5rn1J").conv2dTranspose),c(e.exports,"conv3d",()=>A("kj7tM").conv3d),c(e.exports,"conv3dTranspose",()=>A("7Zgyq").conv3dTranspose),c(e.exports,"cos",()=>A("3BU7G").cos),c(e.exports,"cosh",()=>A("bTdqT").cosh),c(e.exports,"cumprod",()=>A("bhhSS").cumprod),c(e.exports,"cumsum",()=>A("7lqwF").cumsum),c(e.exports,"denseBincount",()=>A("8maH5").denseBincount),c(e.exports,"depthToSpace",()=>A("lIVEL").depthToSpace),c(e.exports,"depthwiseConv2d",()=>A("182Rc").depthwiseConv2d),c(e.exports,"diag",()=>A("4VHSw").diag),c(e.exports,"dilation2d",()=>A("leKzP").dilation2d),c(e.exports,"div",()=>A("1QPqB").div),c(e.exports,"divNoNan",()=>A("3pBq5").divNoNan),c(e.exports,"dot",()=>A("67T3W").dot),c(e.exports,"einsum",()=>A("1mzpU").einsum),c(e.exports,"elu",()=>A("7UQTl").elu),c(e.exports,"ensureShape",()=>A("8jXAt").ensureShape),c(e.exports,"equal",()=>A("7R9HC").equal),c(e.exports,"erf",()=>A("3q8h0").erf),c(e.exports,"euclideanNorm",()=>A("4PmMp").euclideanNorm),c(e.exports,"exp",()=>A("2PcQK").exp),c(e.exports,"expandDims",()=>A("iPDWZ").expandDims),c(e.exports,"expm1",()=>A("cUuFo").expm1),c(e.exports,"eye",()=>A("9gIZb").eye),c(e.exports,"fill",()=>A("gYive").fill),c(e.exports,"floor",()=>A("4ZUCz").floor),c(e.exports,"floorDiv",()=>A("6a2Ft").floorDiv),c(e.exports,"gather",()=>A("3qUjU").gather),c(e.exports,"greater",()=>A("bRRKf").greater),c(e.exports,"greaterEqual",()=>A("l0Zxl").greaterEqual),c(e.exports,"imag",()=>A("1d8KH").imag),c(e.exports,"isFinite",()=>A("eaZNC").isFinite),c(e.exports,"isInf",()=>A("ahjR1").isInf),c(e.exports,"isNaN",()=>A("5FmUe").isNaN),c(e.exports,"leakyRelu",()=>A("3XskU").leakyRelu),c(e.exports,"less",()=>A("jTDVJ").less),c(e.exports,"lessEqual",()=>A("7LQ38").lessEqual),c(e.exports,"linspace",()=>A("9ntOC").linspace),c(e.exports,"localResponseNormalization",()=>A("k8D3u").localResponseNormalization),c(e.exports,"log",()=>A("dcoCo").log),c(e.exports,"log1p",()=>A("5QUXI").log1p),c(e.exports,"logSigmoid",()=>A("7hYeW").logSigmoid),c(e.exports,"logSoftmax",()=>A("2NPdY").logSoftmax),c(e.exports,"logSumExp",()=>A("9dGIC").logSumExp),c(e.exports,"logicalAnd",()=>A("kg1Wp").logicalAnd),c(e.exports,"logicalNot",()=>A("7NVSX").logicalNot),c(e.exports,"logicalOr",()=>A("iok2K").logicalOr),c(e.exports,"logicalXor",()=>A("iIobM").logicalXor),c(e.exports,"lowerBound",()=>A("jAFVi").lowerBound),c(e.exports,"matMul",()=>A("aUFou").matMul),c(e.exports,"max",()=>A("05cMR").max),c(e.exports,"maxPool",()=>A("gscJF").maxPool),c(e.exports,"maxPool3d",()=>A("gF4tm").maxPool3d),c(e.exports,"maxPoolWithArgmax",()=>A("9K0B1").maxPoolWithArgmax),c(e.exports,"maximum",()=>A("g5Jt1").maximum),c(e.exports,"mean",()=>A("67GCc").mean),c(e.exports,"meshgrid",()=>A("e6A1c").meshgrid),c(e.exports,"min",()=>A("fySTI").min),c(e.exports,"minimum",()=>A("6V8xR").minimum),c(e.exports,"mirrorPad",()=>A("ejlRR").mirrorPad),c(e.exports,"mod",()=>A("jR4my").mod),c(e.exports,"moments",()=>A("jV1KY").moments),c(e.exports,"mul",()=>A("jZc0w").mul),c(e.exports,"multiRNNCell",()=>A("culYm").multiRNNCell),c(e.exports,"multinomial",()=>A("b2OB7").multinomial),c(e.exports,"neg",()=>A("15cGp").neg),c(e.exports,"notEqual",()=>A("8WSnu").notEqual),c(e.exports,"oneHot",()=>A("i3U4j").oneHot),c(e.exports,"ones",()=>A("fOBRA").ones),c(e.exports,"onesLike",()=>A("67iid").onesLike),c(e.exports,"outerProduct",()=>A("8lsKt").outerProduct),c(e.exports,"pad",()=>A("fSZF6").pad),c(e.exports,"pad1d",()=>A("d3x5E").pad1d),c(e.exports,"pad2d",()=>A("lbRCf").pad2d),c(e.exports,"pad3d",()=>A("kZSbJ").pad3d),c(e.exports,"pad4d",()=>A("ghY1H").pad4d),c(e.exports,"pool",()=>A("9PaVS").pool),c(e.exports,"pow",()=>A("ad1of").pow),c(e.exports,"prelu",()=>A("a3pvF").prelu),c(e.exports,"print",()=>A("bSp5U").print),c(e.exports,"prod",()=>A("bWQC3").prod),c(e.exports,"raggedGather",()=>A("3MjiG").raggedGather),c(e.exports,"raggedRange",()=>A("6df7Q").raggedRange),c(e.exports,"raggedTensorToTensor",()=>A("hRiiN").raggedTensorToTensor),c(e.exports,"rand",()=>A("bTXL0").rand),c(e.exports,"randomGamma",()=>A("SB4J3").randomGamma),c(e.exports,"randomNormal",()=>A("h2Vnz").randomNormal),c(e.exports,"randomStandardNormal",()=>A("kVqJN").randomStandardNormal),c(e.exports,"randomUniform",()=>A("j8sic").randomUniform),c(e.exports,"randomUniformInt",()=>A("edlzT").randomUniformInt),c(e.exports,"range",()=>A("80Ety").range),c(e.exports,"real",()=>A("b7x1G").real),c(e.exports,"reciprocal",()=>A("3aqJ6").reciprocal),c(e.exports,"relu",()=>A("8wbQq").relu),c(e.exports,"relu6",()=>A("fvNYr").relu6),c(e.exports,"reshape",()=>A("4sqA7").reshape),c(e.exports,"reverse",()=>A("6act6").reverse),c(e.exports,"reverse1d",()=>A("2KcE1").reverse1d),c(e.exports,"reverse2d",()=>A("8EvRg").reverse2d),c(e.exports,"reverse3d",()=>A("c9r0k").reverse3d),c(e.exports,"reverse4d",()=>A("bFrHw").reverse4d),c(e.exports,"round",()=>A("9YKoa").round),c(e.exports,"rsqrt",()=>A("5pj7R").rsqrt),c(e.exports,"scalar",()=>A("3xp7o").scalar),c(e.exports,"selu",()=>A("b636r").selu),c(e.exports,"separableConv2d",()=>A("8uLn4").separableConv2d),c(e.exports,"setdiff1dAsync",()=>A("d05b8").setdiff1dAsync),c(e.exports,"sigmoid",()=>A("jvtSq").sigmoid),c(e.exports,"sign",()=>A("3zBCT").sign),c(e.exports,"sin",()=>A("4xqM7").sin),c(e.exports,"sinh",()=>A("fAOzm").sinh),c(e.exports,"slice",()=>A("79KOG").slice),c(e.exports,"slice1d",()=>A("5vfHb").slice1d),c(e.exports,"slice2d",()=>A("gKBEV").slice2d),c(e.exports,"slice3d",()=>A("22oMq").slice3d),c(e.exports,"slice4d",()=>A("8hEpb").slice4d),c(e.exports,"softmax",()=>A("dnEu5").softmax),c(e.exports,"softplus",()=>A("4Udpd").softplus),c(e.exports,"spaceToBatchND",()=>A("ePI8Y").spaceToBatchND),c(e.exports,"fft",()=>A("1Lg9u").fft),c(e.exports,"ifft",()=>A("3l9Cr").ifft),c(e.exports,"irfft",()=>A("hrsi6").irfft),c(e.exports,"rfft",()=>A("cafDa").rfft),c(e.exports,"split",()=>A("9fmAX").split),c(e.exports,"sqrt",()=>A("iAb3z").sqrt),c(e.exports,"square",()=>A("iDd8d").square),c(e.exports,"squaredDifference",()=>A("ay2Nw").squaredDifference),c(e.exports,"squeeze",()=>A("kX8Hd").squeeze),c(e.exports,"stack",()=>A("8BrLX").stack),c(e.exports,"step",()=>A("lWdx1").step),c(e.exports,"stridedSlice",()=>A("dqRnt").stridedSlice),c(e.exports,"sub",()=>A("7kouu").sub),c(e.exports,"sum",()=>A("9NgTx").sum),c(e.exports,"tan",()=>A("l8Hok").tan),c(e.exports,"tanh",()=>A("etcYL").tanh),c(e.exports,"tensor",()=>A("erbmM").tensor),c(e.exports,"tensor1d",()=>A("lalFM").tensor1d),c(e.exports,"tensor2d",()=>A("gmMlv").tensor2d),c(e.exports,"tensor3d",()=>A("6Fl9Q").tensor3d),c(e.exports,"tensor4d",()=>A("6BSQ6").tensor4d),c(e.exports,"tensor5d",()=>A("fjd6b").tensor5d),c(e.exports,"tensor6d",()=>A("gCuDf").tensor6d),c(e.exports,"tensorScatterUpdate",()=>A("4om7p").tensorScatterUpdate),c(e.exports,"tile",()=>A("61ay4").tile),c(e.exports,"topk",()=>A("cRAvI").topk),c(e.exports,"truncatedNormal",()=>A("dE1HO").truncatedNormal),c(e.exports,"unique",()=>A("aEpp6").unique),c(e.exports,"unsortedSegmentSum",()=>A("djGEF").unsortedSegmentSum),c(e.exports,"unstack",()=>A("gBOC6").unstack),c(e.exports,"upperBound",()=>A("igCyu").upperBound),c(e.exports,"variable",()=>A("eoViB").variable),c(e.exports,"where",()=>A("l2P14").where),c(e.exports,"whereAsync",()=>A("5t2or").whereAsync),c(e.exports,"zeros",()=>A("hxi4c").zeros),c(e.exports,"zerosLike",()=>A("8EjnK").zerosLike),c(e.exports,"op",()=>A("jqSCG").op),c(e.exports,"OP_SCOPE_SUFFIX",()=>A("jqSCG").OP_SCOPE_SUFFIX),c(e.exports,"fused",()=>A("jDZRN")),A("7j49I"),A("lhgWX"),A("c0yr6"),A("hgacW"),A("rRJGt"),A("baxp3"),A("3cXYO"),A("jctS7"),A("hNrdr"),A("8ZwsA"),A("9a9km"),A("PYQvk"),A("8ikBQ"),A("5vfVv"),A("j4oHC"),A("ku2lx"),A("eHiMt"),A("31sZ7"),A("5ULLz"),A("kKS8R"),A("3KWPF"),A("34sL5"),A("f3UMy"),A("dmptO"),A("k4fG6"),A("aeB3Z"),A("iG87S"),A("inFmq"),A("jDrkY"),A("cOWuO"),A("5TuCW"),A("20oDZ"),A("iTu6j"),A("4TU82"),A("7PZdE"),A("ljqPW"),A("9Grxx"),A("ebPOp"),A("5Nkm1"),A("5rn1J"),A("kj7tM"),A("7Zgyq"),A("3BU7G"),A("bTdqT"),A("bhhSS"),A("7lqwF"),A("8maH5"),A("lIVEL"),A("182Rc"),A("4VHSw"),A("leKzP"),A("1QPqB"),A("3pBq5"),A("67T3W"),A("1mzpU"),A("7UQTl"),A("8jXAt"),A("7R9HC"),A("3q8h0"),A("4PmMp"),A("2PcQK"),A("iPDWZ"),A("cUuFo"),A("9gIZb"),A("gYive"),A("4ZUCz"),A("6a2Ft"),A("3qUjU"),A("bRRKf"),A("l0Zxl"),A("1d8KH"),A("eaZNC"),A("ahjR1"),A("5FmUe"),A("3XskU"),A("jTDVJ"),A("7LQ38"),A("9ntOC"),A("k8D3u"),A("dcoCo"),A("5QUXI"),A("7hYeW"),A("2NPdY"),A("9dGIC"),A("kg1Wp"),A("7NVSX"),A("iok2K"),A("iIobM"),A("jAFVi"),A("aUFou"),A("05cMR"),A("gscJF"),A("gF4tm"),A("9K0B1"),A("g5Jt1"),A("67GCc"),A("e6A1c"),A("fySTI"),A("6V8xR"),A("ejlRR"),A("jR4my"),A("jV1KY"),A("jZc0w"),A("culYm"),A("b2OB7"),A("15cGp"),A("8WSnu"),A("i3U4j"),A("fOBRA"),A("67iid"),A("8lsKt"),A("fSZF6"),A("d3x5E"),A("lbRCf"),A("kZSbJ"),A("ghY1H"),A("9PaVS"),A("ad1of"),A("a3pvF"),A("bSp5U"),A("bWQC3"),A("3MjiG"),A("6df7Q"),A("hRiiN"),A("bTXL0"),A("SB4J3"),A("h2Vnz"),A("kVqJN"),A("j8sic"),A("edlzT"),A("80Ety"),A("b7x1G"),A("3aqJ6"),A("8wbQq"),A("fvNYr"),A("4sqA7"),A("6act6"),A("2KcE1"),A("8EvRg"),A("c9r0k"),A("bFrHw"),A("9YKoa"),A("5pj7R"),A("3xp7o"),A("b636r"),A("8uLn4"),A("d05b8"),A("jvtSq"),A("3zBCT"),A("4xqM7"),A("fAOzm"),A("79KOG"),A("5vfHb"),A("gKBEV"),A("22oMq"),A("8hEpb"),A("dnEu5"),A("4Udpd"),A("ePI8Y");var r=A("1Lg9u"),n=A("3l9Cr"),a=A("hrsi6"),s=A("cafDa");A("9fmAX"),A("iAb3z"),A("iDd8d"),A("ay2Nw"),A("kX8Hd"),A("8BrLX"),A("lWdx1"),A("dqRnt"),A("7kouu"),A("9NgTx"),A("l8Hok"),A("etcYL"),A("erbmM"),A("lalFM"),A("gmMlv"),A("6Fl9Q"),A("6BSQ6"),A("fjd6b"),A("gCuDf"),A("4om7p"),A("61ay4"),A("cRAvI"),A("dE1HO"),A("aEpp6"),A("djGEF"),A("gBOC6"),A("igCyu"),A("eoViB"),A("l2P14"),A("5t2or"),A("hxi4c"),A("8EjnK");var i=A("4xhB2"),o=A("aDHKy"),l=A("7k6dx"),u=A("gIiMY"),p=A("4wiJQ"),h=A("6PrVj"),f=A("kMXcY"),m=A("5FwF9"),g=A("5kLyC"),y=A("j5jow"),b=A("8mg8Q");A("jqSCG"),A("jDZRN");var v=A("dGKlF"),x=A("gicu0"),w=A("lLT0m"),k=A("hGoJt"),S=A("jLoMm"),N=A("jAPwM"),T=A("7xYxa"),I=A("iStMK"),C=A("gF4CQ"),E=A("3Dhm5"),R=A("ihqU7"),_=A("gxykK"),O=A("8357p"),P=A("gzUbZ"),$=A("bq0nG"),D=A("6zgXB"),M=A("ek5OW"),F=A("2uj2A"),L=A("53uSk"),j=A("kGYDg"),B=A("bI4CH"),z=A("ipM8K"),V=A("beFbS"),G=A("aQ3Nu"),U=A("315ft"),W=A("aqAKz"),q=A("2lNlw"),H=A("8Bzf4"),K=A("2Tkqe"),X=A("7tTB0"),Z=A("5FlUs"),Q=A("gXzaa"),Y=A("fMgdQ"),J=A("22SmX"),ee=A("6wGr9"),et=A("brFzl"),er=A("VUiwf"),en=A("g7F6x"),ea=A("bZL8f");let es={fft:r.fft,ifft:n.ifft,rfft:s.rfft,irfft:a.irfft},ei={hammingWindow:v.hammingWindow,hannWindow:x.hannWindow,frame:w.frame,stft:k.stft},eo={flipLeftRight:N.flipLeftRight,grayscaleToRGB:T.grayscaleToRGB,resizeNearestNeighbor:M.resizeNearestNeighbor,resizeBilinear:D.resizeBilinear,rgbToGrayscale:I.rgbToGrayscale,rotateWithOffset:C.rotateWithOffset,cropAndResize:S.cropAndResize,nonMaxSuppression:E.nonMaxSuppression,nonMaxSuppressionAsync:R.nonMaxSuppressionAsync,nonMaxSuppressionWithScore:_.nonMaxSuppressionWithScore,nonMaxSuppressionWithScoreAsync:O.nonMaxSuppressionWithScoreAsync,nonMaxSuppressionPadded:P.nonMaxSuppressionPadded,nonMaxSuppressionPaddedAsync:$.nonMaxSuppressionPaddedAsync,threshold:F.threshold,transform:L.transform},el={bandPart:j.bandPart,gramSchmidt:B.gramSchmidt,qr:z.qr},eu={absoluteDifference:V.absoluteDifference,computeWeightedLoss:G.computeWeightedLoss,cosineDistance:U.cosineDistance,hingeLoss:W.hingeLoss,huberLoss:q.huberLoss,logLoss:H.logLoss,meanSquaredError:K.meanSquaredError,sigmoidCrossEntropy:X.sigmoidCrossEntropy,softmaxCrossEntropy:Z.softmaxCrossEntropy},ec={sparseFillEmptyRows:Q.sparseFillEmptyRows,sparseReshape:Y.sparseReshape,sparseSegmentMean:J.sparseSegmentMean,sparseSegmentSum:ee.sparseSegmentSum},ed={stringNGrams:et.stringNGrams,stringSplit:er.stringSplit,stringToHashBucketFast:en.stringToHashBucketFast,staticRegexReplace:ea.staticRegexReplace};d(e.exports,i),d(e.exports,o),d(e.exports,l),d(e.exports,u),d(e.exports,p),d(e.exports,h),d(e.exports,f),d(e.exports,m),d(e.exports,g),d(e.exports,y),d(e.exports,b)}),R("lhgWX",function(e,t){c(e.exports,"acos",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({acos_:/**
 * Computes acos of the input `tf.Tensor` element-wise: `acos(x)`
 *
 * ```js
 * const x = tf.tensor1d([0, 1, -1, .7]);
 *
 * x.acos().print();  // or tf.acos(x)
 * ```
 * @param x The input tensor.
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","acos");return(0,r.ENGINE).runKernel(n.Acos,{x:t})}})}),R("c0yr6",function(e,t){c(e.exports,"acosh",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({acosh_:/**
 * Computes the inverse hyperbolic cos of the input `tf.Tensor` element-wise:
 * `acosh(x)`
 *
 * ```js
 * const x = tf.tensor1d([10, 1, 3, 5.7]);
 *
 * x.acosh().print();  // or tf.acosh(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","acosh");return(0,r.ENGINE).runKernel(n.Acosh,{x:t})}})}),R("rRJGt",function(e,t){c(e.exports,"addN",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({addN_:/**
 * Adds a list of `tf.Tensor`s element-wise, each with the same shape and dtype.
 *
 * ```js
 * const a = tf.tensor1d([1, 2]);
 * const b = tf.tensor1d([3, 4]);
 * const c = tf.tensor1d([5, 6]);
 *
 * tf.addN([a, b, c]).print();
 * ```
 * @param tensors A list of tensors with the same shape and dtype.
 * @doc {heading: 'Operations', subheading: 'Arithmetic'}
 */function(e){s.assert(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),s.assert(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((e,t)=>(0,a.convertToTensor)(e,`tensors${t}`,"addN")),i=t[0];return t.forEach(e=>{if(e.dtype!==i.dtype)throw Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!s.arraysEqual(e.shape,i.shape))throw Error("All tensors passed to tf.addN() must have the same shape")}),(0,r.ENGINE).runKernel(n.AddN,t)}})}),R("baxp3",function(e,t){c(e.exports,"all",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({all_:/**
 * Computes the logical and of elements across dimensions of a `tf.Tensor`.
 *
 * Reduces the input along the dimensions given in `axes`. Unless `keepDims`
 * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in
 * `axes`. If `keepDims` is true, the reduced dimensions are retained with
 * length 1. If `axes` has no entries, all dimensions are reduced, and a
 * `tf.Tensor` with a single element is returned.
 *
 * ```js
 * const x = tf.tensor1d([1, 1, 1], 'bool');
 *
 * x.all().print();  // or tf.all(x)
 * ```
 *
 * ```js
 * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');
 *
 * const axis = 1;
 * x.all(axis).print();  // or tf.all(x, axis)
 * ```
 *
 * @param x The input tensor. Must be of dtype bool.
 * @param axis The dimension(s) to reduce. By default it reduces
 *     all dimensions.
 * @param keepDims If true, retains reduced dimensions with size 1.
 *
 * @doc {heading: 'Operations', subheading: 'Reduction'}
 */function(e,t=null,s=!1){let i=(0,a.convertToTensor)(e,"x","all","bool");return(0,r.ENGINE).runKernel(n.All,{x:i},{axis:t,keepDims:s})}})}),R("3cXYO",function(e,t){c(e.exports,"any",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({any_:/**
 * Computes the logical or of elements across dimensions of a `tf.Tensor`.
 *
 * Reduces the input along the dimensions given in `axes`. Unless `keepDims`
 * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in
 * `axes`. If `keepDims` is true, the reduced dimensions are retained with
 * length 1. If `axes` has no entries, all dimensions are reduced, and a
 * `tf.Tensor` with a single element is returned.
 *
 * ```js
 * const x = tf.tensor1d([1, 1, 1], 'bool');
 *
 * x.any().print();  // or tf.any(x)
 * ```
 *
 * ```js
 * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');
 *
 * const axis = 1;
 * x.any(axis).print();  // or tf.any(x, axis)
 * ```
 *
 * @param x The input tensor. Must be of dtype bool.
 * @param axis The dimension(s) to reduce. By default it reduces
 *     all dimensions.
 * @param keepDims If true, retains reduced dimensions with size 1.
 *
 * @doc {heading: 'Operations', subheading: 'Reduction'}
 */function(e,t=null,s=!1){let i=(0,a.convertToTensor)(e,"x","any","bool");return(0,r.ENGINE).runKernel(n.Any,{x:i},{axis:t,keepDims:s})}})}),R("jctS7",function(e,t){c(e.exports,"argMax",()=>i);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({argMax_:/**
 * Returns the indices of the maximum values along an `axis`.
 *
 * The result has the same shape as `input` with the dimension along `axis`
 * removed.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3]);
 *
 * x.argMax().print();  // or tf.argMax(x)
 * ```
 *
 * ```js
 * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);
 *
 * const axis = 1;
 * x.argMax(axis).print();  // or tf.argMax(x, axis)
 * ```
 *
 * @param x The input tensor.
 * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).
 *
 * @doc {heading: 'Operations', subheading: 'Reduction'}
 */function(e,t=0){let s=(0,a.convertToTensor)(e,"x","argMax");return(0,r.ENGINE).runKernel(n.ArgMax,{x:s},{axis:t})}})}),R("hNrdr",function(e,t){c(e.exports,"argMin",()=>i);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({argMin_:/**
 * Returns the indices of the minimum values along an `axis`.
 *
 * The result has the same shape as `input` with the dimension along `axis`
 * removed.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3]);
 *
 * x.argMin().print();  // or tf.argMin(x)
 * ```
 *
 * ```js
 * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);
 *
 * const axis = 1;
 * x.argMin(axis).print();  // or tf.argMin(x, axis)
 * ```
 *
 * @param x The input tensor.
 * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).
 *
 * @doc {heading: 'Operations', subheading: 'Reduction'}
 */function(e,t=0){let s=(0,a.convertToTensor)(e,"x","argMin");return(0,r.ENGINE).runKernel(n.ArgMin,{x:s},{axis:t})}})}),R("8ZwsA",function(e,t){c(e.exports,"asin",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({asin_:/**
 * Computes asin of the input `tf.Tensor` element-wise: `asin(x)`
 *
 * ```js
 * const x = tf.tensor1d([0, 1, -1, .7]);
 *
 * x.asin().print();  // or tf.asin(x)
 * ```
 * @param x The input tensor.
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","asin");return(0,r.ENGINE).runKernel(n.Asin,{x:t})}})}),R("9a9km",function(e,t){c(e.exports,"asinh",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({asinh_:/**
 * Computes inverse hyperbolic sin of the input `tf.Tensor` element-wise:
 * `asinh(x)`
 *
 * ```js
 * const x = tf.tensor1d([0, 1, -1, .7]);
 *
 * x.asinh().print();  // or tf.asinh(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","asinh");return(0,r.ENGINE).runKernel(n.Asinh,{x:t})}})}),R("PYQvk",function(e,t){c(e.exports,"atan",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({atan_:/**
 * Computes atan of the input `tf.Tensor` element-wise: `atan(x)`
 *
 * ```js
 * const x = tf.tensor1d([0, 1, -1, .7]);
 *
 * x.atan().print();  // or tf.atan(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","atan");return(0,r.ENGINE).runKernel(n.Atan,{x:t})}})}),R("8ikBQ",function(e,t){c(e.exports,"atan2",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({atan2_:/**
 * Computes arctangent of `tf.Tensor`s a / b element-wise: `atan2(a, b)`.
 * Supports broadcasting.
 *
 * ```js
 * const a = tf.tensor1d([1.0, 1.0, -1.0, .7]);
 * const b = tf.tensor1d([2.0, 13.0, 3.5, .21]);
 *
 * tf.atan2(a, b).print()
 * ```
 *
 * @param a The first tensor.
 * @param b The second tensor. Must have the same dtype as `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e,t){let i=(0,s.convertToTensor)(e,"a","atan2"),o=(0,s.convertToTensor)(t,"b","atan2");[i,o]=(0,a.makeTypesMatch)(i,o);let l={a:i,b:o};return(0,r.ENGINE).runKernel(n.Atan2,l)}})}),R("5vfVv",function(e,t){c(e.exports,"atanh",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({atanh_:/**
 * Computes inverse hyperbolic tan of the input `tf.Tensor` element-wise:
 * `atanh(x)`
 *
 * ```js
 * const x = tf.tensor1d([0, .1, -.1, .7]);
 *
 * x.atanh().print();  // or tf.atanh(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","atanh");return(0,r.ENGINE).runKernel(n.Atanh,{x:t})}})}),R("j4oHC",function(e,t){c(e.exports,"avgPool",()=>d);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("inFmq"),o=A("frznq"),l=A("jqSCG"),u=A("4sqA7");let d=/* @__PURE__ */(0,l.op)({avgPool_:/**
 * Computes the 2D average pooling of an image.
 *
 * @param x The input tensor, of rank 4 or rank 3 of shape
 *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.
 * @param filterSize The filter size: `[filterHeight, filterWidth]`. If
 *     `filterSize` is a single number, then `filterHeight == filterWidth`.
 * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If
 *     `strides` is a single number, then `strideHeight == strideWidth`.
 * @param pad The type of padding algorithm:
 *    - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *    - `valid`: output will be smaller than input if filter is larger
 *       than 1x1.
 *    - For more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *         https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 *
 * @doc {heading: 'Operations', subheading: 'Convolution'}
 */function(e,t,l,c,d){let p=(0,a.convertToTensor)(e,"x","avgPool","float32");s.assert(o.eitherStridesOrDilationsAreOne(l,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${l} and dilations '1'`);let h=p,f=!1;3===p.rank&&(f=!0,h=(0,u.reshape)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s.assert(4===h.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${h.rank}.`),o.checkPadOnDimRoundingMode("avgPool",c,d);let m={x:h},g=(0,r.ENGINE).runKernel(n.AvgPool,m,{filterSize:t,strides:l,pad:c,dimRoundingMode:d});return(g=(0,i.cast)(g,p.dtype),f)?(0,u.reshape)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})}),R("frznq",function(e,t){c(e.exports,"computeDilation2DInfo",()=>n),c(e.exports,"convertConv2DDataFormat",()=>y),c(e.exports,"computeConv2DInfo",()=>i),c(e.exports,"computePool2DInfo",()=>a),c(e.exports,"computePool3DInfo",()=>s),c(e.exports,"computeConv3DInfo",()=>o),c(e.exports,"computeDefaultPad",()=>l),c(e.exports,"tupleValuesAreOne",()=>f),c(e.exports,"eitherStridesOrDilationsAreOne",()=>m),c(e.exports,"stridesOrDilationsArePositive",()=>g),c(e.exports,"checkPadOnDimRoundingMode",()=>b);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2");function n(e,t,r,n,a="NHWC",s){// `computerConv2DInfo` require filterShape to be in the dimension of:
// `[filterHeight, filterWidth, depth, outDepth]`, dilation2d doesn't have
// outDepth, it should have the same depth as the input.
// Input shape: [batch, height, width, inChannels]
let o=e[3],l=[...t,o],u=y(a);return i(e,l,r,s,n,null,null,u)}function a(e,t,r,n,a,s,o="channelsLast"){let l;let[c,d]=u(t);if("channelsLast"===o)l=[c,d,e[3],e[3]];else if("channelsFirst"===o)l=[c,d,e[1],e[1]];else throw Error(`Unknown dataFormat ${o}`);return i(e,l,r,n,a,s,!1,o)}function s(e,t,r,n,a,s,i="NDHWC"){let l,u;let[c,p,h]=d(t);if("NDHWC"===i)u="channelsLast",l=[c,p,h,e[4],e[4]];else if("NCDHW"===i)u="channelsFirst",l=[c,p,h,e[1],e[1]];else throw Error(`Unknown dataFormat ${i}`);return o(e,l,r,n,a,!1,u,s)}function i(e,t,r,n,a,s,i=!1,o="channelsLast"){let c,[d,f,m,g]=[-1,-1,-1,-1];if("channelsLast"===o)[d,f,m,g]=e;else if("channelsFirst"===o)[d,g,f,m]=e;else throw Error(`Unknown dataFormat ${o}`);let[y,b,,v]=t,[x,w]=u(r),[k,S]=u(n),N=p(y,k),T=p(b,S),{padInfo:I,outHeight:C,outWidth:E}=function(e,t,r,n,a,s,i,o,u){let c,d,p;if("number"==typeof e){let a=0===e?"VALID":"NUMBER";c={top:e,bottom:e,left:e,right:e,type:a};let i=function(e,t,r,n,a){null==n&&(n=l(e,t,r));let s=e[0],i=e[1],o=h((s-t+2*n)/r+1,a),u=h((i-t+2*n)/r+1,a);return[o,u]}([t,r],s,n,e,o);d=i[0],p=i[1]}else if("same"===e){d=Math.ceil(t/n),p=Math.ceil(r/a);let e=Math.max(0,(d-1)*n+s-t),o=Math.max(0,(p-1)*a+i-r),l=Math.floor(e/2),u=Math.floor(o/2);c={top:l,bottom:e-l,left:u,right:o-u,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/n),p=Math.ceil((r-i+1)/a);else if("object"==typeof e){let l="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1],y=0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT";c={top:l,bottom:f,left:m,right:g,type:y},d=h((t-s+l+f)/n+1,o),p=h((r-i+m+g)/a+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:c,outHeight:d,outWidth:p}}(a,f,m,x,w,N,T,s,o),A=i?v*g:v;return"channelsFirst"===o?c=[d,A,C,E]:"channelsLast"===o&&(c=[d,C,E,A]),{batchSize:d,dataFormat:o,inHeight:f,inWidth:m,inChannels:g,outHeight:C,outWidth:E,outChannels:A,padInfo:I,strideHeight:x,strideWidth:w,filterHeight:y,filterWidth:b,effectiveFilterHeight:N,effectiveFilterWidth:T,dilationHeight:k,dilationWidth:S,inShape:e,outShape:c,filterShape:t}}function o(e,t,r,n,a,s=!1,i="channelsLast",o){let u,[c,f,m,g,y]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[c,f,m,g,y]=e;else if("channelsFirst"===i)[c,y,f,m,g]=e;else throw Error(`Unknown dataFormat ${i}`);let[b,v,x,,w]=t,[k,S,N]=d(r),[T,I,C]=d(n),E=p(b,T),A=p(v,I),R=p(x,C),{padInfo:_,outDepth:O,outHeight:P,outWidth:$}=function(e,t,r,n,a,s,i,o,u,c,d){let p,f,m,g;if("valid"===e&&(e=0),"number"==typeof e){let y=0===e?"VALID":"NUMBER";p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:y};let b=function(e,t,r,n,a,s){null==a&&(a=l(e,t[0],n[0]));let i=[0,0,0,1];for(let r=0;r<3;r++)e[r]+2*a>=t[r]&&(i[r]=h((e[r]-t[r]+2*a)/n[r]+1,s));return i}([t,r,n,1],[o,u,c],0,[a,s,i],e,d);f=b[0],m=b[1],g=b[2]}else if("same"===e){f=Math.ceil(t/a),m=Math.ceil(r/s),g=Math.ceil(n/i);let e=(f-1)*a+o-t,l=(m-1)*s+u-r,d=(g-1)*i+c-n,h=Math.floor(e/2),y=Math.floor(l/2),b=Math.floor(d/2);p={top:y,bottom:l-y,left:b,right:d-b,front:h,back:e-h,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:f,outHeight:m,outWidth:g}}(a,f,m,g,k,S,N,E,A,R,o),D=s?w*y:w;return"channelsFirst"===i?u=[c,D,O,P,$]:"channelsLast"===i&&(u=[c,O,P,$,D]),{batchSize:c,dataFormat:i,inDepth:f,inHeight:m,inWidth:g,inChannels:y,outDepth:O,outHeight:P,outWidth:$,outChannels:D,padInfo:_,strideDepth:k,strideHeight:S,strideWidth:N,filterDepth:b,filterHeight:v,filterWidth:x,effectiveFilterDepth:E,effectiveFilterHeight:A,effectiveFilterWidth:R,dilationDepth:T,dilationHeight:I,dilationWidth:C,inShape:e,outShape:u,filterShape:t}}function l(e,t,r,n=1){let a=p(t,n);return Math.floor((e[0]*(r-1)-r+a)/2)}function u(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"==typeof e?[e,e,e]:e}/* See https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d
 * Atrous convolution is equivalent to standard convolution with upsampled
 * filters with effective_filter_height =
 * filter_height + (filter_height - 1) * (dilation - 1)
 * and effective_filter_width =
 * filter_width + (filter_width - 1) * (dilation - 1),
 * produced by inserting dilation - 1 zeros along consecutive elements across
 * the filters' spatial dimensions.
 * When there is a dilation, this converts a filter dimension to the
 * effective filter dimension, so it can be used in a standard convolution.
 */function p(e,t){return t<=1?e:e+(e-1)*(t-1)}/**
 * Rounds a value depending on the rounding mode
 * @param value
 * @param roundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 */function h(e,t){if(!t)return Math.trunc(e);switch(t){case"round":// used for Caffe Conv
return Math.round(e);case"ceil":// used for Caffe Pool
return Math.ceil(e);case"floor":return Math.floor(e);default:throw Error(`Unknown roundingMode ${t}`)}}function f(e){let[t,r,n]=u(e);return 1===t&&1===r&&1===n}function m(e,t){return f(e)||f(t)}function g(e){return u(e).every(e=>e>0)}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw Error(`Unknown dataFormat ${e}`)}function b(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)r.assert(r.isInt(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if("object"==typeof t)t.forEach(t=>{t.forEach(t=>{r.assert(r.isInt(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}}),R("4sqA7",function(e,t){c(e.exports,"reshape",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({reshape_:/**
 * Reshapes a `tf.Tensor` to a given shape.
 *
 * Given an input tensor, returns a new tensor with the same values as the
 * input tensor with shape `shape`.
 *
 * If one component of shape is the special value -1, the size of that
 * dimension is computed so that the total size remains constant. In
 * particular, a shape of [-1] flattens into 1-D. At most one component of
 * shape can be -1.
 *
 * If shape is 1-D or higher, then the operation returns a tensor with shape
 * shape filled with the values of tensor. In this case, the number of
 * elements implied by shape must be the same as the number of elements in
 * tensor.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3, 4]);
 * x.reshape([2, 2]).print();
 * ```
 *
 * @param x The input tensor to be reshaped.
 * @param shape An array of integers defining the output tensor shape.
 *
 * @doc {heading: 'Tensors', subheading: 'Transformations'}
 */function(e,t){let s=(0,a.convertToTensor)(e,"x","reshape","string_or_numeric");return(0,r.ENGINE).runKernel(n.Reshape,{x:s},{shape:t})}})}),R("ku2lx",function(e,t){c(e.exports,"avgPool3d",()=>d);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("inFmq"),o=A("frznq"),l=A("jqSCG"),u=A("4sqA7");let d=/* @__PURE__ */(0,l.op)({avgPool3d_:/**
 * Computes the 3D average pooling.
 *
 * ```js
 * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);
 * const result = tf.avgPool3d(x, 2, 1, 'valid');
 * result.print();
 * ```
 *
 * @param x The input tensor, of rank 5 or rank 4 of shape
 *     `[batch, depth, height, width, inChannels]`.
 * @param filterSize The filter size:
 *     `[filterDepth, filterHeight, filterWidth]`.
 *     If `filterSize` is a single number,
 *     then `filterDepth == filterHeight == filterWidth`.
 * @param strides The strides of the pooling:
 *     `[strideDepth, strideHeight, strideWidth]`.
 *     If `strides` is a single number,
 *     then `strideDepth == strideHeight == strideWidth`.
 * @param pad The type of padding algorithm.
 *    - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *    - `valid`: output will be smaller than input if filter is larger
 *       than 1*1x1.
 *    - For more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 * @param dataFormat An optional string from: "NDHWC", "NCDHW". Defaults to
 *     "NDHWC". Specify the data format of the input and output data. With the
 *     default format "NDHWC", the data is stored in the order of: [batch,
 *     depth, height, width, channels]. Only "NDHWC" is currently supported.
 *
 * @doc {heading: 'Operations', subheading: 'Convolution'}
 */function(e,t,l,c,d,p="NDHWC"){let h=(0,a.convertToTensor)(e,"x","avgPool3d","float32"),f=h,m=!1;4===h.rank&&(m=!0,f=(0,u.reshape)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),s.assert(5===f.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${f.rank}.`),s.assert("NDHWC"===p,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${p}`),s.assert("number"==typeof l&&l>0||Array.isArray(l)&&l[0]>0&&l[1]>0&&l[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${l}'`),(0,o.checkPadOnDimRoundingMode)("avgPool3d",c,d);let g={x:f},y=(0,r.ENGINE).runKernel(n.AvgPool3D,g,{filterSize:t,strides:l,pad:c,dimRoundingMode:d,dataFormat:p});return(y=(0,i.cast)(y,f.dtype),m)?(0,u.reshape)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})}),R("eHiMt",function(e,t){c(e.exports,"basicLSTMCell",()=>p);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("hgacW"),a=A("iTu6j"),s=A("aUFou"),i=A("jZc0w"),o=A("jqSCG"),l=A("jvtSq"),u=A("79KOG"),d=A("etcYL");let p=/* @__PURE__ */(0,o.op)({basicLSTMCell_:/**
 * Computes the next state and output of a BasicLSTMCell.
 *
 * Returns `[newC, newH]`.
 *
 * Derived from tf.contrib.rnn.BasicLSTMCell.
 *
 * @param forgetBias Forget bias for the cell.
 * @param lstmKernel The weights for the cell.
 * @param lstmBias The bias for the cell.
 * @param data The input to the cell.
 * @param c Previous cell state.
 * @param h Previous cell output.
 *
 * @doc {heading: 'Operations', subheading: 'RNN'}
 */function(e,t,o,c,p,h){let f=(0,r.convertToTensor)(e,"forgetBias","basicLSTMCell"),m=(0,r.convertToTensor)(t,"lstmKernel","basicLSTMCell"),g=(0,r.convertToTensor)(o,"lstmBias","basicLSTMCell"),y=(0,r.convertToTensor)(c,"data","basicLSTMCell"),b=(0,r.convertToTensor)(p,"c","basicLSTMCell"),v=(0,r.convertToTensor)(h,"h","basicLSTMCell"),x=(0,a.concat)([y,v],1),w=(0,s.matMul)(x,m),k=(0,n.add)(w,g),S=k.shape[0],N=k.shape[1]/4,T=[S,N],I=(0,u.slice)(k,[0,0],T),C=(0,u.slice)(k,[0,N],T),E=(0,u.slice)(k,[0,2*N],T),A=(0,u.slice)(k,[0,3*N],T),R=(0,n.add)((0,i.mul)((0,l.sigmoid)(I),(0,d.tanh)(C)),(0,i.mul)(b,(0,l.sigmoid)((0,n.add)(f,E)))),_=(0,i.mul)((0,d.tanh)(R),(0,l.sigmoid)(A));return[R,_]}})}),R("iTu6j",function(e,t){c(e.exports,"concat",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("5TuCW"),o=A("jqSCG");let l=/* @__PURE__ */(0,o.op)({concat_:/**
 * Concatenates a list of `tf.Tensor`s along a given axis.
 *
 * The tensors ranks and types must match, and their sizes must match in all
 * dimensions except `axis`.
 *
 * Also available are stricter rank-specific methods that assert that
 * `tensors` are of the given rank:
 *   - `tf.concat1d`
 *   - `tf.concat2d`
 *   - `tf.concat3d`
 *   - `tf.concat4d`
 *
 * Except `tf.concat1d` (which does not have axis param), all methods have
 * same signature as this method.
 *
 * ```js
 * const a = tf.tensor1d([1, 2]);
 * const b = tf.tensor1d([3, 4]);
 * a.concat(b).print();  // or a.concat(b)
 * ```
 *
 * ```js
 * const a = tf.tensor1d([1, 2]);
 * const b = tf.tensor1d([3, 4]);
 * const c = tf.tensor1d([5, 6]);
 * tf.concat([a, b, c]).print();
 * ```
 *
 * ```js
 * const a = tf.tensor2d([[1, 2], [10, 20]]);
 * const b = tf.tensor2d([[3, 4], [30, 40]]);
 * const axis = 1;
 * tf.concat([a, b], axis).print();
 * ```
 * @param tensors A list of tensors to concatenate.
 * @param axis The axis to concatenate along. Defaults to 0 (the first dim).
 *
 * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}
 */function(e,t=0){(0,s.assert)(e.length>=1,()=>"Pass at least one tensor to concat");let o=(0,a.convertToTensorArray)(e,"tensors","concat","string_or_numeric");return("complex64"===o[0].dtype&&o.forEach(e=>{if("complex64"!==e.dtype)throw Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${e.dtype}. `)}),1===o.length)?(0,i.clone)(o[0]):(0,r.ENGINE).runKernel(n.Concat,o,{axis:t})}})}),R("jvtSq",function(e,t){c(e.exports,"sigmoid",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({sigmoid_:/**
 * Computes sigmoid element-wise, `1 / (1 + exp(-x))`
 *
 * ```js
 * const x = tf.tensor1d([0, -1, 2, -3]);
 *
 * x.sigmoid().print();  // or tf.sigmoid(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","sigmoid","float32");return(0,r.ENGINE).runKernel(n.Sigmoid,{x:t})}})}),R("79KOG",function(e,t){c(e.exports,"slice",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({slice_:/**
 * Extracts a slice from a `tf.Tensor` starting at coordinates `begin`
 * and is of size `size`.
 *
 * Also available are stricter rank-specific methods with the same signature
 * as this method that assert that `x` is of the given rank:
 *   - `tf.slice1d`
 *   - `tf.slice2d`
 *   - `tf.slice3d`
 *   - `tf.slice4d`
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3, 4]);
 *
 * x.slice([1], [2]).print();
 * ```
 *
 * ```js
 * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);
 *
 * x.slice([1, 0], [1, 2]).print();
 * ```
 * @param x The input `tf.Tensor` to slice from.
 * @param begin The coordinates to start the slice from. The length can be
 *     less than the rank of x - the rest of the axes will have implicit 0 as
 *     start. Can also be a single number, in which case it specifies the
 *     first axis.
 * @param size The size of the slice. The length can be less than the rank of
 *     x - the rest of the axes will have implicit -1. A value of -1 requests
 *     the rest of the dimensions in the axis. Can also be a single number,
 *     in which case it specifies the size of the first axis.
 *
 * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}
 */function(e,t,s){let i=(0,a.convertToTensor)(e,"x","slice","string_or_numeric");if(0===i.rank)throw Error("Slicing scalar is not possible");return(0,r.ENGINE).runKernel(n.Slice,{x:i},{begin:t,size:s})}})}),R("etcYL",function(e,t){c(e.exports,"tanh",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({tanh_:/**
 * Computes hyperbolic tangent of the input `tf.Tensor` element-wise: `tanh(x)`
 *
 * ```js
 * const x = tf.tensor1d([0, 1, -1, 70]);
 *
 * x.tanh().print();  // or tf.tanh(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","tanh","float32");return(0,r.ENGINE).runKernel(n.Tanh,{x:t})}})}),R("31sZ7",function(e,t){c(e.exports,"batchToSpaceND",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({batchToSpaceND_:/**
 * This operation reshapes the "batch" dimension 0 into `M + 1` dimensions of
 * shape `blockShape + [batch]`, interleaves these blocks back into the grid
 * defined by the spatial dimensions `[1, ..., M]`, to obtain a result with
 * the same rank as the input. The spatial dimensions of this intermediate
 * result are then optionally cropped according to `crops` to produce the
 * output. This is the reverse of `tf.spaceToBatchND`. See below for a precise
 * description.
 *
 * ```js
 * const x = tf.tensor4d([1, 2, 3, 4], [4, 1, 1, 1]);
 * const blockShape = [2, 2];
 * const crops = [[0, 0], [0, 0]];
 *
 * x.batchToSpaceND(blockShape, crops).print();
 * ```
 *
 * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +
 * remainingShape`, where spatialShape has `M` dimensions.
 * @param blockShape A 1-D array. Must have shape `[M]`, all values must
 * be >= 1.
 * @param crops A 2-D array.  Must have shape `[M, 2]`, all values must be >= 0.
 * `crops[i] = [cropStart, cropEnd]` specifies the amount to crop from input
 * dimension `i + 1`, which corresponds to spatial dimension `i`. It is required
 * that `cropStart[i] + cropEnd[i] <= blockShape[i] * inputShape[i + 1]`
 *
 * This operation is equivalent to the following steps:
 *
 * 1. Reshape `x` to `reshaped` of shape: `[blockShape[0], ...,
 * blockShape[M-1], batch / prod(blockShape), x.shape[1], ...,
 * x.shape[N-1]]`
 *
 * 2. Permute dimensions of `reshaped` to produce `permuted` of shape `[batch /
 * prod(blockShape),x.shape[1], blockShape[0], ..., x.shape[M],
 * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`
 *
 * 3. Reshape `permuted` to produce `reshapedPermuted` of shape `[batch /
 * prod(blockShape),x.shape[1] * blockShape[0], ..., x.shape[M] *
 * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`
 *
 * 4. Crop the start and end of dimensions `[1, ..., M]` of `reshapedPermuted`
 * according to `crops` to produce the output of shape: `[batch /
 * prod(blockShape),x.shape[1] * blockShape[0] - crops[0,0] - crops[0,1],
 * ..., x.shape[M] * blockShape[M-1] - crops[M-1,0] -
 * crops[M-1,1],x.shape[M+1], ..., x.shape[N-1]]`
 *
 * @doc {heading: 'Tensors', subheading: 'Transformations'}
 */function(e,t,i){let o=(0,a.convertToTensor)(e,"x","batchToSpaceND"),l=t.reduce((e,t)=>e*t);return s.assert(o.rank>=1+t.length,()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`),s.assert(i.length===t.length,()=>`crops.length is ${i.length} but should be equal to blockShape.length  ${t.length}`),s.assert(o.shape[0]%l==0,()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${l}`),(0,r.ENGINE).runKernel(n.BatchToSpaceND,{x:o},{blockShape:t,crops:i})}})}),R("5ULLz",function(e,t){c(e.exports,"batchNorm",()=>u);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("1EYew"),o=A("jqSCG"),l=A("4sqA7");let u=/* @__PURE__ */(0,o.op)({batchNorm_:/**
 * Batch normalization.
 *
 * As described in
 * [http://arxiv.org/abs/1502.03167](http://arxiv.org/abs/1502.03167).
 *
 * Mean, variance, scale, and offset can be of two shapes:
 *   - The same shape as the input.
 *   - In the common case, the depth dimension is the last dimension of x, so
 *     the values would be a `tf.Tensor1D` of shape [depth].
 *
 * Also available are stricter rank-specific methods with the same signature
 * as this method that assert that parameters passed are of given rank
 *   - `tf.batchNorm2d`
 *   - `tf.batchNorm3d`
 *   - `tf.batchNorm4d`
 *
 * @param x The input Tensor.
 * @param mean A mean Tensor.
 * @param variance A variance Tensor.
 * @param offset An offset Tensor.
 * @param scale A scale Tensor.
 * @param varianceEpsilon A small float number to avoid dividing by 0.
 *
 * @doc {heading: 'Operations', subheading: 'Normalization'}
 */function(e,t,o,u,c,d){let p,h;null==d&&(d=.001);let f=(0,a.convertToTensor)(e,"x","batchNorm"),m=(0,a.convertToTensor)(t,"mean","batchNorm"),g=(0,a.convertToTensor)(o,"variance","batchNorm");null!=c&&(p=(0,a.convertToTensor)(c,"scale","batchNorm")),null!=u&&(h=(0,a.convertToTensor)(u,"offset","batchNorm")),s.assert(m.rank===g.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),s.assert(null==h||m.rank===h.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),s.assert(null==p||m.rank===p.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let y=(0,i.xAs4D)(f),b={x:y,scale:p,offset:h,mean:m,variance:g},v={varianceEpsilon:d},x=(0,r.ENGINE).runKernel(n.FusedBatchNorm,b,v);return(0,l.reshape)(x,f.shape)}})}),R("1EYew",function(e,t){c(e.exports,"xAs4D",()=>n);var r=A("4sqA7");function n(e){return 0===e.rank||1===e.rank?(0,r.reshape)(e,[1,1,1,e.size]):2===e.rank?(0,r.reshape)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,r.reshape)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e}}),R("kKS8R",function(e,t){c(e.exports,"batchNorm2d",()=>i);var r=A("5xBLk"),n=A("8cCb2"),a=A("5ULLz"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({batchNorm2d_:/**
 * Batch normalization, strictly for 2D. For the more relaxed version, see
 * `tf.batchNorm`.
 *
 * @param x The input Tensor.
 * @param mean A mean Tensor.
 * @param variance A variance Tensor.
 * @param offset An offset Tensor.
 * @param scale A scale Tensor.
 * @param varianceEpsilon A small float number to avoid dividing by 0.
 */function(e,t,s,i,o,l){let u,c;let d=(0,r.convertToTensor)(e,"x","batchNorm"),p=(0,r.convertToTensor)(t,"mean","batchNorm"),h=(0,r.convertToTensor)(s,"variance","batchNorm");return null!=o&&(u=(0,r.convertToTensor)(o,"scale","batchNorm")),null!=i&&(c=(0,r.convertToTensor)(i,"offset","batchNorm")),n.assert(2===d.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${d.rank}.`),n.assert(2===p.rank||1===p.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${p.rank}.`),n.assert(2===h.rank||1===h.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${h.rank}.`),null!=u&&n.assert(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&n.assert(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),(0,a.batchNorm)(d,p,h,c,u,l)}})}),R("3KWPF",function(e,t){c(e.exports,"batchNorm3d",()=>i);var r=A("5xBLk"),n=A("8cCb2"),a=A("5ULLz"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({batchNorm3d_:/**
 * Batch normalization, strictly for 3D. For the more relaxed version, see
 * `tf.batchNorm`.
 *
 * @param x The input Tensor.
 * @param mean A mean Tensor.
 * @param variance A variance Tensor.
 * @param offset An offset Tensor.
 * @param scale A scale Tensor.
 * @param varianceEpsilon A small float number to avoid dividing by 0.
 */function(e,t,s,i,o,l){let u,c;let d=(0,r.convertToTensor)(e,"x","batchNorm"),p=(0,r.convertToTensor)(t,"mean","batchNorm"),h=(0,r.convertToTensor)(s,"variance","batchNorm");return null!=o&&(u=(0,r.convertToTensor)(o,"scale","batchNorm")),null!=i&&(c=(0,r.convertToTensor)(i,"offset","batchNorm")),n.assert(3===d.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${d.rank}.`),n.assert(3===p.rank||1===p.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${p.rank}.`),n.assert(3===h.rank||1===h.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${h.rank}.`),null!=u&&n.assert(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&n.assert(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),(0,a.batchNorm)(d,p,h,c,u,l)}})}),R("34sL5",function(e,t){c(e.exports,"batchNorm4d",()=>i);var r=A("5xBLk"),n=A("8cCb2"),a=A("5ULLz"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({batchNorm4d_:/**
 * Batch normalization, strictly for 4D. For the more relaxed version, see
 * `tf.batchNorm`.
 *
 * @param x The input Tensor.
 * @param mean A mean Tensor.
 * @param variance A variance Tensor.
 * @param offset An offset Tensor.
 * @param scale A scale Tensor.
 * @param varianceEpsilon A small float number to avoid dividing by 0.
 */function(e,t,s,i,o,l){let u,c;let d=(0,r.convertToTensor)(e,"x","batchNorm"),p=(0,r.convertToTensor)(t,"mean","batchNorm"),h=(0,r.convertToTensor)(s,"variance","batchNorm");return null!=o&&(u=(0,r.convertToTensor)(o,"scale","batchNorm")),null!=i&&(c=(0,r.convertToTensor)(i,"offset","batchNorm")),n.assert(4===d.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${d.rank}.`),n.assert(4===p.rank||1===p.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${p.rank}.`),n.assert(4===h.rank||1===h.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${h.rank}.`),null!=u&&n.assert(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&n.assert(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),(0,a.batchNorm)(d,p,h,c,u,l)}})}),R("f3UMy",function(e,t){c(e.exports,"bincount",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({bincount_:/**
 * Outputs a vector with length `size` and the same dtype as `weights`.
 *
 * If `weights` are empty, then index `i` stores the number of times the value
 * `i` is counted in `x`. If `weights` are non-empty, then index `i` stores the
 * sum of the value in `weights` at each index where the corresponding value in
 * `x` is `i`.
 *
 * Values in `x` outside of the range [0, size) are ignored.
 *
 * @param x The input int tensor, rank 1.
 * @param weights The weights tensor, must have the same shape as x, or a
 *     length-0 Tensor, in which case it acts as all weights equal to 1.
 * @param size Non-negative integer.
 *
 * @doc {heading: 'Operations', subheading: 'Reduction'}
 */function(e,t,i){let o=(0,a.convertToTensor)(e,"x","bincount"),l=(0,a.convertToTensor)(t,"weights","bincount");return s.assert("int32"===o.dtype,()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`),s.assert(i>=0,()=>`size must be non-negative, but got ${i}.`),s.assert(l.size===o.size||0===l.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${l.shape}.`),(0,r.ENGINE).runKernel(n.Bincount,{x:o,weights:l},{size:i})}})}),R("dmptO",function(e,t){c(e.exports,"bitwiseAnd",()=>o);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({bitwiseAnd_:/**
 * Bitwise `AND` operation for input tensors.
 *
 * Given two input tensors, returns a new tensor
 * with the `AND` calculated values.
 *
 * The method supports int32 values
 *
 *
 * ```js
 * const x = tf.tensor1d([0, 5, 3, 14], 'int32');
 * const y = tf.tensor1d([5, 0, 7, 11], 'int32');
 * tf.bitwiseAnd(x, y).print();
 * ```
 *
 * @param x The input tensor to be calculated.
 * @param y The input tensor to be calculated.
 *
 * @doc {heading: 'Operations', subheading: 'Logical'}
 */function(e,t){let i=(0,a.convertToTensor)(e,"x","bitwiseAnd"),o=(0,a.convertToTensor)(t,"y","bitwiseAnd");if(!(0,s.arraysEqual)(i.shape,o.shape))throw Error(`BitwiseAnd: Tensors must have the same shape. x: ${i.shape}, y: ${o.shape}`);if("int32"!==i.dtype||"int32"!==o.dtype)throw Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${i.dtype} and type of y: ${o.dtype}`);return(0,r.ENGINE).runKernel(n.BitwiseAnd,{a:i,b:o})}})}),R("k4fG6",function(e,t){c(e.exports,"broadcastArgs",()=>i);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({broadcastArgs_:/**
 * Return the shape of s0 op s1 with broadcast.
 *
 * compute r0, the broadcasted shape as a tensor.
 * s0, s1 and r0 are all integer vectors.
 *
 * This function returns the shape of the result of an operation between
 * two tensors of size s0 and s1 performed with broadcast.
 *
 * @param s0 A tensor representing a shape
 * @param s1 A tensor representing a shape
 *
 * @doc {heading: 'Tensors', subheading: 'Transformations'}
 */function(e,t){let s=(0,a.convertToTensor)(e,"s0","broadcastArgs","int32"),i=(0,a.convertToTensor)(t,"s1","broadcastArgs","int32");if(1!==s.rank)throw Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${s.rank}`);if(1!==i.rank)throw Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${i.rank}`);return(0,r.ENGINE).runKernel(n.BroadcastArgs,{s0:s,s1:i})}})}),R("aeB3Z",function(e,t){c(e.exports,"broadcastTo",()=>u);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("5TuCW"),o=A("jqSCG"),l=A("4sqA7");let u=/* @__PURE__ */(0,o.op)({broadcastTo_:/**
 * Broadcast an array to a compatible shape NumPy-style.
 *
 * The tensor's shape is compared to the broadcast shape from end to beginning.
 * Ones are prepended to the tensor's shape until it has the same length as
 * the broadcast shape. If input.shape[i]==shape[i], the (i+1)-th axis is
 * already broadcast-compatible. If input.shape[i]==1 and shape[i]==N, then
 * the input tensor is tiled N times along that axis (using tf.tile).
 *
 * @param input The tensor that is to be broadcasted.
 * @param shape The input is to be broadcast to this shape.
 *
 * @doc {heading: 'Tensors', subheading: 'Transformations'}
 */function(e,t){let o=(0,a.convertToTensor)(e,"broadcastTo","x"),u=o.shape;if((0,s.assertNonNegativeIntegerDimensions)(t),t.length<o.rank)throw Error(`broadcastTo(): shape.length=${t.length} < input.rank=${o.rank}.`);if(t.length>o.rank){let e=o.shape.slice();for(;e.length<t.length;)e.unshift(1);o=(0,l.reshape)(o,e)}let c=o.shape,d=Array.from(t);for(let e=t.length-1;e>=0;e--)if(c[e]===t[e])d[e]=1;else if(1!==o.shape[e])throw Error(`broadcastTo(): [${u}] cannot be broadcast to [${t}].`);let p=d.map((e,t)=>e>1?t:-1).filter(e=>e>=0);if(0===p.length)return(0,i.clone)(o);// TODO call broadcastTo kernel directly once backends implement broadcstTo
let h={x:o};return(0,r.ENGINE).runKernel(n.Tile,h,{reps:d})}})}),R("jDrkY",function(e,t){c(e.exports,"ceil",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({ceil_:/**
 * Computes ceiling of input `tf.Tensor` element-wise: `ceil(x)`
 *
 * ```js
 * const x = tf.tensor1d([.6, 1.1, -3.3]);
 *
 * x.ceil().print();  // or tf.ceil(x)
 * ```
 * @param x The input Tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","ceil","float32");return(0,r.ENGINE).runKernel(n.Ceil,{x:t})}})}),R("cOWuO",function(e,t){c(e.exports,"clipByValue",()=>l);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("gYive"),o=A("jqSCG");let l=/* @__PURE__ */(0,o.op)({clipByValue_:/**
 * Clips values element-wise. `max(min(x, clipValueMax), clipValueMin)`
 *
 * ```js
 * const x = tf.tensor1d([-1, 2, -3, 4]);
 *
 * x.clipByValue(-2, 3).print();  // or tf.clipByValue(x, -2, 3)
 * ```
 * @param x The input tensor.
 * @param clipValueMin Lower bound of range to be clipped to.
 * @param clipValueMax Upper bound of range to be clipped to.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e,t,o){let l=(0,a.convertToTensor)(e,"x","clipByValue");return(s.assert(t<=o,()=>`Error in clip: min (${t}) must be less than or equal to max (${o}).`),t===o)?(0,i.fill)(l.shape,t,l.dtype):(0,r.ENGINE).runKernel(n.ClipByValue,{x:l},{clipValueMin:t,clipValueMax:o})}})}),R("4TU82",function(e,t){c(e.exports,"concat1d",()=>a);var r=A("iTu6j"),n=A("jqSCG");let a=/* @__PURE__ */(0,n.op)({concat1d_:/**
 * Concatenates a list of`tf.Tensor1D`s along an axis. See `concat` for details.
 *
 * For example, if:
 * A: shape(3) = |r1, g1, b1|
 * B: shape(2) = |r2, g2|
 * C = tf.concat1d([A, B]) == |r1, g1, b1, r2, g2|
 *
 * @param tensors A list of`tf.Tensor`s to concatenate.
 * @return The concatenated array.
 */function(e){return(0,r.concat)(e,0/* axis */)}})}),R("7PZdE",function(e,t){c(e.exports,"concat2d",()=>a);var r=A("iTu6j"),n=A("jqSCG");let a=/* @__PURE__ */(0,n.op)({concat2d_:/**
 * Concatenates a list of`tf.Tensor2D`s along an axis. See `concat` for details.
 *
 * For example, if:
 * A: shape(2, 3) = | r1, g1, b1 |
 *                  | r2, g2, b2 |
 *
 * B: shape(2, 3) = | r3, g3, b3 |
 *                  | r4, g4, b4 |
 *
 * C = tf.concat2d([A, B], axis)
 *
 * if axis = 0:
 * C: shape(4, 3) = | r1, g1, b1 |
 *                  | r2, g2, b2 |
 *                  | r3, g3, b3 |
 *                  | r4, g4, b4 |
 *
 * if axis = 1:
 * C = shape(2, 6) = | r1, g1, b1, r3, g3, b3 |
 *                   | r2, g2, b2, r4, g4, b4 |
 *
 *
 * @param tensors A list of `tf.Tensor`s to concatenate.
 * @param axis The axis to concatenate along.
 * @return The concatenated array.
 */function(e,t){return(0,r.concat)(e,t)}})}),R("ljqPW",function(e,t){c(e.exports,"concat3d",()=>a);var r=A("iTu6j"),n=A("jqSCG");let a=/* @__PURE__ */(0,n.op)({concat3d_:/**
 * Concatenates a list of `tf.Tensor3D`s along an axis.
 * See `concat` for details.
 *
 * For example, if:
 * A: shape(2, 1, 3) = | r1, g1, b1 |
 *                     | r2, g2, b2 |
 *
 * B: shape(2, 1, 3) = | r3, g3, b3 |
 *                     | r4, g4, b4 |
 *
 * C = tf.concat3d([A, B], axis)
 *
 * if axis = 0:
 * C: shape(4, 1, 3) = | r1, g1, b1 |
 *                     | r2, g2, b2 |
 *                     | r3, g3, b3 |
 *                     | r4, g4, b4 |
 *
 * if axis = 1:
 * C: shape(2, 2, 3) = | r1, g1, b1, r3, g3, b3 |
 *                     | r2, g2, b2, r4, g4, b4 |
 *
 * if axis = 2:
 * C = shape(2, 1, 6) = | r1, g1, b1, r3, g3, b3 |
 *                      | r2, g2, b2, r4, g4, b4 |
 *
 * @param tensors A list of`tf.Tensor`s to concatenate.
 * @param axis The axis to concate along.
 * @return The concatenated array.
 */function(e,t){return(0,r.concat)(e,t)}})}),R("9Grxx",function(e,t){c(e.exports,"concat4d",()=>a);var r=A("iTu6j"),n=A("jqSCG");let a=/* @__PURE__ */(0,n.op)({concat4d_:/**
 * Concatenates a list of `tf.Tensor4D`s along an axis.
 * See `concat` for details.
 *
 * @param tensors A list of `tf.Tensor`s to concatenate.
 * @param axis The axis to concate along.
 * @return The concatenated array.
 */function(e,t){return(0,r.concat)(e,t)}})}),R("ebPOp",function(e,t){c(e.exports,"conv1d",()=>l);var r=A("5xBLk"),n=A("8cCb2"),a=A("5Nkm1"),s=A("frznq"),i=A("jqSCG"),o=A("4sqA7");let l=/* @__PURE__ */(0,i.op)({conv1d_:/**
 * Computes a 1D convolution over the input x.
 *
 * @param x The input tensor, of rank 3 or rank 2, of shape
 *     `[batch, width, inChannels]`. If rank 2, batch of 1 is assumed.
 * @param filter The filter, rank 3, of shape
 *     `[filterWidth, inDepth, outDepth]`.
 * @param stride The number of entries by which the filter is moved right at
 *     each step.
 * @param pad The type of padding algorithm.
 *    - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *    - `valid`: output will be smaller than input if filter is larger
 *       than 1x1.
 *   - For more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 * @param dataFormat An optional string from "NWC", "NCW". Defaults to "NWC",
 *     the data is stored in the order of [batch, in_width, in_channels]. Only
 *     "NWC" is currently supported.
 * @param dilation The dilation rate in which we sample input values in
 *     atrous convolution. Defaults to `1`. If it is greater than 1, then
 *     stride must be `1`.
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 *
 * @doc {heading: 'Operations', subheading: 'Convolution'}
 */function(e,t,i,l,u="NWC",c=1,d){let p=(0,r.convertToTensor)(e,"x","conv1d"),h=(0,r.convertToTensor)(t,"filter","conv1d"),f=p,m=!1;2===p.rank&&(m=!0,f=(0,o.reshape)(p,[1,p.shape[0],p.shape[1]])),n.assert(3===f.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`),n.assert(3===h.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${h.rank}.`),s.checkPadOnDimRoundingMode("conv1d",l,d),n.assert(f.shape[2]===h.shape[1],()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${h.shape[1]}.`),n.assert(s.eitherStridesOrDilationsAreOne(i,c),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${i} and dilation '${c}'`),n.assert(s.stridesOrDilationsArePositive(c),()=>"Error in conv1D: Dilated rates should be larger than 0."),n.assert(s.stridesOrDilationsArePositive(i),()=>"Error in conv1D: Stride should be larger than 0."),n.assert("NWC"===u,()=>`Error in conv1d: got dataFormat of ${u} but only NWC is currently supported.`);let g=(0,o.reshape)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),y=(0,o.reshape)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,i],v=[1,c],x=(0,a.conv2d)(y,g,b,l,"NHWC",v,d);return m?(0,o.reshape)(x,[x.shape[2],x.shape[3]]):(0,o.reshape)(x,[x.shape[0],x.shape[2],x.shape[3]])}})}),R("5Nkm1",function(e,t){c(e.exports,"conv2d",()=>u);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("frznq"),o=A("jqSCG"),l=A("4sqA7");let u=/* @__PURE__ */(0,o.op)({conv2d_:/**
 * Computes a 2D convolution over the input x.
 *
 * @param x The input tensor, of rank 4 or rank 3, of shape
 *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is
 * assumed.
 * @param filter The filter, rank 4, of shape
 *     `[filterHeight, filterWidth, inDepth, outDepth]`.
 * @param strides The strides of the convolution: `[strideHeight,
 * strideWidth]`.
 * @param pad The type of padding algorithm.
 *    - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *    - `valid`: output will be smaller than input if filter is larger
 *       than 1x1.
 *   - For more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 * @param dataFormat: An optional string from: "NHWC", "NCHW". Defaults to
 *     "NHWC". Specify the data format of the input and output data. With the
 *     default format "NHWC", the data is stored in the order of: [batch,
 *     height, width, channels].
 * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`
 *     in which we sample input values across the height and width dimensions
 *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single
 *     number, then `dilationHeight == dilationWidth`. If it is greater than
 *     1, then all values of `strides` must be 1.
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 *
 * @doc {heading: 'Operations', subheading: 'Convolution'}
 */function(e,t,o,u,c="NHWC",d=[1,1],p){let h=(0,a.convertToTensor)(e,"x","conv2d","float32"),f=(0,a.convertToTensor)(t,"filter","conv2d","float32"),m=h,g=!1;3===h.rank&&(g=!0,m=(0,l.reshape)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),s.assert(4===m.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`),s.assert(4===f.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`),i.checkPadOnDimRoundingMode("conv2d",u,p);let y="NHWC"===c?m.shape[3]:m.shape[1];s.assert(y===f.shape[2],()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`),s.assert(i.eitherStridesOrDilationsAreOne(o,d),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`),s.assert(i.stridesOrDilationsArePositive(d),()=>"Error in conv2D: Dilated rates should be larger than 0."),s.assert(i.stridesOrDilationsArePositive(o),()=>"Error in conv2D: Strides should be larger than 0.");let b={x:m,filter:f},v=(0,r.ENGINE).runKernel(n.Conv2D,b,{strides:o,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p});return g?(0,l.reshape)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})}),R("5rn1J",function(e,t){c(e.exports,"conv2dTranspose",()=>s);var r=A("5xBLk"),n=A("6eptr"),a=A("jqSCG");let s=/* @__PURE__ */(0,a.op)({conv2dTranspose_:/**
 * Computes the transposed 2D convolution of an image, also known as a
 * deconvolution.
 *
 * @param x The input image, of rank 4 or rank 3, of shape
 *   `[batch, height, width, inDepth]`. If rank 3, batch of 1 is assumed.
 * @param filter The filter, rank 4, of shape
 *     `[filterHeight, filterWidth, outDepth, inDepth]`.
 *     `inDepth` must match `inDepth` in `x`.
 * @param outputShape Output shape, of rank 4 or rank 3:
 *     `[batch, height, width, outDepth]`. If rank 3, batch of 1 is assumed.
 * @param strides The strides of the original convolution:
 *     `[strideHeight, strideWidth]`.
 * @param pad  The type of padding algorithm used in the non-transpose version
 *    of the op.
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 *
 * @doc {heading: 'Operations', subheading: 'Convolution'}
 */function(e,t,a,s,i,o){let l=(0,r.convertToTensor)(e,"x","conv2dTranspose"),u=(0,r.convertToTensor)(t,"filter","conv2dTranspose");return(0,n.conv2DBackpropInput)(a,l,u,s,i,"NHWC",o)}})}),R("6eptr",function(e,t){c(e.exports,"conv2DBackpropInput",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("8cCb2"),s=A("frznq"),i=A("jqSCG"),o=A("4sqA7");let l=/* @__PURE__ */(0,i.op)({conv2DBackpropInput_:/**
 * Computes the derivative of the input of a 2D convolution.
 *
 * @param xShape The shape of the input: [batch, height, width, inDepth].
 * If length of 3, batch of 1 is assumed.
 * @param dy The derivative of the output, of rank 4 or rank 3 of shape
 *   `[batch, outHeight, outWidth, outDepth]`. If rank 3, batch of 1 is
 * assumed.
 * @param filter The filter, rank 4, of shape
 *     `[filterHeight, filterWidth, inDepth, outDepth]`.
 * @param strides The strides of the convolution: `[strideHeight,
 * strideWidth]`.
 * @param pad The type of padding algorithm used:
 *    - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *    - `valid`: output will be smaller than input if filter is larger
 *       than 1x1.
 * @param dataFormat: An optional string from: "NHWC", "NCHW". Defaults to
 *     "NHWC". Specify the data format of the input and output data. With the
 *     default format "NHWC", the data is stored in the order of: [batch,
 *     height, width, channels].
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 */function(e,t,i,l,u,c="NHWC",d){a.assert(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let p=e,h=t,f=!1;3===t.rank&&(f=!0,h=(0,o.reshape)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),p=[1,e[0],e[1],e[2]]),a.assert(4===p.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${p.length}.`),a.assert(4===h.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${h.rank}`),a.assert(4===i.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${i.rank}`);let m="NHWC"===c?p[3]:p[1],g="NHWC"===c?h.shape[3]:h.shape[1];a.assert(m===i.shape[2],()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${i.shape[2]}.`),a.assert(g===i.shape[3],()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${i.shape[3]}.`),s.checkPadOnDimRoundingMode("conv2dDerInput",u,d);let y={dy:h,filter:i},b={strides:l,pad:u,dataFormat:c,dimRoundingMode:d,inputShape:p},v=(0,r.ENGINE).runKernel(n.Conv2DBackpropInput,y,b);return f?(0,o.reshape)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})}),R("kj7tM",function(e,t){c(e.exports,"conv3d",()=>u);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("frznq"),o=A("jqSCG"),l=A("4sqA7");let u=/* @__PURE__ */(0,o.op)({conv3d_:/**
 * Computes a 3D convolution over the input x.
 *
 * @param x The input tensor, of rank 5 or rank 4, of shape
 *     `[batch, depth, height, width, channels]`. If rank 4,
 * batch of 1 is assumed.
 * @param filter The filter, rank 5, of shape
 *     `[filterDepth, filterHeight, filterWidth, inChannels, outChannels]`.
 *      inChannels must match between input and filter.
 * @param strides The strides of the convolution: `[strideDepth, strideHeight,
 * strideWidth]`.
 * @param pad The type of padding algorithm.
 *    - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *    - `valid`: output will be smaller than input if filter is larger
 *       than 1x1.
 *   - For more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 * @param dataFormat: An optional string from: "NDHWC", "NCDHW". Defaults to
 *     "NDHWC". Specify the data format of the input and output data. With the
 *     default format "NDHWC", the data is stored in the order of: [batch,
 *     depth, height, width, channels]. Only "NDHWC" is currently supported.
 * @param dilations The dilation rates: `[dilationDepth, dilationHeight,
 *     dilationWidth]` in which we sample input values across the height
 *     and width dimensions in atrous convolution. Defaults to `[1, 1, 1]`.
 *     If `dilations` is a single number, then
 *     `dilationDepth == dilationHeight == dilationWidth`. If it is greater
 *     than 1, then all values of `strides` must be 1.
 *
 * @doc {heading: 'Operations', subheading: 'Convolution'}
 */function(e,t,o,u,c="NDHWC",d=[1,1,1]){let p=(0,a.convertToTensor)(e,"x","conv3d"),h=(0,a.convertToTensor)(t,"filter","conv3d"),f=p,m=!1;4===p.rank&&(m=!0,f=(0,l.reshape)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),s.assert(5===f.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`),s.assert(5===h.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${h.rank}.`),s.assert(f.shape[4]===h.shape[3],()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${h.shape[3]}.`),s.assert((0,i.eitherStridesOrDilationsAreOne)(o,d),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`),s.assert("NDHWC"===c,()=>`Error in conv3d: got dataFormat of ${c} but only NDHWC is currently supported.`),s.assert((0,i.stridesOrDilationsArePositive)(d),()=>"Error in conv3D: Dilated rates should be larger than 0."),s.assert((0,i.stridesOrDilationsArePositive)(o),()=>"Error in conv3D: Strides should be larger than 0.");let g={x:f,filter:h},y=(0,r.ENGINE).runKernel(n.Conv3D,g,{strides:o,pad:u,dataFormat:c,dilations:d});return m?(0,l.reshape)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})}),R("7Zgyq",function(e,t){c(e.exports,"conv3dTranspose",()=>s);var r=A("5xBLk"),n=A("AHZ4U"),a=A("jqSCG");let s=/* @__PURE__ */(0,a.op)({conv3dTranspose_:/**
 * Computes the transposed 3D convolution of a volume, also known as a
 * deconvolution.
 *
 * @param x The input image, of rank 5 or rank 4, of shape
 *   `[batch, depth, height, width, inDepth]`. If rank 4, batch of 1 is assumed.
 * @param filter The filter, rank 4, of shape
 *     `[depth, filterHeight, filterWidth, outDepth, inDepth]`.
 *     `inDepth` must match `inDepth` in `x`.
 * @param outputShape Output shape, of rank 5 or rank 4:
 *     `[batch, depth, height, width, outDepth]`. If rank 3, batch of 1 is
 *    assumed.
 * @param strides The strides of the original convolution:
 *     `[strideDepth, strideHeight, strideWidth]`.
 * @param pad  The type of padding algorithm used in the non-transpose version
 *    of the op.
 *
 * @doc {heading: 'Operations', subheading: 'Convolution'}
 */function(e,t,a,s,i){let o=(0,r.convertToTensor)(e,"x","conv3dTranspose"),l=(0,r.convertToTensor)(t,"filter","conv3dTranspose");return(0,n.conv3DBackpropInput)(a,o,l,s,i)}})}),R("AHZ4U",function(e,t){c(e.exports,"conv3DBackpropInput",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("8cCb2"),s=A("jqSCG"),i=A("4sqA7");let o=/* @__PURE__ */(0,s.op)({conv3DBackpropInput_:/**
 * Computes the derivative of the input of a 3D convolution.
 *
 * @param xShape The shape of the input: [batch, depth, height, width,
 * in_channels]. If length of 4, batch of 1 is assumed.
 * @param dy The derivative of the output, of rank 5 or rank 4 of shape
 *   `[batch, outDepth, outHeight, outWidth, in_channels]`.
 * If rank 4, batch of 1 is assumed.
 * @param filter The filter, rank 5, of shape
 *     `[filterDepth, filterHeight, filterWidth, inDepth, outDepth]`.
 * @param strides The strides of the convolution: `[strideDepth, strideHeight,
 * strideWidth]`.
 * @param pad The type of padding algorithm used:
 *    - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *    - `valid`: output will be smaller than input if filter is larger
 *       than 1x1.
 */function(e,t,s,o,l){a.assert(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let u=e,c=t,d=!1;4===t.rank&&(d=!0,c=(0,i.reshape)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),u=[1,e[0],e[1],e[2],e[3]]);let p=u[4],h=c.shape[4];a.assert(5===u.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${u.length}.`),a.assert(5===c.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`),a.assert(5===s.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${s.rank}`),a.assert(p===s.shape[3],()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${s.shape[3]}.`),a.assert(h===s.shape[4],()=>`Error in conv3dDerInput: depth of output (${h}) must match output depth for filter ${s.shape[4]}.`);let f={dy:c,filter:s},m={pad:l,strides:o,inputShape:u},g=(0,r.ENGINE).runKernel(n.Conv3DBackpropInputV2,f,m);return d?(0,i.reshape)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})}),R("3BU7G",function(e,t){c(e.exports,"cos",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({cos_:/**
 * Computes cos of the input `tf.Tensor` element-wise: `cos(x)`
 *
 * ```js
 * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);
 *
 * x.cos().print();  // or tf.cos(x)
 * ```
 * @param x The input tensor. Must be float32 type.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","cos","float32");return(0,r.ENGINE).runKernel(n.Cos,{x:t})}})}),R("bTdqT",function(e,t){c(e.exports,"cosh",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({cosh_:/**
 * Computes hyperbolic cos of the input `tf.Tensor` element-wise: `cosh(x)`
 *
 * ```js
 * const x = tf.tensor1d([0, 1, -1, .7]);
 *
 * x.cosh().print();  // or tf.cosh(x)
 * ```
 * @param x The input tensor. Must be float32 type.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","cosh","float32");return(0,r.ENGINE).runKernel(n.Cosh,{x:t})}})}),R("bhhSS",function(e,t){c(e.exports,"cumprod",()=>i);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({cumprod_:/**
 * Computes the cumulative product of a `tf.Tensor` along `axis`.
 *
 * ```js
 * const x = tf.tensor([1, 2, 3, 4]);
 * x.cumprod().print();
 * ```
 * ```js
 * const x = tf.tensor([[1, 2], [3, 4]]);
 * x.cumprod().print();
 * ```
 *
 * @param x The input tensor to cumulatively multiply.
 * @param axis The axis along which to multiply. Optional. Defaults to 0.
 * @param exclusive Whether to perform exclusive cumulative product. Optional.
 *     Defaults to false. If set to true then the product of each tensor entry
 *     does not include its own value, but only the values previous to it
 *     along the specified axis.
 * @param reverse Whether to multiply in the opposite direction. Optional.
 *     Defaults to false.
 *
 * @doc {heading: 'Operations', subheading: 'Scan'}
 */function(e,t=0,s=!1,i=!1){let o=(0,a.convertToTensor)(e,"x","cumprod");return(0,r.ENGINE).runKernel(n.Cumprod,{x:o},{axis:t,exclusive:s,reverse:i})}})}),R("7lqwF",function(e,t){c(e.exports,"cumsum",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({cumsum_:/**
 * Computes the cumulative sum of a `tf.Tensor` along `axis`.
 *
 * ```js
 * const x = tf.tensor([1, 2, 3, 4]);
 * x.cumsum().print();
 * ```
 * ```js
 * const x = tf.tensor([[1, 2], [3, 4]]);
 * x.cumsum().print();
 * ```
 *
 * @param x The input tensor to be summed.
 * @param axis The axis along which to sum. Optional. Defaults to 0.
 * @param exclusive Whether to perform exclusive cumulative sum. Optional.
 *     Defaults to false. If set to true then the sum of each tensor entry
 *     does not include its own value, but only the values previous to it
 *     along the specified axis.
 * @param reverse Whether to sum in the opposite direction. Optional.
 *     Defaults to false.
 *
 * @doc {heading: 'Operations', subheading: 'Scan'}
 */function(e,t=0,s=!1,i=!1){let o=(0,a.convertToTensor)(e,"x","cumsum");return(0,r.ENGINE).runKernel(n.Cumsum,{x:o},{axis:t,exclusive:s,reverse:i})}})}),R("8maH5",function(e,t){c(e.exports,"denseBincount",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({denseBincount_:/**
 * Outputs a vector with length `size` and the same dtype as `weights`.
 *
 * If `weights` are empty, then index `i` stores the number of times the value
 * `i` is counted in `x`. If `weights` are non-empty, then index `i` stores the
 * sum of the value in `weights` at each index where the corresponding value in
 * `x` is `i`.
 *
 * Values in `x` outside of the range [0, size) are ignored.
 *
 * @param x The input int tensor, rank 1 or rank 2.
 * @param weights The weights tensor, must have the same shape as x, or a
 *     length-0 Tensor, in which case it acts as all weights equal to 1.
 * @param size Non-negative integer.
 * @param binaryOutput Optional. Whether the kernel should count the appearance
 *     or number of occurrences. Defaults to False.
 *
 * @doc {heading: 'Operations', subheading: 'Reduction'}
 */function(e,t,i,o=!1){let l=(0,a.convertToTensor)(e,"x","denseBincount"),u=(0,a.convertToTensor)(t,"weights","denseBincount");return s.assert("int32"===l.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${l.dtype}`),s.assert(l.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${l.rank}.`),s.assert(i>=0,()=>`size must be non-negative, but got ${i}.`),s.assert(u.size===l.size||0===u.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${l.shape}, weights shape: ${u.shape}.`),(0,r.ENGINE).runKernel(n.DenseBincount,{x:l,weights:u},{size:i,binaryOutput:o})}})}),R("lIVEL",function(e,t){c(e.exports,"depthToSpace",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({depthToSpace_:/**
 * Rearranges data from depth into blocks of spatial data. More specifically,
 * this op outputs a copy of the input tensor where values from the `depth`
 * dimension are moved in spatial blocks to the `height` and `width` dimensions.
 * The attr `blockSize` indicates the input block size and how the data is
 * moved.
 *
 *  - Chunks of data of size `blockSize * blockSize` from depth are rearranged
 * into non-overlapping blocks of size `blockSize x blockSize`
 *
 *  - The width the output tensor is `inputWidth * blockSize`, whereas the
 * height is `inputHeight * blockSize`
 *
 *  - The Y, X coordinates within each block of the output image are determined
 * by the high order component of the input channel index
 *
 *  - The depth of the input tensor must be divisible by `blockSize *
 * blockSize`
 *
 * The `dataFormat` attr specifies the layout of the input and output tensors
 * with the following options: "NHWC": [ `batch, height, width, channels` ]
 * "NCHW": [ `batch, channels, height, width` ]
 *
 * ```js
 * const x = tf.tensor4d([1, 2, 3, 4], [1, 1, 1, 4]);
 * const blockSize = 2;
 * const dataFormat = "NHWC";
 *
 * tf.depthToSpace(x, blockSize, dataFormat).print();
 * ```
 *
 * @param x The input tensor of rank 4
 * @param blockSIze  An `int` that is `>= 2`. The size of the spatial block
 * @param dataFormat An optional string from: "NHWC", "NCHW". Defaults to "NHWC"
 *
 * @doc {heading: 'Tensors', subheading: 'Transformations'}
 */function(e,t,i="NHWC"){let o=(0,a.convertToTensor)(e,"x","depthToSpace","float32"),l="NHWC"===i?o.shape[1]:o.shape[2],u="NHWC"===i?o.shape[2]:o.shape[3],c="NHWC"===i?o.shape[3]:o.shape[1];return s.assert(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),s.assert(l*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${l} and ${t}  for depthToSpace with input shape
    ${o.shape}`),s.assert(u*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${u} and ${t} for depthToSpace with input shape
        ${o.shape}`),s.assert(c%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${o.shape}`),(0,r.ENGINE).runKernel(n.DepthToSpace,{x:o},{blockSize:t,dataFormat:i})}})}),R("182Rc",function(e,t){c(e.exports,"depthwiseConv2d",()=>u);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("frznq"),o=A("jqSCG"),l=A("4sqA7");let u=/* @__PURE__ */(0,o.op)({depthwiseConv2d_:/**
 * Depthwise 2D convolution.
 *
 * Given a 4D `input` array and a `filter` array of shape
 * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing
 * `inChannels` convolutional filters of depth 1, this op applies a
 * different filter to each input channel (expanding from 1 channel to
 * `channelMultiplier` channels for each), then concatenates the results
 * together. The output has `inChannels * channelMultiplier` channels.
 *
 * See
 * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](
 *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)
 * for more details.
 *
 * @param x The input tensor, of rank 4 or rank 3, of shape
 *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is
 * assumed.
 * @param filter The filter tensor, rank 4, of shape
 *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.
 * @param strides The strides of the convolution: `[strideHeight,
 * strideWidth]`. If strides is a single number, then `strideHeight ==
 * strideWidth`.
 * @param pad The type of padding algorithm.
 *   - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *   - `valid`: output will be smaller than input if filter is larger
 *       than 1x1.
 *   - For more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`
 *     in which we sample input values across the height and width dimensions
 *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single
 *     number, then `dilationHeight == dilationWidth`. If it is greater than
 *     1, then all values of `strides` must be 1.
 * @param dataFormat: An optional string from: "NHWC", "NCHW". Defaults to
 *     "NHWC". Specify the data format of the input and output data. With the
 *     default format "NHWC", the data is stored in the order of: [batch,
 *     height, width, channels]. Only "NHWC" is currently supported.
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 *
 * @doc {heading: 'Operations', subheading: 'Convolution'}
 */function(e,t,o,u,c="NHWC",d=[1,1],p){let h=(0,a.convertToTensor)(e,"x","depthwiseConv2d","float32"),f=(0,a.convertToTensor)(t,"filter","depthwiseConv2d","float32"),m=h,g=!1;3===h.rank&&(g=!0,m=(0,l.reshape)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),s.assert(4===m.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),s.assert(4===f.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`);let y="NHWC"===c?m.shape[3]:m.shape[1];s.assert(y===f.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${y}) must match the inChannels dimension in filter ${f.shape[2]}.`),i.checkPadOnDimRoundingMode("depthwiseConv2d",u,p);let b={x:m,filter:f},v=(0,r.ENGINE).runKernel(n.DepthwiseConv2dNative,b,{strides:o,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p});return g?(0,l.reshape)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})}),R("4VHSw",function(e,t){c(e.exports,"diag",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({diag_:/**
 * Returns a diagonal tensor with given diagonal values.
 *
 * Given a diagonal, this operation returns a tensor with the diagonal and
 * everything else padded with zeros.
 *
 * Assume the input has dimensions `[D1,..., Dk]`, then the output is a tensor
 * of rank 2k with dimensions `[D1,..., Dk, D1,..., Dk]`
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3, 4]);
 *
 * tf.diag(x).print()
 * ```
 * ```js
 * const x = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8], [4, 2])
 *
 * tf.diag(x).print()
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Tensors', subheading: 'Creation'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","diag");return(0,r.ENGINE).runKernel(n.Diag,{x:t})}})}),R("leKzP",function(e,t){c(e.exports,"dilation2d",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG"),o=A("4sqA7");let l=/* @__PURE__ */(0,i.op)({dilation2d_:/**
 * Computes the grayscale dilation over the input `x`.
 *
 * @param x The input tensor, rank 3 or rank 4 of shape
 *     `[batch, height, width, depth]`. If rank 3, batch of 1 is assumed.
 * @param filter The filter tensor, rank 3, of shape
 *     `[filterHeight, filterWidth, depth]`.
 * @param strides The strides of the sliding window for each dimension of the
 *     input tensor: `[strideHeight, strideWidth]`.
 *     If `strides` is a single number,
 *     then `strideHeight == strideWidth`.
 * @param pad The type of padding algorithm.
 *    - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *    - `valid`: output will be smaller than input if filter is larger
 *       than 1*1x1.
 *    - For more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 * @param dataFormat Specify the data format of the input and output data.
 *      Defaults to 'NHWC'. Only 'NHWC' is currently supported. With the
 *      default format "NHWC", the data is stored in the order of: [batch,
 *      height, width, channels].
 * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`
 *     in which we sample input values across the height and width dimensions
 *     for atrous morphological dilation. Defaults to `[1, 1]`. If `dilations`
 *     is a single number, then `dilationHeight == dilationWidth`. If it is
 *     greater than 1, then all values of `strides` must be 1.
 *
 * @doc {heading: 'Operations', subheading: 'Convolution'}
 */function(e,t,i,l,u=[1,1],c="NHWC"){let d=(0,a.convertToTensor)(e,"x","dilation2d"),p=(0,a.convertToTensor)(t,"filter","dilation2d");s.assert(3===d.rank||4===d.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${d.rank}.`),s.assert(3===p.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${p.rank}.`),s.assert("NHWC"===c,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`);let h=d,f=!1;3===d.rank&&(h=(0,o.reshape)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0),s.assert(h.shape[3]===p.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${h.shape[3]} vs ${p.shape[2]}`);let m={x:h,filter:p},g=(0,r.ENGINE).runKernel(n.Dilation2D,m,{strides:i,pad:l,dilations:u});return f?(0,o.reshape)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})}),R("3pBq5",function(e,t){c(e.exports,"divNoNan",()=>u);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("3w4Rg"),n=A("5xBLk"),a=A("1QPqB"),s=A("7R9HC"),i=A("jqSCG"),o=A("l2P14"),l=A("8EjnK");let u=/* @__PURE__ */(0,i.op)({divNoNan_:/**
 * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting. Return 0
 * if denominator is 0.
 *
 *
 * ```js
 * const a = tf.tensor1d([1, 4, 9, 16]);
 * const b = tf.tensor1d([1, 2, 3, 4]);
 * const c = tf.tensor1d([0, 0, 0, 0]);
 *
 * a.divNoNan(b).print();  // or tf.divNoNan(a, b)
 * a.divNoNan(c).print();  // or tf.divNoNan(a, c)
 * ```
 *
 * ```js
 * // Broadcast div a with b.
 * const a = tf.tensor1d([2, 4, 6, 8]);
 * const b = tf.scalar(2);
 * const c = tf.scalar(0);
 *
 * a.divNoNan(b).print();  // or tf.divNoNan(a, b)
 * a.divNoNan(c).print();  // or tf.divNoNan(a, c)
 * ```
 *
 * @param a The first tensor as the numerator.
 * @param b The second tensor as the denominator. Must have the same dtype as
 * `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Arithmetic'}
 */function(e,t){// TODO: Make this into its own kernel.
let i=(0,n.convertToTensor)(e,"a","div"),u=(0,n.convertToTensor)(t,"b","div");[i,u]=(0,r.makeTypesMatch)(i,u);let c=(0,a.div)(i,u),d=(0,l.zerosLike)(c),p=(0,s.equal)(u,d);return(0,o.where)(p,d,c)}})}),R("7R9HC",function(e,t){c(e.exports,"equal",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("8BaGO"),o=A("jqSCG");let l=/* @__PURE__ */(0,o.op)({equal_:/**
 * Returns the truth value of (a == b) element-wise. Supports broadcasting.
 *
 * ```js
 * const a = tf.tensor1d([1, 2, 3]);
 * const b = tf.tensor1d([2, 2, 2]);
 *
 * a.equal(b).print();
 * ```
 *
 * @param a The first input tensor.
 * @param b The second input tensor. Must have the same dtype as `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Logical'}
 */function(e,t){let o=(0,s.convertToTensor)(e,"a","equal","string_or_numeric"),l=(0,s.convertToTensor)(t,"b","equal","string_or_numeric");[o,l]=(0,a.makeTypesMatch)(o,l),(0,i.assertAndGetBroadcastShape)(o.shape,l.shape);let u={a:o,b:l};return(0,r.ENGINE).runKernel(n.Equal,u)}})}),R("l2P14",function(e,t){c(e.exports,"where",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("aeB3Z"),i=A("8BaGO"),o=A("jqSCG");let l=/* @__PURE__ */(0,o.op)({where_:/**
 * Returns the elements, either `a` or `b` depending on the `condition`.
 *
 * If the condition is true, select from `a`, otherwise select from `b`.
 *
 * ```js
 * const cond = tf.tensor1d([false, false, true], 'bool');
 * const a = tf.tensor1d([1 , 2, 3]);
 * const b = tf.tensor1d([-1, -2, -3]);
 *
 * a.where(cond, b).print();
 * ```
 *
 * @param condition The input condition. Must be of dtype bool.
 * @param a If `condition` is rank 1, `a` may have a higher rank but
 *     its first dimension must match the size of `condition`.
 * @param b A tensor with the same dtype as `a` and with shape that is
 *     compatible with `a`.
 * @return A tensor with same dtype as `a` and `b`, and shape that is
 *     broadcastable from `a` and `b`.
 *
 * @doc {heading: 'Operations', subheading: 'Logical'}
 */function(e,t,o){let l=(0,a.convertToTensor)(t,"a","where"),u=(0,a.convertToTensor)(o,"b","where"),c=(0,a.convertToTensor)(e,"condition","where","bool"),d=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(c.shape,l.shape),u.shape),p=(0,s.broadcastTo)(c,d),h=(0,s.broadcastTo)(l,d),f=(0,s.broadcastTo)(u,d);return(0,r.ENGINE).runKernel(n.Select,{condition:p,t:h,e:f})}})}),R("67T3W",function(e,t){c(e.exports,"dot",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("aUFou"),s=A("jqSCG"),i=A("4sqA7");let o=/* @__PURE__ */(0,s.op)({dot_:/**
 * Computes the dot product of two matrices and/or vectors, `t1` and `t2`.
 *
 * ```js
 * const a = tf.tensor1d([1, 2]);
 * const b = tf.tensor2d([[1, 2], [3, 4]]);
 * const c = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);
 *
 * a.dot(b).print();  // or tf.dot(a, b)
 * b.dot(a).print();
 * b.dot(c).print();
 * ```
 * @param t1 The first tensor in the dot operation.
 * @param t2 The second tensor in the dot operation.
 *
 * @doc {heading: 'Operations', subheading: 'Matrices'}
 */function(e,t){let s=(0,r.convertToTensor)(e,"t1","dot"),o=(0,r.convertToTensor)(t,"t2","dot");n.assert((1===s.rank||2===s.rank)&&(1===o.rank||2===o.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${s.rank} and ${o.rank}.`);let l=1===s.rank?s.size:s.shape[1],u=1===o.rank?o.size:o.shape[0];if(n.assert(l===u,()=>`Error in dot: inner dimensions of inputs must match, but got ${l} and ${u}.`),1===s.rank&&1===o.rank){let e=(0,i.reshape)(s,[1,-1]),t=(0,i.reshape)(o,[-1,1]),r=(0,a.matMul)(e,t);return(0,i.reshape)(r,[])}if(1===s.rank&&2===o.rank){let e=(0,i.reshape)(s,[1,-1]),t=(0,i.reshape)(o,[o.shape[0],o.shape[1]]),r=(0,a.matMul)(e,t);return(0,i.reshape)(r,[r.size])}if(2===s.rank&&1===o.rank){let e=(0,i.reshape)(o,[-1,1]),t=(0,a.matMul)(s,e);return(0,i.reshape)(t,[t.size])}{let e=(0,i.reshape)(o,[o.shape[0],o.shape[1]]),t=(0,a.matMul)(s,e);return t}}})}),R("1mzpU",function(e,t){c(e.exports,"einsum",()=>i);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({einsum_:function(e,...t){let s=t.map((e,t)=>(0,a.convertToTensor)(e,`tensors${t}`,"einsum"));return(0,r.ENGINE).runKernel(n.Einsum,s,{equation:e})}})}),R("7UQTl",function(e,t){c(e.exports,"elu",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({elu_:/**
 * Computes exponential linear element-wise: `x > 0 ? x : (e ^ x) - 1`.
 *
 * ```js
 * const x = tf.tensor1d([-1, 1, -3, 2]);
 *
 * x.elu().print();  // or tf.elu(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","elu","float32");return(0,r.ENGINE).runKernel(n.Elu,{x:t})}})}),R("8jXAt",function(e,t){c(e.exports,"ensureShape",()=>s);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("jqSCG");let s=/* @__PURE__ */(0,a.op)({ensureShape_:/**
 * Checks the input tensor mathes the given shape.
 *
 * Given an input tensor, returns a new tensor with the same values as the
 * input tensor with shape `shape`.
 *
 * The method supports the null value in tensor. It will still check the shapes,
 * and null is a placeholder.
 *
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3, 4]);
 * const y = tf.tensor1d([1, null, 3, 4]);
 * const z = tf.tensor2d([1, 2, 3, 4], [2,2]);
 * tf.ensureShape(x, [4]).print();
 * tf.ensureShape(y, [4]).print();
 * tf.ensureShape(z, [null, 2]).print();
 * ```
 *
 * @param x The input tensor to be ensured.
 * @param shape A TensorShape representing the shape of this tensor, an array
 *     or null.
 *
 * @doc {heading: 'Tensors', subheading: 'Transformations'}
 */function(e,t){let a=(0,r.convertToTensor)(e,"x","ensureShape","string_or_numeric");if(!(0,n.arraysEqualWithNull)(a.shape,t))throw Error(`EnsureShape: Shape of tensor ${a.shape} is not compatible with expected shape ${t}`);return e}})}),R("3q8h0",function(e,t){c(e.exports,"erf",()=>l);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("inFmq"),o=A("jqSCG");let l=/* @__PURE__ */(0,o.op)({erf_:/**
 * Computes Gauss error function of the input `tf.Tensor` element-wise:
 * `erf(x)`
 *
 * ```js
 * const x = tf.tensor1d([0, .1, -.1, .7]);
 *
 * x.erf().print(); // or tf.erf(x);
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","erf");s.assert("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=(0,i.cast)(t,"float32"));let o={x:t};return(0,r.ENGINE).runKernel(n.Erf,o)}})}),R("4PmMp",function(e,t){c(e.exports,"euclideanNorm",()=>a);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("7k6dx"),n=A("jqSCG");let a=/* @__PURE__ */(0,n.op)({euclideanNorm_:/**
 * Computes the Euclidean norm of scalar, vectors, and matrices.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3, 4]);
 *
 * x.euclideanNorm().print();  // or tf.euclideanNorm(x)
 * ```
 *
 * @param x The input array.
 * @param axis Optional. If axis is null (the default), the input is
 * considered a vector and a single vector norm is computed over the entire
 * set of values in the Tensor, i.e. euclideanNorm(x) is equivalent
 * to euclideanNorm(x.reshape([-1])). If axis is an integer, the input
 * is considered a batch of vectors, and axis determines the axis in x
 * over which to compute vector norms. If axis is a 2-tuple of integer it is
 * considered a batch of matrices and axis determines the axes in NDArray
 * over which to compute a matrix norm.
 * @param keepDims Optional. If true, the norm has the same dimensionality
 * as the input.
 *
 * @doc {heading: 'Operations', subheading: 'Matrices'}
 */function(e,t=null,n=!1){return(0,r.norm)(e,"euclidean",t,n)}})}),R("7k6dx",function(e,t){c(e.exports,"norm",()=>g);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("7j49I"),s=A("kTunp"),i=A("05cMR"),o=A("fySTI"),l=A("jqSCG"),u=A("ad1of"),d=A("4sqA7"),p=A("3xp7o"),h=A("iAb3z"),f=A("iDd8d"),m=A("9NgTx");let g=/* @__PURE__ */(0,l.op)({norm_:/**
 * Computes the norm of scalar, vectors, and matrices.
 * This function can compute several different vector norms (the 1-norm, the
 * Euclidean or 2-norm, the inf-norm, and in general the p-norm for p > 0)
 * and matrix norms (Frobenius, 1-norm, and inf-norm).
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3, 4]);
 *
 * x.norm().print();  // or tf.norm(x)
 * ```
 *
 * @param x The input array.
 * @param ord Optional. Order of the norm. Supported norm types are
 * following:
 *
 *  | ord        | norm for matrices         | norm for vectors
 *  |------------|---------------------------|---------------------
 *  |'euclidean' |Frobenius norm             |2-norm
 *  |'fro'       |Frobenius norm	           |
 *  |Infinity    |max(sum(abs(x), axis=1))   |max(abs(x))
 *  |-Infinity   |min(sum(abs(x), axis=1))   |min(abs(x))
 *  |1           |max(sum(abs(x), axis=0))   |sum(abs(x))
 *  |2           |                           |sum(abs(x)^2)^(1/2)
 *
 * @param axis Optional. If axis is null (the default), the input is
 * considered a vector and a single vector norm is computed over the entire
 * set of values in the Tensor, i.e. norm(x, ord) is equivalent
 * to norm(x.reshape([-1]), ord). If axis is an integer, the input
 * is considered a batch of vectors, and axis determines the axis in x
 * over which to compute vector norms. If axis is a 2-tuple of integer it is
 * considered a batch of matrices and axis determines the axes in NDArray
 * over which to compute a matrix norm.
 * @param keepDims Optional. If true, the norm has the same dimensionality
 * as the input.
 *
 * @doc {heading: 'Operations', subheading: 'Matrices'}
 */function(e,t="euclidean",l=null,c=!1){e=(0,r.convertToTensor)(e,"x","norm");let g=function e(t,r,n=null){if(0===t.rank)return(0,a.abs)(t);// consider vector when no axis is specified
if(1!==t.rank&&null===n)return e((0,d.reshape)(t,[-1]),r,n);// vector
if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===r)return(0,m.sum)((0,a.abs)(t),n);if(r===1/0)return(0,i.max)((0,a.abs)(t),n);if(r===-1/0)return(0,o.min)((0,a.abs)(t),n);if("euclidean"===r||2===r)return(0,h.sqrt)((0,m.sum)((0,u.pow)((0,a.abs)(t),(0,p.scalar)(2,"int32")),n));throw Error(`Error in norm: invalid ord value: ${r}`)}// matrix (assumption axis[0] < axis[1])
if(Array.isArray(n)&&2===n.length){if(1===r)return(0,i.max)((0,m.sum)((0,a.abs)(t),n[0]),n[1]-1);if(r===1/0)return(0,i.max)((0,m.sum)((0,a.abs)(t),n[1]),n[0]);if(r===-1/0)return(0,o.min)((0,m.sum)((0,a.abs)(t),n[1]),n[0]);if("fro"===r||"euclidean"===r)return(0,h.sqrt)((0,m.sum)((0,f.square)(t),n));throw Error(`Error in norm: invalid ord value: ${r}`)}throw Error(`Error in norm: invalid axis: ${n}`)}(e,t,l),y=g.shape;if(c){let t=(0,n.parseAxisParam)(l,e.shape);y=s.expandShapeToKeepDim(g.shape,t)}return(0,d.reshape)(g,y)}})}),R("kTunp",function(e,t){c(e.exports,"axesAreInnerMostDims",()=>n),c(e.exports,"combineLocations",()=>a),c(e.exports,"computeOutAndReduceShapes",()=>s),c(e.exports,"expandShapeToKeepDim",()=>i),c(e.exports,"assertAxesAreInnerMostDims",()=>o),c(e.exports,"getAxesPermutation",()=>l),c(e.exports,"getUndoAxesPermutation",()=>u),c(e.exports,"getInnerMostAxes",()=>d);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2");function n(e,t){for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0}function a(e,t,r){let n=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<n;o++)-1===r.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function s(e,t){let r=[],n=e.length;for(let a=0;a<n;a++)-1===t.indexOf(a)&&r.push(e[a]);let a=t.map(t=>e[t]);return[r,a]}function i(e,t){let r=t.map(e=>1);return a(e,r,t)}function o(e,t,a){r.assert(n(t,a),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${a} input.`)}function l(e,t){if(n(e,t))return null;let r=[];for(let n=0;n<t;++n)-1===e.indexOf(n)&&r.push(n);return e.forEach(e=>r.push(e)),r}function u(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function d(e,t){let r=[];for(let n=t-e;n<t;++n)r.push(n);return r}}),R("05cMR",function(e,t){c(e.exports,"max",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({max_:/**
 * Computes the maximum of elements across dimensions of a `tf.Tensor`.
 *
 * Reduces the input along the dimensions given in `axes`. Unless `keepDims`
 * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in
 * `axes`. If `keepDims` is true, the reduced dimensions are retained with
 * length 1. If `axes` has no entries, all dimensions are reduced, and a
 * `tf.Tensor` with a single element is returned.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3]);
 *
 * x.max().print();  // or tf.max(x)
 * ```
 *
 * ```js
 * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);
 *
 * const axis = 1;
 * x.max(axis).print();  // or tf.max(x, axis)
 * ```
 *
 * @param x The input tensor.
 * @param axis The dimension(s) to reduce. By default it reduces
 *     all dimensions.
 * @param keepDims If true, retains reduced dimensions with size 1.
 *
 * @doc {heading: 'Operations', subheading: 'Reduction'}
 */function(e,t=null,s=!1){let i=(0,a.convertToTensor)(e,"x","max");return(0,r.ENGINE).runKernel(n.Max,{x:i},{reductionIndices:t,keepDims:s})}})}),R("fySTI",function(e,t){c(e.exports,"min",()=>i);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({min_:/**
 * Computes the minimum value from the input.
 *
 * Reduces the input along the dimensions given in `axes`. Unless `keepDims`
 * is true, the rank of the array is reduced by 1 for each entry in `axes`.
 * If `keepDims` is true, the reduced dimensions are retained with length 1.
 * If `axes` has no entries, all dimensions are reduced, and an array with a
 * single element is returned.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3]);
 *
 * x.min().print();  // or tf.min(x)
 * ```
 *
 * ```js
 * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);
 *
 * const axis = 1;
 * x.min(axis).print();  // or tf.min(x, axis)
 * ```
 *
 * @param x The input Tensor.
 * @param axis The dimension(s) to reduce. By default it reduces
 *     all dimensions.
 * @param keepDims If true, retains reduced dimensions with size 1.
 *
 * @doc {heading: 'Operations', subheading: 'Reduction'}
 */function(e,t=null,s=!1){let i=(0,a.convertToTensor)(e,"x","min");// tslint:disable-next-line: no-unnecessary-type-assertion
return(0,r.ENGINE).runKernel(n.Min,{x:i},{axis:t,keepDims:s})}})}),R("9NgTx",function(e,t){c(e.exports,"sum",()=>o);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("inFmq"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({sum_:/**
 * Computes the sum of elements across dimensions of a `tf.Tensor`.
 *
 * Reduces the input along the dimensions given in `axes`. Unless `keepDims`
 * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in
 * `axes`. If `keepDims` is true, the reduced dimensions are retained with
 * length 1. If axes has no entries, all dimensions are reduced, and a
 * `tf.Tensor` with a single element is returned.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3]);
 *
 * x.sum().print();  // or tf.sum(x)
 * ```
 *
 * ```js
 * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);
 *
 * const axis = 1;
 * x.sum(axis).print();  // or tf.sum(x, axis)
 * ```
 *
 * @param x The input tensor to compute the sum over. If the dtype is `bool`
 *   it will be converted to `int32` and the output dtype will be `int32`.
 * @param axis The dimension(s) to reduce. By default it reduces
 *     all dimensions.
 * @param keepDims If true, retains reduced dimensions with size 1.
 *
 * @doc {heading: 'Operations', subheading: 'Reduction'}
 */function(e,t=null,i=!1){let o=(0,a.convertToTensor)(e,"x","sum");"bool"===o.dtype&&(o=(0,s.cast)(o,"int32"));let l={x:o};return(0,r.ENGINE).runKernel(n.Sum,l,{axis:t,keepDims:i})}})}),R("2PcQK",function(e,t){c(e.exports,"exp",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({exp_:/**
 * Computes exponential of the input `tf.Tensor` element-wise. `e ^ x`
 *
 * ```js
 * const x = tf.tensor1d([1, 2, -3]);
 *
 * x.exp().print();  // or tf.exp(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","exp");return(0,r.ENGINE).runKernel(n.Exp,{x:t})}})}),R("iPDWZ",function(e,t){c(e.exports,"expandDims",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({expandDims_:/**
 * Returns a `tf.Tensor` that has expanded rank, by inserting a dimension
 * into the tensor's shape.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3, 4]);
 * const axis = 1;
 * x.expandDims(axis).print();
 * ```
 *
 * @param x The input tensor whose dimensions are to be expanded.
 * @param axis The dimension index at which to insert shape of `1`. Defaults
 *     to 0 (the first dimension).
 *
 * @doc {heading: 'Tensors', subheading: 'Transformations'}
 */function(e,t=0){let i=(0,a.convertToTensor)(e,"x","expandDims","string_or_numeric");return s.assert(t<=i.rank,()=>"Axis must be <= rank of the tensor"),(0,r.ENGINE).runKernel(n.ExpandDims,{input:i},{dim:t})}})}),R("cUuFo",function(e,t){c(e.exports,"expm1",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({expm1_:/**
 * Computes exponential of the input `tf.Tensor` minus one element-wise.
 * `e ^ x - 1`
 *
 * ```js
 * const x = tf.tensor1d([1, 2, -3]);
 *
 * x.expm1().print();  // or tf.expm1(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","expm1");return(0,r.ENGINE).runKernel(n.Expm1,{x:t})}})}),R("9gIZb",function(e,t){c(e.exports,"eye",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("iG87S"),n=A("iPDWZ"),a=A("jqSCG"),s=A("4sqA7"),i=A("61ay4");let o=/* @__PURE__ */(0,a.op)({eye_:/**
 * Create an identity matrix.
 *
 * @param numRows Number of rows.
 * @param numColumns Number of columns. Defaults to `numRows`.
 * @param batchShape If provided, will add the batch shape to the beginning
 *   of the shape of the returned `tf.Tensor` by repeating the identity
 *   matrix.
 * @param dtype Data type.
 * @returns Identity matrix of the specified size and data type, possibly
 *   with batch repetition if `batchShape` is specified.
 *
 * @doc {heading: 'Tensors', subheading: 'Creation'}
 */function(e,t,a,o="float32"){null==t&&(t=e);let l=(0,r.buffer)([e,t],o),u=e<=t?e:t;for(let e=0;e<u;++e)l.set(1,e,e);let c=(0,s.reshape)(l.toTensor(),[e,t]);if(null==a)return c;if(1===a.length)return(0,i.tile)((0,n.expandDims)(c,0),[a[0],1,1]);if(2===a.length)return(0,i.tile)((0,n.expandDims)((0,n.expandDims)(c,0),0),[a[0],a[1],1,1]);if(3===a.length)return(0,i.tile)((0,n.expandDims)((0,n.expandDims)((0,n.expandDims)(c,0),0),0),[a[0],a[1],a[2],1,1]);throw Error(// tslint:disable-next-line:no-any
`eye() currently supports only 1D and 2D batchShapes, but received ${a.length}D.`)}})}),R("61ay4",function(e,t){c(e.exports,"tile",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({tile_:/**
 * Construct a tensor by repeating it the number of times given by reps.
 *
 * This operation creates a new tensor by replicating `input` `reps`
 * times. The output tensor's `i`th dimension has `input.shape[i] *
 * reps[i]` elements, and the values of `input` are replicated
 * `reps[i]` times along the `i`th dimension. For example, tiling
 * `[a, b, c, d]` by `[2]` produces `[a, b, c, d, a, b, c, d]`.
 *
 * ```js
 * const a = tf.tensor1d([1, 2]);
 *
 * a.tile([2]).print();    // or tf.tile(a, [2])
 * ```
 *
 * ```js
 * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);
 *
 * a.tile([1, 2]).print();  // or tf.tile(a, [1,2])
 * ```
 * @param x The tensor to tile.
 * @param reps Determines the number of replications per dimension.
 *
 * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}
 */function(e,t){let i=(0,a.convertToTensor)(e,"x","tile","string_or_numeric");return s.assert(i.rank===t.length,()=>`Error in transpose: rank of input ${i.rank} must match length of reps ${t}.`),(0,r.ENGINE).runKernel(n.Tile,{x:i},{reps:t})}})}),R("4ZUCz",function(e,t){c(e.exports,"floor",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({floor_:/**
 * Computes floor of input `tf.Tensor` element-wise: `floor(x)`.
 *
 * ```js
 * const x = tf.tensor1d([.6, 1.1, -3.3]);
 *
 * x.floor().print();  // or tf.floor(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","floor","float32");return(0,r.ENGINE).runKernel(n.Floor,{x:t})}})}),R("3qUjU",function(e,t){c(e.exports,"gather",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({gather_:/**
 * Gather slices from tensor `x`'s axis `axis` according to `indices`.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3, 4]);
 * const indices = tf.tensor1d([1, 3, 3], 'int32');
 *
 * x.gather(indices).print();
 * ```
 *
 * ```js
 * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);
 * const indices = tf.tensor1d([1, 1, 0], 'int32');
 *
 * x.gather(indices).print();
 * ```
 * @param x The input tensor whose slices are to be gathered.
 * @param indices The indices of the values to extract.
 * @param axis The axis over which to select values. Defaults to 0.
 * @param batchDims Optional. The number of batch dimensions. It must be less
 *     than or equal to rank(indices). Defaults to 0.
 *     The output tensor will have shape of
 *     `x.shape[:axis] + indices.shape[batchDims:] + x.shape[axis + 1:]`
 *
 * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}
 */function(e,t,s=0,i=0){let o=(0,a.convertToTensor)(e,"x","gather"),l=(0,a.convertToTensor)(t,"indices","gather","int32");return(0,r.ENGINE).runKernel(n.GatherV2,{x:o,indices:l},{axis:s,batchDims:i})}})}),R("bRRKf",function(e,t){c(e.exports,"greater",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("8BaGO"),o=A("jqSCG");let l=/* @__PURE__ */(0,o.op)({greater_:/**
 * Returns the truth value of (a > b) element-wise. Supports broadcasting.
 *
 * ```js
 * const a = tf.tensor1d([1, 2, 3]);
 * const b = tf.tensor1d([2, 2, 2]);
 *
 * a.greater(b).print();
 * ```
 *
 * @param a The first input tensor.
 * @param b The second input tensor. Must have the same dtype as `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Logical'}
 */function(e,t){let o=(0,s.convertToTensor)(e,"a","greater","string_or_numeric"),l=(0,s.convertToTensor)(t,"b","greater","string_or_numeric");[o,l]=(0,a.makeTypesMatch)(o,l),(0,i.assertAndGetBroadcastShape)(o.shape,l.shape);let u={a:o,b:l};return(0,r.ENGINE).runKernel(n.Greater,u)}})}),R("l0Zxl",function(e,t){c(e.exports,"greaterEqual",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("8BaGO"),o=A("jqSCG");let l=/* @__PURE__ */(0,o.op)({greaterEqual_:/**
 * Returns the truth value of (a >= b) element-wise. Supports broadcasting.
 *
 * ```js
 * const a = tf.tensor1d([1, 2, 3]);
 * const b = tf.tensor1d([2, 2, 2]);
 *
 * a.greaterEqual(b).print();
 * ```
 *
 * @param a The first input tensor.
 * @param b The second input tensor. Must have the same dtype as `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Logical'}
 */function(e,t){let o=(0,s.convertToTensor)(e,"a","greaterEqual","string_or_numeric"),l=(0,s.convertToTensor)(t,"b","greaterEqual","string_or_numeric");[o,l]=(0,a.makeTypesMatch)(o,l),(0,i.assertAndGetBroadcastShape)(o.shape,l.shape);let u={a:o,b:l};return(0,r.ENGINE).runKernel(n.GreaterEqual,u)}})}),R("eaZNC",function(e,t){c(e.exports,"isFinite",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({isFinite_:/**
 * Returns which elements of x are finite.
 *
 * ```js
 * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);
 *
 * x.isFinite().print();  // or tf.isNaN(x)
 * ```
 * @param x The input Tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","isFinite");return(0,r.ENGINE).runKernel(n.IsFinite,{x:t})}})}),R("ahjR1",function(e,t){c(e.exports,"isInf",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({isInf_:/**
 * Returns which elements of x are Infinity or -Infinity.
 *
 * ```js
 * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);
 *
 * x.isInf().print();  // or tf.isNaN(x)
 * ```
 * @param x The input Tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","isInf");return(0,r.ENGINE).runKernel(n.IsInf,{x:t})}})}),R("5FmUe",function(e,t){c(e.exports,"isNaN",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({isNaN_:/**
 * Returns which elements of x are NaN.
 *
 * ```js
 * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);
 *
 * x.isNaN().print();  // or tf.isNaN(x)
 * ```
 * @param x The input Tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","isNaN");return(0,r.ENGINE).runKernel(n.IsNan,{x:t})}})}),R("3XskU",function(e,t){c(e.exports,"leakyRelu",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({leakyRelu_:/**
 * Computes leaky rectified linear element-wise.
 *
 * See
 * [http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf](
 *     http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf)
 *
 * ```js
 * const x = tf.tensor1d([-1, 2, -3, 4]);
 *
 * x.leakyRelu(0.1).print();  // or tf.leakyRelu(x, 0.1)
 * ```
 * @param x The input tensor.
 * @param alpha The scaling factor for negative values, defaults to 0.2.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e,t=.2){let s=(0,a.convertToTensor)(e,"x","leakyRelu");return(0,r.ENGINE).runKernel(n.LeakyRelu,{x:s},{alpha:t})}})}),R("jTDVJ",function(e,t){c(e.exports,"less",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("8BaGO"),o=A("jqSCG");let l=/* @__PURE__ */(0,o.op)({less_:/**
 * Returns the truth value of (a < b) element-wise. Supports broadcasting.
 *
 * ```js
 * const a = tf.tensor1d([1, 2, 3]);
 * const b = tf.tensor1d([2, 2, 2]);
 *
 * a.less(b).print();
 * ```
 * @param a The first input tensor.
 * @param b The second input tensor. Must have the same dtype as `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Logical'}
 */function(e,t){let o=(0,s.convertToTensor)(e,"a","less","string_or_numeric"),l=(0,s.convertToTensor)(t,"b","less","string_or_numeric");[o,l]=(0,a.makeTypesMatch)(o,l),(0,i.assertAndGetBroadcastShape)(o.shape,l.shape);let u={a:o,b:l};return(0,r.ENGINE).runKernel(n.Less,u)}})}),R("7LQ38",function(e,t){c(e.exports,"lessEqual",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("8BaGO"),o=A("jqSCG");let l=/* @__PURE__ */(0,o.op)({lessEqual_:/**
 * Returns the truth value of (a <= b) element-wise. Supports broadcasting.
 *
 * ```js
 * const a = tf.tensor1d([1, 2, 3]);
 * const b = tf.tensor1d([2, 2, 2]);
 *
 * a.lessEqual(b).print();
 * ```
 *
 * @param a The first input tensor.
 * @param b The second input tensor. Must have the same dtype as `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Logical'}
 */function(e,t){let o=(0,s.convertToTensor)(e,"a","lessEqual","string_or_numeric"),l=(0,s.convertToTensor)(t,"b","lessEqual","string_or_numeric");[o,l]=(0,a.makeTypesMatch)(o,l),(0,i.assertAndGetBroadcastShape)(o.shape,l.shape);let u={a:o,b:l};return(0,r.ENGINE).runKernel(n.LessEqual,u)}})}),R("9ntOC",function(e,t){c(e.exports,"linspace",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418");function a(e,t,a){if(a<=0)throw Error("The number of values should be positive.");return(0,r.ENGINE).runKernel(n.LinSpace,{},{start:e,stop:t,num:a})}}),R("k8D3u",function(e,t){c(e.exports,"localResponseNormalization",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG"),o=A("4sqA7");let l=/* @__PURE__ */(0,i.op)({localResponseNormalization_:/**
 * Normalizes the activation of a local neighborhood across or within
 * channels.
 *
 * @param x The input tensor. The 4-D input tensor is treated as a 3-D array
 *     of 1D vectors (along the last dimension), and each vector is
 *     normalized independently.
 * @param depthRadius The number of adjacent channels in the 1D normalization
 *     window.
 * @param bias A constant bias term for the basis.
 * @param alpha A scale factor, usually positive.
 * @param beta An exponent.
 *
 * @doc {heading: 'Operations', subheading: 'Normalization'}
 */function(e,t=5,i=1,l=1,u=.5){let c=(0,a.convertToTensor)(e,"x","localResponseNormalization");s.assert(4===c.rank||3===c.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${c.rank}.`),s.assert(s.isInt(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let d=c,p=!1;3===c.rank&&(p=!0,d=(0,o.reshape)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));let h={x:d},f=(0,r.ENGINE).runKernel(n.LRN,h,{depthRadius:t,bias:i,alpha:l,beta:u});return p?(0,o.reshape)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})}),R("dcoCo",function(e,t){c(e.exports,"log",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({log_:/**
 * Computes natural logarithm of the input `tf.Tensor` element-wise: `ln(x)`
 *
 * ```js
 * const x = tf.tensor1d([1, 2, Math.E]);
 *
 * x.log().print();  // or tf.log(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","log","float32");return(0,r.ENGINE).runKernel(n.Log,{x:t})}})}),R("5QUXI",function(e,t){c(e.exports,"log1p",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({log1p_:/**
 * Computes natural logarithm of the input `tf.Tensor` plus one
 * element-wise: `ln(1 + x)`
 *
 * ```js
 * const x = tf.tensor1d([1, 2, Math.E - 1]);
 *
 * x.log1p().print();  // or tf.log1p(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","log1p");return(0,r.ENGINE).runKernel(n.Log1p,{x:t})}})}),R("7hYeW",function(e,t){c(e.exports,"logSigmoid",()=>u);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("92fpA"),n=A("5xBLk"),a=A("jZc0w"),s=A("15cGp"),i=A("jqSCG"),o=A("jvtSq"),l=A("4Udpd");let u=/* @__PURE__ */(0,i.op)({logSigmoid_:/**
 * Computes log sigmoid of the input `tf.Tensor` element-wise:
 * `logSigmoid(x)`. For numerical stability, we use `-tf.softplus(-x)`.
 *
 * ```js
 * const x = tf.tensor1d([0, 1, -1, .7]);
 *
 * x.logSigmoid().print();  // or tf.logSigmoid(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,n.convertToTensor)(e,"x","logSigmoid"),i=(0,r.customGrad)(e=>{// TODO(yassogba) we can remove the chained softplus call here only
// after backends have modualrized softplus at which point we can call
// engine runKernel(..., Sotfplus, ...) directly.
let t=(0,s.neg)((0,l.softplus)((0,s.neg)(e)));return{value:t,gradFunc:t=>{let r=(0,a.mul)(t,(0,o.sigmoid)((0,s.neg)(e)));return r}}});return i(t)}})}),R("4Udpd",function(e,t){c(e.exports,"softplus",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({softplus_:/**
 * Computes softplus of the input `tf.Tensor` element-wise: `log(exp(x) + 1)`
 *
 * ```js
 * const x = tf.tensor1d([0, 1, -1, .7]);
 *
 * x.softplus().print();  // or tf.softplus(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","softplus");return(0,r.ENGINE).runKernel(n.Softplus,{x:t})}})}),R("2NPdY",function(e,t){c(e.exports,"logSoftmax",()=>h);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("92fpA"),n=A("5xBLk"),a=A("inFmq"),s=A("2PcQK"),i=A("dcoCo"),o=A("05cMR"),l=A("jZc0w"),u=A("jqSCG"),d=A("7kouu"),p=A("9NgTx");let h=/* @__PURE__ */(0,u.op)({logSoftmax_:/**
 * Computes the log softmax.
 *
 * ```js
 * const a = tf.tensor1d([1, 2, 3]);
 *
 * a.logSoftmax().print();  // or tf.logSoftmax(a)
 * ```
 *
 * ```js
 * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);
 *
 * a.logSoftmax().print();  // or tf.logSoftmax(a)
 * ```
 *
 * @param logits The logits array.
 * @param axis The dimension softmax would be performed on. Defaults to `-1`
 *     which indicates the last dimension.
 *
 * @doc {heading: 'Operations', subheading: 'Normalization'}
 */function(e,t=-1){let u=(0,n.convertToTensor)(e,"logits","logSoftmax");if(-1===t&&(t=u.rank-1),t!==u.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${u.rank} and axis was ${t}`);// const forward: ForwardFunc<Tensor> = (backend, save) => {
//   const keepDims = true;
//   const xMax = max(logits, axis, true);
//   const shifted = sub(logits, xMax);
//   const value =
//       sub(cast(shifted, 'float32'), log(sum(exp(shifted), axis,
//       keepDims)));
//   save([value]);
//   return value;
// };
// Use a custom gradient for numerical stability.
let c=(0,r.customGrad)((e,r)=>{let n=(0,o.max)(e,t,!0),u=(0,d.sub)(e,n),c=(0,d.sub)((0,a.cast)(u,"float32"),(0,i.log)((0,p.sum)((0,s.exp)(u),t,!0)));return r([c]),{value:c,gradFunc:(e,r)=>{let[n]=r,a=(0,s.exp)(n);return(0,d.sub)(e,(0,l.mul)((0,p.sum)(e,t,!0),a))}}});return c(u);// TODO Use Engine.runKernel when CPU/WebGL/WASM backends implement this.
// const inputs: LogSoftmaxInputs = {logits: $logits};
// const attrs: LogSoftmaxAttrs = {axis};
// return ENGINE.runKernel(
//            LogSoftmax, inputs as unknown as NamedTensorMap,
//            attrs as unknown as NamedAttrMap);
}})}),R("9dGIC",function(e,t){c(e.exports,"logSumExp",()=>f);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("hgacW"),s=A("kTunp"),i=A("2PcQK"),o=A("dcoCo"),l=A("05cMR"),u=A("jqSCG"),d=A("4sqA7"),p=A("7kouu"),h=A("9NgTx");let f=/* @__PURE__ */(0,u.op)({logSumExp_:/**
 * Computes the log(sum(exp(elements across the reduction dimensions))).
 *
 * Reduces the input along the dimensions given in `axis`. Unless `keepDims`
 * is true, the rank of the array is reduced by 1 for each entry in `axis`.
 * If `keepDims` is true, the reduced dimensions are retained with length 1.
 * If `axis` has no entries, all dimensions are reduced, and an array with a
 * single element is returned.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3]);
 *
 * x.logSumExp().print();  // or tf.logSumExp(x)
 * ```
 *
 * ```js
 * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);
 *
 * const axis = 1;
 * x.logSumExp(axis).print();  // or tf.logSumExp(a, axis)
 * ```
 * @param x The input tensor.
 * @param axis The dimension(s) to reduce. If null (the default),
 *     reduces all dimensions.
 * @param keepDims If true, retains reduced dimensions with length
 *     of 1. Defaults to false.
 *
 * @doc {heading: 'Operations', subheading: 'Reduction'}
 */function(e,t=null,u=!1){let c=(0,r.convertToTensor)(e,"x","logSumExp"),f=(0,n.parseAxisParam)(t,c.shape),m=(0,l.max)(c,f,!0),g=(0,p.sub)(c,m),y=(0,i.exp)(g),b=(0,h.sum)(y,f),v=(0,o.log)(b),x=(0,a.add)((0,d.reshape)(m,v.shape),v);if(u){let e=(0,s.expandShapeToKeepDim)(x.shape,f);return(0,d.reshape)(x,e)}return x}})}),R("kg1Wp",function(e,t){c(e.exports,"logicalAnd",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8BaGO"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({logicalAnd_:/**
 * Returns the truth value of `a AND b` element-wise. Supports broadcasting.
 *
 * ```js
 * const a = tf.tensor1d([false, false, true, true], 'bool');
 * const b = tf.tensor1d([false, true, false, true], 'bool');
 *
 * a.logicalAnd(b).print();
 * ```
 *
 * @param a The first input tensor. Must be of dtype bool.
 * @param b The second input tensor. Must be of dtype bool.
 *
 * @doc {heading: 'Operations', subheading: 'Logical'}
 */function(e,t){let i=(0,a.convertToTensor)(e,"a","logicalAnd","bool"),o=(0,a.convertToTensor)(t,"b","logicalAnd","bool");return(0,s.assertAndGetBroadcastShape)(i.shape,o.shape),(0,r.ENGINE).runKernel(n.LogicalAnd,{a:i,b:o})}})}),R("7NVSX",function(e,t){c(e.exports,"logicalNot",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({logicalNot_:/**
 * Returns the truth value of `NOT x` element-wise.
 *
 * ```js
 * const a = tf.tensor1d([false, true], 'bool');
 *
 * a.logicalNot().print();
 * ```
 *
 * @param x The input tensor. Must be of dtype 'bool'.
 *
 * @doc {heading: 'Operations', subheading: 'Logical'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","logicalNot","bool");return(0,r.ENGINE).runKernel(n.LogicalNot,{x:t})}})}),R("iok2K",function(e,t){c(e.exports,"logicalOr",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8BaGO"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({logicalOr_:/**
 * Returns the truth value of `a OR b` element-wise. Supports broadcasting.
 *
 * ```js
 * const a = tf.tensor1d([false, false, true, true], 'bool');
 * const b = tf.tensor1d([false, true, false, true], 'bool');
 *
 * a.logicalOr(b).print();
 * ```
 * @param a The first input tensor. Must be of dtype bool.
 * @param b The second input tensor. Must be of dtype bool.
 *
 * @doc {heading: 'Operations', subheading: 'Logical'}
 */function(e,t){let i=(0,a.convertToTensor)(e,"a","logicalOr","bool"),o=(0,a.convertToTensor)(t,"b","logicalOr","bool");return(0,s.assertAndGetBroadcastShape)(i.shape,o.shape),(0,r.ENGINE).runKernel(n.LogicalOr,{a:i,b:o})}})}),R("iIobM",function(e,t){c(e.exports,"logicalXor",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8BaGO"),a=A("kg1Wp"),s=A("7NVSX"),i=A("iok2K"),o=A("jqSCG");let l=/* @__PURE__ */(0,o.op)({logicalXor_:/**
 * Returns the truth value of `a XOR b` element-wise. Supports broadcasting.
 *
 * ```js
 * const a = tf.tensor1d([false, false, true, true], 'bool');
 * const b = tf.tensor1d([false, true, false, true], 'bool');
 *
 * a.logicalXor(b).print();
 * ```
 *
 * @param a The first input tensor. Must be of dtype bool.
 * @param b The second input tensor. Must be of dtype bool.
 *
 * @doc {heading: 'Operations', subheading: 'Logical'}
 */function(e,t){let o=(0,r.convertToTensor)(e,"a","logicalXor","bool"),l=(0,r.convertToTensor)(t,"b","logicalXor","bool");// x ^ y = (x | y) & ~(x & y)
return(0,n.assertAndGetBroadcastShape)(o.shape,l.shape),(0,a.logicalAnd)((0,i.logicalOr)(e,t),(0,s.logicalNot)((0,a.logicalAnd)(e,t)))}})}),R("jAFVi",function(e,t){c(e.exports,"lowerBound",()=>n);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("6PrVj");function n(e,t){return(0,r.searchSorted)(e,t,"left")}}),R("6PrVj",function(e,t){c(e.exports,"searchSorted",()=>l);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG"),o=A("4sqA7");let l=/* @__PURE__ */(0,i.op)({searchSorted_:/**
 * Searches for where a value would go in a sorted sequence.
 *
 * This is not a method for checking containment (like javascript in).
 *
 * The typical use case for this operation is "binning", "bucketing", or
 * "discretizing". The values are assigned to bucket-indices based on the edges
 * listed in 'sortedSequence'. This operation returns the bucket-index for each
 * value.
 *
 * The side argument controls which index is returned if a value lands exactly
 * on an edge.
 *
 * The axis is not settable for this operation. It always operates on the
 * innermost dimension (axis=-1). The operation will accept any number of outer
 * dimensions.
 *
 * Note: This operation assumes that 'sortedSequence' is sorted along the
 * innermost axis, maybe using 'sort(..., axis=-1)'. If the sequence is not
 * sorted no error is raised and the content of the returned tensor is not well
 * defined.
 *
 * ```js
 * const edges = tf.tensor1d([-1, 3.3, 9.1, 10.0]);
 * let values = tf.tensor1d([0.0, 4.1, 12.0]);
 * const result1 = tf.searchSorted(edges, values, 'left');
 * result1.print(); // [1, 2, 4]
 *
 * const seq = tf.tensor1d([0, 3, 9, 10, 10]);
 * values = tf.tensor1d([0, 4, 10]);
 * const result2 = tf.searchSorted(seq, values, 'left');
 * result2.print(); // [0, 2, 3]
 * const result3 = tf.searchSorted(seq, values, 'right');
 * result3.print(); // [1, 2, 5]
 *
 * const sortedSequence = tf.tensor2d([[0., 3., 8., 9., 10.],
 *                                     [1., 2., 3., 4., 5.]]);
 * values = tf.tensor2d([[9.8, 2.1, 4.3],
 *                       [0.1, 6.6, 4.5, ]]);
 * const result4 = tf.searchSorted(sortedSequence, values, 'left');
 * result4.print(); // [[4, 1, 2], [0, 5, 4]]
 * ```
 * @param sortedSequence: N-D. Sorted sequence.
 * @param values: N-D. Search values.
 * @param side: 'left'|'right'. Defaults to 'left'. 'left' corresponds to lower
 *     bound and 'right' to upper bound.
 * @return An N-D int32 tensor the size of values containing the result of
 *     applying either lower bound or upper bound (depending on side) to each
 *     value. The result is not a global index to the entire Tensor, but the
 *     index in the last dimension.
 * @doc {heading: 'Operations', subheading: 'Evaluation'}
 */function(e,t,i="left"){let l=(0,a.convertToTensor)(e,"sortedSequence","searchSorted"),u=(0,a.convertToTensor)(t,"values","searchSorted"),c=l.shape[l.shape.length-1],d=u.shape[u.shape.length-1],p=(0,o.reshape)(l,[-1,c]),h=(0,o.reshape)(u,[-1,d]);if(p.rank<2)throw Error("Sorted input argument must be at least 2-dimensional");if(p.shape[0]!==h.shape[0])throw Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,s.sizeFromShape)(h.shape)>=2147483648)throw Error("values tensor size must less than 2147483648");if(p.shape[1]>=2147483648)throw Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${p.shape[1]}`);return(0,r.ENGINE).runKernel(n.SearchSorted,{sortedSequence:p,values:h},{side:i})}})}),R("gscJF",function(e,t){c(e.exports,"maxPool",()=>u);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("frznq"),o=A("jqSCG"),l=A("4sqA7");let u=/* @__PURE__ */(0,o.op)({maxPool_:/**
 * Computes the 2D max pooling of an image.
 *
 * @param x The input tensor, of rank 4 or rank 3 of shape
 *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.
 * @param filterSize The filter size: `[filterHeight, filterWidth]`. If
 *     `filterSize` is a single number, then `filterHeight == filterWidth`.
 * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If
 *     `strides` is a single number, then `strideHeight == strideWidth`.
 * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`
 *     in which we sample input values across the height and width dimensions
 *     in dilated pooling. Defaults to `[1, 1]`. If `dilations` is a single
 *     number, then `dilationHeight == dilationWidth`. If it is greater than
 *     1, then all values of `strides` must be 1.
 * @param pad The type of padding algorithm.
 *    - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *    - `valid`: output will be smaller than input if filter is larger
 *       than 1x1.
 *    - For more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 */function(e,t,o,u,c){let d=(0,a.convertToTensor)(e,"x","maxPool"),p=d,h=!1;3===d.rank&&(h=!0,p=(0,l.reshape)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),s.assert(4===p.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`),s.assert(i.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`),i.checkPadOnDimRoundingMode("maxPool",u,c);let f={x:p},m=(0,r.ENGINE).runKernel(n.MaxPool,f,{filterSize:t,strides:o,pad:u,dimRoundingMode:c});return h?(0,l.reshape)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})}),R("gF4tm",function(e,t){c(e.exports,"maxPool3d",()=>u);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("frznq"),o=A("jqSCG"),l=A("4sqA7");let u=/* @__PURE__ */(0,o.op)({maxPool3d_:/**
 * Computes the 3D max pooling.
 *
 * ```js
 * const x = tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]);
 * const result = tf.maxPool3d(x, 2, 1, 'valid');
 * result.print();
 * ```
 *
 * @param x The input tensor, of rank 5 or rank 4 of shape
 *     `[batch, depth, height, width, inChannels]`.
 * @param filterSize The filter size:
 *     `[filterDepth, filterHeight, filterWidth]`.
 *     If `filterSize` is a single number,
 *     then `filterDepth == filterHeight == filterWidth`.
 * @param strides The strides of the pooling:
 *     `[strideDepth, strideHeight, strideWidth]`.
 *     If `strides` is a single number,
 *     then `strideDepth == strideHeight == strideWidth`.
 * @param pad The type of padding algorithm.
 *    - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *    - `valid`: output will be smaller than input if filter is larger
 *       than 1*1x1.
 *    - For more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 * @param dataFormat An optional string from: "NDHWC", "NCDHW". Defaults to
 *     "NDHWC". Specify the data format of the input and output data. With the
 *     default format "NDHWC", the data is stored in the order of: [batch,
 *     depth, height, width, channels]. Only "NDHWC" is currently supported.
 * @doc {heading: 'Operations', subheading: 'Convolution'}
 */function(e,t=[1,1,1],o,u,c,d="NDHWC"){let p=(0,a.convertToTensor)(e,"x","maxPool3d"),h=p,f=!1;4===p.rank&&(f=!0,h=(0,l.reshape)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),s.assert(5===h.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${h.rank}.`),s.assert("NDHWC"===d,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`),(0,i.checkPadOnDimRoundingMode)("maxPool3d",u,c);let m={x:h},g=(0,r.ENGINE).runKernel(n.MaxPool3D,m,{filterSize:t,strides:o,pad:u,dimRoundingMode:c,dataFormat:d});return f?(0,l.reshape)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})}),R("9K0B1",function(e,t){c(e.exports,"maxPoolWithArgmax",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({maxPoolWithArgmax_:/**
 * Computes the 2D max pooling of an image with Argmax index.
 * The indices in argmax are flattened, so that a maximum value at position `[b,
 * y, x, c]` becomes flattened index: `(y * width + x) * channels + c` if
 * include_batch_in_index is False; `((b * height + y) * width + x) * channels
 * +c` if include_batch_in_index is True.
 *
 * The indices returned are always in `[0, height) x [0, width)` before
 * flattening.
 *
 * @param x The input tensor, of rank 4 or rank 3 of shape
 *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.
 * @param filterSize The filter size: `[filterHeight, filterWidth]`. If
 *     `filterSize` is a single number, then `filterHeight == filterWidth`.
 * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If
 *     `strides` is a single number, then `strideHeight == strideWidth`.
 * @param dataFormat An optional string from: "NDHWC", "NCDHW". Defaults to
 *     "NDHWC". Specify the data format of the input and output data. With the
 *     default format "NDHWC", the data is stored in the order of: [batch,
 *     depth, height, width, channels]. Only "NDHWC" is currently supported.
 * @param pad The type of padding algorithm.
 *    - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *    - `valid`: output will be smaller than input if filter is larger
 *       than 1x1.
 *    - For more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 * @param includeBatchIndex Defaults to False. Whether to include batch
 *    dimension in flattened index of argmax.
 *
 * @doc {heading: 'Operations', subheading: 'Convolution'}
 */function(e,t,s,i,o=!1){let l=(0,a.convertToTensor)(e,"x","maxPoolWithArgmax"),u=(0,r.ENGINE).runKernel(n.MaxPoolWithArgmax,{x:l},{filterSize:t,strides:s,pad:i,includeBatchInIndex:o});return{result:u[0],indexes:u[1]}}})}),R("67GCc",function(e,t){c(e.exports,"mean",()=>i);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({mean_:/**
 * Computes the mean of elements across dimensions of a `tf.Tensor`.
 *
 * Reduces `x` along the dimensions given in `axis`. Unless `keepDims` is
 * true, the rank of the `tf.Tensor` is reduced by 1 for each entry in `axis`.
 * If `keepDims` is true, the reduced dimensions are retained with length 1.
 * If `axis` has no entries, all dimensions are reduced, and a `tf.Tensor` with
 * a single element is returned.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3]);
 *
 * x.mean().print();  // or tf.mean(a)
 * ```
 *
 * ```js
 * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);
 *
 * const axis = 1;
 * x.mean(axis).print();  // or tf.mean(x, axis)
 * ```
 *
 * @param x The input tensor.
 * @param axis The dimension(s) to reduce. By default it reduces
 *     all dimensions.
 * @param keepDims If true, retains reduced dimensions with size 1.
 *
 * @doc {heading: 'Operations', subheading: 'Reduction'}
 */function(e,t=null,s=!1){let i=(0,a.convertToTensor)(e,"x","mean");return(0,r.ENGINE).runKernel(n.Mean,{x:i},{axis:t,keepDims:s})}})}),R("e6A1c",function(e,t){c(e.exports,"meshgrid",()=>l);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("aUFou"),n=A("fOBRA"),a=A("4sqA7"),s=A("9jCh7"),i=A("5xBLk"),o=A("8cCb2");function l(e,t,{indexing:l="xy"}={}){if("xy"!==l&&"ij"!==l)throw TypeError(`${l} is not a valid third argument to meshgrid`);if(void 0===e)return[];let u=(0,i.convertToTensor)(e,"x","meshgrid",e instanceof s.Tensor?e.dtype:"float32");if(void 0===t)return[u];let c=(0,i.convertToTensor)(t,"y","meshgrid",t instanceof s.Tensor?t.dtype:"float32"),d=(0,o.sizeFromShape)(u.shape),p=(0,o.sizeFromShape)(c.shape);return"xy"===l?(u=(0,a.reshape)(u,[1,-1]),c=(0,a.reshape)(c,[-1,1]),[(0,r.matMul)((0,n.ones)([p,1],u.dtype),u),(0,r.matMul)(c,(0,n.ones)([1,d],c.dtype))]):(u=(0,a.reshape)(u,[-1,1]),c=(0,a.reshape)(c,[1,-1]),[(0,r.matMul)(u,(0,n.ones)([1,p],u.dtype)),(0,r.matMul)((0,n.ones)([d,1],c.dtype),c)])}}),R("fOBRA",function(e,t){c(e.exports,"ones",()=>function e(t,i="float32"){if((0,n.assertNonNegativeIntegerDimensions)(t),"complex64"===i){let r=e(t,"float32"),n=(0,s.zeros)(t,"float32");return(0,a.complex)(r,n)}let o=(0,n.makeOnesTypedArray)((0,n.sizeFromShape)(t),i);return(0,r.ENGINE).makeTensor(o,t,i)});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=(A("8cCb2"),A("8cCb2")),a=A("20oDZ"),s=A("hxi4c")}),R("hxi4c",function(e,t){c(e.exports,"zeros",()=>function e(t,s="float32"){if((0,n.assertNonNegativeIntegerDimensions)(t),"complex64"===s){let r=e(t,"float32"),n=e(t,"float32");return(0,a.complex)(r,n)}let i=(0,n.makeZerosTypedArray)((0,n.sizeFromShape)(t),s);return(0,r.ENGINE).makeTensor(i,t,s)});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("8cCb2"),a=A("20oDZ")}),R("6V8xR",function(e,t){c(e.exports,"minimum",()=>u);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("8BaGO"),o=A("inFmq"),l=A("jqSCG");let u=/* @__PURE__ */(0,l.op)({minimum_:/**
 * Returns the min of a and b (`a < b ? a : b`) element-wise.
 * Supports broadcasting.
 *
 * We also expose `minimumStrict` which has the same signature as this op and
 * asserts that `a` and `b` are the same shape (does not broadcast).
 *
 * ```js
 * const a = tf.tensor1d([1, 4, 3, 16]);
 * const b = tf.tensor1d([1, 2, 9, 4]);
 *
 * a.minimum(b).print();  // or tf.minimum(a, b)
 * ```
 *
 * ```js
 * // Broadcast minimum a with b.
 * const a = tf.tensor1d([2, 4, 6, 8]);
 * const b = tf.scalar(5);
 *
 * a.minimum(b).print();  // or tf.minimum(a, b)
 * ```
 *
 * @param a The first tensor.
 * @param b The second tensor. Must have the same type as `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Arithmetic'}
 */function(e,t){let l=(0,s.convertToTensor)(e,"a","minimum"),u=(0,s.convertToTensor)(t,"b","minimum");[l,u]=(0,a.makeTypesMatch)(l,u),"bool"===l.dtype&&(l=(0,o.cast)(l,"int32"),u=(0,o.cast)(u,"int32")),(0,i.assertAndGetBroadcastShape)(l.shape,u.shape);let c={a:l,b:u};return(0,r.ENGINE).runKernel(n.Minimum,c)}})}),R("ejlRR",function(e,t){c(e.exports,"mirrorPad",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({mirrorPad_:/**
 * Pads a `tf.Tensor` using mirror padding.
 *
 * This operation implements the `REFLECT` and `SYMMETRIC` modes of pad.
 *
 * ```js
 * const x = tf.range(0, 9).reshape([1, 1, 3, 3]);
 * x.mirrorPad([[0, 0], [0, 0], [2, 2], [2, 2]], 'reflect').print();
 * ```
 * @param x The tensor to pad.
 * @param paddings An array of length `R` (the rank of the tensor), where
 * each element is a length-2 tuple of ints `[padBefore, padAfter]`,
 * specifying how much to pad along each dimension of the tensor.
 * In "reflect" mode, the padded regions do not include the borders,
 * while in "symmetric" mode the padded regions do include the borders.
 * For example, if the input is `[1, 2, 3]` and paddings is `[0, 2]`,
 * then the output is `[1, 2, 3, 2, 1]` in "reflect" mode, and
 * `[1, 2, 3, 3, 2]` in "symmetric" mode.
 * If `mode` is "reflect" then both `paddings[D, 0]` and `paddings[D, 1]`
 * must be no greater than `x.shape[D] - 1`. If mode is "symmetric"
 * then both `paddings[D, 0]` and `paddings[D, 1]` must be no greater than
 * `x.shape[D]`
 * @param mode String to specify padding mode. Can be `'reflect' | 'symmetric'`
 *//** @doc {heading: 'Tensors', subheading: 'Transformations'} */function(e,t,i){s.assert("reflect"===i||"symmetric"===i,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${i}.`);let o=(0,a.convertToTensor)(e,"x","mirrorPad");if(0===o.rank)throw Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");s.assert(t.length===o.rank,()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`);let l="reflect"===i?1:0;for(let e=0;e<o.rank;e++)s.assert(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),s.assert(t[e][0]>=0&&t[e][0]<=o.shape[e]-l&&t[e][1]>=0&&t[e][1]<=o.shape[e]-l,()=>`Padding in dimension ${e} cannot be greater than or equal to ${o.shape[e]-l} or less than 0 for input of shape ${o.shape}`);return(0,r.ENGINE).runKernel(n.MirrorPad,{x:o},{paddings:t,mode:i})}})}),R("jR4my",function(e,t){c(e.exports,"mod",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({mod_:/**
 * Returns the mod of a and b element-wise.
 * `floor(x / y) * y + mod(x, y) = x`
 * Supports broadcasting.
 *
 * We also expose `tf.modStrict` which has the same signature as this op and
 * asserts that `a` and `b` are the same shape (does not broadcast).
 *
 * ```js
 * const a = tf.tensor1d([1, 4, 3, 16]);
 * const b = tf.tensor1d([1, 2, 9, 4]);
 *
 * a.mod(b).print();  // or tf.mod(a, b)
 * ```
 *
 * ```js
 * // Broadcast a mod b.
 * const a = tf.tensor1d([2, 4, 6, 8]);
 * const b = tf.scalar(5);
 *
 * a.mod(b).print();  // or tf.mod(a, b)
 * ```
 *
 * @param a The first tensor.
 * @param b The second tensor. Must have the same type as `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Arithmetic'}
 */function(e,t){let i=(0,s.convertToTensor)(e,"a","mod"),o=(0,s.convertToTensor)(t,"b","mod");[i,o]=(0,a.makeTypesMatch)(i,o);let l={a:i,b:o};return(0,r.ENGINE).runKernel(n.Mod,l)}})}),R("jV1KY",function(e,t){c(e.exports,"moments",()=>p);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("kTunp"),s=A("inFmq"),i=A("67GCc"),o=A("jqSCG"),l=A("4sqA7"),u=A("iDd8d"),d=A("7kouu");let p=/* @__PURE__ */(0,o.op)({moments_:/**
 * Calculates the mean and variance of `x`. The mean and variance are
 * calculated by aggregating the contents of `x` across `axes`. If `x` is
 * 1-D and `axes = [0]` this is just the mean and variance of a vector.
 *
 * @param x The input tensor.
 * @param axis The dimension(s) along with to compute mean and
 *     variance. By default it reduces all dimensions.
 * @param keepDims If true, the moments have the same dimensionality as the
 *     input.
 * @return An object with two keys: `mean` and `variance`.
 *
 * @doc {heading: 'Operations', subheading: 'Normalization'}
 */function(e,t=null,o=!1){e=(0,r.convertToTensor)(e,"x","moments");let c=(0,n.parseAxisParam)(t,e.shape),p=(0,i.mean)(e,c,o),h=p.shape;o||(h=(0,a.expandShapeToKeepDim)(p.shape,c));let f=(0,u.square)((0,d.sub)((0,s.cast)(e,"float32"),(0,l.reshape)(p,h))),m=(0,i.mean)(f,c,o);return{mean:p,variance:m}}})}),R("culYm",function(e,t){c(e.exports,"multiRNNCell",()=>a);var r=A("5xBLk"),n=A("jqSCG");let a=/* @__PURE__ */(0,n.op)({multiRNNCell_:/**
 * Computes the next states and outputs of a stack of LSTMCells.
 *
 * Each cell output is used as input to the next cell.
 *
 * Returns `[cellState, cellOutput]`.
 *
 * Derived from tf.contrib.rn.MultiRNNCell.
 *
 * @param lstmCells Array of LSTMCell functions.
 * @param data The input to the cell.
 * @param c Array of previous cell states.
 * @param h Array of previous cell outputs.
 *
 * @doc {heading: 'Operations', subheading: 'RNN'}
 */function(e,t,n,a){let s=(0,r.convertToTensor)(t,"data","multiRNNCell"),i=(0,r.convertToTensorArray)(n,"c","multiRNNCell"),o=(0,r.convertToTensorArray)(a,"h","multiRNNCell"),l=s,u=[];for(let t=0;t<e.length;t++){let r=e[t](l,i[t],o[t]);u.push(r[0]),u.push(r[1]),l=r[1]}let c=[],d=[];for(let e=0;e<u.length;e+=2)c.push(u[e]),d.push(u[e+1]);return[c,d]}})}),R("b2OB7",function(e,t){c(e.exports,"multinomial",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG"),i=A("4sqA7");let o=/* @__PURE__ */(0,s.op)({multinomial_:/**
 * Creates a `tf.Tensor` with values drawn from a multinomial distribution.
 *
 * ```js
 * const probs = tf.tensor([.75, .25]);
 * tf.multinomial(probs, 3).print();
 * ```
 *
 * @param logits 1D array with unnormalized log-probabilities, or
 *     2D array of shape `[batchSize, numOutcomes]`. See the `normalized`
 *     parameter.
 * @param numSamples Number of samples to draw for each row slice.
 * @param seed The seed number.
 * @param normalized Whether the provided `logits` are normalized true
 *     probabilities (sum to 1). Defaults to false.
 * @return 1D array of shape `[numSamples]`, or 2D array of shape
 *     `[batchSize, numSamples]`, depending on the rank of the input.
 *
 * @doc {heading: 'Tensors', subheading: 'Random'}
 */function(e,t,s,o=!1){let l=(0,a.convertToTensor)(e,"logits","multinomial"),u=l.size,c=l.rank;if(u<2)throw Error(`Error in multinomial: you need at least 2 outcomes, but got ${u}.`);if(c>2)throw Error(`Rank of probabilities must be 1 or 2, but is ${c}`);// TODO(lina128): Investigate correct seed behavior. The code seems not allow
// setting see to 0.
s=s||Math.random();// The kernel only accepts (and returns) rank 2 tensors.
let d=1===c?(0,i.reshape)(l,[1,-1]):l,p={numSamples:t,seed:s,normalized:o},h=(0,r.ENGINE).runKernel(n.Multinomial,{logits:d},p);// tslint:disable-next-line:no-unnecessary-type-assertion
return 1===c?(0,i.reshape)(h,[h.size]):h}})}),R("8WSnu",function(e,t){c(e.exports,"notEqual",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("8BaGO"),o=A("jqSCG");let l=/* @__PURE__ */(0,o.op)({notEqual_:/**
 * Returns the truth value of (a != b) element-wise. Supports broadcasting.
 *
 * ```js
 * const a = tf.tensor1d([1, 2, 3]);
 * const b = tf.tensor1d([0, 2, 3]);
 *
 * a.notEqual(b).print();
 * ```
 * @param a The first input tensor.
 * @param b The second input tensor. Must have the same dtype as `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Logical'}
 */function(e,t){let o=(0,s.convertToTensor)(e,"a","notEqual","string_or_numeric"),l=(0,s.convertToTensor)(t,"b","notEqual","string_or_numeric");[o,l]=(0,a.makeTypesMatch)(o,l),(0,i.assertAndGetBroadcastShape)(o.shape,l.shape);let u={a:o,b:l};return(0,r.ENGINE).runKernel(n.NotEqual,u)}})}),R("67iid",function(e,t){c(e.exports,"onesLike",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({onesLike_:/**
 * Creates a `tf.Tensor` with all elements set to 1 with the same shape as the
 * given tensor.
 *
 * ```js
 * const x = tf.tensor([1, 2]);
 * tf.onesLike(x).print();
 * ```
 * @param x A tensor.
 *
 * @doc {heading: 'Tensors', subheading: 'Creation'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","onesLike");return(0,r.ENGINE).runKernel(n.OnesLike,{x:t})}})}),R("8lsKt",function(e,t){c(e.exports,"outerProduct",()=>o);var r=A("5xBLk"),n=A("8cCb2"),a=A("aUFou"),s=A("jqSCG"),i=A("4sqA7");let o=/* @__PURE__ */(0,s.op)({outerProduct_:/**
 * Computes the outer product of two vectors, `v1` and `v2`.
 *
 * ```js
 * const a = tf.tensor1d([1, 2, 3]);
 * const b = tf.tensor1d([3, 4, 5]);
 *
 * tf.outerProduct(a, b).print();
 * ```
 * @param v1 The first vector in the outer product operation.
 * @param v2 The second vector in the outer product operation.
 *
 * @doc {heading: 'Operations', subheading: 'Matrices'}
 */function(e,t){let s=(0,r.convertToTensor)(e,"v1","outerProduct"),o=(0,r.convertToTensor)(t,"v2","outerProduct");n.assert(1===s.rank&&1===o.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${s.rank} and ${o.rank}.`);let l=(0,i.reshape)(s,[-1,1]),u=(0,i.reshape)(o,[1,-1]);return(0,a.matMul)(l,u)}})}),R("fSZF6",function(e,t){c(e.exports,"pad",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({pad_:/**
 * Pads a `tf.Tensor` with a given value and paddings.
 *
 * This operation implements `CONSTANT` mode. For `REFLECT` and `SYMMETRIC`,
 * refer to `tf.mirrorPad`.
 *
 * Also available are stricter rank-specific methods with the same signature
 * as this method that assert that `paddings` is of given length.
 *   - `tf.pad1d`
 *   - `tf.pad2d`
 *   - `tf.pad3d`
 *   - `tf.pad4d`
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3, 4]);
 * x.pad([[1, 2]]).print();
 * ```
 * @param x The tensor to pad.
 * @param paddings An array of length `R` (the rank of the tensor), where
 * each element is a length-2 tuple of ints `[padBefore, padAfter]`,
 * specifying how much to pad along each dimension of the tensor.
 * @param constantValue The pad value to use. Defaults to 0.
 *
 * @doc {heading: 'Tensors', subheading: 'Transformations'}
 */function(e,t,s=0){let i=(0,a.convertToTensor)(e,"x","pad");if(0===i.rank)throw Error("pad(scalar) is not defined. Pass non-scalar to pad");return(0,r.ENGINE).runKernel(n.PadV2,{x:i},{paddings:t,constantValue:s})}})}),R("d3x5E",function(e,t){c(e.exports,"pad1d",()=>s);var r=A("8cCb2"),n=A("jqSCG"),a=A("fSZF6");let s=/* @__PURE__ */(0,n.op)({pad1d_:/**
 * Pads a `tf.Tensor1D` with a given value and paddings. See `pad` for details.
 */function(e,t,n=0){return(0,r.assert)(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),(0,a.pad)(e,[t],n)}})}),R("lbRCf",function(e,t){c(e.exports,"pad2d",()=>s);var r=A("8cCb2"),n=A("jqSCG"),a=A("fSZF6");let s=/* @__PURE__ */(0,n.op)({pad2d_:/**
 * Pads a `tf.Tensor2D` with a given value and paddings. See `pad` for details.
 */function(e,t,n=0){return(0,r.assert)(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,a.pad)(e,t,n)}})}),R("kZSbJ",function(e,t){c(e.exports,"pad3d",()=>s);var r=A("8cCb2"),n=A("jqSCG"),a=A("fSZF6");let s=/* @__PURE__ */(0,n.op)({pad3d_:/**
 * Pads a `tf.Tensor3D` with a given value and paddings. See `pad` for details.
 */function(e,t,n=0){return(0,r.assert)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,a.pad)(e,t,n)}})}),R("ghY1H",function(e,t){c(e.exports,"pad4d",()=>s);var r=A("8cCb2"),n=A("jqSCG"),a=A("fSZF6");let s=/* @__PURE__ */(0,n.op)({pad4d_:/**
 * Pads a `tf.Tensor4D` with a given value and paddings. See `pad` for details.
 */function(e,t,n=0){return(0,r.assert)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),(0,a.pad)(e,t,n)}})}),R("9PaVS",function(e,t){c(e.exports,"pool",()=>p);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("j4oHC"),s=A("31sZ7"),i=A("frznq"),o=A("gscJF"),l=A("jqSCG"),u=A("4sqA7"),d=A("ePI8Y");let p=/* @__PURE__ */(0,l.op)({pool_:/**
 * Performs an N-D pooling operation
 *
 * @param input The input tensor, of rank 4 or rank 3 of shape
 *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.
 * @param windowShape The filter size: `[filterHeight, filterWidth]`. If
 *     `filterSize` is a single number, then `filterHeight == filterWidth`.
 * @param poolingType The type of pooling, either 'max' or 'avg'.
 * @param pad The type of padding algorithm:
 *    - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *    - `valid`: output will be smaller than input if filter is larger
 *       than 1x1.
 *    - For more info, see this guide:
 *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](
 *         https://www.tensorflow.org/api_guides/python/nn#Convolution)
 * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`
 *     in which we sample input values across the height and width dimensions
 *     in dilated pooling. Defaults to `[1, 1]`. If `dilationRate` is a single
 *     number, then `dilationHeight == dilationWidth`. If it is greater than
 *     1, then all values of `strides` must be 1.
 * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If
 *     `strides` is a single number, then `strideHeight == strideWidth`.
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 *
 * @doc {heading: 'Operations', subheading: 'Convolution'}
 */function(e,t,l,c,p,h,f){let m;null==p&&(p=[1,1]),null==h&&(h=1),0===c&&(c="valid");let g=(0,r.convertToTensor)(e,"x","maxPool"),y=g,b=!1;3===g.rank&&(b=!0,y=(0,u.reshape)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),n.assert(i.eitherStridesOrDilationsAreOne(h,p),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${h} and dilations '${p}'`);let v=i.computePool2DInfo(y.shape,t,h,p,c),x=[v.dilationHeight,v.dilationWidth];m="same"===c?// Helper function to compute base paddings for pool with dilation > 1.
// tslint:disable-next-line:max-line-length
// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L524
function(e,t){// Spatial dimensions of the filters and the upsampled filters in which we
// introduce (rate - 1) zeros between consecutive filter values.
let r=e.map((e,r)=>e+(e-1)*(t[r]-1)),n=r.map(e=>e-1),a=n.map(e=>Math.floor(e/2)),s=n.map((e,t)=>e-a[t]);return n.map((e,t)=>[a[t],s[t]])}([v.filterHeight,v.filterWidth],x):[[0,0],[0,0]];let w=1===x[0]&&1===x[1],[k,S]=// Helper function to compute crops and paddings for pool with dilation > 1.
// tslint:disable-next-line:max-line-length
// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/array_ops.py#L2184
function(e,t,r){let n=r.map(e=>e[0]),a=r.map(e=>e[1]),s=e.concat(n,a),i=t.map((e,t)=>(e-s[t]%e)%e),o=a.map((e,t)=>e+i[t]),l=t.map((e,t)=>[n[t],o[t]]),u=t.map((e,t)=>[0,i[t]]);return[l,u]}([v.inHeight,v.inWidth],x,m),N=w?c:"valid",T=w?y:(0,d.spaceToBatchND)(y,x,k),I="avg"===l?()=>(0,a.avgPool)(T,t,h,N,f):()=>(0,o.maxPool)(T,t,h,N,f),C=I(),E=w?C:(0,s.batchToSpaceND)(C,x,S);return b?(0,u.reshape)(E,[E.shape[1],E.shape[2],E.shape[3]]):E}})}),R("ePI8Y",function(e,t){c(e.exports,"spaceToBatchND",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({spaceToBatchND_:/**
 * This operation divides "spatial" dimensions `[1, ..., M]` of the input into
 * a grid of blocks of shape `blockShape`, and interleaves these blocks with
 * the "batch" dimension (0) such that in the output, the spatial
 * dimensions `[1, ..., M]` correspond to the position within the grid,
 * and the batch dimension combines both the position within a spatial block
 * and the original batch position. Prior to division into blocks,
 * the spatial dimensions of the input are optionally zero padded
 * according to `paddings`. See below for a precise description.
 *
 * ```js
 * const x = tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]);
 * const blockShape = [2, 2];
 * const paddings = [[0, 0], [0, 0]];
 *
 * x.spaceToBatchND(blockShape, paddings).print();
 * ```
 *
 * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +
 * remainingShape`, where spatialShape has `M` dimensions.
 * @param blockShape A 1-D array. Must have shape `[M]`, all values must
 * be >= 1.
 * @param paddings A 2-D array. Must have shape `[M, 2]`, all values must be >=
 *     0. `paddings[i] = [padStart, padEnd]` specifies the amount to zero-pad
 * from input dimension `i + 1`, which corresponds to spatial dimension `i`. It
 * is required that
 * `(inputShape[i + 1] + padStart + padEnd) % blockShape[i] === 0`
 *
 * This operation is equivalent to the following steps:
 *
 * 1. Zero-pad the start and end of dimensions `[1, ..., M]` of the input
 * according to `paddings` to produce `padded` of shape paddedShape.
 *
 * 2. Reshape `padded` to `reshapedPadded` of shape:
 * `[batch] + [paddedShape[1] / blockShape[0], blockShape[0], ...,
 * paddedShape[M] / blockShape[M-1], blockShape[M-1]] + remainingShape`
 *
 * 3. Permute dimensions of `reshapedPadded` to produce `permutedReshapedPadded`
 * of shape: `blockShape + [batch] + [paddedShape[1] / blockShape[0], ...,
 * paddedShape[M] / blockShape[M-1]] + remainingShape`
 *
 * 4. Reshape `permutedReshapedPadded` to flatten `blockShape` into the
 * batch dimension, producing an output tensor of shape:
 * `[batch * prod(blockShape)] + [paddedShape[1] / blockShape[0], ...,
 * paddedShape[M] / blockShape[M-1]] + remainingShape`
 *
 * @doc {heading: 'Tensors', subheading: 'Transformations'}
 */function(e,t,i){let o=(0,a.convertToTensor)(e,"x","spaceToBatchND");return s.assert(o.rank>=1+t.length,()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`),s.assert(i.length===t.length,()=>`paddings.shape[0] ${i.length} must be equal to [blockShape] ${t.length}`),s.assert(o.shape.reduce((e,r,n)=>n>0&&n<=t.length?e&&(r+i[n-1][0]+i[n-1][1])%t[n-1]==0:e,!0),()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${i.toString()} must be divisible by blockShapes ${t.toString()}`),(0,r.ENGINE).runKernel(n.SpaceToBatchND,{x:o},{blockShape:t,paddings:i})}})}),R("a3pvF",function(e,t){c(e.exports,"prelu",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({prelu_:/**
 * Computes leaky rectified linear element-wise with parametric alphas.
 *
 * `x < 0 ? alpha * x : f(x) = x`
 *
 * ```js
 * const x = tf.tensor1d([-1, 2, -3, 4]);
 * const alpha = tf.scalar(0.1);
 *
 * x.prelu(alpha).print();  // or tf.prelu(x, alpha)
 * ```
 * @param x The input tensor.
 * @param alpha Scaling factor for negative values.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e,t){let s=(0,a.convertToTensor)(e,"x","prelu"),i=(0,a.convertToTensor)(t,"alpha","prelu");return(0,r.ENGINE).runKernel(n.Prelu,{x:s,alpha:i})}})}),R("bWQC3",function(e,t){c(e.exports,"prod",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("inFmq"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({prod_:/**
 * Computes the product of elements across dimensions of a `tf.Tensor`.
 *
 * Reduces the input along the dimensions given in `axes`. Unless `keepDims`
 * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in
 * `axes`. If `keepDims` is true, the reduced dimensions are retained with
 * length 1. If `axes` has no entries, all dimensions are reduced, and a
 * `tf.Tensor` with a single element is returned.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3]);
 *
 * x.prod().print();  // or tf.prod(x)
 * ```
 *
 * ```js
 * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);
 *
 * const axis = 1;
 * x.prod(axis).print();  // or tf.prod(x, axis)
 * ```
 *
 * @param x The input tensor to compute the product over. If the dtype is `bool`
 *   it will be converted to `int32` and the output dtype will be `int32`.
 * @param axis The dimension(s) to reduce. By default it reduces
 *     all dimensions.
 * @param keepDims If true, retains reduced dimensions with size 1.
 *
 * @doc {heading: 'Operations', subheading: 'Reduction'}
 */function(e,t=null,i=!1){let o=(0,a.convertToTensor)(e,"x","prod");"bool"===o.dtype&&(o=(0,s.cast)(o,"int32"));let l={x:o};return(0,r.ENGINE).runKernel(n.Prod,l,{axis:t,keepDims:i})}})}),R("3MjiG",function(e,t){c(e.exports,"raggedGather",()=>i);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({raggedGather_:function(e,t,s,i){let o=e.map((e,t)=>(0,a.convertToTensor)(e,`tensors${t}`,"raggedGather","int32")),l=(0,a.convertToTensor)(t,"paramsDenseValues","raggedGather"),u=(0,a.convertToTensor)(s,"indices","raggedGather","int32"),c=(0,r.ENGINE).runKernel(n.RaggedGather,{paramsNestedSplits:o,paramsDenseValues:l,indices:u},{outputRaggedRank:i});return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}})}),R("6df7Q",function(e,t){c(e.exports,"raggedRange",()=>i);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({raggedRange_:/**
 * Returns a RaggedTensor result composed from rtDenseValues and rtNestedSplits,
 * such that result[i] = [starts[i], starts[i] + deltas[i], ..., limits[i]]).
 *
 * @param starts: A Tensor. Must be one of the following types:
 *     'float32', 'int32'. The starts of each range.
 * @param limits: A Tensor. Must have the same type as starts. The limits of
 *     each range.
 * @param deltas: A Tensor. Must have the same type as starts. The deltas of
 *     each range.
 * @return A map with the following properties:
 *     - rtNestedSplits: A Tensor of type 'int32'.
 *     - rtDenseValues: A Tensor. Has the same type as starts.
 */function(e,t,s){let i=(0,a.convertToTensor)(e,"starts","raggedRange"),o=(0,a.convertToTensor)(t,"limits","raggedRange",i.dtype),l=(0,a.convertToTensor)(s,"deltas","raggedRange",i.dtype),u=(0,r.ENGINE).runKernel(n.RaggedRange,{starts:i,limits:o,deltas:l});return{rtNestedSplits:u[0],rtDenseValues:u[1]}}})}),R("hRiiN",function(e,t){c(e.exports,"raggedTensorToTensor",()=>i);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({raggedTensorToTensor_:/**
 * Create a dense tensor from a ragged tensor, possibly altering its shape.
 *
 * The raggedTensorToTensor op creates a dense tensor from am array of row
 * partition tensors, a value vector, and default values. If the shape is
 * unspecified, the minimal shape required to contain all the elements in the
 * ragged tensor (the natural shape) will be used. If some dimensions are left
 * unspecified, then the size of the natural shape is used in that dimension.
 *
 * The defaultValue will be broadcast to the output shape. After that, the
 * values from the ragged tensor overwrite the default values. Note that the
 * defaultValue must have less dimensions than the value.
 *
 * The row partition tensors are in the order of the dimensions. At present, the
 * types can be: "ROW_SPLITS": the row_splits tensor from the ragged tensor.
 *   "VALUE_ROWIDS": the value_rowids tensor from the ragged tensor.
 *   "FIRST_DIM_SIZE": if value_rowids is used for the first dimension, then it
 * is preceded by "FIRST_DIM_SIZE".
 * ```
 * @param shape: A Tensor. Must be one of the following types: 'int32'. The
 *     desired shape of the output tensor. If left unspecified (empty), the
 *     minimal shape required to contain all the elements in the ragged tensor
 *     (the natural shape) will be used. If some dimensions are left
 *     unspecified, then the size of the natural shape is used in that
 *     dimension.
 *
 *     Note that dense dimensions cannot be modified by the shape argument.
 *     Trying to change the size of a dense dimension will cause the op to fail.
 *     Examples: natural shape: [4, 5, 6] shape: -1 output shape: [4, 5, 6]
 *
 *     natural shape: [4, 5, 6] shape: [3, -1, 2] output shape: [3, 5, 2]
 *
 *     natural shape: [4, 5, 6] shape: [3, 7, 2] output shape: [3, 7, 2]
 * @param values: A Tensor. A 1D tensor representing the values of the ragged
 *     tensor.
 * @param defaultValue: A Tensor. Must have the same type as values. The
 *     defaultValue when the shape is larger than the ragged tensor. The
 *     defaultValue is broadcast until it is the shape of the output tensor,
 *     and then overwritten by values in the ragged tensor. The default value
 *     must be compatible with this broadcast operation, and must have fewer
 *     dimensions than the value tensor.
 * @param rowPartitionTensors: A list of at least 1 Tensor objects with the same
 *     type in: 'int32'.
 * @param rowPartitionTypes: A list of strings. The types of the row partition
 *     tensors. At present, these can be:
 *     "ROW_SPLITS": the row_splits tensor from the ragged tensor.
 *     "VALUE_ROWIDS": the value_rowids tensor from the ragged tensor.
 *     "FIRST_DIM_SIZE": if value_rowids is used for the first dimension, then
 *         it is preceeded by "FIRST_DIM_SIZE". The tensors are in the order of
 *         the dimensions.
 * @return A Tensor. Has the same type as values.
 * @doc {heading: 'Operations', subheading: 'Ragged'}
 */function(e,t,s,i,o){let l=(0,a.convertToTensor)(e,"shape","raggedTensorToTensor","int32"),u=(0,a.convertToTensor)(t,"values","raggedTensorToTensor"),c=(0,a.convertToTensor)(s,"defaultValue","raggedTensorToTensor",u.dtype),d=i.map((e,t)=>(0,a.convertToTensor)(e,`tensors${t}`,"raggedTensorToTensor","int32"));return(0,r.ENGINE).runKernel(n.RaggedTensorToTensor,{shape:l,values:u,defaultValue:c,rowPartitionTensors:d},{rowPartitionTypes:o})}})}),R("bTXL0",function(e,t){c(e.exports,"rand",()=>s);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=(A("8cCb2"),A("8cCb2")),a=A("jqSCG");let s=/* @__PURE__ */(0,a.op)({rand_:/**
 * Creates a `tf.Tensor` with values sampled from a random number generator
 * function defined by the user.
 *
 * @param shape An array of integers defining the output tensor shape.
 * @param randFunction A random number generator function which is called
 * for each element in the output tensor.
 * @param dtype The data type of the output tensor. Defaults to 'float32'.
 *
 * @doc {heading: 'Tensors', subheading: 'Random'}
 */function(e,t,a){(0,n.assertNonNegativeIntegerDimensions)(e);let s=(0,n.sizeFromShape)(e),i=null;if(null==a||"float32"===a)i=new Float32Array(s);else if("int32"===a)i=new Int32Array(s);else if("bool"===a)i=new Uint8Array(s);else throw Error(`Unknown data type ${a}`);for(let e=0;e<s;e++)i[e]=t();return(0,r.ENGINE).makeTensor(i,e,a)}})}),R("SB4J3",function(e,t){c(e.exports,"randomGamma",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2"),n=A("iG87S"),a=A("jqSCG"),s=A("7QK6b");let i=/* @__PURE__ */(0,a.op)({randomGamma_:/**
 * Creates a `tf.Tensor` with values sampled from a gamma distribution.
 *
 * ```js
 * tf.randomGamma([2, 2], 1).print();
 * ```
 *
 * @param shape An array of integers defining the output tensor shape.
 * @param alpha The shape parameter of the gamma distribution.
 * @param beta The inverse scale parameter of the gamma distribution. Defaults
 *     to 1.
 * @param dtype The data type of the output. Defaults to float32.
 * @param seed The seed for the random number generator.
 *
 * @doc {heading: 'Tensors', subheading: 'Random'}
 */function(e,t,a=1,i="float32",o){if((0,r.assertNonNegativeIntegerDimensions)(e),null==a&&(a=1),null==i&&(i="float32"),"float32"!==i&&"int32"!==i)throw Error(`Unsupported data type ${i}`);let l=new s.RandGamma(t,a,i,o),u=(0,n.buffer)(e,i);for(let e=0;e<u.values.length;e++)u.values[e]=l.nextValue();return u.toTensor()}})}),R("7QK6b",function(e,t){c(e.exports,"MPRandGauss",()=>n),c(e.exports,"RandGamma",()=>a),c(e.exports,"UniformRandom",()=>s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("3mnBW");A("6thPa");class n{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let i=s||Math.random();this.random=r.alea(i.toString())}/** Returns next sample from a Gaussian distribution. */nextValue(){let e,t;if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let r=!1;for(;!r;){let n,a,s;do s=(n=2*this.random()-1)*n+(a=2*this.random()-1)*a;while(s>=1||0===s)let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*n*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}/** Handles proper rounding for non-floating-point numbers. */convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}/** Returns true if less than 2-standard-deviations from the mean. */isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class a{constructor(e,t,a,s){this.alpha=e,this.beta=1/t,this.dtype=a;let i=s||Math.random();this.randu=r.alea(i.toString()),this.randn=new n(0,1,a,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}/** Returns next sample from a gamma distribution. */nextValue(){let e,t,r,n,a,s;for(;;){do n=this.randn.nextValue(),s=1+this.c*n;while(s<=0)if(s*=s*s,t=1-.331*(e=n*n)*e,r=.5*e+this.d*(1-s+Math.log(s)),(a=this.randu())<t||Math.log(a)<r)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}/** Handles proper rounding for non-floating-point numbers. */convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class s{constructor(e=0,t=1,n,a){if(/** Handles proper rounding for non floating point numbers. */this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}}),R("3mnBW",function(e,t){// A library of seedable RNGs implemented in Javascript.
//
// Usage:
//
// var seedrandom = require('seedrandom');
// var random = seedrandom(1); // or any seed.
// var x = random();       // 0 <= x < 1.  Every bit is random.
// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.
// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.
// Period: ~2^116
// Reported to pass all BigCrush tests.
var r=A("cmoHh"),n=A("euRi5"),a=A("hDsEw"),s=A("3J2Zm"),i=A("6Px8M"),o=A("lDm0S"),l=A("ixfky");l.alea=r,l.xor128=n,l.xorwow=a,l.xorshift7=s,l.xor4096=i,l.tychei=o,e.exports=l}),R("cmoHh",function(e,t){!// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010
// http://baagoe.com/en/RandomMusings/javascript/
// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror
// Original work is under MIT license -
// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
function(e,t,r){function n(e){var t,r=this,n=(t=4022871197,function(e){e=String(e);for(var r=0;r<e.length;r++){var n=.02519603282416938*(t+=e.charCodeAt(r));t=n>>>0,n-=t,n*=t,t=n>>>0,n-=t,t+=4294967296*n}return(t>>>0)*23283064365386963e-26;// 2^-32
});r.next=function(){var e=2091639*r.s0+23283064365386963e-26*r.c;// 2^-32
return r.s0=r.s1,r.s1=r.s2,r.s2=e-(r.c=0|e)},// Apply the seeding algorithm from Baagoe.
r.c=1,r.s0=n(" "),r.s1=n(" "),r.s2=n(" "),r.s0-=n(e),r.s0<0&&(r.s0+=1),r.s1-=n(e),r.s1<0&&(r.s1+=1),r.s2-=n(e),r.s2<0&&(r.s2+=1)}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var r=new n(e),s=t&&t.state,i=r.next;return i.int32=function(){return 4294967296*r.next()|0},i.double=function(){return i()+(2097152*i()|0)*11102230246251565e-32;// 2^-53
},i.quick=i,s&&("object"==typeof s&&a(s,r),i.state=function(){return a(r,{})}),i}t&&t.exports?t.exports=s:r&&r.amd?r(function(){return s}):this.alea=s}(0,e,"function"==typeof define&&define// present with an AMD loader
)}),R("euRi5",function(e,t){!// A Javascript implementaion of the "xor128" prng algorithm by
// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper
function(e,t,r){function n(e){var t=this,r="";t.x=0,t.y=0,t.z=0,t.w=0,// Set up generator function.
t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:r+=e;// Mix in string seed, then discard an initial batch of 64 values.
for(var n=0;n<r.length+64;n++)t.x^=0|r.charCodeAt(n),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var r=new n(e),s=t&&t.state,i=function(){return(r.next()>>>0)/4294967296};return i.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/4294967296,n=(e+t)/2097152;while(0===n)return n},i.int32=r.next,i.quick=i,s&&("object"==typeof s&&a(s,r),i.state=function(){return a(r,{})}),i}t&&t.exports?t.exports=s:r&&r.amd?r(function(){return s}):this.xor128=s}(0,e,"function"==typeof define&&define// present with an AMD loader
)}),R("hDsEw",function(e,t){!// A Javascript implementaion of the "xorwow" prng algorithm by
// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper
function(e,t,r){function n(e){var t=this,r="";// Set up generator function.
t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^(e^e<<1))|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:r+=e;// Mix in string seed, then discard an initial batch of 64 values.
for(var n=0;n<r.length+64;n++)t.x^=0|r.charCodeAt(n),n==r.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var r=new n(e),s=t&&t.state,i=function(){return(r.next()>>>0)/4294967296};return i.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/4294967296,n=(e+t)/2097152;while(0===n)return n},i.int32=r.next,i.quick=i,s&&("object"==typeof s&&a(s,r),i.state=function(){return a(r,{})}),i}t&&t.exports?t.exports=s:r&&r.amd?r(function(){return s}):this.xorwow=s}(0,e,"function"==typeof define&&define// present with an AMD loader
)}),R("3J2Zm",function(e,t){!// A Javascript implementaion of the "xorshift7" algorithm by
// François Panneton and Pierre L'ecuyer:
// "On the Xorgshift Random Number Generators"
// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf
function(e,t,r){function n(e){var t=this;// Set up generator function.
t.next=function(){// Update xor generator.
var e,r,n=t.x,a=t.i;return e=n[a],e^=e>>>7,r=e^e<<24^((e=n[a+1&7])^e>>>10)^((e=n[a+3&7])^e>>>3)^((e=n[a+4&7])^e<<7),e=n[a+7&7],e^=e<<13,r^=e^e<<9,n[a]=r,t.i=a+1&7,r},function(e,t){var r,n=[];if(t===(0|t))n[0]=t;else for(r=0,// Seed state using a string.
t=""+t;r<t.length;++r)n[7&r]=n[7&r]<<15^t.charCodeAt(r)+n[r+1&7]<<13;// Enforce an array length of 8, not all zeroes.
for(;n.length<8;)n.push(0);for(r=0;r<8&&0===n[r];++r);// Discard an initial 256 values.
for(8==r?n[7]=-1:n[r],e.x=n,e.i=0,r=256;r>0;--r)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var r=new n(e),s=t&&t.state,i=function(){return(r.next()>>>0)/4294967296};return i.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/4294967296,n=(e+t)/2097152;while(0===n)return n},i.int32=r.next,i.quick=i,s&&(s.x&&a(s,r),i.state=function(){return a(r,{})}),i}t&&t.exports?t.exports=s:r&&r.amd?r(function(){return s}):this.xorshift7=s}(0,e,"function"==typeof define&&define// present with an AMD loader
)}),R("6Px8M",function(e,t){!// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.
//
// This fast non-cryptographic random number generator is designed for
// use in Monte-Carlo algorithms. It combines a long-period xorshift
// generator with a Weyl generator, and it passes all common batteries
// of stasticial tests for randomness while consuming only a few nanoseconds
// for each prng generated.  For background on the generator, see Brent's
// paper: "Some long-period random number generators using shifts and xors."
// http://arxiv.org/pdf/1004.3115v1.pdf
//
// Usage:
//
// var xor4096 = require('xor4096');
// random = xor4096(1);                        // Seed with int32 or string.
// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.
// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.
//
// For nonzero numeric keys, this impelementation provides a sequence
// identical to that by Brent's xorgens 3 implementaion in C.  This
// implementation also provides for initalizing the generator with
// string seeds, or for saving and restoring the state of the generator.
//
// On Chrome, this prng benchmarks about 2.1 times slower than
// Javascript's built-in Math.random().
function(e,t,r){function n(e){var t=this;// Set up generator function.
t.next=function(){var e,r,n=t.w,a=t.X,s=t.i;// Result is the combination.
return(// Update Weyl generator.
t.w=n=n+1640531527|0,// Update xor generator.
r=a[s+34&127],e=a[s=s+1&127],r^=r<<13,e^=e<<17,r^=r>>>15,e^=e>>>12,// Update Xor generator array state.
r=a[s]=r^e,t.i=s,r+(n^n>>>16)|0)},function(e,t){var r,n,a,s,i,o=[],l=128;// Initialize circular array and weyl value.
for(t===(0|t)?(// Numeric seeds initialize v, which is used to generates X.
n=t,t=null):(// String seeds are mixed into v and X one character at a time.
t+="\x00",n=0,l=Math.max(l,t.length)),a=0,s=-32;s<l;++s)t&&(n^=t.charCodeAt((s+32)%t.length)),0===s&&(i=n),n^=n<<10,n^=n>>>15,n^=n<<4,n^=n>>>13,s>=0&&(i=i+1640531527|0,a=0==(r=o[127&s]^=n+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),// Run the generator 512 times to further mix the state before using it.
// Factoring this as a function slows the main generator, so it is just
// unrolled here.  The weyl generator is not advanced while warming up.
a=127,s=512;s>0;--s)n=o[a+34&127],r=o[a=a+1&127],n^=n<<13,r^=r<<17,n^=n>>>15,r^=r>>>12,o[a]=n^r;// Storing state as object members is faster than using closure variables.
e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var r=new n(e),s=t&&t.state,i=function(){return(r.next()>>>0)/4294967296};return i.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/4294967296,n=(e+t)/2097152;while(0===n)return n},i.int32=r.next,i.quick=i,s&&(s.X&&a(s,r),i.state=function(){return a(r,{})}),i}t&&t.exports?t.exports=s:r&&r.amd?r(function(){return s}):this.xor4096=s}(0,e,"function"==typeof define&&define// present with an AMD loader
)}),R("lDm0S",function(e,t){!// A Javascript implementaion of the "Tyche-i" prng algorithm by
// Samuel Neves and Filipe Araujo.
// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf
function(e,t,r){function n(e){var t=this,r="";// Set up generator function.
t.next=function(){var e=t.b,r=t.c,n=t.d,a=t.a;return e=e<<25^e>>>7^r,r=r-n|0,n=n<<24^n>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^r,t.c=r=r-n|0,t.d=n<<16^r>>>16^a,t.a=a-e|0},/* The following is non-inverted tyche, which has better internal
   * bit diffusion, but which is about 25% slower than tyche-i in JS.
  me.next = function() {
    var a = me.a, b = me.b, c = me.c, d = me.d;
    a = (me.a + me.b | 0) >>> 0;
    d = me.d ^ a; d = d << 16 ^ d >>> 16;
    c = me.c + d | 0;
    b = me.b ^ c; b = b << 12 ^ d >>> 20;
    me.a = a = a + b | 0;
    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;
    me.c = c = c + d | 0;
    b = b ^ c;
    return me.b = (b << 7 ^ b >>> 25);
  }
  */t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(// Integer seed.
t.a=e/4294967296|0,t.b=0|e):r+=e;// Mix in string seed, then discard an initial batch of 64 values.
for(var n=0;n<r.length+20;n++)t.b^=0|r.charCodeAt(n),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var r=new n(e),s=t&&t.state,i=function(){return(r.next()>>>0)/4294967296};return i.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/4294967296,n=(e+t)/2097152;while(0===n)return n},i.int32=r.next,i.quick=i,s&&("object"==typeof s&&a(s,r),i.state=function(){return a(r,{})}),i}t&&t.exports?t.exports=s:r&&r.amd?r(function(){return s}):this.tychei=s}(0,e,"function"==typeof define&&define// present with an AMD loader
)}),R("ixfky",function(e,t){!/*
Copyright 2019 David Bau.

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

*/function(t,r,n){//
// The following constants are related to IEEE 754 limits.
//
var a,s="random",i=n.pow(256,6),o=n.pow(2,52),l=2*o;// node.js crypto module, initialized at the bottom.
//
// seedrandom()
// This is the seedrandom function described above.
//
function u(e,u,f){var m=[],g=p(//
// flatten()
// Converts an object tree to nested arrays of strings.
//
function e(t,r){var n,a=[],s=typeof t;if(r&&"object"==s)for(n in t)try{a.push(e(t[n],r-1))}catch(e){}return a.length?a:"string"==s?t:t+"\x00"}((u=!0==u?{entropy:!0}:u||{}).entropy?[e,h(r)]:null==e?//
// autoseed()
// Returns an object for autoseeding, using window.crypto and Node crypto
// module if available.
//
function(){try{var e;return a&&(e=a.randomBytes)?e=e(256):(e=new Uint8Array(256),(t.crypto||t.msCrypto).getRandomValues(e)),h(e)}catch(e){var n=t.navigator,s=n&&n.plugins;return[+new Date,t,s,t.screen,h(r)]}}():e,3),m),y=new c(m),b=function(){for(var e=y.g(6),t=i,r=0;e<o;)e=(e+r)*256,t*=256,r=y.g(1);for(;e>=l;)e/=2,t/=2,r>>>=1;return(e+r)/t;// Form the number within [0, 1).
};// Calling convention: what to return as a function of prng, seed, is_math.
return b.int32=function(){return 0|y.g(4)},b.quick=function(){return y.g(4)/4294967296},b.double=b,// Mix the randomness into accumulated entropy.
p(h(y.S),r),(u.pass||f||function(e,t,r,a){return(// If called as a method of Math (Math.seedrandom()), mutate
// Math.random because that is how seedrandom.js has worked since v1.0.
(a&&(a.S&&d(a,y),// Only provide the .state method if requested via options.state.
e.state=function(){return d(y,{})}),r)?(n[s]=e,t):e)})(b,g,"global"in u?u.global:this==n,u.state)}//
// ARC4
//
// An ARC4 implementation.  The constructor takes a key in the form of
// an array of at most (width) integers that should be 0 <= x < (width).
//
// The g(count) method returns a pseudorandom integer that concatenates
// the next (count) outputs from ARC4.  Its return value is a number x
// that is in the range 0 <= x < (width ^ count).
//
function c(e){var t,r=e.length,n=this,a=0,s=n.i=n.j=0,i=n.S=[];// Set up S using the standard key scheduling algorithm.
for(r||(e=[r++]);a<256;)i[a]=a++;for(a=0;a<256;a++)i[a]=i[s=255&s+e[a%r]+(t=i[a])],i[s]=t;// The "g" method returns the next (count) outputs as one number.
(n.g=function(e){for(// Using instance members instead of closure state nearly doubles speed.
var t,r=0,a=n.i,s=n.j,i=n.S;e--;)t=i[a=255&a+1],r=256*r+i[255&(i[a]=i[s=255&s+t])+(i[s]=t)];return n.i=a,n.j=s,r;// For robust unpredictability, the function call below automatically
// discards an initial batch of values.  This is called RC4-drop[256].
// See http://google.com/search?q=rsa+fluhrer+response&btnI
})(256)}//
// copy()
// Copies internal state of ARC4 to or from a plain object.
//
function d(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}//
// mixkey()
// Mixes a string seed into a key that is an array of integers, and
// returns a shortened string seed that is equivalent to the result key.
//
function p(e,t){for(var r,n=e+"",a=0;a<n.length;)t[255&a]=255&(r^=19*t[255&a])+n.charCodeAt(a++);return h(t)}//
// tostring()
// Converts an array of charcodes to a string
//
function h(e){return String.fromCharCode.apply(0,e)}//
// Nodejs and AMD support: export the implementation as a module using
// either convention.
//
if(//
// When seedrandom.js is loaded, we immediately mix a few bits
// from the built-in RNG into the entropy pool.  Because we do
// not want to interfere with deterministic PRNG state later,
// seedrandom will not call math.random on its own again after
// initialization.
//
p(n.random(),r),e.exports){e.exports=u;// When in node.js, try using crypto package for autoseeding.
try{a=A("kjyEk")}catch(e){}}else"function"==typeof define&&define.amd?define(function(){return u}):n["seed"+s]=u;// End anonymous scope, and pass initial values.
}(// otherwise `this` in Node and other environments
"undefined"!=typeof self?self:e.exports,[],Math// math: package containing random, pow, and seedrandom
)}),R("h2Vnz",function(e,t){c(e.exports,"randomNormal",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2"),n=A("iG87S"),a=A("jqSCG"),s=A("7QK6b");let i=/* @__PURE__ */(0,a.op)({randomNormal_:/**
 * Creates a `tf.Tensor` with values sampled from a normal distribution.
 *
 * ```js
 * tf.randomNormal([2, 2]).print();
 * ```
 *
 * @param shape An array of integers defining the output tensor shape.
 * @param mean The mean of the normal distribution.
 * @param stdDev The standard deviation of the normal distribution.
 * @param dtype The data type of the output.
 * @param seed The seed for the random number generator.
 *
 * @doc {heading: 'Tensors', subheading: 'Random'}
 */function(e,t=0,a=1,i,o){if((0,r.assertNonNegativeIntegerDimensions)(e),null!=i&&"bool"===i)throw Error(`Unsupported data type ${i}`);let l=new s.MPRandGauss(t,a,i,!1,o),u=(0,n.buffer)(e,i);for(let e=0;e<u.values.length;e++)u.values[e]=l.nextValue();return u.toTensor()}})}),R("kVqJN",function(e,t){c(e.exports,"randomStandardNormal",()=>a);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("jqSCG"),n=A("h2Vnz");let a=/* @__PURE__ */(0,r.op)({randomStandardNormal_:/**
 * Creates a `tf.Tensor` with values sampled from a normal distribution.
 *
 * The generated values will have mean 0 and standard deviation 1.
 *
 * ```js
 * tf.randomStandardNormal([2, 2]).print();
 * ```
 *
 * @param shape An array of integers defining the output tensor shape.
 * @param dtype The data type of the output.
 * @param seed The seed for the random number generator.
 *
 * @doc {heading: 'Tensors', subheading: 'Random'}
 */function(e,t,r){if(null!=t&&"bool"===t)throw Error(`Unsupported data type ${t}`);return(0,n.randomNormal)(e,0,1,t,r)}})}),R("j8sic",function(e,t){c(e.exports,"randomUniform",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2"),n=A("iG87S"),a=A("jqSCG"),s=A("7QK6b");let i=/* @__PURE__ */(0,a.op)({randomUniform_:/**
 * Creates a `tf.Tensor` with values sampled from a uniform distribution.
 *
 * The generated values follow a uniform distribution in the range [minval,
 * maxval). The lower bound minval is included in the range, while the upper
 * bound maxval is excluded.
 *
 * ```js
 * tf.randomUniform([2, 2]).print();
 * ```
 *
 * @param shape An array of integers defining the output tensor shape.
 * @param minval The lower bound on the range of random values to generate.
 *   Defaults to 0.
 * @param maxval The upper bound on the range of random values to generate.
 *   Defaults to 1.
 * @param dtype The data type of the output tensor. Defaults to 'float32'.
 * @param seed An optional int. Defaults to 0. If seed is set to be non-zero,
 *   the random number generator is seeded by the given seed. Otherwise, it is
 *   seeded by a random seed.
 *
 * @doc {heading: 'Tensors', subheading: 'Random'}
 */function(e,t=0,a=1,i="float32",o){(0,r.assertNonNegativeIntegerDimensions)(e);let l=(0,n.buffer)(e,i),u=new s.UniformRandom(t,a,null,o);for(let e=0;e<l.values.length;e++)l.values[e]=u.nextValue();return l.toTensor()}})}),R("edlzT",function(e,t){c(e.exports,"randomUniformInt",()=>a);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("jqSCG"),n=A("j8sic");let a=/* @__PURE__ */(0,r.op)({randomUniformInt_:/**
 * Creates a `tf.Tensor` with integers sampled from a uniform distribution.
 *
 * The generated values are uniform integers in the range [minval, maxval). The
 * lower bound minval is included in the range, while the upper bound maxval is
 * excluded.
 *
 * ```js
 * tf.randomUniformInt([2, 2], 0, 10).print();
 * ```
 *
 * @param shape An array of integers defining the output tensor shape.
 * @param minval Inclusive lower bound on the generated integers.
 * @param maxval Exclusive upper bound on the generated integers.
 * @param seed An optional int. Defaults to 0. If seed is set to be non-zero,
 *   the random number generator is seeded by the given seed. Otherwise, it is
 *   seeded by a random seed.
 *
 * @doc {heading: 'Tensors', subheading: 'Random'}
 */function(e,t,r,a){// TODO(mattsoulanille): Handle optional seed2 input.
return(0,n.randomUniform)(e,t,r,"int32",a)}})}),R("80Ety",function(e,t){c(e.exports,"range",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418");function a(e,t,a=1,s="float32"){if(0===a)throw Error("Cannot have a step of zero");return(0,r.ENGINE).runKernel(n.Range,{}/* inputs */,{start:e,stop:t,step:a,dtype:s})}}),R("3aqJ6",function(e,t){c(e.exports,"reciprocal",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({reciprocal_:/**
 * Computes reciprocal of x element-wise: `1 / x`
 *
 * ```js
 * const x = tf.tensor1d([0, 1, 2]);
 *
 * x.reciprocal().print();  // or tf.reciprocal(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","reciprocal");return(0,r.ENGINE).runKernel(n.Reciprocal,{x:t})}})}),R("8wbQq",function(e,t){c(e.exports,"relu",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({relu_:/**
 * Computes rectified linear element-wise: `max(x, 0)`.
 *
 * ```js
 * const x = tf.tensor1d([-1, 2, -3, 4]);
 *
 * x.relu().print();  // or tf.relu(x)
 * ```
 * @param x The input tensor. If the dtype is `bool`, the output dtype will be
 *     `int32`.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","relu");return(0,r.ENGINE).runKernel(n.Relu,{x:t})}})}),R("fvNYr",function(e,t){c(e.exports,"relu6",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({relu6_:/**
 * Computes rectified linear 6 element-wise: `min(max(x, 0), 6)`.
 *
 * ```js
 * const x = tf.tensor1d([-1, 2, -3, 8]);
 *
 * x.relu6().print();  // or tf.relu6(x)
 * ```
 * @param x The input tensor. If the dtype is `bool`, the output dtype will be
 *     `int32`.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","relu6");return(0,r.ENGINE).runKernel(n.Relu6,{x:t})}})}),R("6act6",function(e,t){c(e.exports,"reverse",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({reverse_:/**
 * Reverses a `tf.Tensor` along a specified axis.
 *
 * Also available are stricter rank-specific methods that assert that `x` is
 * of the given rank:
 *   - `tf.reverse1d`
 *   - `tf.reverse2d`
 *   - `tf.reverse3d`
 *   - `tf.reverse4d`
 *
 * Except `tf.reverse1d` (which does not have axis param), all methods have
 * same signature as this method.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3, 4]);
 *
 * x.reverse().print();
 * ```
 *
 * ```js
 * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);
 *
 * const axis = 1;
 * x.reverse(axis).print();
 * ```
 * @param x The input tensor to be reversed.
 * @param axis The set of dimensions to reverse. Must be in the
 *     range [-rank(x), rank(x)). Defaults to all axes.
 *
 * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}
 */function(e,t){let s=(0,a.convertToTensor)(e,"x","reverse");return(0,r.ENGINE).runKernel(n.Reverse,{x:s},{dims:t})}})}),R("2KcE1",function(e,t){c(e.exports,"reverse1d",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("jqSCG"),s=A("6act6");let i=/* @__PURE__ */(0,a.op)({reverse1d_:/**
 * Reverses a `tf.Tensor1D`.
 *
 * @param x The input tensor.
 */function(e){let t=(0,r.convertToTensor)(e,"x","reverse");return n.assert(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),(0,s.reverse)(t,0)}})}),R("8EvRg",function(e,t){c(e.exports,"reverse2d",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("jqSCG"),s=A("6act6");let i=/* @__PURE__ */(0,a.op)({reverse2d_:/**
 * Reverses a `tf.Tensor2D` along a specified axis.
 *
 * @param x The input tensor.
 * @param axis The set of dimensions to reverse. Must be in the
 *     range [-rank(x), rank(x)). Defaults to all axes.
 */function(e,t){let a=(0,r.convertToTensor)(e,"x","reverse");return n.assert(2===a.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${a.rank}.`),(0,s.reverse)(a,t)}})}),R("c9r0k",function(e,t){c(e.exports,"reverse3d",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("jqSCG"),s=A("6act6");let i=/* @__PURE__ */(0,a.op)({reverse3d_:/**
 * Reverses a `tf.Tensor3D` along a specified axis.
 *
 * @param x The input tensor.
 * @param axis The set of dimensions to reverse. Must be in the
 *     range [-rank(x), rank(x)). Defaults to all axes.
 */function(e,t){let a=(0,r.convertToTensor)(e,"x","reverse");return n.assert(3===a.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${a.rank}.`),(0,s.reverse)(a,t)}})}),R("bFrHw",function(e,t){c(e.exports,"reverse4d",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("jqSCG"),s=A("6act6");let i=/* @__PURE__ */(0,a.op)({reverse4d_:/**
 * Reverses a `tf.Tensor4D` along a specified axis.
 *
 * @param x The input tensor.
 * @param axis The set of dimensions to reverse. Must be in the
 *     range [-rank(x), rank(x)). Defaults to all axes.
 */function(e,t){let a=(0,r.convertToTensor)(e,"x","reverse");return n.assert(4===a.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${a.rank}.`),(0,s.reverse)(a,t)}})}),R("9YKoa",function(e,t){c(e.exports,"round",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({round_:/**
 * Computes round of input `tf.Tensor` element-wise: `round(x)`.
 * It implements banker's rounding.
 *
 * ```js
 * const x = tf.tensor1d([.6, 1.1, -3.3]);
 *
 * x.round().print();  // or tf.round(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","round");return(0,r.ENGINE).runKernel(n.Round,{x:t})}})}),R("5pj7R",function(e,t){c(e.exports,"rsqrt",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({rsqrt_:/**
 * Computes reciprocal of square root of the input `tf.Tensor` element-wise:
 * `y = 1 / sqrt(x)`
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 4, -1]);
 *
 * x.rsqrt().print();  // or tf.rsqrt(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","rsqrt","float32");return(0,r.ENGINE).runKernel(n.Rsqrt,{x:t})}})}),R("b636r",function(e,t){c(e.exports,"selu",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({selu_:/**
 * Computes scaled exponential linear element-wise.
 *
 * `x < 0 ? scale * alpha * (exp(x) - 1) : scale * x`
 *
 * ```js
 * const x = tf.tensor1d([-1, 2, -3, 4]);
 *
 * x.selu().print();  // or tf.selu(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","selu");return(0,r.ENGINE).runKernel(n.Selu,{x:t})}})}),R("8uLn4",function(e,t){c(e.exports,"separableConv2d",()=>l);var r=A("5xBLk"),n=A("8cCb2"),a=A("5Nkm1"),s=A("182Rc"),i=A("jqSCG"),o=A("4sqA7");let l=/* @__PURE__ */(0,i.op)({separableConv2d_:/**
 * 2-D convolution with separable filters.
 *
 * Performs a depthwise convolution that acts separately on channels followed
 * by a pointwise convolution that mixes channels. Note that this is
 * separability between dimensions [1, 2] and 3, not spatial separability
 * between dimensions 1 and 2.
 *
 * See
 * [https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d](
 *     https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d)
 * for more details.
 *
 * @param x The input tensor, of rank 4 or rank 3, of shape
 *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is
 * assumed.
 * @param depthwiseFilter The depthwise filter tensor, rank 4, of shape
 *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`. This is
 *     the filter used in the first step.
 * @param pointwiseFilter The pointwise filter tensor, rank 4, of shape
 *     `[1, 1, inChannels * channelMultiplier, outChannels]`. This is
 *     the filter used in the second step.
 * @param strides The strides of the convolution: `[strideHeight,
 * strideWidth]`. If strides is a single number, then `strideHeight ==
 * strideWidth`.
 * @param pad The type of padding algorithm.
 *   - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *   - `valid`: output will be smaller than input if filter is larger
 *       than 1x1.
 *   - For more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`
 *     in which we sample input values across the height and width dimensions
 *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single
 *     number, then `dilationHeight == dilationWidth`. If it is greater than
 *     1, then all values of `strides` must be 1.
 * @param dataFormat: An optional string from: "NHWC", "NCHW". Defaults to
 *     "NHWC". Specify the data format of the input and output data. With the
 *     default format "NHWC", the data is stored in the order of: [batch,
 *     height, width, channels]. Only "NHWC" is currently supported.
 *
 * @doc {heading: 'Operations', subheading: 'Convolution'}
 */function(e,t,i,l,u,c=[1,1],d="NHWC"){let p=(0,r.convertToTensor)(e,"x","separableConv2d"),h=(0,r.convertToTensor)(t,"depthwiseFilter","separableConv2d"),f=(0,r.convertToTensor)(i,"pointwiseFilter","separableConv2d"),m=p,g=!1;if(3===p.rank&&(g=!0,m=(0,o.reshape)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===d)throw Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");n.assert(4===m.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`),n.assert(4===h.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${h.rank}.`),n.assert(4===f.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${h.rank}.`),n.assert(1===f.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`),n.assert(1===f.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`);let y=h.shape[2],b=h.shape[3];n.assert(f.shape[2]===y*b,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`);let v=(0,s.depthwiseConv2d)(m,h,l,u,d,c),x=(0,a.conv2d)(v,f,1,"valid",d);return g?(0,o.reshape)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})}),R("d05b8",function(e,t){c(e.exports,"setdiff1dAsync",()=>i);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("9jCh7"),n=A("5xBLk"),a=A("8cCb2");/**
 * Computes the difference between two lists of numbers.
 *
 * Given a Tensor `x` and a Tensor `y`, this operation returns a Tensor `out`
 * that represents all values that are in `x` but not in `y`. The returned
 * Tensor `out` is sorted in the same order that the numbers appear in `x`
 * (duplicates are preserved). This operation also returns a Tensor indices that
 * represents the position of each out element in `x`. In other words:
 *
 * `out[i] = x[idx[i]] for i in [0, 1, ..., out.length - 1]`
 *
 * ```js
 * const x = [1, 2, 3, 4, 5, 6];
 * const y = [1, 3, 5];
 *
 * const [out, indices] = await tf.setdiff1dAsync(x, y);
 * out.print(); // [2, 4, 6]
 * indices.print(); // [1, 3, 5]
 * ```
 *
 * @param x 1-D Tensor. Values to keep.
 * @param y 1-D Tensor. Must have the same type as x. Values to exclude in the
 *     output.
 * @returns Promise of Tensor tuple [out, indices].
 *  out: Tensor with the same type as x.
 *  indices: A Tensor of type int32.
 *
 * @doc {heading: 'Tensors', subheading: 'Transformations'}
 */async function s(e,t){let s=(0,n.convertToTensor)(e,"x","setdiff1d"),i=(0,n.convertToTensor)(t,"y","setdiff1d");a.assert(s.dtype===i.dtype,()=>`x and y should have the same dtype, but got x (${s.dtype}) and y (${i.dtype}).`),a.assert(1===s.rank,()=>`x should be 1D tensor, but got x (${s.shape}).`),a.assert(1===i.rank,()=>`y should be 1D tensor, but got y (${i.shape}).`);let o=await s.data(),l=await i.data(),u=new Set(l),c=0;for(let e=0;e<o.length;e++)!u.has(o[e])&&c++;let d=new r.TensorBuffer([c],s.dtype),p=new r.TensorBuffer([c],"int32");for(let e=0,t=0;e<o.length;e++)!u.has(o[e])&&(d.values[t]=o[e],p.values[t]=e,t++);return[d.toTensor(),p.toTensor()]}let i=s}),R("3zBCT",function(e,t){c(e.exports,"sign",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({sign_:/**
 * Returns an element-wise indication of the sign of a number.
 *
 * ```js
 * const x = tf.tensor1d([.6, 1.1, -3.3, NaN, 0]);
 *
 * x.sign().print();  // or tf.sign(x)
 * ```
 * @param x The input Tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","sign");return(0,r.ENGINE).runKernel(n.Sign,{x:t})}})}),R("4xqM7",function(e,t){c(e.exports,"sin",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({sin_:/**
 * Computes sin of the input Tensor element-wise: `sin(x)`
 *
 * ```js
 * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);
 *
 * x.sin().print();  // or tf.sin(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","sin","float32");return(0,r.ENGINE).runKernel(n.Sin,{x:t})}})}),R("fAOzm",function(e,t){c(e.exports,"sinh",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({sinh_:/**
 * Computes hyperbolic sin of the input `tf.Tensor` element-wise: `sinh(x)`
 *
 * ```js
 * const x = tf.tensor1d([0, 1, -1, .7]);
 *
 * x.sinh().print();  // or tf.sinh(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","sinh");return(0,r.ENGINE).runKernel(n.Sinh,{x:t})}})}),R("5vfHb",function(e,t){c(e.exports,"slice1d",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("jqSCG"),s=A("79KOG");let i=/* @__PURE__ */(0,a.op)({slice1d_:/**
 * Extracts a 1D slice from 1D array starting at coordinates `begin` and is
 * of length `size`. See `slice` for details.
 */function(e,t,a){let i=(0,r.convertToTensor)(e,"x","slice1d");return n.assert(1===i.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${i.rank} tensor`),(0,s.slice)(i,[t],[a])}})}),R("gKBEV",function(e,t){c(e.exports,"slice2d",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("jqSCG"),s=A("79KOG");let i=/* @__PURE__ */(0,a.op)({slice2d_:/**
 * Extracts a 2D slice from a 2D array starting at coordinates `begin` and
 * is of size `size`. See `slice` for details.
 */function(e,t,a){let i=(0,r.convertToTensor)(e,"x","slice2d");return n.assert(2===i.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${i.rank} tensor`),(0,s.slice)(i,t,a)}})}),R("22oMq",function(e,t){c(e.exports,"slice3d",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("jqSCG"),s=A("79KOG");let i=/* @__PURE__ */(0,a.op)({slice3d_:/**
 * Extracts a 3D slice from a 3D array starting at coordinates `begin` and
 * is of size `size`. See `slice` for details.
 */function(e,t,a){let i=(0,r.convertToTensor)(e,"x","slice3d");return n.assert(3===i.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${i.rank} tensor`),(0,s.slice)(i,t,a)}})}),R("8hEpb",function(e,t){c(e.exports,"slice4d",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("jqSCG"),s=A("79KOG");let i=/* @__PURE__ */(0,a.op)({slice4d_:/**
 * Extracts a 4D slice from a 4D array starting at coordinates `begin` and
 * is of size `size`. See `slice` for details.
 */function(e,t,a){let i=(0,r.convertToTensor)(e,"x","slice4d");return n.assert(4===i.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${i.rank} tensor`),(0,s.slice)(i,t,a)}})}),R("dnEu5",function(e,t){c(e.exports,"softmax",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({softmax_:/**
 * Computes the softmax normalized vector given the logits.
 *
 * ```js
 * const a = tf.tensor1d([1, 2, 3]);
 *
 * a.softmax().print();  // or tf.softmax(a)
 * ```
 *
 * ```js
 * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);
 *
 * a.softmax().print();  // or tf.softmax(a)
 * ```
 *
 * @param logits The logits array.
 * @param dim The dimension softmax would be performed on. Defaults to `-1`
 *     which indicates the last dimension.
 *
 * @doc {heading: 'Operations', subheading: 'Normalization'}
 */function(e,t=-1){let s=(0,a.convertToTensor)(e,"logits","softmax","float32");if(-1===t&&(t=s.rank-1),t!==s.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${s.rank} and dim was ${t}`);let i={dim:t};return(0,r.ENGINE).runKernel(n.Softmax,{logits:s},i)}})}),R("1Lg9u",function(e,t){c(e.exports,"fft",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("8cCb2"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({fft_:/**
 * Fast Fourier transform.
 *
 * Computes the 1-dimensional discrete Fourier transform over the inner-most
 * dimension of input.
 *
 * ```js
 * const real = tf.tensor1d([1, 2, 3]);
 * const imag = tf.tensor1d([1, 2, 3]);
 * const x = tf.complex(real, imag);
 *
 * x.fft().print();  // tf.spectral.fft(x).print();
 * ```
 * @param input The complex input to compute an fft over.
 *
 * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}
 */function(e){return(0,a.assert)("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),(0,r.ENGINE).runKernel(n.FFT,{input:e})}})}),R("3l9Cr",function(e,t){c(e.exports,"ifft",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("8cCb2"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({ifft_:/**
 * Inverse fast Fourier transform.
 *
 * Computes the inverse 1-dimensional discrete Fourier transform over the
 * inner-most dimension of input.
 *
 * ```js
 * const real = tf.tensor1d([1, 2, 3]);
 * const imag = tf.tensor1d([1, 2, 3]);
 * const x = tf.complex(real, imag);
 *
 * x.ifft().print();  // tf.spectral.ifft(x).print();
 * ```
 * @param input The complex input to compute an ifft over.
 *
 * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}
 */function(e){return(0,a.assert)("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),(0,r.ENGINE).runKernel(n.IFFT,{input:e})}})}),R("hrsi6",function(e,t){c(e.exports,"irfft",()=>f);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("20oDZ"),n=A("iTu6j"),a=A("1d8KH"),s=A("jZc0w"),i=A("jqSCG"),o=A("b7x1G"),l=A("4sqA7"),u=A("6act6"),d=A("3xp7o"),p=A("79KOG"),h=A("3l9Cr");let f=/* @__PURE__ */(0,i.op)({irfft_:/**
 * Inversed real value input fast Fourier transform.
 *
 * Computes the 1-dimensional inversed discrete Fourier transform over the
 * inner-most dimension of the real input.
 *
 * ```js
 * const real = tf.tensor1d([1, 2, 3]);
 * const imag = tf.tensor1d([0, 0, 0]);
 * const x = tf.complex(real, imag);
 *
 * x.irfft().print();
 * ```
 * @param input The real value input to compute an irfft over.
 *
 * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}
 */function(e){let t;let i=e.shape[e.shape.length-1],c=e.size/i;if(i<=2){let r=(0,l.reshape)(e,[c,i]);t=(0,h.ifft)(r)}else{// The length of unique components of the DFT of a real-valued signal
// is 2 * (input_len - 1)
let f=[c,2*(i-1)],m=(0,l.reshape)((0,o.real)(e),[c,i]),g=(0,l.reshape)((0,a.imag)(e),[c,i]),y=(0,u.reverse)((0,p.slice)(m,[0,1],[c,i-2]),1),b=(0,s.mul)((0,u.reverse)((0,p.slice)(g,[0,1],[c,i-2]),1),(0,d.scalar)(-1)),v=(0,n.concat)([m,y],1),x=(0,n.concat)([g,b],1),w=(0,l.reshape)((0,r.complex)(v,x),[f[0],f[1]]);t=(0,h.ifft)(w)}// reshape the result if the input is 3D tensor.
if(t=(0,o.real)(t),3===e.rank&&0!==e.shape[0]){let r=t,n=e.shape[0];t=(0,l.reshape)(t,[n,t.shape[0]/n,t.shape[1]]),r.dispose()}return t}})}),R("cafDa",function(e,t){c(e.exports,"rfft",()=>m);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2"),n=A("20oDZ"),a=A("iTu6j"),s=A("1d8KH"),i=A("jqSCG"),o=A("b7x1G"),l=A("4sqA7"),u=A("79KOG"),d=A("9fmAX"),p=A("hxi4c"),h=A("8EjnK"),f=A("1Lg9u");let m=/* @__PURE__ */(0,i.op)({rfft_:/**
 * Real value input fast Fourier transform.
 *
 * Computes the 1-dimensional discrete Fourier transform over the
 * inner-most dimension of the real input.
 *
 * ```js
 * const real = tf.tensor1d([1, 2, 3]);
 *
 * real.rfft().print();
 * ```
 * @param input The real value input to compute an rfft over.
 *
 * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}
 */function(e,t){let i;(0,r.assert)("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let c=e.shape[e.shape.length-1],m=e.size/c;if(null!=t&&t<c){// Need to crop
let r=e.shape.map(e=>0),n=e.shape.map(e=>e);n[e.shape.length-1]=t,i=(0,u.slice)(e,r,n),c=t}else if(null!=t&&t>c){// Need to pad with zeros
let r=e.shape.map(e=>e);r[e.shape.length-1]=t-c,i=(0,a.concat)([e,(0,p.zeros)(r)],e.shape.length-1),c=t}else i=e;// Complement the input with zero imaginary numbers.
let g=(0,h.zerosLike)(i),y=(0,l.reshape)((0,n.complex)(i,g),[m,c]),b=(0,f.fft)(y),v=Math.floor(c/2)+1,x=(0,o.real)(b),w=(0,s.imag)(b),k=(0,d.split)(x,[v,c-v],x.shape.length-1),S=(0,d.split)(w,[v,c-v],w.shape.length-1),N=i.shape.slice();return N[i.shape.length-1]=v,(0,l.reshape)((0,n.complex)(k[0],S[0]),N)}})}),R("9fmAX",function(e,t){c(e.exports,"split",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({split_:/**
 * Splits a `tf.Tensor` into sub tensors.
 *
 * If `numOrSizeSplits` is a number, splits `x` along dimension `axis`
 * into `numOrSizeSplits` smaller tensors.
 * Requires that `numOrSizeSplits` evenly divides `x.shape[axis]`.
 *
 * If `numOrSizeSplits` is a number array, splits `x` into
 * `numOrSizeSplits.length` pieces. The shape of the `i`-th piece has the
 * same size as `x` except along dimension `axis` where the size is
 * `numOrSizeSplits[i]`.
 *
 * ```js
 * const x = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8], [2, 4]);
 * const [a, b] = tf.split(x, 2, 1);
 * a.print();
 * b.print();
 *
 * const [c, d, e] = tf.split(x, [1, 2, 1], 1);
 * c.print();
 * d.print();
 * e.print();
 * ```
 *
 * @param x The input tensor to split.
 * @param numOrSizeSplits Either an integer indicating the number of
 * splits along the axis or an array of integers containing the sizes of
 * each output tensor along the axis. If a number then it must evenly divide
 * `x.shape[axis]`; otherwise the sum of sizes must match `x.shape[axis]`.
 * Can contain one -1 indicating that dimension is to be inferred.
 * @param axis The dimension along which to split. Defaults to 0 (the first
 * dim).
 *
 * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}
 */function(e,t,s=0){let i=(0,a.convertToTensor)(e,"x","split");return(0,r.ENGINE).runKernel(n.SplitV,{x:i},{numOrSizeSplits:t,axis:s})}})}),R("ay2Nw",function(e,t){c(e.exports,"squaredDifference",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("3w4Rg"),s=A("5xBLk"),i=A("8BaGO"),o=A("jqSCG");let l=/* @__PURE__ */(0,o.op)({squaredDifference_:/**
 * Returns (a - b) * (a - b) element-wise.
 * Supports broadcasting.
 *
 * ```js
 * const a = tf.tensor1d([1, 4, 3, 16]);
 * const b = tf.tensor1d([1, 2, 9, 4]);
 *
 * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)
 * ```
 *
 * ```js
 * // Broadcast squared difference  a with b.
 * const a = tf.tensor1d([2, 4, 6, 8]);
 * const b = tf.scalar(5);
 *
 * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)
 * ```
 *
 * @param a The first tensor.
 * @param b The second tensor. Must have the same type as `a`.
 *
 * @doc {heading: 'Operations', subheading: 'Arithmetic'}
 */function(e,t){let o=(0,s.convertToTensor)(e,"a","squaredDifference"),l=(0,s.convertToTensor)(t,"b","squaredDifference");[o,l]=(0,a.makeTypesMatch)(o,l),(0,i.assertAndGetBroadcastShape)(o.shape,l.shape);let u={a:o,b:l};return(0,r.ENGINE).runKernel(n.SquaredDifference,u,{})}})}),R("kX8Hd",function(e,t){c(e.exports,"squeeze",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("jqSCG"),s=A("4sqA7");let i=/* @__PURE__ */(0,a.op)({squeeze_:/**
 * Removes dimensions of size 1 from the shape of a `tf.Tensor`.
 *
 * ```js
 * const x = tf.tensor([1, 2, 3, 4], [1, 1, 4]);
 * x.squeeze().print();
 * ```
 *
 * @param x The input tensor to be squeezed.
 * @param axis An optional list of numbers. If specified, only
 *     squeezes the dimensions listed. The dimension index starts at 0. It
 * is an error to squeeze a dimension that is not 1.
 *
 * @doc {heading: 'Tensors', subheading: 'Transformations'}
 */function(e,t){let a=(0,r.convertToTensor)(e,"x","squeeze","string_or_numeric");return(0,s.reshape)(a,(0,n.squeezeShape)(a.shape,t).newShape)}})}),R("8BrLX",function(e,t){c(e.exports,"stack",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({stack_:/**
 * Stacks a list of rank-`R` `tf.Tensor`s into one rank-`(R+1)` `tf.Tensor`.
 *
 * ```js
 * const a = tf.tensor1d([1, 2]);
 * const b = tf.tensor1d([3, 4]);
 * const c = tf.tensor1d([5, 6]);
 * tf.stack([a, b, c]).print();
 * ```
 *
 * @param tensors A list of tensor objects with the same shape and dtype.
 * @param axis The axis to stack along. Defaults to 0 (the first dim).
 *
 * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}
 */function(e,t=0){let i=(0,a.convertToTensorArray)(e,"tensors","stack","string_or_numeric");return s.assert(i.length>=1,()=>"Pass at least one tensor to tf.stack"),i.length>0&&s.assert(t<=i[0].rank,()=>"Axis must be <= rank of the tensor"),(0,r.ENGINE).runKernel(n.Pack,i,{axis:t})}})}),R("lWdx1",function(e,t){c(e.exports,"step",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({step_:/**
 * Computes step of the input `tf.Tensor` element-wise: `x > 0 ? 1 : alpha`
 *
 * ```js
 * const x = tf.tensor1d([0, 2, -1, -3]);
 *
 * x.step(.5).print();  // or tf.step(x, .5)
 * ```
 * @param x The input tensor.
 * @param alpha The gradient when input is negative. Defaults to 0.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e,t=0){let s=(0,a.convertToTensor)(e,"x","step");return(0,r.ENGINE).runKernel(n.Step,{x:s},{alpha:t})}})}),R("dqRnt",function(e,t){c(e.exports,"stridedSlice",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({stridedSlice_:/**
 * Extracts a strided slice of a tensor.
 *
 * Roughly speaking, this op extracts a slice of size (end-begin)/stride from
 * the given input tensor (x). Starting at the location specified by begin the
 * slice continues by adding stride to the index until all dimensions are not
 * less than end. Note that a stride can be negative, which causes a reverse
 * slice.
 *
 * ```js
 * const t = tf.tensor3d([1, 1, 1 ,2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6],
 *    [3, 2, 3]);
 * t.stridedSlice([1, 0, 0], [2, 1, 3], [1, 1, 1]).print()  // [[[3, 3, 3]]]
 * t.stridedSlice([1, 0, 0], [2, 2, 3], [1, 1, 1]).print()  // [[[3, 3, 3],
 *                                                     // [4, 4, 4]]]
 * t.stridedSlice([1, -1, 0], [2, -3, 3], [1, -1, 1]).print() // [[[4, 4, 4],
 *                                                     // [3, 3, 3]]]
 * ```
 *
 * @param x The tensor to stride slice.
 * @param begin The coordinates to start the slice from.
 * @param end: The coordinates to end the slice at.
 * @param strides: The size of the slice.
 * @param beginMask: If the ith bit of beginMask is set, begin[i] is ignored
 *      and the fullest possible range in that dimension is used instead.
 * @param endMask: If the ith bit of endMask is set, end[i] is ignored
 *      and the fullest possible range in that dimension is used instead.
 * @param shrinkAxisMask: a bitmask where bit i implies that
 * the ith specification should shrink the dimensionality. begin and end must
 * imply a slice of size 1 in the dimension.
 *
 * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}
 */function(e,t,s,i,o=0,l=0,u=0,c=0,d=0){let p=(0,a.convertToTensor)(e,"x","stridedSlice","string_or_numeric");return(0,r.ENGINE).runKernel(n.StridedSlice,{x:p},{begin:t,end:s,strides:i,beginMask:o,endMask:l,ellipsisMask:u,newAxisMask:c,shrinkAxisMask:d})}})}),R("l8Hok",function(e,t){c(e.exports,"tan",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({tan_:/**
 * Computes tan of the input `tf.Tensor` element-wise, `tan(x)`
 *
 * ```js
 * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);
 *
 * x.tan().print();  // or tf.tan(x)
 * ```
 * @param x The input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Basic math'}
 */function(e){let t=(0,a.convertToTensor)(e,"x","tan","float32");return(0,r.ENGINE).runKernel(n.Tan,{x:t})}})}),R("lalFM",function(e,t){c(e.exports,"tensor1d",()=>s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("dKr4X");function s(e,t){(0,n.assertNonNull)(e);let s=(0,r.inferShape)(e,t);if(1!==s.length)throw Error("tensor1d() requires values to be a flat/TypedArray");return(0,a.makeTensor)(e,null,s,t)}}),R("gmMlv",function(e,t){c(e.exports,"tensor2d",()=>s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("dKr4X");function s(e,t,s){if((0,n.assertNonNull)(e),null!=t&&2!==t.length)throw Error("tensor2d() requires shape to have two numbers");let i=(0,r.inferShape)(e,s);if(2!==i.length&&1!==i.length)throw Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===i.length&&null==t)throw Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,a.makeTensor)(e,t,i,s)}}),R("6BSQ6",function(e,t){c(e.exports,"tensor4d",()=>s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("dKr4X");function s(e,t,s){if((0,n.assertNonNull)(e),null!=t&&4!==t.length)throw Error("tensor4d() requires shape to have four numbers");let i=(0,r.inferShape)(e,s);if(4!==i.length&&1!==i.length)throw Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===i.length&&null==t)throw Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,a.makeTensor)(e,t,i,s)}}),R("fjd6b",function(e,t){c(e.exports,"tensor5d",()=>s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("dKr4X");function s(e,t,s){if((0,n.assertNonNull)(e),null!=t&&5!==t.length)throw Error("tensor5d() requires shape to have five numbers");let i=(0,r.inferShape)(e,s);if(5!==i.length&&1!==i.length)throw Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===i.length&&null==t)throw Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,a.makeTensor)(e,t,i,s)}}),R("gCuDf",function(e,t){c(e.exports,"tensor6d",()=>s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("dKr4X");function s(e,t,s){if((0,n.assertNonNull)(e),null!=t&&6!==t.length)throw Error("tensor6d() requires shape to have six numbers");let i=(0,r.inferShape)(e,s);if(6!==i.length&&1!==i.length)throw Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===i.length&&null==t)throw Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||i,(0,a.makeTensor)(e,t,i,s)}}),R("4om7p",function(e,t){c(e.exports,"tensorScatterUpdate",()=>o);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG"),i=A("7wQGW");let o=(0,s.op)({tensorScatterUpdate_:/**
 * Creates a new tensor by applying sparse updates to individual
 * values or slices to the passed in tensor according to
 * indices. This operator is the similar to scatterNd op, except that the
 * udpates are scattered on an existing tensor (as opposed to a zero-tensor).
 *
 * If indices contains duplicates, then we pick the last update for the index.
 *
 * If an out of bound index is found on CPU, an error is returned.
 *
 * Warning: There are some GPU specific semantics for this operation.
 *  - If an out of bound index is found, the index is ignored.
 *  - The order in which updates are applied is nondeterministic, so the output
 * will be nondeterministic if indices contains duplicates.
 * ```js
 * const shape = [8];
 * const tensor = tf.ones(shape);
 * const indices = tf.tensor2d([4, 3, 1, 7], [4, 1], 'int32');
 * const updates = tf.tensor1d([9, 10, 11, 12]);
 *
 * tf.tensorScatterUpdate(tensor, indices, updates).print();
 *    //[1, 11, 1, 10, 9, 1, 1, 12]
 * ```
 *
 * @param tensor A Tensor. Tensor to copy/update.
 * @param indices The tensor contains the indices into the output tensor, must
 *     have at least 2 axes: (num_updates, index_depth).
 * @param updates The tensor contains the value for the indices.
 *
 * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}
 */function(e,t,s){let o=(0,a.convertToTensor)(e,"tensor","tensorScatterupdate"),l=(0,a.convertToTensor)(t,"indices","tensorScatterupdate","int32"),u=(0,a.convertToTensor)(s,"updates","tensorScatterupdate");if(i.validateInput(u,l,o.shape),o.dtype!==u.dtype)throw Error(`tensor and updates must have the same dtype, instead they are ${o.dtype} and ${u.dtype}.`);// tslint:disable-next-line: no-unnecessary-type-assertion
return(0,r.ENGINE).runKernel(n.TensorScatterUpdate,{tensor:o,indices:l,updates:u},{})}})}),R("cRAvI",function(e,t){c(e.exports,"topk",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({topk_:/**
 * Finds the values and indices of the `k` largest entries along the last
 * dimension.
 *
 * If the input is a vector (rank=1), finds the k largest entries in the vector
 * and outputs their values and indices as vectors. Thus values[j] is the j-th
 * largest entry in input, and its index is indices[j].
 * For higher rank inputs, computes the top k entries along the last dimension.
 *
 * If two elements are equal, the lower-index element appears first.
 *
 * ```js
 * const a = tf.tensor2d([[1, 5], [4, 3]]);
 * const {values, indices} = tf.topk(a);
 * values.print();
 * indices.print();
 * ```
 * @param x 1-D or higher `tf.Tensor` with last dimension being at least `k`.
 * @param k Number of top elements to look for along the last dimension.
 * @param sorted If true, the resulting `k` elements will be sorted by the
 *     values in descending order.
 *
 * @doc {heading: 'Operations', subheading: 'Evaluation'}
 */function(e,t=1,s=!0){let i=(0,a.convertToTensor)(e,"x","topk");if(0===i.rank)throw Error("topk() expects the input to be of rank 1 or higher");let o=i.shape[i.shape.length-1];if(t<0)throw Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);let[l,u]=(0,r.ENGINE).runKernel(n.TopK,{x:i},{k:t,sorted:s});return{values:l,indices:u}}})}),R("dE1HO",function(e,t){c(e.exports,"truncatedNormal",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2"),n=A("iG87S"),a=A("jqSCG"),s=A("7QK6b");let i=/* @__PURE__ */(0,a.op)({truncatedNormal_:/**
 * Creates a `tf.Tensor` with values sampled from a truncated normal
 * distribution.
 *
 * ```js
 * tf.truncatedNormal([2, 2]).print();
 * ```
 *
 * The generated values follow a normal distribution with specified mean and
 * standard deviation, except that values whose magnitude is more than 2
 * standard deviations from the mean are dropped and re-picked.
 *
 * @param shape An array of integers defining the output tensor shape.
 * @param mean The mean of the normal distribution.
 * @param stdDev The standard deviation of the normal distribution.
 * @param dtype The data type of the output tensor.
 * @param seed The seed for the random number generator.
 *
 * @doc {heading: 'Tensors', subheading: 'Creation'}
 */function(e,t=0,a=1,i,o){if((0,r.assertNonNegativeIntegerDimensions)(e),null!=i&&"bool"===i)throw Error("Unsupported data type $ { dtype }");let l=new s.MPRandGauss(t,a,i,!0,o),u=(0,n.buffer)(e,i);for(let e=0;e<u.values.length;e++)u.values[e]=l.nextValue();return u.toTensor()}})}),R("aEpp6",function(e,t){c(e.exports,"unique",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({unique_:/**
 * Finds unique elements along an axis of a tensor.
 *
 * It returns a tensor `values` containing all of the unique elements along the
 * `axis` of the given tensor `x` in the same order that they occur along the
 * `axis` in `x`; `x` does not need to be sorted. It also returns a tensor
 * `indices` the same size as the number of the elements in `x` along the `axis`
 * dimension. It contains the index in the unique output `values`.
 *
 * ```js
 * // A 1-D tensor
 * const a = tf.tensor1d([1, 1, 2, 4, 4, 4, 7, 8, 8]);
 * const {values, indices} = tf.unique(a);
 * values.print();   // [1, 2, 4, 7, 8,]
 * indices.print();  // [0, 0, 1, 2, 2, 2, 3, 4, 4]
 * ```
 *
 * ```js
 * // A 2-D tensor with axis=0
 * //
 * // 'a' is: [[1, 0, 0],
 * //          [1, 0, 0],
 * //          [2, 0, 0]]
 * const a = tf.tensor2d([[1, 0, 0], [1, 0, 0], [2, 0, 0]]);
 * const {values, indices} = tf.unique(a, 0)
 * values.print();   // [[1, 0, 0],
 *                   //  [2, 0, 0]]
 * indices.print();  // [0, 0, 1]
 * ```
 *
 * ```js
 * // A 2-D tensor with axis=1
 * //
 * // 'a' is: [[1, 0, 0],
 * //          [1, 0, 0],
 * //          [2, 0, 0]]
 * const a = tf.tensor2d([[1, 0, 0], [1, 0, 0], [2, 0, 0]]);
 * const {values, indices} = tf.unique(a, 1)
 * values.print();   // [[1, 0],
 *                   //  [1, 0],
 *                   //  [2, 0]]
 * indices.print();  // [0, 1, 1]
 * ```
 * @param x A tensor (int32, string, bool).
 * @param axis The axis of the tensor to find the unique elements.
 * @returns [uniqueElements, indices] (see above for details)
 *
 * @doc {heading: 'Operations', subheading: 'Evaluation'}
 */function(e,t=0){let i=(0,a.convertToTensor)(e,"x","unique","string_or_numeric");(0,s.assert)(i.rank>0,()=>"The input tensor must be at least 1D");let[o,l]=(0,r.ENGINE).runKernel(n.Unique,{x:i},{axis:t});return{values:o,indices:l}}})}),R("djGEF",function(e,t){c(e.exports,"unsortedSegmentSum",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({unsortedSegmentSum_:/**
 * Computes the sum along segments of a `tf.Tensor`.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 3, 4]);
 * const segmentIds = tf.tensor1d([1, 2, 0, 1], 'int32');
 * const numSegments = 3;
 *
 * x.unsortedSegmentSum(segmentIds, numSegments).print()
 * //or tf.unsortedSegmentSum(x, segmentIds, numSegments)
 * ```
 * @param x The `tf.Tensor` that will be summed along its segments.
 * @param segmentIds A `tf.Tensor1D` whose rank is equal to the rank of `x`'s
 * dimension along the `axis`.  Maps each element of `x` to a segment.
 * @param numSegments The number of distinct `segmentIds`.
 *
 * @doc {heading: 'Operations', subheading: 'Segment'}
 */function(e,t,i){let o=(0,a.convertToTensor)(e,"x","unsortedSegmentSum"),l=(0,a.convertToTensor)(t,"segmentIds","unsortedSegmentSum","int32");return(0,s.assert)((0,s.isInt)(i),()=>"numSegments must be of dtype int"),(0,r.ENGINE).runKernel(n.UnsortedSegmentSum,{x:o,segmentIds:l},{numSegments:i})}})}),R("gBOC6",function(e,t){c(e.exports,"unstack",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({unstack_:/**
 * Unstacks a `tf.Tensor` of rank-`R` into a list of rank-`(R-1)` `tf.Tensor`s.
 *
 * ```js
 * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);
 *
 * tf.unstack(a).forEach(tensor => tensor.print());
 * ```
 *
 * @param x A tensor object.
 * @param axis The axis to unstack along. Defaults to 0 (the first dim).
 *
 * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}
 */function(e,t=0){let i=(0,a.convertToTensor)(e,"x","unstack","string_or_numeric");return s.assert(t>=-i.shape.length&&t<i.shape.length,()=>`Axis = ${t} is not in [-${i.shape.length}, ${i.shape.length})`),(0,r.ENGINE).runKernel(n.Unpack,{value:i},{axis:t})}})}),R("igCyu",function(e,t){c(e.exports,"upperBound",()=>n);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("6PrVj");function n(e,t){return(0,r.searchSorted)(e,t,"right")}}),R("eoViB",function(e,t){c(e.exports,"variable",()=>n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN");function n(e,t=!0,n,a){return(0,r.ENGINE).makeVariable(e,t,n,a)}}),R("5t2or",function(e,t){c(e.exports,"whereAsync",()=>s);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("kNeGS"),n=A("5xBLk");/**
 * Returns the coordinates of true elements of condition.
 *
 * The coordinates are returned in a 2-D tensor where the first dimension (rows)
 * represents the number of true elements, and the second dimension (columns)
 * represents the coordinates of the true elements. Keep in mind, the shape of
 * the output tensor can vary depending on how many true values there are in
 * input. Indices are output in row-major order. The resulting tensor has the
 * shape `[numTrueElems, condition.rank]`.
 *
 * This is analogous to calling the python `tf.where(cond)` without an x or y.
 *
 * ```js
 * const cond = tf.tensor1d([false, false, true], 'bool');
 * const result = await tf.whereAsync(cond);
 * result.print();
 * ```
 *
 * @doc {heading: 'Operations', subheading: 'Logical'}
 */async function a(e){let t=(0,n.convertToTensor)(e,"condition","whereAsync","bool"),a=await t.data(),s=(0,r.whereImpl)(t.shape,a);return e!==t&&t.dispose(),s}let s=a}),R("kNeGS",function(e,t){c(e.exports,"whereImpl",()=>n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//** An implementation of the Where kernel shared between cpu and webgl */var r=A("iG87S");function n(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let a=(0,r.buffer)(e,"int32"),s=(0,r.buffer)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let r=a.indexToLoc(n[t]),i=t*e.length;s.values.set(r,i)}return s.toTensor()}}),R("4xhB2",function(e,t){c(e.exports,"booleanMaskAsync",()=>u);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("3qUjU"),s=A("4sqA7"),i=A("kX8Hd"),o=A("5t2or");/**
 * Apply boolean mask to tensor.
 *
 * ```js
 * const tensor = tf.tensor2d([1, 2, 3, 4, 5, 6], [3, 2]);
 * const mask = tf.tensor1d([1, 0, 1], 'bool');
 * const result = await tf.booleanMaskAsync(tensor, mask);
 * result.print();
 * ```
 *
 * @param tensor N-D tensor.
 * @param mask K-D boolean tensor, K <= N and K must be known statically.
 * @param axis A 0-D int Tensor representing the axis in tensor to mask from.
 *     By default, axis is 0 which will mask from the first dimension.
 *     Otherwise K + axis <= N.
 *
 * @doc {heading: 'Tensors', subheading: 'Slicing and Joining'}
 */async function l(e,t,l){let u=(0,r.convertToTensor)(e,"tensor","boolMask"),c=(0,r.convertToTensor)(t,"mask","boolMask","bool"),d=null==l?0:l,p=c.rank,h=u.shape;n.assert(p>0,()=>"mask cannot be scalar"),n.assertShapesMatch(h.slice(d,d+p),c.shape,"mask's shape must match the first K dimensions of tensor's shape,");let f=1;for(let e=d;e<d+p;e++)f*=h[e];let m=h.slice(0,d).concat([f],h.slice(d+p)),g=(0,s.reshape)(u,m),y=(0,s.reshape)(c,[-1]),b=await (0,o.whereAsync)(y),v=(0,i.squeeze)(b,[1]),x=(0,a.gather)(g,v,d);return e!==u&&u.dispose(),t!==c&&c.dispose(),v.dispose(),g.dispose(),y.dispose(),b.dispose(),x}let u=l}),R("gIiMY",function(e,t){c(e.exports,"movingAverage",()=>h);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("3w4Rg"),n=A("5xBLk"),a=A("8cCb2"),s=A("hgacW"),i=A("1QPqB"),o=A("jZc0w"),l=A("jqSCG"),u=A("ad1of"),d=A("3xp7o"),p=A("7kouu");let h=/* @__PURE__ */(0,l.op)({movingAverage_:/**
 * Compute the moving average of a variable.
 *
 * Without zeroDebias, the moving average operation is defined by:
 *   `v += delta`
 * where
 *   `delta = (1 - decay) * (x - v)`
 *
 * With zeroDebias (default), the `delta` term is scaled to debias the
 * effect of the (assumed) zero-initialization of `v`.
 *   `delta /= (1 - decay ^ step)`
 *
 * For more details on the zero-debiasing algorithm, see:
 *   https://arxiv.org/abs/1412.6980
 *
 * Note that this function is completely stateless and does not keep track of
 * step count. The step count needs to be maintained by the caller and passed
 * in as `step`.
 *
 * @param v The current moving average value.
 * @param x New input value, must have the same shape and dtype as `v`.
 * @param decay The decay factor. Typical values are 0.95 and 0.99.
 * @param step Step count.
 * @param zeroDebias: Whether zeroDebias is to be performed (default: `true`).
 * @returns The new moving average value.
 *
 * @doc {heading: 'Operations', subheading: 'Moving Average'}
 */function(e,t,l,c,h=!0){let f=(0,n.convertToTensor)(e,"v","movingAverage"),m=(0,n.convertToTensor)(t,"x","movingAverage"),g=(0,n.convertToTensor)(l,"decay","movingAverage");(0,r.assertTypesMatch)(f,m),a.assert(a.arraysEqual(f.shape,m.shape),()=>"Shape mismatch in v and x");let y=(0,d.scalar)(1),b=(0,p.sub)(y,g),v=(0,o.mul)((0,p.sub)(m,f),b);if(h){a.assert(null!=c,()=>"When using zeroDebias: true, step is required.");let e=(0,n.convertToTensor)(c,"step","movingAverage");v=(0,i.div)(v,(0,p.sub)(y,(0,u.pow)(g,e)))}return(0,s.add)(f,v)}})}),R("4wiJQ",function(e,t){c(e.exports,"scatterND",()=>l);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG"),o=A("7wQGW");let l=/* @__PURE__ */(0,i.op)({scatterND_:/**
 * Creates a new tensor by applying sparse updates to individual
 * values or slices within a zero tensor of the given shape tensor according to
 * indices. This operator is the inverse of the `tf.gatherND` operator which
 * extracts values or slices from a given tensor.
 *
 * ```js
 * const indices = tf.tensor2d([4, 3, 1, 7], [4, 1], 'int32');
 * const updates = tf.tensor1d([9, 10, 11, 12]);
 * const shape = [8];
 * tf.scatterND(indices, updates, shape).print() //[0, 11, 0, 10, 9, 0, 0, 12]
 * ```
 *
 * @param indices The tensor contains the indices into the output tensor.
 * @param updates The tensor contains the value for the indices.
 * @param shape: The shape of the output tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}
 */function(e,t,i){(0,s.assertNonNegativeIntegerDimensions)(i);let l=(0,a.convertToTensor)(e,"indices","scatterND","int32"),u=(0,a.convertToTensor)(t,"updates","scatterND");return o.validateInput(u,l,i),(0,r.ENGINE).runKernel(n.ScatterNd,{indices:l,updates:u},{shape:i})}})}),R("kMXcY",function(e,t){c(e.exports,"sparseToDense",()=>l);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("ch6b2"),s=A("5xBLk"),i=A("8cCb2"),o=A("jqSCG");let l=/* @__PURE__ */(0,o.op)({sparseToDense_:/**
 * Converts a sparse representation into a dense tensor.
 *
 * Builds an array dense with shape outputShape such that:
 *
 * // If sparseIndices is scalar
 * dense[i] = (i == sparseIndices ? sparseValues : defaultValue)
 *
 * // If sparseIndices is a vector, then for each i
 * dense[sparseIndices[i]] = sparseValues[i]
 *
 * // If sparseIndices is an n by d matrix, then for each i in [0, n)
 * dense[sparseIndices[i][0], ..., sparseIndices[i][d-1]] = sparseValues[i]
 * All other values in dense are set to defaultValue. If sparseValues is a
 * scalar, all sparse indices are set to this single value.
 *
 * If indices are repeated the final value is summed over all values for those
 * indices.
 *
 * ```js
 * const indices = tf.tensor1d([4, 5, 6, 1, 2, 3], 'int32');
 * const values = tf.tensor1d([10, 11, 12, 13, 14, 15], 'float32');
 * const shape = [8];
 * tf.sparseToDense(indices, values, shape).print();
 * ```
 *
 * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.
 * sparseIndices[i] contains the complete index where sparseValues[i] will be
 * placed.
 * @param sparseValues A 0-D or 1-D Tensor. Values
 * corresponding to each row of sparseIndices, or a scalar value to be used for
 * all sparse indices.
 * @param outputShape Shape of the dense output tensor. The type is inferred.
 * @param defaultValue Scalar. Value to set for indices not specified in
 * sparseIndices. Defaults to zero.
 *
 * @doc {heading: 'Operations', subheading: 'Normalization'}
 */function(e,t,o,l=0){(0,i.assertNonNegativeIntegerDimensions)(o);let u=(0,s.convertToTensor)(e,"sparseIndices","sparseToDense","int32"),c=(0,s.convertToTensor)(t,"sparseValues","sparseToDense","string_or_numeric"),d=(0,s.convertToTensor)(l,"defaultValue","sparseToDense",c.dtype);return a.validateInput(u,c,o,d),(0,r.ENGINE).runKernel(n.SparseToDense,{sparseIndices:u,sparseValues:c,defaultValue:d},{outputShape:o})}})}),R("ch6b2",function(e,t){c(e.exports,"validateInput",()=>r);/**
 * Validate sparseToDense inputs.
 *
 * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.
 * sparseIndices[i] contains the complete index where sparseValues[i] will be
 * placed.
 * @param sparseValues A 0-D or 1-D Tensor. Values
 * corresponding to each row of sparseIndices, or a scalar value to be used for
 * all sparse indices.
 * @param outputShape number[]. Shape of the dense output tensor.
 * @param validateIndices boolean. indice validation is not supported, error
 * will be thrown if it is set.
 */function r(e,t,r,n){if("int32"!==e.dtype)throw Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(r.length!==s)throw Error(`outputShape has incorrect number of elements:, ${r.length}, should be: ${s}.`);let i=t.size;if(!(0===t.rank||1===t.rank&&i===a))throw Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==n.dtype)throw Error("sparseValues.dtype must match defaultValues.dtype")}}),R("5FwF9",function(e,t){c(e.exports,"gatherND",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({gatherND_:/**
 * Gather slices from input tensor into a Tensor with shape specified by
 * `indices`.
 *
 * `indices` is a K-dimensional integer tensor, best thought of as a
 * (K-1)-dimensional tensor of indices into input, where each element defines a
 * slice of input:
 * output[\\(i_0, ..., i_{K-2}\\)] = input[indices[\\(i_0, ..., i_{K-2}\\)]]
 *
 * Whereas in `tf.gather`, `indices` defines slices into the first dimension of
 * input, in `tf.gatherND`, `indices` defines slices into the first N dimensions
 * of input, where N = indices.shape[-1].
 *
 * The last dimension of indices can be at most the rank of input:
 * indices.shape[-1] <= input.rank
 *
 * The last dimension of `indices` corresponds to elements
 * (if indices.shape[-1] == input.rank) or slices
 * (if indices.shape[-1] < input.rank) along dimension indices.shape[-1] of
 * input.
 * The output tensor has shape
 * indices.shape[:-1] + input.shape[indices.shape[-1]:]
 *
 * Note that on CPU, if an out of bound index is found, an error is returned. On
 * GPU, if an out of bound index is found, a 0 is stored in the corresponding
 * output value.
 *
 * ```js
 * const indices = tf.tensor2d([0, 1, 1, 0], [2,2], 'int32');
 * const input = tf.tensor2d([9, 10, 11, 12], [2, 2]);
 * tf.gatherND(input, indices).print() // [10, 11]
 * ```
 *
 * @param x The tensor from which to gather values.
 * @param indices Index tensor, must be of type int32.
 *
 * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}
 */function(e,t){let s=(0,a.convertToTensor)(t,"indices","gatherND","int32"),i=(0,a.convertToTensor)(e,"x","gatherND","string_or_numeric");return(0,r.ENGINE).runKernel(n.GatherNd,{params:i,indices:s})}})}),R("5kLyC",function(e,t){c(e.exports,"dropout",()=>h);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("9jCh7"),n=A("5xBLk"),a=A("8cCb2"),s=A("hgacW"),i=A("1QPqB"),o=A("273XW"),l=A("4ZUCz"),u=A("jZc0w"),d=A("jqSCG"),p=A("j8sic");let h=/* @__PURE__ */(0,d.op)({dropout_:/**
 * Computes dropout.
 *
 * ```js
 * const x = tf.tensor1d([1, 2, 2, 1]);
 * const rate = 0.75;
 * const output = tf.dropout(x, rate);
 * output.print();
 * ```
 *
 * @param x A floating point Tensor or TensorLike.
 * @param rate A float in the range [0, 1). The probability that each element
 *   of x is discarded.
 * @param noiseShape An array of numbers of type int32, representing the
 * shape for randomly generated keep/drop flags. If the noiseShape has null
 * value, it will be automatically replaced with the x's relative dimension
 * size. Optional.
 * @param seed Used to create random seeds. Optional.
 * @returns A Tensor of the same shape of x.
 *
 * @doc {heading: 'Operations', subheading: 'Dropout'}
 */function(e,t,c,d){let h=(0,n.convertToTensor)(e,"x","dropout");if(a.assert("float32"===h.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${h.dtype} tensor instead.`),a.assert(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof r.Tensor?h.clone():h;let f=(0,o.getNoiseShape)(h,c),m=1-t,g=(0,i.div)((0,l.floor)((0,s.add)((0,p.randomUniform)(f,0,1,"float32",d),m)),m);return(0,u.mul)(h,g)}})}),R("273XW",function(e,t){c(e.exports,"getNoiseShape",()=>n);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2");function n(e,t){if(null==t)return e.shape.slice();if(r.arraysEqual(e.shape,t))return t;if(e.shape.length===t.length){let r=[];for(let n=0;n<e.shape.length;n++)null==t[n]&&null!=e.shape[n]?r.push(e.shape[n]):r.push(t[n]);return r}return t}}),R("j5jow",function(e,t){c(e.exports,"enclosingPowerOfTwo",()=>n),c(e.exports,"cosineWindow",()=>a);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("lalFM");function n(e){// Return 2**N for integer N such that 2**N >= value.
return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function a(e,t,n){let a=1-e%2,s=new Float32Array(e);for(let r=0;r<e;++r){let i=2*Math.PI*r/(e+a-1);s[r]=t-n*Math.cos(i)}return(0,r.tensor1d)(s,"float32")}}),R("8mg8Q",function(e,t){c(e.exports,"inTopKAsync",()=>i);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("erbmM");/**
 * Returns whether the targets are in the top K predictions.
 *
 * ```js
 * const predictions = tf.tensor2d([[20, 10, 40, 30], [30, 50, -20, 10]]);
 * const targets = tf.tensor1d([2, 0]);
 * const precision = await tf.inTopKAsync(predictions, targets);
 * precision.print();
 * ```
 * @param predictions 2-D or higher `tf.Tensor` with last dimension being
 *     at least `k`.
 * @param targets 1-D or higher `tf.Tensor`.
 * @param k Optional Number of top elements to look at for computing precision,
 *     default to 1.
 *
 * @doc {heading: 'Operations', subheading: 'Evaluation'}
 */async function s(e,t,s=1){let i=(0,r.convertToTensor)(e,"predictions","inTopK"),o=(0,r.convertToTensor)(t,"targets","inTopK");(0,n.assert)(i.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${i.rank}`),(0,n.assert)(i.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${i.rank} and targets rank ${o.rank}`),(0,n.assertShapesMatch)(i.shape.slice(0,i.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let l=i.shape[i.shape.length-1];(0,n.assert)(s>0&&s<=l,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${l}), but got ${s}`);let u=await i.data(),c=await o.data(),[d,p]=[u.length/l,l],h=(0,n.getTypedArrayFromDType)("bool",d);for(let e=0;e<d;e++){let t=e*p,r=u.subarray(t,t+p),n=[];for(let e=0;e<r.length;e++)n.push({value:r[e],index:e});n.sort((e,t)=>t.value-e.value),h[e]=0;for(let t=0;t<s;t++)if(n[t].index===c[e]){h[e]=1;break}}// Output precision has the same shape as targets.
return e!==i&&i.dispose(),t!==o&&o.dispose(),(0,a.tensor)(h,o.shape,"bool")}let i=s}),R("jDZRN",function(e,t){c(e.exports,"conv2d",()=>A("6GXo4").conv2d),c(e.exports,"depthwiseConv2d",()=>A("d71bK").depthwiseConv2d),c(e.exports,"matMul",()=>A("1q6Gm").matMul),A("6GXo4"),A("d71bK"),A("1q6Gm")}),R("6GXo4",function(e,t){c(e.exports,"conv2d",()=>b);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("92fpA"),a=A("hl418"),s=A("3w4Rg"),i=A("5xBLk"),o=A("8cCb2"),l=A("hgacW"),u=A("8BaGO"),d=A("5Nkm1"),p=A("4Tgmn"),h=A("6eptr"),f=A("frznq"),m=A("bzoAL"),g=A("jqSCG"),y=A("4sqA7");let b=/* @__PURE__ */(0,g.op)({fusedConv2d_:/**
 * Computes a 2D convolution over the input x, optionally fused with adding a
 * bias and applying an activation.
 *
 * ```js
 * const inputDepth = 2;
 * const inShape = [2, 2, 2, inputDepth];
 * const outputDepth = 2;
 * const fSize = 1;
 * const pad = 0;
 * const strides = 1;
 *
 * const x = tf.tensor4d( [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
 * 16], inShape);
 * const w = tf.tensor4d([-1, 1, -2, 0.5], [fSize, fSize, inputDepth,
 * outputDepth]);
 *
 * tf.fused.conv2d({ x, filter: w, strides, pad, dataFormat: 'NHWC',
 * dilations: [1, 1], bias: tf.scalar(5), activation: 'relu' }).print();
 * ```
 *
 * @param obj An object with the following properties:
 * @param x The input tensor, of rank 4 or rank 3, of shape
 *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is
 * assumed.
 * @param filter The filter, rank 4, of shape
 *     `[filterHeight, filterWidth, inDepth, outDepth]`.
 * @param strides The strides of the convolution: `[strideHeight,
 * strideWidth]`.
 * @param pad The type of padding algorithm.
 *   - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *   - `valid` output will be smaller than input if filter is larger
 *       than 1x1.
 *   - For more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 * @param dataFormat An optional string from: "NHWC", "NCHW". Defaults to
 *     "NHWC". Specify the data format of the input and output data. With the
 *     default format "NHWC", the data is stored in the order of: [batch,
 *     height, width, channels]. Only "NHWC" is currently supported.
 * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`
 *     in which we sample input values across the height and width dimensions
 *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single
 *     number, then `dilationHeight == dilationWidth`. If it is greater than
 *     1, then all values of `strides` must be 1.
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 * @param bias Tensor to be added to the result.
 * @param activation Name of activation kernel (defaults to `linear`) to be
 *     applied
 *      after biasAdd.
 * @param preluActivationWeights Tensor of prelu weights to be applied as part
 *     of a `prelu` activation, typically the same shape as `x`.
 * @param leakyreluAlpha Optional. Alpha to be applied as part of a `leakyrelu`
 *     activation.
 */function({x:e,filter:t,strides:c,pad:g,dataFormat:b="NHWC",dilations:v=[1,1],dimRoundingMode:x,bias:w,activation:k="linear",preluActivationWeights:S,leakyreluAlpha:N}){let T,I;if(k=k||"linear",!1===(0,m.shouldFuse)(r.ENGINE.state.gradientDepth,k)){// TODO: Transpose bias and preluActivationWeights properly for NCHW
// format before computation.
o.assert("NHWC"===b,()=>`Error in fused conv2d: got dataFormat of ${b} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let r=(0,d.conv2d)(e,t,c,g,b,v,x);return null!=w&&(r=(0,l.add)(r,w)),(0,m.applyActivation)(r,k,S,N)}let C=(0,i.convertToTensor)(e,"x","conv2d","float32"),E=(0,i.convertToTensor)(t,"filter","conv2d","float32"),A=C,R=!1;3===C.rank&&(R=!0,A=(0,y.reshape)(C,[1,C.shape[0],C.shape[1],C.shape[2]])),o.assert(4===A.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${A.rank}.`),o.assert(4===E.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${E.rank}.`),f.checkPadOnDimRoundingMode("fused conv2d",g,x);let _="NHWC"===b?A.shape[3]:A.shape[1];o.assert(E.shape[2]===_,()=>`Error in conv2d: depth of input (${_}) must match input depth for filter ${E.shape[2]}.`),o.assert(f.eitherStridesOrDilationsAreOne(c,v),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${c} and dilations '${v}'`);let O=f.computeConv2DInfo(A.shape,E.shape,c,v,g,x);if(null!=w&&(T=(0,i.convertToTensor)(w,"bias","fused conv2d"),[T]=(0,s.makeTypesMatch)(T,C),"NHWC"===b?u.assertAndGetBroadcastShape(O.outShape,T.shape):(o.assert(T.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${T.shape.length}.`),o.assert(0===T.shape.length||T.shape[0]===O.outChannels||1===T.shape[0],()=>`Error in fused conv2d: bias shape (${T.shape}) is not compatible with the number of output channels (${O.outChannels})`))),null!=S){// PReLU's activation weights could be a scalar, a 1-D tensor or a 3-D
// tensor.
let e=S.shape;if(o.assert(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)// weights tensor should be aligned with the output channels of conv2d
// result.
o.assert(1===e[0]||e[0]===O.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${O.outChannels}).`);else if(3===e.length)// tensor should has the compatible shape with the result of conv2d.
try{u.assertAndGetBroadcastShape(e,O.outShape)}catch(r){let t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${O.outShape}).`;throw Error(t)}I=(0,i.convertToTensor)(S,"prelu weights","fused conv2d")}let P=(e,t)=>{o.assert("NHWC"===b,()=>`Error in gradient of fused conv2D: got dataFormat of ${b} but only NHWC is currently supported.`);let[r,n,a,s]=t,i=(0,m.getFusedDyActivation)(e,a,k);o.assert(f.tupleValuesAreOne(v),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${v}'`);let l=(0,h.conv2DBackpropInput)(n.shape,i,r,c,g),u=(0,p.conv2DBackpropFilter)(n,i,r.shape,c,g),d=[l,u];if(null!=s){let e=(0,m.getFusedBiasGradient)(s,i);d.push(e)}return d},$={x:A,filter:E,bias:T,preluActivationWeights:I},D={strides:c,pad:g,dataFormat:b,dilations:v,dimRoundingMode:x,activation:k,leakyreluAlpha:N};// Depending on the the params passed in we will have different number of
// inputs and thus a a different number of elements in the gradient.
if(null==w){let e=(0,n.customGrad)((e,t,n)=>{let s=(0,r.ENGINE).runKernel(a.FusedConv2D,$,D);return n([t,e,s]),R&&(s=(0,y.reshape)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:P}});return e(A,E)}{let e=(0,n.customGrad)((e,t,n,s)=>{let i=(0,r.ENGINE).runKernel(a.FusedConv2D,$,D);return s([t,e,i,n]),R&&(i=(0,y.reshape)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:P}});return e(A,E,T)}}})}),R("4Tgmn",function(e,t){c(e.exports,"conv2DBackpropFilter",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("8cCb2"),s=A("frznq"),i=A("jqSCG"),o=A("4sqA7");let l=/* @__PURE__ */(0,i.op)({conv2DBackpropFilter_:/**
 * Computes the derivative of the filter of a 2D convolution.
 *
 * @param x The input tensor, of rank 4 or rank 3 of shape
 *     [batch, height, width, inChannels]. If rank 3, batch of 1 is assumed.
 * @param dy The dy image, of rank 4 or rank 3, of shape
 *     [batch, height, width, outDepth]. If rank 3, batch of 1 is assumed.
 * @param filterShape The shape of the filter, length 4,
 *     [filterHeight, filterWidth, inDepth, outDepth].
 * @param strides The strides of the convolution: [strideHeight,
 * strideWidth].
 * @param pad A string from: 'same', 'valid'. The type of padding algorithm
 *     used in the forward prop of the op.
 * @param dataFormat: An optional string from: "NHWC", "NCHW". Defaults to
 *     "NHWC". Specify the data format of the input and output data. With the
 *     default format "NHWC", the data is stored in the order of: [batch,
 *     height, width, channels].
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 */function(e,t,i,l,u,c="NHWC",d){let p=e;3===e.rank&&(p=(0,o.reshape)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,o.reshape)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),a.assert(4===p.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${p.shape}.`),a.assert(4===h.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${h.shape}.`),a.assert(4===i.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${i}.`);let f="NHWC"===c?p.shape[3]:p.shape[1],m="NHWC"===c?h.shape[3]:h.shape[1];a.assert(f===i[2],()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${i[2]}.`),a.assert(m===i[3],()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${i[3]}).`),s.checkPadOnDimRoundingMode("conv2dDerFilter",u,d);let g={x:p,dy:h};// tslint:disable-next-line: no-unnecessary-type-assertion
return(0,r.ENGINE).runKernel(n.Conv2DBackpropFilter,g,{strides:l,pad:u,dataFormat:c,dimRoundingMode:d,filterShape:i})}})}),R("bzoAL",function(e,t){c(e.exports,"getFusedDyActivation",()=>f),c(e.exports,"getFusedBiasGradient",()=>m),c(e.exports,"applyActivation",()=>g),c(e.exports,"shouldFuse",()=>y);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8BaGO"),n=A("7UQTl"),a=A("3XskU"),s=A("jZc0w"),i=A("a3pvF"),o=A("8wbQq"),l=A("fvNYr"),u=A("4sqA7"),d=A("jvtSq"),p=A("lWdx1"),h=A("9NgTx");function f(e,t,r){if(null==r||"linear"===r)return e;if("relu"===r)return(0,s.mul)(e,(0,p.step)(t));throw Error(`Cannot compute gradient for fused activation ${r}.`)}function m(e,t){let n=t,a=r.getReductionAxes(e.shape,t.shape);return a.length>0&&(n=(0,h.sum)(n,a)),(0,u.reshape)(n,e.shape)}function g(e,t,r,s){if("linear"===t)return e;if("relu"===t)return(0,o.relu)(e);if("elu"===t)return(0,n.elu)(e);if("relu6"===t)return(0,l.relu6)(e);if("prelu"===t)return(0,i.prelu)(e,r);if("leakyrelu"===t)return(0,a.leakyRelu)(e,s);if("sigmoid"===t)return(0,d.sigmoid)(e);throw Error(`Unknown fused activation ${t}.`)}let y=(e,t)=>!(e>0)||"linear"===t}),R("d71bK",function(e,t){c(e.exports,"depthwiseConv2d",()=>b);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("92fpA"),a=A("hl418"),s=A("3w4Rg"),i=A("5xBLk"),o=A("8cCb2"),l=A("hgacW"),u=A("8BaGO"),d=A("frznq"),p=A("182Rc"),h=A("j2Gyr"),f=A("1C2e1"),m=A("bzoAL"),g=A("jqSCG"),y=A("4sqA7");let b=/* @__PURE__ */(0,g.op)({fusedDepthwiseConv2d_:/**
 * Computes depthwise 2D convolution, optionally fused with adding a
 * bias and applying an activation.
 *
 * Given a 4D `input` array and a `filter` array of shape
 * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing
 * `inChannels` convolutional filters of depth 1, this op applies a
 * different filter to each input channel (expanding from 1 channel to
 * `channelMultiplier` channels for each), then concatenates the results
 * together. The output has `inChannels * channelMultiplier` channels.
 *
 * See
 * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](
 *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)
 * for more details.
 *
 * @param obj An object with the following properties:
 * @param x The input tensor, of rank 4 or rank 3, of shape
 *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is
 * assumed.
 * @param filter The filter tensor, rank 4, of shape
 *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.
 * @param strides The strides of the convolution: `[strideHeight,
 * strideWidth]`. If strides is a single number, then `strideHeight ==
 * strideWidth`.
 * @param pad The type of padding algorithm.
 *   - `same` and stride 1: output will be of same size as input,
 *       regardless of filter size.
 *   - `valid`: output will be smaller than input if filter is larger
 *       than 1x1.
 *   - For more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`
 *     in which we sample input values across the height and width dimensions
 *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single
 *     number, then `dilationHeight == dilationWidth`. If it is greater than
 *     1, then all values of `strides` must be 1.
 * @param dataFormat: An optional string from: "NHWC", "NCHW". Defaults to
 *     "NHWC". Specify the data format of the input and output data. With the
 *     default format "NHWC", the data is stored in the order of: [batch,
 *     height, width, channels]. Only "NHWC" is currently supported.
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 * @param bias Tensor to be added to the result.
 * @param activation Name of activation kernel (defaults to `linear`).
 * @param preluActivationWeights Tensor of prelu weights to be applied as part
 *     of a `prelu` activation, typically the same shape as `x`.
 * @param leakyreluAlpha Optional. Alpha to be applied as part of a `leakyrelu`
 *     activation.
 */function({x:e,filter:t,strides:c,pad:g,dataFormat:b="NHWC",dilations:v=[1,1],dimRoundingMode:x,bias:w,activation:k="linear",preluActivationWeights:S,leakyreluAlpha:N}){let T,I;if(!1===(0,m.shouldFuse)(r.ENGINE.state.gradientDepth,k)){let r=(0,p.depthwiseConv2d)(e,t,c,g,b,v,x);return null!=w&&(r=(0,l.add)(r,w)),(0,m.applyActivation)(r,k,S,N)}let C=(0,i.convertToTensor)(e,"x","depthwiseConv2d","float32"),E=(0,i.convertToTensor)(t,"filter","depthwiseConv2d","float32"),A=C,R=!1;3===C.rank&&(R=!0,A=(0,y.reshape)(C,[1,C.shape[0],C.shape[1],C.shape[2]])),o.assert(4===A.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${A.rank}.`),o.assert(4===E.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${E.rank}.`),o.assert(A.shape[3]===E.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${A.shape[3]}) must match the inChannels dimension in filter ${E.shape[2]}.`),null==v&&(v=[1,1]),o.assert(d.eitherStridesOrDilationsAreOne(c,v),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${v}'`),d.checkPadOnDimRoundingMode("fused depthwiseConv2d",g,x);let _=d.computeConv2DInfo(A.shape,E.shape,c,v,g,x,!0);null!=w&&(T=(0,i.convertToTensor)(w,"bias","fused conv2d"),[T]=(0,s.makeTypesMatch)(T,C),u.assertAndGetBroadcastShape(_.outShape,T.shape)),null!=S&&(I=(0,i.convertToTensor)(S,"prelu weights","fused depthwiseConv2d"));let O=(e,t)=>{o.assert(d.tupleValuesAreOne(v),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${v}'`);let[r,n,a,s]=t,i=(0,m.getFusedDyActivation)(e,a,k),l=(0,f.depthwiseConv2dNativeBackpropInput)(n.shape,i,r,c,g,v,x),u=(0,h.depthwiseConv2dNativeBackpropFilter)(n,i,r.shape,c,g,v,x);if(null!=s){let e=(0,m.getFusedBiasGradient)(T,i);return[l,u,e]}return[l,u]},P={x:A,filter:E,bias:T,preluActivationWeights:I},$={strides:c,pad:g,dataFormat:b,dilations:v,dimRoundingMode:x,activation:k,leakyreluAlpha:N};// Depending on the the params passed in we will have different number of
// inputs and thus a a different number of elements in the gradient.
if(null==w){let e=(0,n.customGrad)((e,t,n)=>{// tslint:disable-next-line: no-unnecessary-type-assertion
let s=(0,r.ENGINE).runKernel(a.FusedDepthwiseConv2D,P,$);return n([t,e,s]),R&&(s=(0,y.reshape)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:O}});return e(A,E)}{let e=(0,n.customGrad)((e,t,n,s)=>{// tslint:disable-next-line: no-unnecessary-type-assertion
let i=(0,r.ENGINE).runKernel(a.FusedDepthwiseConv2D,P,$);return s([t,e,i,n]),R&&(i=(0,y.reshape)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:O}});return e(A,E,T)}}})}),R("j2Gyr",function(e,t){c(e.exports,"depthwiseConv2dNativeBackpropFilter",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("jqSCG"),s=A("4sqA7");let i=(0,a.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,a,i,o,l=[1,1],u){let c=e;3===e.rank&&(c=(0,s.reshape)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,s.reshape)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p={x:c,dy:d};// tslint:disable-next-line: no-unnecessary-type-assertion
return(0,r.ENGINE).runKernel(n.DepthwiseConv2dNativeBackpropFilter,p,{strides:i,pad:o,dimRoundingMode:u,dilations:l,filterShape:a})}})}),R("1C2e1",function(e,t){c(e.exports,"depthwiseConv2dNativeBackpropInput",()=>i);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("jqSCG"),s=A("4sqA7");let i=(0,a.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,a,i,o,l=[1,1],u){let c=t,d=!1;3===t.rank&&(d=!0,c=(0,s.reshape)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p={dy:c,filter:a},h=(0,r.ENGINE).runKernel(n.DepthwiseConv2dNativeBackpropInput,p,{strides:i,pad:o,dimRoundingMode:u,dilations:l,inputShape:e});return d?(0,s.reshape)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})}),R("1q6Gm",function(e,t){c(e.exports,"matMul",()=>m);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("92fpA"),a=A("hl418"),s=A("3w4Rg"),i=A("5xBLk"),o=A("8cCb2"),l=A("hgacW"),u=A("8BaGO"),d=A("bzoAL"),p=A("aUFou"),h=A("jqSCG"),f=A("4sqA7");let m=/* @__PURE__ */(0,h.op)({fusedMatMul_:/**
 * Computes the dot product of two matrices with optional activation and bias.
 *
 * ```js
 * const a = tf.tensor2d([-1, -2], [1, 2]);
 * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);
 * const bias = tf.tensor2d([1, 2], [1, 2]);
 *
 * tf.fused.matMul({a, b, bias, activation: 'relu'}).print();
 * ```
 *
 * @param obj An object with the following properties:
 * - `a` First matrix in dot product operation.
 * - `b` Second matrix in dot product operation.
 * - `transposeA` If true, `a` is transposed before multiplication.
 * - `transposeB` If true, `b` is transposed before multiplication.
 * - `bias` Matrix to be added to the result.
 * - `activation` Name of activation kernel (defaults to `linear`).
 * - `preluActivationWeights` Tensor of prelu weights.
 * - `leakyreluAlpha` Alpha of leakyrelu.
 */function({a:e,b:t,transposeA:c=!1,transposeB:h=!1,bias:m,activation:g="linear",preluActivationWeights:y,leakyreluAlpha:b=.2}){let v,x;if(!1===(0,d.shouldFuse)(r.ENGINE.state.gradientDepth,g)){let r=(0,p.matMul)(e,t,c,h);return null!=m&&(r=(0,l.add)(r,m)),(0,d.applyActivation)(r,g,y,b)}let w=(0,i.convertToTensor)(e,"a","fused matMul"),k=(0,i.convertToTensor)(t,"b","fused matMul");[w,k]=(0,s.makeTypesMatch)(w,k);let S=c?w.shape[w.rank-2]:w.shape[w.rank-1],N=h?k.shape[k.rank-1]:k.shape[k.rank-2],T=c?w.shape[w.rank-1]:w.shape[w.rank-2],I=h?k.shape[k.rank-2]:k.shape[k.rank-1],C=w.shape.slice(0,-2),E=k.shape.slice(0,-2),A=o.sizeFromShape(C),R=o.sizeFromShape(E);o.assert(S===N,()=>`Error in fused matMul: inner shapes (${S}) and (${N}) of Tensors with shapes ${w.shape} and ${k.shape} and transposeA=${c} and transposeB=${h} must match.`);let _=u.assertAndGetBroadcastShape(w.shape.slice(0,-2),k.shape.slice(0,-2)),O=_.concat([T,I]),P=c?(0,f.reshape)(w,[A,S,T]):(0,f.reshape)(w,[A,T,S]),$=h?(0,f.reshape)(k,[R,I,N]):(0,f.reshape)(k,[R,N,I]);null!=m&&(v=(0,i.convertToTensor)(m,"bias","fused matMul"),[v]=(0,s.makeTypesMatch)(v,w),u.assertAndGetBroadcastShape(O,v.shape)),null!=y&&(x=(0,i.convertToTensor)(y,"prelu weights","fused matMul"));let D=(e,t)=>{let r,n;let[a,s,i,o]=t,l=(0,d.getFusedDyActivation)((0,f.reshape)(e,i.shape),i,g);if(c||h?!c&&h?(r=(0,p.matMul)(l,s,!1,!1),n=(0,p.matMul)(l,a,!0,!1)):c&&!h?(r=(0,p.matMul)(s,l,!1,!0),n=(0,p.matMul)(a,l,!1,!1)):(r=(0,p.matMul)(s,l,!0,!0),n=(0,p.matMul)(l,a,!0,!0)):(r=(0,p.matMul)(l,s,!1,!0),n=(0,p.matMul)(a,l,!0,!1)),null==m)return[r,n];{let e=(0,d.getFusedBiasGradient)(o,l);return[r,n,e]}},M={a:P,b:$,bias:v,preluActivationWeights:x},F={transposeA:c,transposeB:h,activation:g,leakyreluAlpha:b};// Depending on the the params passed in we will have different number of
// inputs and thus a a different number of elements in the gradient.
if(null==m){let e=(0,n.customGrad)((e,t,n)=>{let s=(0,r.ENGINE).runKernel(a._FusedMatMul,M,F);return n([e,t,s]),{value:(0,f.reshape)(s,O),gradFunc:D}});return e(P,$)}{let e=(0,n.customGrad)((e,t,n,s)=>{let i=(0,r.ENGINE).runKernel(a._FusedMatMul,M,F);return s([e,t,i,n]),{value:(0,f.reshape)(i,O),gradFunc:D}});return e(P,$,v)}}})}),R("dGKlF",function(e,t){c(e.exports,"hammingWindow",()=>a);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("jqSCG"),n=A("j5jow");let a=/* @__PURE__ */(0,r.op)({hammingWindow_:/**
 * Generate a hamming window.
 *
 * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows
 *
 * ```js
 * tf.signal.hammingWindow(10).print();
 * ```
 * @param The length of window
 *
 * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}
 */function(e){return(0,n.cosineWindow)(e,.54,.46)}})}),R("gicu0",function(e,t){c(e.exports,"hannWindow",()=>a);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("jqSCG"),n=A("j5jow");let a=/* @__PURE__ */(0,r.op)({hannWindow_:/**
 * Generate a Hann window.
 *
 * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows
 *
 * ```js
 * tf.signal.hannWindow(10).print();
 * ```
 * @param The length of window
 *
 * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}
 */function(e){return(0,n.cosineWindow)(e,.5,.5)}})}),R("lLT0m",function(e,t){c(e.exports,"frame",()=>l);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("iTu6j"),n=A("gYive"),a=A("jqSCG"),s=A("4sqA7"),i=A("79KOG"),o=A("gmMlv");let l=/* @__PURE__ */(0,a.op)({frame_:/**
 * Expands input into frames of frameLength.
 * Slides a window size with frameStep.
 *
 * ```js
 * tf.signal.frame([1, 2, 3], 2, 1).print();
 * ```
 * @param signal The input tensor to be expanded
 * @param frameLength Length of each frame
 * @param frameStep The frame hop size in samples.
 * @param padEnd Whether to pad the end of signal with padValue.
 * @param padValue A number to use where the input signal does
 *     not exist when padEnd is True.
 *
 * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}
 */function(e,t,a,l=!1,u=0){let c=0,d=[];for(;c+t<=e.size;)d.push((0,i.slice)(e,c,t)),c+=a;if(l)for(;c<e.size;){let s=c+t-e.size,o=(0,r.concat)([(0,i.slice)(e,c,t-s),(0,n.fill)([s],u)]);d.push(o),c+=a}return 0===d.length?(0,o.tensor2d)([],[0,t]):(0,s.reshape)((0,r.concat)(d),[d.length,t])}})}),R("hGoJt",function(e,t){c(e.exports,"stft",()=>l);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("jZc0w"),n=A("jqSCG"),a=A("j5jow"),s=A("cafDa"),i=A("lLT0m"),o=A("gicu0");let l=/* @__PURE__ */(0,n.op)({stft_:/**
 * Computes the Short-time Fourier Transform of signals
 * See: https://en.wikipedia.org/wiki/Short-time_Fourier_transform
 *
 * ```js
 * const input = tf.tensor1d([1, 1, 1, 1, 1])
 * tf.signal.stft(input, 3, 1).print();
 * ```
 * @param signal 1-dimensional real value tensor.
 * @param frameLength The window length of samples.
 * @param frameStep The number of samples to step.
 * @param fftLength The size of the FFT to apply.
 * @param windowFn A callable that takes a window length and returns 1-d tensor.
 *
 * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}
 */function(e,t,n,l,u=o.hannWindow){null==l&&(l=(0,a.enclosingPowerOfTwo)(t));let c=(0,i.frame)(e,t,n),d=(0,r.mul)(c,u(t));return(0,s.rfft)(d,l)}})}),R("jLoMm",function(e,t){c(e.exports,"cropAndResize",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({cropAndResize_:/**
 * Extracts crops from the input image tensor and resizes them using bilinear
 * sampling or nearest neighbor sampling (possibly with aspect ratio change)
 * to a common output size specified by cropSize.
 *
 * @param image 4d tensor of shape `[batch,imageHeight,imageWidth, depth]`,
 *     where imageHeight and imageWidth must be positive, specifying the
 *     batch of images from which to take crops
 * @param boxes 2d float32 tensor of shape `[numBoxes, 4]`. Each entry is
 *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the normalized
 *     coordinates of the box in the `boxInd[i]`th image in the batch
 * @param boxInd 1d int32 tensor of shape `[numBoxes]` with values in range
 *     `[0, batch)` that specifies the image that the `i`-th box refers to.
 * @param cropSize 1d int32 tensor of 2 elements `[cropHeigh, cropWidth]`
 *     specifying the size to which all crops are resized to.
 * @param method Optional string from `'bilinear' | 'nearest'`,
 *     defaults to bilinear, which specifies the sampling method for resizing
 * @param extrapolationValue A threshold for deciding when to remove boxes based
 *     on score. Defaults to 0.
 * @return A 4D tensor of the shape `[numBoxes,cropHeight,cropWidth,depth]`
 *
 * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}
 */function(e,t,i,o,l="bilinear",u=0){let c=(0,a.convertToTensor)(e,"image","cropAndResize"),d=(0,a.convertToTensor)(t,"boxes","cropAndResize","float32"),p=(0,a.convertToTensor)(i,"boxInd","cropAndResize","int32"),h=d.shape[0];s.assert(4===c.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${c.rank}.`),s.assert(2===d.rank&&4===d.shape[1],()=>`Error in cropAndResize: boxes must be have size [${h},4] but had shape ${d.shape}.`),s.assert(1===p.rank&&p.shape[0]===h,()=>`Error in cropAndResize: boxInd must be have size [${h}] but had shape ${d.shape}.`),s.assert(2===o.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${o.length}.`),s.assert(o[0]>=1&&o[1]>=1,()=>`cropSize must be atleast [1,1], but was ${o}`),s.assert("bilinear"===l||"nearest"===l,()=>`method must be bilinear or nearest, but was ${l}`);let f=(0,r.ENGINE).runKernel(n.CropAndResize,{image:c,boxes:d,boxInd:p},{method:l,extrapolationValue:u,cropSize:o});return f}})}),R("jAPwM",function(e,t){c(e.exports,"flipLeftRight",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({flipLeftRight_:/**
 * Flips the image left to right. Currently available in the CPU, WebGL, and
 * WASM backends.
 *
 * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.
 *//** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */function(e){let t=(0,a.convertToTensor)(e,"image","flipLeftRight","float32");s.assert(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let i=(0,r.ENGINE).runKernel(n.FlipLeftRight,{image:t},{});return i}})}),R("7xYxa",function(e,t){c(e.exports,"grayscaleToRGB",()=>i);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("jqSCG"),s=A("61ay4");let i=/* @__PURE__ */(0,a.op)({grayscaleToRGB_:/**
 * Converts images from grayscale to RGB format.
 *
 * @param image A grayscale tensor to convert. The `image`'s last dimension must
 *     be size 1 with at least a two-dimensional shape.
 *
 * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}
 */function(e){let t=(0,r.convertToTensor)(e,"image","grayscaleToRGB"),a=t.rank-1,i=t.shape[a];n.assert(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),n.assert(1===i,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${i}.`);let o=Array(t.rank);return o.fill(1,0,a),o[a]=3,(0,s.tile)(t,o)}})}),R("iStMK",function(e,t){c(e.exports,"rgbToGrayscale",()=>u);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("inFmq"),s=A("1mzpU"),i=A("iPDWZ"),o=A("jqSCG"),l=A("lalFM");let u=/* @__PURE__ */(0,o.op)({rgbToGrayscale_:/**
 * Converts images from RGB format to grayscale.
 *
 * @param image A RGB tensor to convert. The `image`'s last dimension must
 *     be size 3 with at least a two-dimensional shape.
 *
 * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}
 */function(e){let t;let o=(0,r.convertToTensor)(e,"image","RGBToGrayscale"),u=o.rank-1,c=o.shape[u];n.assert(o.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${o.rank}.`),n.assert(3===c,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${c}.`);// Remember original dtype so we can convert back if needed
let d=o.dtype,p=(0,a.cast)(o,"float32"),h=(0,l.tensor1d)([.2989,.587,.114]);switch(o.rank){case 2:t=(0,s.einsum)("ij,j->i",p,h);break;case 3:t=(0,s.einsum)("ijk,k->ij",p,h);break;case 4:t=(0,s.einsum)("ijkl,l->ijk",p,h);break;case 5:t=(0,s.einsum)("ijklm,m->ijkl",p,h);break;case 6:t=(0,s.einsum)("ijklmn,n->ijklm",p,h);break;default:throw Error("Not a valid tensor rank.")}return t=(0,i.expandDims)(t,-1),(0,a.cast)(t,d)}})}),R("gF4CQ",function(e,t){c(e.exports,"rotateWithOffset",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({rotateWithOffset_:/**
 * Rotates the input image tensor counter-clockwise with an optional offset
 * center of rotation. Currently available in the CPU, WebGL, and WASM backends.
 *
 * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.
 * @param radians The amount of rotation.
 * @param fillValue The value to fill in the empty space leftover
 *     after rotation. Can be either a single grayscale value (0-255), or an
 *     array of three numbers `[red, green, blue]` specifying the red, green,
 *     and blue channels. Defaults to `0` (black).
 * @param center The center of rotation. Can be either a single value (0-1), or
 *     an array of two numbers `[centerX, centerY]`. Defaults to `0.5` (rotates
 *     the image around its center).
 *
 * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}
 */function(e,t,i=0,o=.5){let l=(0,a.convertToTensor)(e,"image","rotateWithOffset","float32");s.assert(4===l.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${l.rank}.`);let u=(0,r.ENGINE).runKernel(n.RotateWithOffset,{image:l},{radians:t,fillValue:i,center:o});return u}})}),R("3Dhm5",function(e,t){c(e.exports,"nonMaxSuppression",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("dpIoR"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({nonMaxSuppression_:/**
 * Performs non maximum suppression of bounding boxes based on
 * iou (intersection over union).
 *
 * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is
 *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of
 *     the bounding box.
 * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.
 * @param maxOutputSize The maximum number of boxes to be selected.
 * @param iouThreshold A float representing the threshold for deciding whether
 *     boxes overlap too much with respect to IOU. Must be between [0, 1].
 *     Defaults to 0.5 (50% box overlap).
 * @param scoreThreshold A threshold for deciding when to remove boxes based
 *     on score. Defaults to -inf, which means any score is accepted.
 * @return A 1D tensor with the selected box indices.
 *
 * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}
 */function(e,t,i,o=.5,l=Number.NEGATIVE_INFINITY){let u=(0,a.convertToTensor)(e,"boxes","nonMaxSuppression","float32"),c=(0,a.convertToTensor)(t,"scores","nonMaxSuppression","float32"),d=(0,s.nonMaxSuppSanityCheck)(u,c,i,o,l);i=d.maxOutputSize,o=d.iouThreshold,l=d.scoreThreshold;let p={maxOutputSize:i,iouThreshold:o,scoreThreshold:l};return(0,r.ENGINE).runKernel(n.NonMaxSuppressionV3,{boxes:u,scores:c},p)}})}),R("dpIoR",function(e,t){c(e.exports,"nonMaxSuppSanityCheck",()=>n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2");function n(e,t,n,a,s,i){null==a&&(a=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);let o=e.shape[0];return n=Math.min(n,o),r.assert(0<=a&&a<=1,()=>`iouThreshold must be in [0, 1], but was '${a}'`),r.assert(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),r.assert(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),r.assert(1===t.rank,()=>"scores must be a 1D tensor"),r.assert(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`),r.assert(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:n,iouThreshold:a,scoreThreshold:s,softNmsSigma:i}}}),R("ihqU7",function(e,t){c(e.exports,"nonMaxSuppressionAsync",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("KPYos"),n=A("5xBLk"),a=A("dpIoR"),s=A("lalFM");/**
 * Performs non maximum suppression of bounding boxes based on
 * iou (intersection over union).
 *
 * This is the async version of `nonMaxSuppression`
 *
 * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is
 *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of
 *     the bounding box.
 * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.
 * @param maxOutputSize The maximum number of boxes to be selected.
 * @param iouThreshold A float representing the threshold for deciding whether
 *     boxes overlap too much with respect to IOU. Must be between [0, 1].
 *     Defaults to 0.5 (50% box overlap).
 * @param scoreThreshold A threshold for deciding when to remove boxes based
 *     on score. Defaults to -inf, which means any score is accepted.
 * @return A 1D tensor with the selected box indices.
 *
 * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}
 */async function i(e,t,i,o=.5,l=Number.NEGATIVE_INFINITY){let u=(0,n.convertToTensor)(e,"boxes","nonMaxSuppressionAsync"),c=(0,n.convertToTensor)(t,"scores","nonMaxSuppressionAsync"),d=(0,a.nonMaxSuppSanityCheck)(u,c,i,o,l);i=d.maxOutputSize,o=d.iouThreshold,l=d.scoreThreshold;let p=await Promise.all([u.data(),c.data()]),h=p[0],f=p[1],{selectedIndices:m}=(0,r.nonMaxSuppressionV3Impl)(h,f,i,o,l);return u!==e&&u.dispose(),c!==t&&c.dispose(),(0,s.tensor1d)(m,"int32")}let o=i}),R("KPYos",function(e,t){c(e.exports,"nonMaxSuppressionV3Impl",()=>n),c(e.exports,"nonMaxSuppressionV4Impl",()=>a),c(e.exports,"nonMaxSuppressionV5Impl",()=>s);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("k4JiJ");function n(e,t,r,n,a){return i(e,t,r,n,a,0/* softNmsSigma */)}function a(e,t,r,n,a,s){return i(e,t,r,n,a,0/* softNmsSigma */,!1,s/* padToMaxOutputSize */,!0)}function s(e,t,r,n,a,s){return i(e,t,r,n,a,s,!0)}function i(e,t,n,a,s,i,l=!1,u=!1,c=!1){// The list is sorted in ascending order, so that we can always pop the
// candidate with the largest score in O(1) time.
let d=[];for(let e=0;e<t.length;e++)t[e]>s&&d.push({score:t[e],boxIndex:e,suppressBeginIndex:0});d.sort(o);// If softNmsSigma is 0, the outcome of this algorithm is exactly same as
// before.
let p=i>0?-.5/i:0,h=[],f=[];for(;h.length<n&&d.length>0;){let t=d.pop(),{score:n,boxIndex:i,suppressBeginIndex:l}=t;if(n<s)break;// Overlapping boxes are likely to have similar scores, therefore we
// iterate through the previously selected boxes backwards in order to
// see if candidate's score should be suppressed. We use
// suppressBeginIndex to track and ensure a candidate can be suppressed
// by a selected box no more than once. Also, if the overlap exceeds
// iouThreshold, we simply ignore the candidate.
let u=!1;for(let r=h.length-1;r>=l;--r){let n=function(e,t,r){let n=e.subarray(4*t,4*t+4),a=e.subarray(4*r,4*r+4),s=Math.min(n[0],n[2]),i=Math.min(n[1],n[3]),o=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),u=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(o-s)*(l-i),f=(d-u)*(p-c);if(h<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,c),y=Math.min(o,d),b=Math.min(l,p),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(h+f-v)}(e,i,h[r]);if(n>=a){u=!0;break}if(t.score=t.score*// A Gaussian penalty function, this method always returns values in [0, 1].
// The weight is a function of similarity, the more overlap two boxes are, the
// smaller the weight is, meaning highly overlapping boxe will be significantly
// penalized. On the other hand, a non-overlapping box will not be penalized.
function(e,t,r){let n=Math.exp(t*r*r);return r<=e?n:0}(a,p,n),t.score<=s)break}// At this point, if `candidate.score` has not dropped below
// `scoreThreshold`, then we know that we went through all of the
// previous selections and can safely update `suppressBeginIndex` to the
// end of the selected array. Then we can re-insert the candidate with
// the updated score and suppressBeginIndex back in the candidate list.
// If on the other hand, `candidate.score` has dropped below the score
// threshold, we will not add it back to the candidates list.
t.suppressBeginIndex=h.length,!u&&(t.score===n?(h.push(i),f.push(t.score)):t.score>s&&// considered, so add back to the candidates list.
(0,r.binaryInsert)(d,t,o))}// NonMaxSuppressionV4 feature: padding output to maxOutputSize.
let m=h.length,g=n-m;u&&g>0&&(h.push(...Array(g).fill(0)),f.push(...Array(g).fill(0)));let y={selectedIndices:h};return l&&(y.selectedScores=f),c&&(y.validOutputs=m),y}function o(e,t){// For objects with same scores, we make the object with the larger index go
// first. In an array that pops from the end, this means that the object with
// the smaller index will be popped first. This ensures the same output as
// the TensorFlow python version.
return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}}),R("k4JiJ",function(e,t){/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * Inserts a value into a sorted array. This method allows duplicate, meaning it
 * allows inserting duplicate value, in which case, the element will be inserted
 * at the lowest index of the value.
 * @param arr The array to modify.
 * @param element The element to insert.
 * @param comparator Optional. If no comparator is specified, elements are
 * compared using array_util.defaultComparator, which is suitable for Strings
 * and Numbers in ascending arrays. If the array contains multiple instances of
 * the target value, the left-most instance will be returned. To provide a
 * comparator, it should take 2 arguments to compare and return a negative,
 * zero, or a positive number.
 */function r(e,t,r){let a=function(e,t,r){let n=0,a=e.length,s=0,i=!1;for(;n<a;){s=n+(a-n>>>1);let o=r(t,e[s]);o>0?n=s+1:(a=s,// If compareResult is 0, the value is found. We record it is found,
// and then keep looking because there may be duplicate.
i=!o)}return i?n:-n-1}(e,t,r||n),s=a<0?-(a+1):a;e.splice(s,0,t)}/**
 * Compares its two arguments for order.
 * @param a The first element to be compared.
 * @param b The second element to be compared.
 * @return A negative number, zero, or a positive number as the first
 *     argument is less than, equal to, or greater than the second.
 */function n(e,t){return e>t?1:e<t?-1:0}c(e.exports,"binaryInsert",()=>r)}),R("gxykK",function(e,t){c(e.exports,"nonMaxSuppressionWithScore",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("dpIoR"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({nonMaxSuppressionWithScore_:/**
 * Performs non maximum suppression of bounding boxes based on
 * iou (intersection over union).
 *
 * This op also supports a Soft-NMS mode (cf.
 * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score
 * of other overlapping boxes, therefore favoring different regions of the image
 * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`
 * parameter to be larger than 0.
 *
 * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is
 *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of
 *     the bounding box.
 * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.
 * @param maxOutputSize The maximum number of boxes to be selected.
 * @param iouThreshold A float representing the threshold for deciding whether
 *     boxes overlap too much with respect to IOU. Must be between [0, 1].
 *     Defaults to 0.5 (50% box overlap).
 * @param scoreThreshold A threshold for deciding when to remove boxes based
 *     on score. Defaults to -inf, which means any score is accepted.
 * @param softNmsSigma A float representing the sigma parameter for Soft NMS.
 *     When sigma is 0, it falls back to nonMaxSuppression.
 * @return A map with the following properties:
 *     - selectedIndices: A 1D tensor with the selected box indices.
 *     - selectedScores: A 1D tensor with the corresponding scores for each
 *       selected box.
 *
 * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}
 */function(e,t,i,o=.5,l=Number.NEGATIVE_INFINITY,u=0){let c=(0,a.convertToTensor)(e,"boxes","nonMaxSuppression"),d=(0,a.convertToTensor)(t,"scores","nonMaxSuppression"),p=(0,s.nonMaxSuppSanityCheck)(c,d,i,o,l,u);i=p.maxOutputSize,o=p.iouThreshold,l=p.scoreThreshold,u=p.softNmsSigma;let h={maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u},f=(0,r.ENGINE).runKernel(n.NonMaxSuppressionV5,{boxes:c,scores:d},h);return{selectedIndices:f[0],selectedScores:f[1]}}})}),R("8357p",function(e,t){c(e.exports,"nonMaxSuppressionWithScoreAsync",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("KPYos"),n=A("5xBLk"),a=A("dpIoR"),s=A("lalFM");/**
 * Asynchronously performs non maximum suppression of bounding boxes based on
 * iou (intersection over union).
 *
 * This op also supports a Soft-NMS mode (cf.
 * Bodla et al, https://arxiv.org/abs/1704.04503) where boxes reduce the score
 * of other overlapping boxes, therefore favoring different regions of the image
 * with high scores. To enable this Soft-NMS mode, set the `softNmsSigma`
 * parameter to be larger than 0.
 *
 * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is
 *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of
 *     the bounding box.
 * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.
 * @param maxOutputSize The maximum number of boxes to be selected.
 * @param iouThreshold A float representing the threshold for deciding whether
 *     boxes overlap too much with respect to IOU. Must be between [0, 1].
 *     Defaults to 0.5 (50% box overlap).
 * @param scoreThreshold A threshold for deciding when to remove boxes based
 *     on score. Defaults to -inf, which means any score is accepted.
 * @param softNmsSigma A float representing the sigma parameter for Soft NMS.
 *     When sigma is 0, it falls back to nonMaxSuppression.
 * @return A map with the following properties:
 *     - selectedIndices: A 1D tensor with the selected box indices.
 *     - selectedScores: A 1D tensor with the corresponding scores for each
 *       selected box.
 *
 * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}
 */async function i(e,t,i,o=.5,l=Number.NEGATIVE_INFINITY,u=0){let c=(0,n.convertToTensor)(e,"boxes","nonMaxSuppressionAsync"),d=(0,n.convertToTensor)(t,"scores","nonMaxSuppressionAsync"),p=(0,a.nonMaxSuppSanityCheck)(c,d,i,o,l,u);i=p.maxOutputSize,o=p.iouThreshold,l=p.scoreThreshold,u=p.softNmsSigma;let h=await Promise.all([c.data(),d.data()]),f=h[0],m=h[1],{selectedIndices:g,selectedScores:y}=(0,r.nonMaxSuppressionV5Impl)(f,m,i,o,l,u);return c!==e&&c.dispose(),d!==t&&d.dispose(),{selectedIndices:(0,s.tensor1d)(g,"int32"),selectedScores:(0,s.tensor1d)(y)}}let o=i}),R("gzUbZ",function(e,t){c(e.exports,"nonMaxSuppressionPadded",()=>o);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("dpIoR"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({nonMaxSuppressionPadded_:/**
 * Asynchronously performs non maximum suppression of bounding boxes based on
 * iou (intersection over union), with an option to pad results.
 *
 * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is
 *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of
 *     the bounding box.
 * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.
 * @param maxOutputSize The maximum number of boxes to be selected.
 * @param iouThreshold A float representing the threshold for deciding whether
 *     boxes overlap too much with respect to IOU. Must be between [0, 1].
 *     Defaults to 0.5 (50% box overlap).
 * @param scoreThreshold A threshold for deciding when to remove boxes based
 *     on score. Defaults to -inf, which means any score is accepted.
 * @param padToMaxOutputSize Defaults to false. If true, size of output
 *     `selectedIndices` is padded to maxOutputSize.
 * @return A map with the following properties:
 *     - selectedIndices: A 1D tensor with the selected box indices.
 *     - validOutputs: A scalar denoting how many elements in `selectedIndices`
 *       are valid. Valid elements occur first, then padding.
 *
 * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}
 */function(e,t,i,o=.5,l=Number.NEGATIVE_INFINITY,u=!1){let c=(0,a.convertToTensor)(e,"boxes","nonMaxSuppression"),d=(0,a.convertToTensor)(t,"scores","nonMaxSuppression"),p=(0,s.nonMaxSuppSanityCheck)(c,d,i,o,l,null),h=p.maxOutputSize,f=p.iouThreshold,m=p.scoreThreshold,g=(0,r.ENGINE).runKernel(n.NonMaxSuppressionV4,{boxes:c,scores:d},{maxOutputSize:h,iouThreshold:f,scoreThreshold:m,padToMaxOutputSize:u});return{selectedIndices:g[0],validOutputs:g[1]}}})}),R("bq0nG",function(e,t){c(e.exports,"nonMaxSuppressionPaddedAsync",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("KPYos"),n=A("5xBLk"),a=A("dpIoR"),s=A("3xp7o"),i=A("lalFM");/**
 * Asynchronously performs non maximum suppression of bounding boxes based on
 * iou (intersection over union), with an option to pad results.
 *
 * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is
 *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of
 *     the bounding box.
 * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.
 * @param maxOutputSize The maximum number of boxes to be selected.
 * @param iouThreshold A float representing the threshold for deciding whether
 *     boxes overlap too much with respect to IOU. Must be between [0, 1].
 *     Defaults to 0.5 (50% box overlap).
 * @param scoreThreshold A threshold for deciding when to remove boxes based
 *     on score. Defaults to -inf, which means any score is accepted.
 * @param padToMaxOutputSize Defaults to false. If true, size of output
 *     `selectedIndices` is padded to maxOutputSize.
 * @return A map with the following properties:
 *     - selectedIndices: A 1D tensor with the selected box indices.
 *     - validOutputs: A scalar denoting how many elements in `selectedIndices`
 *       are valid. Valid elements occur first, then padding.
 *
 * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}
 */async function o(e,t,o,l=.5,u=Number.NEGATIVE_INFINITY,c=!1){let d=(0,n.convertToTensor)(e,"boxes","nonMaxSuppressionAsync"),p=(0,n.convertToTensor)(t,"scores","nonMaxSuppressionAsync"),h=(0,a.nonMaxSuppSanityCheck)(d,p,o,l,u,null),f=h.maxOutputSize,m=h.iouThreshold,g=h.scoreThreshold,[y,b]=await Promise.all([d.data(),p.data()]),{selectedIndices:v,validOutputs:x}=(0,r.nonMaxSuppressionV4Impl)(y,b,f,m,g,c);return d!==e&&d.dispose(),p!==t&&p.dispose(),{selectedIndices:(0,i.tensor1d)(v,"int32"),validOutputs:(0,s.scalar)(x,"int32")}}let l=o}),R("6zgXB",function(e,t){c(e.exports,"resizeBilinear",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG"),o=A("4sqA7");let l=/* @__PURE__ */(0,i.op)({resizeBilinear_:/**
 * Bilinear resize a single 3D image or a batch of 3D images to a new shape.
 *
 * @param images The images, of rank 4 or rank 3, of shape
 *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.
 * @param size The new shape `[newHeight, newWidth]` to resize the
 *     images to. Each channel is resized individually.
 * @param alignCorners Defaults to `false`. If true, rescale
 *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4
 *     corners of images and resized images. If false, rescale by
 *     `new_height / height`. Treat similarly the width dimension.
 * @param halfPixelCenters Defaults to `false`. Whether to assume pixel centers
 *     are at 0.5, which would make the floating point coordinates of the top
 *     left pixel 0.5, 0.5.
 *
 * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}
 */function(e,t,i=!1,l=!1){let u=(0,a.convertToTensor)(e,"images","resizeBilinear");s.assert(3===u.rank||4===u.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${u.rank}.`),s.assert(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),s.assert(!1===l||!1===i,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let c=u,d=!1;3===u.rank&&(d=!0,c=(0,o.reshape)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));let[]=t,p={images:c},h=(0,r.ENGINE).runKernel(n.ResizeBilinear,p,{alignCorners:i,halfPixelCenters:l,size:t});return d?(0,o.reshape)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})}),R("ek5OW",function(e,t){c(e.exports,"resizeNearestNeighbor",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG"),o=A("4sqA7");let l=/* @__PURE__ */(0,i.op)({resizeNearestNeighbor_:/**
 * NearestNeighbor resize a batch of 3D images to a new shape.
 *
 * @param images The images, of rank 4 or rank 3, of shape
 *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.
 * @param size The new shape `[newHeight, newWidth]` to resize the
 *     images to. Each channel is resized individually.
 * @param alignCorners Defaults to False. If true, rescale
 *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4
 *     corners of images and resized images. If false, rescale by
 *     `new_height / height`. Treat similarly the width dimension.
 * @param halfPixelCenters Defaults to `false`. Whether to assume pixels are of
 *      half the actual dimensions, and yield more accurate resizes. This flag
 *      would also make the floating point coordinates of the top left pixel
 *      0.5, 0.5.
 *
 * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}
 */function(e,t,i=!1,l=!1){let u=(0,a.convertToTensor)(e,"images","resizeNearestNeighbor");s.assert(3===u.rank||4===u.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${u.rank}.`),s.assert(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),s.assert("float32"===u.dtype||"int32"===u.dtype,()=>"`images` must have `int32` or `float32` as dtype"),s.assert(!1===l||!1===i,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let c=u,d=!1;3===u.rank&&(d=!0,c=(0,o.reshape)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));let[]=t,p={images:c},h=(0,r.ENGINE).runKernel(n.ResizeNearestNeighbor,p,{alignCorners:i,halfPixelCenters:l,size:t});return d?(0,o.reshape)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}})}),R("2uj2A",function(e,t){c(e.exports,"threshold",()=>S);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("lalFM"),n=A("jqSCG"),a=A("inFmq"),s=A("9fmAX"),i=A("f3UMy"),o=A("7LQ38"),l=A("bRRKf"),u=A("9NgTx"),d=A("hgacW"),p=A("jZc0w"),h=A("1QPqB"),f=A("7kouu"),m=A("9YKoa"),g=A("l2P14"),y=A("gYive"),b=A("79KOG"),v=A("80Ety"),x=A("erbmM"),w=A("8cCb2"),k=A("5xBLk");let S=/* @__PURE__ */(0,n.op)({threshold_:/**
 * Performs image binarization with corresponding threshold
 * (depends on the method)value, which creates a binary image from a grayscale.
 * @param image 3d tensor of shape [imageHeight,imageWidth, depth],
 * where imageHeight and imageWidth must be positive.The image color
 * range should be [0, 255].
 * @param method Optional string from `'binary' | 'otsu'`
 * which specifies the method for thresholding. Defaults to 'binary'.
 * @param inverted Optional boolean whichspecifies
 * if colours should be inverted. Defaults to false.
 * @param threshValue Optional number which defines threshold value from 0 to 1.
 * Defaults to 0.5.
 * @return A 3d tensor of shape [imageHeight,imageWidth, depth], which
 * contains binarized image.
 */function(e,t="binary",n=!1,c=.5){let S,N,T,I;let C=(0,k.convertToTensor)(e,"image","threshold"),E=C.shape[0]*C.shape[1],A=(0,p.mul)((0,r.tensor1d)([c]),255);if(w.assert(3===C.rank,()=>`Error in threshold: image must be rank 3,but got rank ${C.rank}.`),w.assert(3===C.shape[2]||1===C.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${C.shape[2]}.`),w.assert("int32"===C.dtype||"float32"===C.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${C.dtype}.`),w.assert("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===C.shape[2]){[S,N,T]=(0,s.split)(C,[1,1,1],-1);let e=(0,p.mul)(S,.2989),t=(0,p.mul)(N,.587),r=(0,p.mul)(T,.114);I=(0,d.add)((0,d.add)(e,t),r)}else I=e;if("otsu"===t){let e=(0,i.bincount)((0,a.cast)((0,m.round)(I),"int32"),(0,x.tensor)([]),256);A=function(e,t){let n,a,s,i,o,c,m=(0,r.tensor1d)([-1]),x=(0,r.tensor1d)([0]),w=(0,r.tensor1d)([0]);for(let k=0;k<e.size-1;k++){n=(0,b.slice)(e,0,k+1),a=(0,b.slice)(e,k+1),o=(0,h.div)((0,u.sum)(n),t),c=(0,h.div)((0,u.sum)(a),t);let S=(0,u.sum)((0,p.mul)(n,(0,v.range)(0,n.size)));s=(0,h.div)(S,(0,u.sum)(n));let N=(0,y.fill)(a.shape,n.size),T=(0,d.add)((0,v.range)(0,a.size),N),I=(0,p.mul)(a,T);i=(0,h.div)((0,u.sum)(I),(0,u.sum)(a));let C=(0,f.sub)(s,i),E=(0,f.sub)(s,i),A=(0,p.mul)(o,c);w=(0,p.mul)((0,p.mul)(A,C),E);let R=(0,l.greater)(w,x);x=(0,g.where)(R,w,x),m=(0,g.where)(R,(0,r.tensor1d)([k]),m)}return m}(e,E)}let R=n?(0,o.lessEqual)(I,A):(0,l.greater)(I,A),_=(0,a.cast)((0,p.mul)(R,255),"int32");return _}})}),R("53uSk",function(e,t){c(e.exports,"transform",()=>o);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("8cCb2"),i=A("jqSCG");let o=/* @__PURE__ */(0,i.op)({transform_:/**
 * Applies the given transform(s) to the image(s).
 *
 * @param image 4d tensor of shape `[batch, imageHeight, imageWidth, depth]`.
 * @param transforms Projective transform matrix/matrices. A tensor1d of length
 *     8 or tensor of size N x 8. If one row of transforms is [a0, a1, a2, b0,
 *     b1, b2, c0, c1], then it maps the output point (x, y) to a transformed
 *     input point (x', y') = ((a0 x + a1 y + a2) / k, (b0 x + b1 y + b2) / k),
 *     where k = c0 x + c1 y + 1. The transforms are inverted compared to the
 *     transform mapping input points to output points.
 * @param interpolation Interpolation mode.
 *     Supported values: 'nearest', 'bilinear'. Default to 'nearest'.
 * @param fillMode Points outside the boundaries of the input are filled
 *     according to the given mode, one of 'constant', 'reflect', 'wrap',
 *     'nearest'. Default to 'constant'.
 *     'reflect': (d c b a | a b c d | d c b a ) The input is extended by
 *     reflecting about the edge of the last pixel.
 *     'constant': (k k k k | a b c d | k k k k) The input is extended by
 *     filling all values beyond the edge with the same constant value k.
 *     'wrap': (a b c d | a b c d | a b c d) The input is extended by
 *     wrapping around to the opposite edge.
 *     'nearest': (a a a a | a b c d | d d d d) The input is extended by
 *     the nearest pixel.
 * @param fillValue A float represents the value to be filled outside the
 *     boundaries when fillMode is 'constant'.
 * @param Output dimension after the transform, [height, width]. If undefined,
 *     output is the same size as input image.
 *
 * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}
 */function(e,t,i="nearest",o="constant",l=0,u){let c=(0,a.convertToTensor)(e,"image","transform","float32"),d=(0,a.convertToTensor)(t,"transforms","transform","float32");return s.assert(4===c.rank,()=>`Error in transform: image must be rank 4,but got rank ${c.rank}.`),s.assert(2===d.rank&&(d.shape[0]===c.shape[0]||1===d.shape[0])&&8===d.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),s.assert(null==u||2===u.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${u}.`),(0,r.ENGINE).runKernel(n.Transform,{image:c,transforms:d},{interpolation:i,fillMode:o,fillValue:l,outputShape:u})}})}),R("kGYDg",function(e,t){c(e.exports,"bandPart",()=>v);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("l0Zxl"),s=A("jTDVJ"),i=A("7LQ38"),o=A("kg1Wp"),l=A("6V8xR"),u=A("15cGp"),d=A("jqSCG"),p=A("80Ety"),h=A("4sqA7"),f=A("8BrLX"),m=A("7kouu"),g=A("gBOC6"),y=A("l2P14"),b=A("hxi4c");let v=/* @__PURE__ */(0,d.op)({bandPart_:/**
 * Copy a tensor setting everything outside a central band in each innermost
 * matrix to zero.
 *
 * The band part is computed as follows: Assume input has `k` dimensions
 * `[I, J, K, ..., M, N]`, then the output is a tensor with the same shape where
 * `band[i, j, k, ..., m, n] = in_band(m, n) * input[i, j, k, ..., m, n]`.
 * The indicator function
 * `in_band(m, n) = (num_lower < 0 || (m-n) <= num_lower)`
 * `&& (num_upper < 0 || (n-m) <= num_upper)`
 *
 * ```js
 * const x = tf.tensor2d([[ 0,  1,  2, 3],
 *                        [-1,  0,  1, 2],
 *                        [-2, -1,  0, 1],
 *                        [-3, -2, -1, 0]]);
 * let y = tf.linalg.bandPart(x, 1, -1);
 * y.print(); // [[ 0,  1,  2, 3],
 *            //  [-1,  0,  1, 2],
 *            //  [ 0, -1,  0, 1],
 *            //  [ 0, 0 , -1, 0]]
 * let z = tf.linalg.bandPart(x, 2, 1);
 * z.print(); // [[ 0,  1,  0, 0],
 *            //  [-1,  0,  1, 0],
 *            //  [-2, -1,  0, 1],
 *            //  [ 0, -2, -1, 0]]
 * ```
 *
 * @param x Rank `k` tensor
 * @param numLower Number of subdiagonals to keep.
 *   If negative, keep entire lower triangle.
 * @param numUpper Number of subdiagonals to keep.
 *   If negative, keep entire upper triangle.
 * @returns Rank `k` tensor of the same shape as input.
 *   The extracted banded tensor.
 *
 * @doc {heading:'Operations', subheading:'Linear Algebra', namespace:'linalg'}
 */function(e,t,c){let d,v;let x=(0,r.convertToTensor)(e,"a","bandPart");(0,n.assert)(x.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${x.rank}.`);let w=x.shape,[k,S]=x.shape.slice(-2);"number"==typeof t?((0,n.assert)(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),(0,n.assert)(t<=k,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${k}).`),d=(0,r.convertToTensor)(t<0?k:t,"numLower","bandPart")):((0,n.assert)("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),// If numLower is a Scalar, checking `numLower <= M` could hurt performance,
// but minimum(numLower, M) could avoid unexpected results.
d=(0,y.where)((0,s.less)(t,0),k,(0,l.minimum)(t,k))),"number"==typeof c?((0,n.assert)(c%1==0,()=>`bandPart(): numUpper must be an integer, got ${c}.`),(0,n.assert)(c<=S,()=>`bandPart(): numUpper (${c}) must not be greater than the number of columns (${S}).`),v=(0,r.convertToTensor)(c<0?S:c,"numUpper","bandPart")):((0,n.assert)("int32"===c.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),v=(0,y.where)((0,s.less)(c,0),S,(0,l.minimum)(c,S)));let N=(0,h.reshape)((0,p.range)(0,k,1,"int32"),[-1,1]),T=(0,p.range)(0,S,1,"int32"),I=(0,m.sub)(N,T),C=(0,o.logicalAnd)((0,i.lessEqual)(I,d),(0,a.greaterEqual)(I,(0,u.neg)(v))),E=(0,b.zeros)([k,S],x.dtype);return(0,h.reshape)((0,f.stack)((0,g.unstack)((0,h.reshape)(x,[-1,k,S])).map(e=>(0,y.where)(C,e,E))),w)}})}),R("bI4CH",function(e,t){c(e.exports,"gramSchmidt",()=>f);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("8cCb2"),a=A("1QPqB"),s=A("jZc0w"),i=A("7k6dx"),o=A("jqSCG"),l=A("9fmAX"),u=A("kX8Hd"),d=A("8BrLX"),p=A("7kouu"),h=A("9NgTx");let f=/* @__PURE__ */(0,o.op)({gramSchmidt_:/**
 * Gram-Schmidt orthogonalization.
 *
 * ```js
 * const x = tf.tensor2d([[1, 2], [3, 4]]);
 * let y = tf.linalg.gramSchmidt(x);
 * y.print();
 * console.log('Orthogonalized:');
 * y.dot(y.transpose()).print();  // should be nearly the identity matrix.
 * console.log('First row direction maintained:');
 * const data = await y.array();
 * console.log(data[0][1] / data[0][0]);  // should be nearly 2.
 * ```
 *
 * @param xs The vectors to be orthogonalized, in one of the two following
 *   formats:
 *   - An Array of `tf.Tensor1D`.
 *   - A `tf.Tensor2D`, i.e., a matrix, in which case the vectors are the rows
 *     of `xs`.
 *   In each case, all the vectors must have the same length and the length
 *   must be greater than or equal to the number of vectors.
 * @returns The orthogonalized and normalized vectors or matrix.
 *   Orthogonalization means that the vectors or the rows of the matrix
 *   are orthogonal (zero inner products). Normalization means that each
 *   vector or each row of the matrix has an L2 norm that equals `1`.
 *
 * @doc {heading:'Operations', subheading:'Linear Algebra', namespace:'linalg'}
 */function(e){let t;if(Array.isArray(e)){t=!1,(0,n.assert)(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let t=1;t<e.length;++t)(0,n.assert)(e[t].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${r})`)}else t=!0,e=(0,l.split)(e,e.shape[0],0).map(e=>(0,u.squeeze)(e,[0]));(0,n.assert)(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let o=[],c=e;for(let t=0;t<e.length;++t)o.push((0,r.ENGINE).tidy(()=>{let e=c[t];if(t>0)for(let r=0;r<t;++r){let t=(0,s.mul)((0,h.sum)((0,s.mul)(o[r],e)),o[r]);e=(0,p.sub)(e,t)}return(0,a.div)(e,(0,i.norm)(e,"euclidean"))}));return t?(0,d.stack)(o,0):o}})}),R("ipM8K",function(e,t){c(e.exports,"qr",()=>T);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("c2DT1"),a=A("8cCb2"),s=A("5TuCW"),i=A("iTu6j"),o=A("1QPqB"),l=A("9gIZb"),u=A("bRRKf"),d=A("aUFou"),p=A("jZc0w"),h=A("15cGp"),f=A("7k6dx"),m=A("jqSCG"),g=A("4sqA7"),y=A("79KOG"),b=A("8BrLX"),v=A("7kouu"),x=A("gmMlv"),w=A("aDHKy"),k=A("gBOC6"),S=A("l2P14");function N(e,t=!1){return(0,r.ENGINE).tidy(()=>{(0,a.assert)(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let c=e.shape[0],m=e.shape[1],g=(0,l.eye)(c),b=(0,s.clone)(e),k=(0,x.tensor2d)([[1]],[1,1]),N=(0,s.clone)(k),T=c>=m?m:c;for(let e=0;e<T;++e){// This tidy within the for-loop ensures we clean up temporary
// tensors as soon as they are no longer needed.
let t=b,a=N,l=g;[N,b,g]=(0,r.ENGINE).tidy(()=>{// Find H = I - tau * w * w', to put zeros below R(j, j).
let t=(0,y.slice)(b,[e,e],[c-e,1]),r=(0,f.norm)(t),n=(0,y.slice)(b,[e,e],[1,1]),a=(0,S.where)((0,u.greater)(n,0),(0,x.tensor2d)([[-1]]),(0,x.tensor2d)([[1]])),l=(0,v.sub)(n,(0,p.mul)(a,r)),T=(0,o.div)(t,l);N=1===T.shape[0]?(0,s.clone)(k):(0,i.concat)([k,(0,y.slice)(T,[1,0],[T.shape[0]-1,T.shape[1]])],0);let I=(0,h.neg)((0,o.div)((0,d.matMul)(a,l),r)),C=(0,y.slice)(b,[e,0],[c-e,m]),E=(0,p.mul)(I,N),A=(0,w.transpose)(N);if(0===e)b=(0,v.sub)(C,(0,d.matMul)(E,(0,d.matMul)(A,C)));else{let t=(0,v.sub)(C,(0,d.matMul)(E,(0,d.matMul)(A,C)));b=(0,i.concat)([(0,y.slice)(b,[0,0],[e,m]),t],0)}let R=(0,w.transpose)(E),_=(0,y.slice)(g,[0,e],[c,g.shape[1]-e]);if(0===e)g=(0,v.sub)(_,(0,d.matMul)((0,d.matMul)(_,N),R));else{let t=(0,v.sub)(_,(0,d.matMul)((0,d.matMul)(_,N),R));g=(0,i.concat)([(0,y.slice)(g,[0,0],[c,e]),t],1)}return[N,b,g]}),(0,n.dispose)([t,a,l])}return!t&&c>m&&(g=(0,y.slice)(g,[0,0],[c,m]),b=(0,y.slice)(b,[0,0],[m,m])),[g,b]})}let T=/* @__PURE__ */(0,m.op)({qr_:/**
 * Compute QR decomposition of m-by-n matrix using Householder transformation.
 *
 * Implementation based on
 *   [http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf]
 * (http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf)
 *
 * ```js
 * const a = tf.tensor2d([[1, 2], [3, 4]]);
 * let [q, r] = tf.linalg.qr(a);
 * console.log('Q');
 * q.print();
 * console.log('R');
 * r.print();
 * console.log('Orthogonalized');
 * q.dot(q.transpose()).print()  // should be nearly the identity matrix.
 * console.log('Reconstructed');
 * q.dot(r).print(); // should be nearly [[1, 2], [3, 4]];
 * ```
 *
 * @param x The `tf.Tensor` to be QR-decomposed. Must have rank >= 2. Suppose
 *   it has the shape `[..., M, N]`.
 * @param fullMatrices An optional boolean parameter. Defaults to `false`.
 *   If `true`, compute full-sized `Q`. If `false` (the default),
 *   compute only the leading N columns of `Q` and `R`.
 * @returns An `Array` of two `tf.Tensor`s: `[Q, R]`. `Q` is a unitary matrix,
 *   i.e., its columns all have unit norm and are mutually orthogonal.
 *   If `M >= N`,
 *     If `fullMatrices` is `false` (default),
 *       - `Q` has a shape of `[..., M, N]`,
 *       - `R` has a shape of `[..., N, N]`.
 *     If `fullMatrices` is `true` (default),
 *       - `Q` has a shape of `[..., M, M]`,
 *       - `R` has a shape of `[..., M, N]`.
 *   If `M < N`,
 *     - `Q` has a shape of `[..., M, M]`,
 *     - `R` has a shape of `[..., M, N]`.
 * @throws If the rank of `x` is less than 2.
 *
 * @doc {heading:'Operations',
 *       subheading:'Linear Algebra',
 *       namespace:'linalg'}
 */function(e,t=!1){if((0,a.assert)(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return N(e,t);{// Rank > 2.
// TODO(cais): Below we split the input into individual 2D tensors,
//   perform QR decomposition on them and then stack the results back
//   together. We should explore whether this can be parallelized.
let r=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),n=(0,k.unstack)((0,g.reshape)(e,[r,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];n.forEach(e=>{let[r,n]=N(e,t);a.push(r),s.push(n)});let i=(0,g.reshape)((0,b.stack)(a,0),e.shape),o=(0,g.reshape)((0,b.stack)(s,0),e.shape);return[i,o]}}})}),R("beFbS",function(e,t){c(e.exports,"absoluteDifference",()=>u);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("7j49I"),s=A("i8gZm"),i=A("jqSCG"),o=A("7kouu"),l=A("aQ3Nu");let u=/* @__PURE__ */(0,i.op)({absoluteDifference_:/**
 * Computes the absolute difference loss between two tensors.
 *
 * @param labels The ground truth output tensor, same dimensions as
 *    'predictions'.
 * @param predictions The predicted outputs.
 * @param weights Tensor whose rank is either 0, or the same rank as
 *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions
 *    must be either `1`, or the same as the corresponding `losses`
 *    dimension).
 * @param reduction Type of reduction to apply to loss. Should be of type
 *    `Reduction`
 *
 * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}
 */function(e,t,i,u=s.Reduction.SUM_BY_NONZERO_WEIGHTS){let c=(0,r.convertToTensor)(e,"labels","absoluteDifference"),d=(0,r.convertToTensor)(t,"predictions","absoluteDifference"),p=null;null!=i&&(p=(0,r.convertToTensor)(i,"weights","absoluteDifference")),(0,n.assertShapesMatch)(c.shape,d.shape,"Error in absoluteDifference: ");let h=(0,a.abs)((0,o.sub)(c,d));return(0,l.computeWeightedLoss)(h,p,u)}})}),R("i8gZm",function(e,t){var r,n;c(e.exports,"Reduction",()=>r),(n=r||(r={}))[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}),R("aQ3Nu",function(e,t){c(e.exports,"computeWeightedLoss",()=>f);var r=A("5xBLk"),n=A("inFmq"),a=A("1QPqB"),s=A("i8gZm"),i=A("67GCc"),o=A("jZc0w"),l=A("8WSnu"),u=A("fOBRA"),d=A("jqSCG"),p=A("3xp7o"),h=A("9NgTx");let f=/* @__PURE__ */(0,d.op)({computeWeightedLoss_:/**
 * Computes the weighted loss between two tensors.
 *
 * @param losses Tensor of shape `[batch_size, d1, ..., dN]`.
 * @param weights Tensor whose rank is either 0, or the same rank as
 *    `losses`, and must be broadcastable to `losses` (i.e., all
 *    dimensions must be either `1`, or the same as the corresponding
 *    `losses` dimension).
 *
 * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}
 */function(e,t,c=s.Reduction.SUM_BY_NONZERO_WEIGHTS){let d=(0,r.convertToTensor)(e,"losses","computeWeightedLoss"),f=null;null!=t&&(f=(0,r.convertToTensor)(t,"weights","computeWeightedLoss"));let m=null==f?d:(0,o.mul)(d,f);if(c===s.Reduction.NONE)return m;if(c===s.Reduction.SUM)return(0,h.sum)(m);if(c===s.Reduction.MEAN){if(null==f)return(0,i.mean)(m);{let e=d.size/f.size,t=(0,a.div)((0,h.sum)(m),(0,h.sum)(f));return e>1?(0,a.div)(t,(0,p.scalar)(e)):t}}if(c===s.Reduction.SUM_BY_NONZERO_WEIGHTS){if(null==f)return(0,a.div)((0,h.sum)(m),(0,p.scalar)(d.size));{let e=(0,o.mul)(f,(0,u.ones)(d.shape)),t=(0,n.cast)((0,h.sum)((0,l.notEqual)(e,(0,p.scalar)(0))),"float32");return(0,a.div)((0,h.sum)(m),t)}}throw Error(`Unknown reduction: ${c}`)}})}),R("315ft",function(e,t){c(e.exports,"cosineDistance",()=>p);var r=A("5xBLk"),n=A("8cCb2"),a=A("i8gZm"),s=A("jZc0w"),i=A("jqSCG"),o=A("3xp7o"),l=A("7kouu"),u=A("9NgTx"),d=A("aQ3Nu");let p=/* @__PURE__ */(0,i.op)({cosineDistance_:/**
 * Computes the cosine distance loss between two tensors.
 *
 * @param labels The ground truth output tensor, same dimensions as
 *    'predictions'.
 * @param predictions The predicted outputs.
 * @param axis The dimension along which the cosine distance is computed.
 * @param weights Tensor whose rank is either 0, or the same rank as
 *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions
 *    must be either `1`, or the same as the corresponding `losses`
 *    dimension).
 * @param reduction Type of reduction to apply to loss. Should be of type
 *    `Reduction`
 *
 * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}
 */function(e,t,i,c,p=a.Reduction.SUM_BY_NONZERO_WEIGHTS){let h=(0,r.convertToTensor)(e,"labels","cosineDistance"),f=(0,r.convertToTensor)(t,"predictions","cosineDistance"),m=null;null!=c&&(m=(0,r.convertToTensor)(c,"weights","cosineDistance")),(0,n.assertShapesMatch)(h.shape,f.shape,"Error in cosineDistance: ");let g=(0,o.scalar)(1),y=(0,l.sub)(g,(0,u.sum)((0,s.mul)(h,f),i,!0));return(0,d.computeWeightedLoss)(y,m,p)}})}),R("aqAKz",function(e,t){c(e.exports,"hingeLoss",()=>p);var r=A("5xBLk"),n=A("8cCb2"),a=A("i8gZm"),s=A("jZc0w"),i=A("jqSCG"),o=A("8wbQq"),l=A("3xp7o"),u=A("7kouu"),d=A("aQ3Nu");let p=/* @__PURE__ */(0,i.op)({hingeLoss_:/**
 * Computes the Hinge loss between two tensors.
 *
 * @param labels The ground truth output tensor, same dimensions as
 *    'predictions'.
 * @param predictions The predicted outputs.
 * @param weights Tensor whose rank is either 0, or the same rank as
 *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions
 *    must be either `1`, or the same as the corresponding `losses`
 *    dimension).
 * @param reduction Type of reduction to apply to loss. Should be of type
 *    `Reduction`
 *
 * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}
 */function(e,t,i,c=a.Reduction.SUM_BY_NONZERO_WEIGHTS){let p=(0,r.convertToTensor)(e,"labels","hingeLoss"),h=(0,r.convertToTensor)(t,"predictions","hingeLoss"),f=null;null!=i&&(f=(0,r.convertToTensor)(i,"weights","hingeLoss")),(0,n.assertShapesMatch)(p.shape,h.shape,"Error in hingeLoss: ");let m=(0,l.scalar)(1);// Convert binary labels to (-1, 1)
p=(0,u.sub)((0,s.mul)((0,l.scalar)(2),p),m);let g=(0,o.relu)((0,u.sub)(m,(0,s.mul)(p,h)));return(0,d.computeWeightedLoss)(g,f,c)}})}),R("2lNlw",function(e,t){c(e.exports,"huberLoss",()=>m);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("7j49I"),s=A("hgacW"),i=A("i8gZm"),o=A("6V8xR"),l=A("jZc0w"),u=A("jqSCG"),d=A("3xp7o"),p=A("iDd8d"),h=A("7kouu"),f=A("aQ3Nu");let m=/* @__PURE__ */(0,u.op)({huberLoss_:/**
 * Computes the Huber loss between two tensors.
 *
 * @param labels The ground truth output tensor, same dimensions as
 *    'predictions'.
 * @param predictions The predicted outputs.
 * @param weights Tensor whose rank is either 0, or the same rank as
 *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions
 *    must be either `1`, or the same as the corresponding `losses`
 *    dimension).
 * @param delta Point where Huber loss changes from quadratic to linear.
 * @param reduction Type of reduction to apply to loss. Should be of type
 *    `Reduction`.
 *
 * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}
 */function(e,t,u,c=1,m=i.Reduction.SUM_BY_NONZERO_WEIGHTS){let g=(0,r.convertToTensor)(e,"labels","huberLoss"),y=(0,r.convertToTensor)(t,"predictions","huberLoss"),b=null;null!=u&&(b=(0,r.convertToTensor)(u,"weights","huberLoss")),(0,n.assertShapesMatch)(g.shape,y.shape,"Error in huberLoss: ");let v=(0,d.scalar)(c),x=(0,a.abs)((0,h.sub)(y,g)),w=(0,o.minimum)(x,v),k=(0,h.sub)(x,w),S=(0,s.add)((0,l.mul)((0,d.scalar)(.5),(0,p.square)(w)),(0,l.mul)(v,k));return(0,f.computeWeightedLoss)(S,b,m)}})}),R("8Bzf4",function(e,t){c(e.exports,"logLoss",()=>f);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("hgacW"),s=A("dcoCo"),i=A("i8gZm"),o=A("jZc0w"),l=A("15cGp"),u=A("jqSCG"),d=A("3xp7o"),p=A("7kouu"),h=A("aQ3Nu");let f=/* @__PURE__ */(0,u.op)({logLoss_:/**
 * Computes the log loss between two tensors.
 *
 * @param labels The ground truth output tensor, same dimensions as
 *    'predictions'.
 * @param predictions The predicted outputs.
 * @param weights Tensor whose rank is either 0, or the same rank as
 *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions
 *    must be either `1`, or the same as the corresponding `losses`
 *    dimension).
 * @param epsilon A small increment to avoid taking log of zero
 * @param reduction Type of reduction to apply to loss. Should be of type
 *    `Reduction`
 *
 * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}
 */function(e,t,u,c=1e-7,f=i.Reduction.SUM_BY_NONZERO_WEIGHTS){let m=(0,r.convertToTensor)(e,"labels","logLoss"),g=(0,r.convertToTensor)(t,"predictions","logLoss"),y=null;null!=u&&(y=(0,r.convertToTensor)(u,"weights","logLoss")),(0,n.assertShapesMatch)(m.shape,g.shape,"Error in logLoss: ");let b=(0,d.scalar)(1),v=(0,d.scalar)(c),x=(0,l.neg)((0,o.mul)(m,(0,s.log)((0,a.add)(g,v)))),w=(0,o.mul)((0,p.sub)(b,m),(0,s.log)((0,a.add)((0,p.sub)(b,g),v))),k=(0,p.sub)(x,w);return(0,h.computeWeightedLoss)(k,y,f)}})}),R("2Tkqe",function(e,t){c(e.exports,"meanSquaredError",()=>l);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("i8gZm"),s=A("jqSCG"),i=A("ay2Nw"),o=A("aQ3Nu");let l=/* @__PURE__ */(0,s.op)({meanSquaredError_:/**
 * Computes the mean squared error between two tensors.
 *
 * @param labels The ground truth output tensor, same dimensions as
 *    'predictions'.
 * @param predictions The predicted outputs.
 * @param weights Tensor whose rank is either 0, or the same rank as
 *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions
 *    must be either `1`, or the same as the corresponding `losses`
 *    dimension).
 * @param reduction Type of reduction to apply to loss. Should be of type
 *    `Reduction`
 *
 * @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'}
 */function(e,t,s,l=a.Reduction.SUM_BY_NONZERO_WEIGHTS){let u=(0,r.convertToTensor)(e,"labels","meanSquaredError"),c=(0,r.convertToTensor)(t,"predictions","meanSquaredError"),d=null;null!=s&&(d=(0,r.convertToTensor)(s,"weights","meanSquaredError")),(0,n.assertShapesMatch)(u.shape,c.shape,"Error in meanSquaredError: ");let p=(0,i.squaredDifference)(u,c);return(0,o.computeWeightedLoss)(p,d,l)}})}),R("7tTB0",function(e,t){c(e.exports,"sigmoidCrossEntropy",()=>y);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("5xBLk"),n=A("8cCb2"),a=A("7j49I"),s=A("hgacW"),i=A("2PcQK"),o=A("5QUXI"),l=A("i8gZm"),u=A("jZc0w"),d=A("15cGp"),p=A("jqSCG"),h=A("8wbQq"),f=A("3xp7o"),m=A("7kouu"),g=A("aQ3Nu");let y=/* @__PURE__ */(0,p.op)({sigmoidCrossEntropy_:/**
 * Computes the sigmoid cross entropy loss between two tensors.
 *
 * If labelSmoothing is nonzero, smooth the labels towards 1/2:
 *
 *   newMulticlassLabels = multiclassLabels * (1 - labelSmoothing)
 *                         + 0.5 * labelSmoothing
 *
 * @param multiClassLabels The ground truth output tensor of shape
 * [batch_size, num_classes], same dimensions as 'predictions'.
 * @param logits The predicted outputs.
 * @param weights Tensor whose rank is either 0, or the same rank as
 *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions
 *    must be either `1`, or the same as the corresponding `losses`
 *    dimension).
 * @param labelSmoothing If greater than 0, then smooth the labels.
 * @param reduction Type of reduction to apply to loss. Should be of type
 *    `Reduction`
 *
 * @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' }
 */function(e,t,c,p=0,y=l.Reduction.SUM_BY_NONZERO_WEIGHTS){let b=(0,r.convertToTensor)(e,"multiClassLabels","sigmoidCrossEntropy"),v=(0,r.convertToTensor)(t,"logits","sigmoidCrossEntropy"),x=null;if(null!=c&&(x=(0,r.convertToTensor)(c,"weights","sigmoidCrossEntropy")),(0,n.assertShapesMatch)(b.shape,v.shape,"Error in sigmoidCrossEntropy: "),p>0){let e=(0,f.scalar)(p),t=(0,f.scalar)(1),r=(0,f.scalar)(.5);b=(0,s.add)((0,u.mul)(b,(0,m.sub)(t,e)),(0,u.mul)(r,e))}let w=function(e,t){let l=(0,r.convertToTensor)(e,"labels","sigmoidCrossEntropyWithLogits"),c=(0,r.convertToTensor)(t,"logits","sigmoidCrossEntropyWithLogits");(0,n.assertShapesMatch)(l.shape,c.shape,"Error in sigmoidCrossEntropyWithLogits: ");/**
     * Implementation Details:
     *
     * For brevity, let `x = logits`, `z = labels`.  The logistic loss is
     *     z * -log(sigmoid(x)) + (1 - z) * -log(1 - sigmoid(x))
     *   = z * -log(1 / (1 + exp(-x))) + (1 - z) * -log(exp(-x) / (1 + exp(-x)))
     *   = z * log(1 + exp(-x)) + (1 - z) * (-log(exp(-x)) + log(1 + exp(-x)))
     *   = z * log(1 + exp(-x)) + (1 - z) * (x + log(1 + exp(-x))
     *   = (1 - z) * x + log(1 + exp(-x))
     *   = x - x * z + log(1 + exp(-x))
     *
     *   For x < 0, to avoid overflow in exp(-x), we reformulate the above
     *     x - x * z + log(1 + exp(-x))
     *   = log(exp(x)) - x * z + log(1 + exp(-x))
     *   = - x * z + log(1 + exp(x))
     *
     * Hence, to ensure stability and avoid overflow, the implementation uses
     * this equivalent formulation:
     *     max(x, 0) - x * z + log(1 + exp(-abs(x)))
     */let p=(0,h.relu)(c),f=(0,u.mul)(c,l),g=(0,o.log1p)((0,i.exp)((0,d.neg)((0,a.abs)(c))));return(0,s.add)((0,m.sub)(p,f),g)}(b,v);return(0,g.computeWeightedLoss)(w,x,y)}})}),R("5FlUs",function(e,t){c(e.exports,"softmaxCrossEntropy",()=>w);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("92fpA"),n=A("5xBLk"),a=A("8cCb2"),s=A("hgacW"),i=A("kTunp"),o=A("inFmq"),l=A("1QPqB"),u=A("2PcQK"),d=A("9dGIC"),p=A("i8gZm"),h=A("jZc0w"),f=A("15cGp"),m=A("jqSCG"),g=A("4sqA7"),y=A("3xp7o"),b=A("7kouu"),v=A("9NgTx"),x=A("aQ3Nu");let w=/* @__PURE__ */(0,m.op)({softmaxCrossEntropy_:/**
 * Computes the softmax cross entropy loss between two tensors.
 *
 * If labelSmoothing is nonzero, smooth the labels towards 1/2:
 *
 *   newOnehotLabels = onehotLabels * (1 - labelSmoothing)
 *                         + labelSmoothing / numClasses
 *
 * @param onehotLabels One hot encoded labels
 *    [batch_size, num_classes], same dimensions as 'predictions'.
 * @param logits The predicted outputs.
 * @param weights Tensor whose rank is either 0, or 1, and must be
 *    broadcastable to `loss`  of shape [batch_size]
 * @param labelSmoothing If greater than 0, then smooth the labels.
 * @param reduction Type of reduction to apply to loss. Should be of type
 *    `Reduction`
 *
 * @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' }
 */function(e,t,c,m=0,w=p.Reduction.SUM_BY_NONZERO_WEIGHTS){let k=(0,n.convertToTensor)(e,"onehotLabels","softmaxCrossEntropy"),S=(0,n.convertToTensor)(t,"logits","softmaxCrossEntropy"),N=null;if(null!=c&&(N=(0,n.convertToTensor)(c,"weights","softmaxCrossEntropy")),(0,a.assertShapesMatch)(k.shape,S.shape,"Error in softmaxCrossEntropy: "),m>0){let e=(0,y.scalar)(m),t=(0,y.scalar)(1),r=(0,y.scalar)(k.shape[1]);k=(0,s.add)((0,h.mul)(k,(0,b.sub)(t,e)),(0,l.div)(e,r))}let T=/**
 * Computes softmax cross entropy between logits and labels.
 *
 * Measures the probability error in discrete classification tasks in which
 * the classes are mutually exclusive (each entry is in exactly one class).
 * For example, each CIFAR-10 image is labeled with one and only one label: an
 * image can be a dog or a truck, but not both.
 *
 * `NOTE`: While the classes are mutually exclusive, their probabilities need
 * not be. All that is required is that each row of labels is a valid
 * probability distribution. If they are not, the computation of the gradient
 * will be incorrect.
 *
 * `WARNING`: This op expects unscaled logits, since it performs a softmax on
 * logits internally for efficiency. Do not call this op with the output of
 * softmax, as it will produce incorrect results.
 *
 * logits and labels must have the same shape, e.g. [batch_size, num_classes]
 * and the same dtype.
 * @param labels The labels array.
 * @param logits The logits array.
 * @param dim The dimension softmax would be performed on. Defaults to `-1`
 *     which indicates the last dimension.
 */function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);// Use a custom gradient for numerical stability.
let a=(0,r.customGrad)((e,t,r)=>{let a=(0,d.logSumExp)(t,[n],!0),s=(0,b.sub)((0,o.cast)(t,"float32"),a);r([e,s]);let l=(0,f.neg)((0,h.mul)(s,e)),c=(0,v.sum)(l,[n]);return{value:c,gradFunc:(e,t)=>{let[r,a]=t,s=(0,i.expandShapeToKeepDim)(e.shape,[n]);return[(0,h.mul)((0,g.reshape)(e,s),(0,b.sub)((0,o.cast)(r,"float32"),(0,u.exp)(a))),(0,h.mul)((0,g.reshape)(e,s),(0,b.sub)((0,u.exp)(a),(0,o.cast)(r,"float32")))]}}});return a(e,t)}(k,S);return(0,x.computeWeightedLoss)(T,N,w)}})}),R("gXzaa",function(e,t){c(e.exports,"sparseFillEmptyRows",()=>i);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({sparseFillEmptyRows_:/**
 * The input SparseTensor is represented via the map of inputs {`indices`,
 * `values`, `denseShape`}. The output SparseTensor has the same `denseShape`
 * but with indices `outputIndices` and values `outputValues`. This op inserts a
 * single entry for every row that doesn't have any values. The index is created
 * as `[row, 0, ..., 0]` and the inserted value is `defaultValue`.
 *
 * For example, suppose `spInput` has shape [5, 6] and non-empty values:
 * [0, 1]: a
 * [0, 3]: b
 * [2, 0]: c
 * [3, 1]: d
 *
 * Rows 1 and 4 are empty, so the output will be of shape [5, 6] with values:
 * [0, 1]: a
 * [0, 3]: b
 * [1, 0]: `defaultValue`
 * [2, 0]: c
 * [3, 1]: d
 * [4, 0]: `defaultValue`
 *
 * The output SparseTensor will be in row-major order and will have the same
 * shape as the input.
 *
 * This op also returns an indicator vector shaped [dense_shape[0]] such that
 * emptyRowIndicator[i] = True iff row i was an empty row.
 *
 * And a reverse index map vector shaped [indices.shape[0]] that is used during
 * backpropagation, reverseIndexMap[i] = outi s.t. indices[i, j] ==
 * outputIndices[outi, j] for all j
 *
 * ```js
 * const result = tf.sparse.sparseFillEmptyRows(
 *   [[0, 0], [1, 0], [1, 3], [1, 4], [3, 2], [3, 3]],
 *   [0, 10, 13, 14, 32, 33], [5, 6], -1);
 * console.log(result);
 * result['outputIndices'].print(); // [[0, 0], [1, 0], [1, 3], [1, 4],
 *                                  //  [2, 0], [3, 2], [3, 3], [4, 0]]
 * result['outputValues'].print(); // [0, 10, 13, 14,-1, 32, 33, -1]
 * result['emptyRowIndicator'].print(); // [false, false, true, false, true]
 * result['reverseIndexMap'].print(); // [0, 1, 2, 3, 5, 6]
 * ```
 * @param indices: 2-D. The indices of the sparse tensor.
 * @param values: 1-D. The values of the sparse tensor.
 * @param denseShape: 1-D. The shape of the sparse tensor.
 * @param defaultValue: 0-D. Default value to insert into location [row, 0, ...,
 *     0] for rows missing from the input sparse tensor.
 * @return A map with the following properties:
 *     - outputIndices
 *     - outputValues: 1-D. The values of the filled sparse tensor.
 *     - emptyRowIndicator: 1-D. Whether the dense row was missing in the input
 * sparse tensor.
 *     - reverseIndexMap: 1-D. A map from the input indices to the output
 * indices.
 * @doc {heading: 'Operations', subheading: 'Sparse'}
 */function(e,t,s,i){let o=(0,a.convertToTensor)(e,"indices","sparseFillEmptyRows","int32"),l=(0,a.convertToTensor)(t,"values","sparseFillEmptyRows"),u=(0,a.convertToTensor)(s,"denseShape","sparseFillEmptyRows","int32"),c=(0,a.convertToTensor)(i,"defaultValue","sparseFillEmptyRows",l.dtype);if(2!==o.rank)throw Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(1!==l.rank)throw Error(`Values should be Tensor1D but received shape ${l.shape}`);if(1!==u.rank)throw Error(`Dense shape should be Tensor1D but received shape ${u.shape}`);if(0!==c.rank)throw Error(`Default value should be a scalar but received shape ${c.shape}`);let d=(0,r.ENGINE).runKernel(n.SparseFillEmptyRows,{indices:o,values:l,denseShape:u,defaultValue:c});return{outputIndices:d[0],outputValues:d[1],emptyRowIndicator:d[2],reverseIndexMap:d[3]}}})}),R("fMgdQ",function(e,t){c(e.exports,"sparseReshape",()=>i);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({sparseReshape_:/**
 * This operation has the same semantics as reshape on the represented dense
 * tensor. The `inputIndices` are recomputed based on the requested `newShape`.
 * If one component of `newShape` is the special value -1, the size of that
 * dimension is computed so that the total dense size remains constant. At most
 * one component of `newShape` can be -1. The number of dense elements implied
 * by `newShape` must be the same as the number of dense elements originally
 * implied by `inputShape`. Reshaping does not affect the order of values in the
 * SparseTensor. If the input tensor has rank R_in and N non-empty values, and
 * `newShape` has length R_out, then `inputIndices` has shape [N, R_in],
 * `inputShape` has length R_in, `outputIndices` has shape [N, R_out], and
 * `outputShape` has length R_out.
 *
 * ```js
 * const result = tf.sparse.sparseReshape(
 *   [[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 2, 3]],
 *   [2, 3, 6], [9, -1]);
 * console.log(result);
 * result['outputIndices'].print(); //[[0, 0], [0, 1], [1, 2], [4, 2], [8, 1]]
 * result['outputShape'].print(); // [9, 4]
 * ```
 * @param inputIndices: 2-D. N x R_in matrix with the indices of non-empty
 * values in a SparseTensor.
 * @param inputShape: 1-D. R_in Tensor1D with the input SparseTensor's dense
 * shape.
 * @param newShape: 1-D. R_out Tensor1D with the requested new dense shape.
 * @return A map with the following properties:
 *     - outputIndices: 2-D. N x R_out matrix with the updated indices of
 *       non-empty values in the output SparseTensor.
 *     - outputShape: 1-D. R_out vector with the full dense shape of the output
 *       SparseTensor. This is the same as newShape but with any -1 dimensions
 *        filled in.
 * @doc {heading: 'Operations', subheading: 'Sparse'}
 */function(e,t,s){let i=(0,a.convertToTensor)(e,"inputIndices","sparseReshape","int32"),o=(0,a.convertToTensor)(t,"inputShape","sparseReshape","int32"),l=(0,a.convertToTensor)(s,"newShape","sparseReshape","int32");if(2!==i.rank)throw Error(`Input indices should be Tensor2D but received shape
        ${i.shape}`);if(1!==o.rank)throw Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(1!==l.rank)throw Error(`New shape should be Tensor1D but received shape ${l.shape}`);let u=(0,r.ENGINE).runKernel(n.SparseReshape,{inputIndices:i,inputShape:o,newShape:l});return{outputIndices:u[0],outputShape:u[1]}}})}),R("22SmX",function(e,t){c(e.exports,"sparseSegmentMean",()=>i);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({sparseSegmentMean_:/**
 * Computes the mean along sparse segments of a tensor.
 *
 * ```js
 * const c = tf.tensor2d([[1,2,3,4], [-1,-2,-3,-4], [6,7,8,9]]);
 * // Select two rows, one segment.
 * const result1 = tf.sparse.sparseSegmentMean(c,
 *                                           tf.tensor1d([0, 1], 'int32'),
 *                                           tf.tensor1d([0, 0], 'int32'));
 * result1.print(); // [[0, 0, 0, 0]]
 *
 * // Select two rows, two segments.
 * const result2 = tf.sparse.sparseSegmentMean(c,
 *                                             tf.tensor1d([0, 1], 'int32'),
 *                                             tf.tensor1d([0, 1], 'int32'));
 * result2.print(); // [[1, 2, 3, 4], [-1, -2, -3, -4]]
 *
 * // Select all rows, two segments.
 * const result3 = tf.sparse.sparseSegmentMean(c,
 *                                             tf.tensor1d([0, 1, 2], 'int32'),
 *                                             tf.tensor1d([0, 1, 1], 'int32'));
 * result3.print(); // [[1.0, 2.0, 3.0, 4.0], [2.5, 2.5, 2.5, 2.5]]
 * ```
 * @param data: A Tensor of at least one dimension with data that will be
 *     assembled in the output.
 * @param indices: A 1-D Tensor with indices into data. Has same rank as
 *     segmentIds.
 * @param segmentIds: A 1-D Tensor with indices into the output Tensor. Values
 *     should be sorted and can be repeated.
 * @return Has same shape as data, except for dimension 0 which has equal to
 *         the number of segments.
 *
 * @doc {heading: 'Operations', subheading: 'Sparse'}
 */function(e,t,s){let i=(0,a.convertToTensor)(e,"data","sparseSegmentMean"),o=(0,a.convertToTensor)(t,"indices","sparseSegmentMean","int32"),l=(0,a.convertToTensor)(s,"segmentIds","sparseSegmentMean","int32");if(i.rank<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==o.rank)throw Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(1!==l.rank)throw Error(`Segment ids should be Tensor1D but received shape
          ${l.shape}`);return(0,r.ENGINE).runKernel(n.SparseSegmentMean,{data:i,indices:o,segmentIds:l})}})}),R("6wGr9",function(e,t){c(e.exports,"sparseSegmentSum",()=>i);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({sparseSegmentSum_:/**
 * Computes the sum along sparse segments of a tensor.
 *
 * ```js
 * const c = tf.tensor2d([[1,2,3,4], [-1,-2,-3,-4], [5,6,7,8]]);
 * // Select two rows, one segment.
 * const result1 = tf.sparse.sparseSegmentSum(c,
 *                                           tf.tensor1d([0, 1], 'int32'),
 *                                           tf.tensor1d([0, 0], 'int32'));
 * result1.print(); // [[0, 0, 0, 0]]
 *
 * // Select two rows, two segments.
 * const result2 = tf.sparse.sparseSegmentSum(c,
 *                                           tf.tensor1d([0, 1], 'int32'),
 *                                           tf.tensor1d([0, 1], 'int32'));
 * result2.print(); // [[1, 2, 3, 4], [-1, -2, -3, -4]]
 *
 * // Select all rows, two segments.
 * const result3 = tf.sparse.sparseSegmentSum(c,
 *                                           tf.tensor1d([0, 1, 2], 'int32'),
 *                                           tf.tensor1d([0, 0, 1], 'int32'));
 * result3.print(); // [[0, 0, 0, 0], [5, 6, 7, 8]]
 * ```
 * @param data: A Tensor of at least one dimension with data that will be
 *     assembled in the output.
 * @param indices: A 1-D Tensor with indices into data. Has same rank as
 *     segmentIds.
 * @param segmentIds: A 1-D Tensor with indices into the output Tensor. Values
 *     should be sorted and can be repeated.
 * @return Has same shape as data, except for dimension 0 which has equal to
 *         the number of segments.
 *
 * @doc {heading: 'Operations', subheading: 'Sparse'}
 */function(e,t,s){let i=(0,a.convertToTensor)(e,"data","sparseSegmentSum"),o=(0,a.convertToTensor)(t,"indices","sparseSegmentSum","int32"),l=(0,a.convertToTensor)(s,"segmentIds","sparseSegmentSum","int32");if(i.rank<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==o.rank)throw Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(1!==l.rank)throw Error(`Segment ids should be Tensor1D but received shape
         ${l.shape}`);return(0,r.ENGINE).runKernel(n.SparseSegmentSum,{data:i,indices:o,segmentIds:l})}})}),R("brFzl",function(e,t){c(e.exports,"stringNGrams",()=>i);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({stringNGrams_:/**
 * Creates ngrams from ragged string data.
 *
 * This op accepts a ragged tensor with 1 ragged dimension containing only
 * strings and outputs a ragged tensor with 1 ragged dimension containing ngrams
 * of that string, joined along the innermost axis.
 *
 * ```js
 * const result = tf.string.stringNGrams(
 *   ['a', 'b', 'c', 'd'], tf.tensor1d([0, 2, 4], 'int32'),
 *   '|', [1, 2], 'LP', 'RP', -1, false);
 * result['nGrams'].print(); // ['a', 'b', 'LP|a', 'a|b', 'b|RP',
 *                           //  'c', 'd', 'LP|c', 'c|d', 'd|RP']
 * result['nGramsSplits'].print(); // [0, 5, 10]
 * ```
 * @param data: The values tensor of the ragged string tensor to make ngrams out
 *     of. Must be a 1D string tensor.
 * @param dataSplits: The splits tensor of the ragged string tensor to make
 *     ngrams out of.
 * @param separator: The string to append between elements of the token. Use ""
 *     for no separator.
 * @param nGramWidths: The sizes of the ngrams to create.
 * @param leftPad: The string to use to pad the left side of the ngram sequence.
 *     Only used if pad_width !== 0.
 * @param rightPad: The string to use to pad the right side of the ngram
 *     sequence. Only used if pad_width !== 0.
 * @param padWidth: The number of padding elements to add to each side of each
 *     sequence. Note that padding will never be greater than `nGramWidths`-1
 *     regardless of this value. If `padWidth`=-1, then add max(`nGramWidths`)-1
 *     elements.
 * @param preserveShortSequences: If true, then ensure that at least one ngram
 *     is generated for each input sequence. In particular, if an input sequence
 *     is shorter than min(ngramWidth) + 2*padWidth, then generate a single
 *     ngram containing the entire sequence. If false, then no ngrams are
 *     generated for these short input sequences.
 * @return A map with the following properties:
 *     - nGrams: The values tensor of the output ngrams ragged tensor.
 *     - nGramsSplits: The splits tensor of the output ngrams ragged tensor.
 *
 * @doc {heading: 'Operations', subheading: 'String'}
 */function(e,t,s,i,o,l,u,c){let d=(0,a.convertToTensor)(e,"data","stringNGrams","string");if("string"!==d.dtype)throw Error("Data must be of datatype string");if(1!==d.shape.length)throw Error(`Data must be a vector, saw: ${d.shape}`);let p=(0,a.convertToTensor)(t,"dataSplits","stringNGrams");if("int32"!==p.dtype)throw Error("Data splits must be of datatype int32");let h=(0,r.ENGINE).runKernel(n.StringNGrams,{data:d,dataSplits:p},{separator:s,nGramWidths:i,leftPad:o,rightPad:l,padWidth:u,preserveShortSequences:c});return{nGrams:h[0],nGramsSplits:h[1]}}})}),R("VUiwf",function(e,t){c(e.exports,"stringSplit",()=>i);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({stringSplit_:/**
 * Split elements of `input` based on `delimiter` into a SparseTensor .
 *
 * Let N be the size of source (typically N will be the batch size). Split each
 * element of `input` based on `delimiter` and return a SparseTensor containing
 * the splitted tokens. Empty tokens are ignored if `skipEmpty` is set to True.
 *
 * `delimiter` can be empty, or a string of split characters. If `delimiter` is
 * an empty string, each element of `input` is split into individual
 * character strings. Otherwise every character of `delimiter` is a potential
 * split point.
 *
 * ```js
 * const result = tf.string.stringSplit(['hello world',  'a b c'], ' ');
 * result['indices'].print(); // [[0, 0], [0, 1], [1, 0], [1, 1], [1, 2]]
 * result['values'].print(); // ['hello', 'world', 'a', 'b', 'c']
 * result['shape'].print(); // [2, 3]
 * ```
 * @param input: 1-D. Strings to split.
 * @param delimiter: 0-D. Delimiter characters, or empty string.
 * @param skipEmpty: Optional. If true, skip the empty strings from the result.
 *     Defaults to true.
 * @return A map with the following properties:
 *     - indices: A dense matrix of int32 representing the indices of the sparse
 *       tensor.
 *     - values: A vector of strings corresponding to the splited values.
 *     - shape: a length-2 vector of int32 representing the shape of the sparse
 * tensor, where the first value is N and the second value is the maximum number
 * of tokens in a single input entry.
 *
 * @doc {heading: 'Operations', subheading: 'String'}
 */function(e,t,s=!0){let i=(0,a.convertToTensor)(e,"input","stringSplit","string"),o=(0,a.convertToTensor)(t,"delimiter","stringSplit","string");if(1!==i.rank)throw Error(`Input should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw Error(`Delimiter should be a scalar but received shape ${o.shape}`);let l=(0,r.ENGINE).runKernel(n.StringSplit,{input:i,delimiter:o},{skipEmpty:s});return{indices:l[0],values:l[1],shape:l[2]}}})}),R("g7F6x",function(e,t){c(e.exports,"stringToHashBucketFast",()=>i);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({stringToHashBucketFast_:/**
 * Converts each string in the input Tensor to its hash mod by a number of
 * buckets.
 *
 * The hash function is deterministic on the content of the string within the
 * process and will never change. However, it is not suitable for cryptography.
 * This function may be used when CPU time is scarce and inputs are trusted or
 * unimportant. There is a risk of adversaries constructing inputs that all hash
 * to the same bucket.
 *
 * ```js
 * const result = tf.string.stringToHashBucketFast(
 *   ['Hello', 'TensorFlow', '2.x'], 3);
 * result.print(); // [0, 2, 2]
 * ```
 * @param input: The strings to assign a hash bucket.
 * @param numBuckets: The number of buckets.
 * @return A Tensor of the same shape as the input tensor.
 *
 * @doc {heading: 'Operations', subheading: 'String'}
 */function(e,t){let s=(0,a.convertToTensor)(e,"input","stringToHashBucketFast","string");if(t<=0)throw Error("Number of buckets must be at least 1");return(0,r.ENGINE).runKernel(n.StringToHashBucketFast,{input:s},{numBuckets:t})}})}),R("bZL8f",function(e,t){c(e.exports,"staticRegexReplace",()=>i);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("38WwN"),n=A("hl418"),a=A("5xBLk"),s=A("jqSCG");let i=/* @__PURE__ */(0,s.op)({staticRegexReplace_:/**
 * Replace the match of a `pattern` in `input` with `rewrite`.
 *
 * ```js
 * const result = tf.string.staticRegexReplace(
 *     ['format       this   spacing      better'], ' +', ' ');
 * result.print(); // ['format this spacing better']
 * ```
 * @param input: A Tensor of type string. The text to be processed.
 * @param pattern: A string. The regular expression to match the input.
 * @param rewrite: A string. The rewrite to be applied to the matched
 *     expression.
 * @param replaceGlobal: An optional bool. Defaults to True. If True, the
 *     replacement is global, otherwise the replacement is done only on the
 *     first match.
 * @return A Tensor of type string.
 *
 * @doc {heading: 'Operations', subheading: 'String'}
 */function(e,t,s,i=!0){let o=(0,a.convertToTensor)(e,"input","staticRegexReplace","string");return(0,r.ENGINE).runKernel(n.StaticRegexReplace,{x:o},{pattern:t,rewrite:s,replaceGlobal:i})}})}),R("dXS8M",function(e,t){c(e.exports,"train",()=>n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("bO4Xu");let n=r.OptimizerConstructors}),R("9LtVT",function(e,t){c(e.exports,"nextFrame",()=>n);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();/**
 * Returns a promise that resolves when a requestAnimationFrame has completed.
 *
 * On Node.js this uses setImmediate instead of requestAnimationFrame.
 *
 * This is simply a sugar method so that users can do the following:
 * `await tf.nextFrame();`
 *
 * @doc {heading: 'Performance', subheading: 'Timing'}
 */function n(){return new Promise(e=>r(()=>e()))}}),R("7MaPk",function(e,t){c(e.exports,"fromUint8ToStringArray",()=>I),c(e.exports,"fromStringArrayToUint8",()=>C),c(e.exports,"slice_util",()=>A("bszZn")),c(e.exports,"upcastType",()=>A("2MDja").upcastType),c(e.exports,"segment_util",()=>A("fHbAS"));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("jjNRA"),n=A("kTunp"),a=A("8BaGO"),s=A("chyju"),i=A("frznq"),o=A("bzoAL"),l=A("dlbe1"),u=A("kaAdl"),p=A("4ldJF");A("bszZn"),A("2MDja");var h=A("aQHa6"),f=A("4h3p6"),m=A("4EvS9"),g=A("7wQGW"),y=A("eowEY"),b=A("aMsMA"),v=A("cgHNs"),x=A("eCPD4"),w=A("izI5a"),k=A("4pqBf"),S=A("5NPez"),N=A("2A2jF"),T=A("6bLmC");function I(e){try{// Decode the bytes into string.
return e.map(e=>(0,r.decodeString)(e))}catch(e){throw Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function C(e){return e.map(e=>(0,r.encodeString)(e))}A("fHbAS"),d(e.exports,n),d(e.exports,a),d(e.exports,s),d(e.exports,i),d(e.exports,o),d(e.exports,l),d(e.exports,u),d(e.exports,p),d(e.exports,h),d(e.exports,f),d(e.exports,m),d(e.exports,g),d(e.exports,y),d(e.exports,b),d(e.exports,v),d(e.exports,x),d(e.exports,w),d(e.exports,k),d(e.exports,S),d(e.exports,N),d(e.exports,T)}),R("chyju",function(e,t){c(e.exports,"assertParamsConsistent",()=>n),c(e.exports,"computeOutShape",()=>a);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2");function n(e,t){let n=e[0].length;e.forEach((e,t)=>{r.assert(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),r.assert(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let a=e[0];e.forEach((e,s)=>{for(let i=0;i<n;i++)r.assert(i===t||e[i]===a[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${s}.`)})}function a(e,t){let r=e[0].slice();for(let n=1;n<e.length;n++)r[t]+=e[n][t];return r}}),R("dlbe1",function(e,t){/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */}),R("kaAdl",function(e,t){var r,n;function a(e,t,r){// Test for consistency of valueShape and shape specified.
// If shape is unspecified and valueShape is specified, then copy
// over the size from the valueShape dimension.
let n=[];if(null==r&&null==t)return n;if(null==t)for(;n.length<e+r.length;)n.push(-1);else n=t.slice();if(null==r)return n;// At this point, valueShape and output_shape have known ranks.
if(e+r.length!==n.length)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+r.length}, but shape.rank = ${n.length}`);for(let a=1;a<r.length;++a){let s=r[a],i=n[n.length-r.length+a],o=n[i];if(s>=0){if(o>=0){if(o!==s)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else n[i]=s}}return n}function s(e){let t={FIRST_DIM_SIZE:r.FIRST_DIM_SIZE,VALUE_ROWIDS:r.VALUE_ROWIDS,ROW_LENGTHS:r.ROW_LENGTHS,ROW_SPLITS:r.ROW_SPLITS,ROW_LIMITS:r.ROW_LIMITS,ROW_STARTS:r.ROW_STARTS},n=[];for(let r of e)if(r in t)n.push(t[r]);else break;return n}function i(e){return 0===e.length?0:e[0]===r.FIRST_DIM_SIZE?e.length-1:e.length}function o(e,t){if(null==e||null==t)return;let r=e.length,n=t.length;if(r>=n)throw Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${r} must be less than ragged tensor input flatValues.rank = ${n})`);for(let a=0;a<Math.min(r,n-1);++a){let r=e[a],n=t[a+1];if(r>=0&&n>=0&&1!==r&&r!==n)throw Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${r} but ragged tensor input.flatValues.shape[${a-e.length}] = ${n}`)}}c(e.exports,"RowPartitionType",()=>r),c(e.exports,"combineRaggedTensorToTensorShapes",()=>a),c(e.exports,"getRowPartitionTypesHelper",()=>s),c(e.exports,"getRaggedRank",()=>i),c(e.exports,"validateDefaultValueShape",()=>o),(n=r||(r={}))[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"}),R("4ldJF",function(e,t){c(e.exports,"PARALLELIZE_THRESHOLD",()=>n),c(e.exports,"computeOptimalWindowSize",()=>a);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * Inputs of size above this threshold will be parallelized by calling multiple
 * shader programs.
 */var r=A("8cCb2");let n=30;function a(e){return e<=n?e:(0,r.nearestDivisor)(e,Math.floor(Math.sqrt(e)))}}),R("aQHa6",function(e,t){c(e.exports,"getImageCenter",()=>r);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// Returns the image center in pixels.
function r(e,t,r){let n=r*("number"==typeof e?e:e[0]),a=t*("number"==typeof e?e:e[1]);return[n,a]}}),R("4h3p6",function(e,t){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * Gets the new shape of the input Tensor after it's been reshaped
 * to:
 * [blockShape[0], ..., blockShape[M-1], batch / prod(blockShape),
 * inputShape[1], ..., inputShape[N-1]]
 *
 * See step 1: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd
 */function r(e,t,r,n=!0){let a=[];if(n)(a=a.concat(t.slice(0))).push(e[0]/r),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let r=t.length;for(let n=0;n<r;++n)a=a.concat([e[n+1]/t[n],t[n]]);a=a.concat(e.slice(r+1))}return a}function n(e,t,r=!0){let n=[];if(r){n.push(t);for(let r=t+1;r<e;++r)r<=2*t?(n.push(r),n.push(r-(t+1))):n.push(r)}else{let r=[],a=[];for(let n=1;n<e;++n)n>=2*t+1||n%2==1?a.push(n):r.push(n);n.push(...r),n.push(0),n.push(...a)}return n}function a(e,t,r,n=!0){let a=[];n?a.push(e[0]/r):a.push(e[0]*r);for(let r=1;r<e.length;++r)r<=t.length?n?a.push(t[r-1]*e[r]):a.push(e[r]/t[r-1]):a.push(e[r]);return a}function s(e,t){let r=[0];for(let n=0;n<t;++n)r.push(e[n][0]);return r}function i(e,t,r){let n=e.slice(0,1);for(let a=0;a<r;++a)n.push(e[a+1]-t[a][0]-t[a][1]);return n}c(e.exports,"getReshaped",()=>r),c(e.exports,"getPermuted",()=>n),c(e.exports,"getReshapedPermuted",()=>a),c(e.exports,"getSliceBeginCoords",()=>s),c(e.exports,"getSliceSize",()=>i)}),R("eowEY",function(e,t){c(e.exports,"SELU_SCALEALPHA",()=>r),c(e.exports,"SELU_SCALE",()=>n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=1.7580993408473768,n=1.0507009873554805}),R("aMsMA",function(e,t){c(e.exports,"ERF_P",()=>r),c(e.exports,"ERF_A1",()=>n),c(e.exports,"ERF_A2",()=>a),c(e.exports,"ERF_A3",()=>s),c(e.exports,"ERF_A4",()=>i),c(e.exports,"ERF_A5",()=>o);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=.3275911,n=.254829592,a=-.284496736,s=1.421413741,i=-1.453152027,o=1.061405429}),R("eCPD4",function(e,t){/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * Merges real and imaginary Float32Arrays into a single complex Float32Array.
 *
 * The memory layout is interleaved as follows:
 * real: [r0, r1, r2]
 * imag: [i0, i1, i2]
 * complex: [r0, i0, r1, i1, r2, i2]
 *
 * This is the inverse of splitRealAndImagArrays.
 *
 * @param real The real values of the complex tensor values.
 * @param imag The imag values of the complex tensor values.
 * @returns A complex tensor as a Float32Array with merged values.
 */function r(e,t){if(e.length!==t.length)throw Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let r=new Float32Array(2*e.length);for(let n=0;n<r.length;n+=2)r[n]=e[n/2],r[n+1]=t[n/2];return r}function n(e){let t=new Float32Array(e.length/2),r=new Float32Array(e.length/2);for(let n=0;n<e.length;n+=2)t[n/2]=e[n],r[n/2]=e[n+1];return{real:t,imag:r}}function a(e){let t=Math.ceil(e.length/4),r=new Float32Array(t),n=new Float32Array(t);for(let t=0;t<e.length;t+=4)r[Math.floor(t/4)]=e[t],n[Math.floor(t/4)]=e[t+1];return{real:r,imag:n}}function s(e){let t=Math.floor(e.length/4),r=new Float32Array(t),n=new Float32Array(t);for(let t=2;t<e.length;t+=4)r[Math.floor(t/4)]=e[t],n[Math.floor(t/4)]=e[t+1];return{real:r,imag:n}}function i(e,t){let r=e[2*t],n=e[2*t+1];return{real:r,imag:n}}function o(e,t,r,n){e[2*n]=t,e[2*n+1]=r}function l(e,t){let r=new Float32Array(e/2),n=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);r[a]=Math.cos(s),n[a]=Math.sin(s)}return{real:r,imag:n}}function u(e,t,r){let n=(r?2:-2)*Math.PI*(e/t),a=Math.cos(n),s=Math.sin(n);return{real:a,imag:s}}c(e.exports,"mergeRealAndImagArrays",()=>r),c(e.exports,"splitRealAndImagArrays",()=>n),c(e.exports,"complexWithEvenIndex",()=>a),c(e.exports,"complexWithOddIndex",()=>s),c(e.exports,"getComplexWithIndex",()=>i),c(e.exports,"assignToTypedArray",()=>o),c(e.exports,"exponents",()=>l),c(e.exports,"exponent",()=>u)}),R("izI5a",function(e,t){c(e.exports,"decodeEinsumEquation",()=>a),c(e.exports,"getEinsumPermutation",()=>s),c(e.exports,"checkEinsumDimSizes",()=>i),c(e.exports,"getEinsumComputePath",()=>o),c(e.exports,"isIdentityPermutation",()=>l);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2");let n=/->/g;function a(e,t){e=e.replace(/\s/g,"");// Remove witespace in equation.
let a=(e.length-e.replace(n,"").length)/2;if(a<1)throw Error("Equations without an arrow are not supported.");if(a>1)throw Error('Equation must contain exactly one arrow ("->").');let[s,i]=e.split("->");(0,r.assert)(-1===s.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');let o=s.split(","),l=o.length;if(t!==l)throw Error(`Expected ${l} input tensors, received ${t}`);if(l>2)throw Error("Support for more than 2 input tensors is not implemented yet.");let u=[];for(let e=0;e<i.length;++e){let t=i[e];if(!o.some(e=>-1!==e.indexOf(t)))throw Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===u.indexOf(t)&&u.push(t)}for(let e=0;e<s.length;++e){let t=s[e];-1===u.indexOf(t)&&","!==t&&u.push(t)}let c=Array(o.length);for(let e=0;e<l;++e){if(new Set(o[e].split("")).size!==o[e].length)throw Error(`Found duplicate axes in input component ${o[e]}. Support for duplicate axes in input is not implemented yet.`);c[e]=[];for(let t=0;t<o[e].length;++t)c[e].push(u.indexOf(o[e][t]))}let d=u.length,p=i.length,h=[];// Number of unique dimensions.
for(let e=p;e<d;++e)h.push(e);return{allDims:u,summedDims:h,idDims:c}}function s(e,t){let r=Array(e);r.fill(-1);for(let e=0;e<t.length;++e)r[t[e]]=e;let n=[];for(let t=0;t<e;++t)-1===r[t]&&n.push(t);return{permutationIndices:r=r.filter(e=>-1!==e),expandDims:n}}function i(e,t,n){let a=Array(e);for(let e=0;e<n.length;++e){let s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===a[t[e][n]]?a[t[e][n]]=s[n]:(0,r.assert)(a[t[e][n]]===s[n],()=>`Expected dimension ${a[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`)}}function o(e,t){let r=[],n=0;0===e.length&&e.push(-1),n=e.length+1;for(let e=0;e<n;++e)r.push([]);let a=[];for(let n=0;n<e.length;++n){let s=e[n],i=function(e,t){let r=[];for(let n=0;n<e.length;++n)(0===e[n].length||-1!==e[n].indexOf(t)||-1===t)&&r.push(n);return r}(t,s);for(let e of i)-1===a.indexOf(e)&&(r[n].push(e),a.push(e))}return{path:e,steps:r}}function l(e){return e.every((e,t)=>e===t)}}),R("4pqBf",function(e,t){c(e.exports,"prepareSplitSize",()=>n);var r=A("8cCb2");function n(e,t,n=0){let a=[];if("number"==typeof t)(0,r.assert)(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),a=Array(t).fill(e.shape[n]/t);else{let s=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);(0,r.assert)(s<=1,()=>"There should be only one negative value in split array.");let i=t.indexOf(-1);// Allow the number of split array to be -1, which indicates the rest
// of dimension is allocated to that split.
if(-1!==i){let r=t.reduce((e,t)=>t>0?e+t:e);t[i]=e.shape[n]-r}(0,r.assert)(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),a=t}return a}}),R("5NPez",function(e,t){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * Generates sparse fill empty rows indices, dense shape mismatch error message.
 *
 * @param indicesLength The first dimension of indices.
 */function r(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function n(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function a(e,t,r){return`indices(${e}, 0) is invalid: ${t} >= ${r}`}c(e.exports,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",()=>r),c(e.exports,"getSparseFillEmptyRowsNegativeIndexErrorMessage",()=>n),c(e.exports,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",()=>a)}),R("2A2jF",function(e,t){c(e.exports,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",()=>n),c(e.exports,"getSparseReshapeNegativeOutputDimErrorMessage",()=>a),c(e.exports,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",()=>s),c(e.exports,"getSparseReshapeInputOutputMultipleErrorMessage",()=>i),c(e.exports,"getSparseReshapeInputOutputMismatchErrorMessage",()=>o);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2");function n(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function a(e,t){return`size ${e} must be non-negative, not ${t}`}function s(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function i(e,t){let n=(0,r.sizeFromShape)(e),a=(0,r.sizeFromShape)(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${a}. inputShape=${e} outputShape= ${t}`}function o(e,t){let n=(0,r.sizeFromShape)(e),a=(0,r.sizeFromShape)(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${a}. inputShape=${e} outputShape=${t}`}}),R("6bLmC",function(e,t){/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * Generates sparse segment reduction negative segment ids error message.
 *
 */function r(){return"segment ids must be >= 0"}function n(){return"segment ids are not increasing"}function a(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function s(e,t,r){return`Bad: indices[${e}] == ${t} out of range [0, ${r})`}c(e.exports,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",()=>r),c(e.exports,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",()=>n),c(e.exports,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",()=>a),c(e.exports,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",()=>s)}),R("fHbAS",function(e,t){c(e.exports,"segOpComputeOptimalWindowSize",()=>a),c(e.exports,"computeOutShape",()=>s),c(e.exports,"collectGatherOpShapeInfo",()=>i);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8cCb2"),n=A("4ldJF");function a(e,t){let a,s=!1;for(e<=n.PARALLELIZE_THRESHOLD?(a=e,s=!0):a=(0,r.nearestDivisor)(e,Math.floor(Math.sqrt(e)));!s;)a>t||a===e?s=!0:a=(0,r.nearestDivisor)(e,a+1);return a}function s(e,t,r){let n=[],a=e.length;for(let s=0;s<a;s++)s!==t?n.push(e[s]):n.push(r);return n}function i(e,t,r,n){let a=t.shape.length,s=e.shape.length;if(0!==n&&(n<-a||n>a))throw Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${n}`);if(n<0&&(n+=a),n>s)throw Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(r<n)throw Error(`batchDims (${n}) must be less than or equal to axis (${r}).`);for(let r=0;r<n;++r)if(e.shape[r]!==t.shape[r])throw Error(`x.shape[${r}]: ${e.shape[r]} should be equal to indices.shape[${r}]: ${t.shape[r]}.`);let i=e.shape[r],o=[],l=1,u=1,c=1;for(let t=0;t<n;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=n;t<r;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=n;e<a;e++)o.push(t.shape[e]);for(let t=r+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}}),R("lzjc8",function(e,t){c(e.exports,"nonMaxSuppressionV3Impl",()=>A("KPYos").nonMaxSuppressionV3Impl),c(e.exports,"nonMaxSuppressionV4Impl",()=>A("KPYos").nonMaxSuppressionV4Impl),c(e.exports,"nonMaxSuppressionV5Impl",()=>A("KPYos").nonMaxSuppressionV5Impl),c(e.exports,"whereImpl",()=>A("kNeGS").whereImpl),A("KPYos"),A("kNeGS")}),R("bVQtG",function(e,t){c(e.exports,"GraphModel",()=>u),c(e.exports,"loadGraphModel",()=>d),c(e.exports,"loadGraphModelSync",()=>p),/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var r=A("9ELKf"),n=A("jjNRA"),a=A("9jCh7"),s=A("c2DT1"),i=A("jRFPP"),o=A("eZl48"),l=A("kqYp1");class u{// Returns the version information for the tensorflow model GraphDef.
get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}/**
     * @param modelUrl url for the model, or an `io.IOHandler`.
     * @param weightManifestUrl url for the weight file generated by
     * scripts/convert.py script.
     * @param requestOption options for Request, which allows to send credentials
     * and custom headers.
     * @param onProgress Optional, progress callback function, fired periodically
     * before the load is completed.
     */constructor(e,t={},n=r){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new l.ResourceManager}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)// assume it is a relative http path.
t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}/**
     * Loads the model and weight files, construct the in memory weight map and
     * compile the inference graph.
     */load(){if(this.findIOHandler(),null==this.handler.load)throw Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return n.isPromise(e)?e.then(e=>this.loadSync(e)):this.loadSync(e)}/**
     * Synchronously construct the in memory weight map and
     * compile the inference graph.
     *
     * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}
     */loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=r,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let n=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new o.GraphExecutor((0,i.OperationMapper).Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),// Attach a model-level resourceManager to each executor to share resources,
// such as `HashTable`.
this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=(0,i.OperationMapper).Instance.transformGraph(e.modelInitializer);this.initializer=new o.GraphExecutor(t),this.initializer.weightMap=this.executor.weightMap,// Attach a model-level resourceManager to the initializer, the
// hashTables created from when executing the initializer will be stored
// in the resourceManager.
this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}/**
     * Save the configuration and/or weights of the GraphModel.
     *
     * An `IOHandler` is an object that has a `save` method of the proper
     * signature defined. The `save` method manages the storing or
     * transmission of serialized data ("artifacts") that represent the
     * model's topology and weights onto or via a specific medium, such as
     * file downloads, local storage, IndexedDB in the web browser and HTTP
     * requests to a server. TensorFlow.js provides `IOHandler`
     * implementations for a number of frequently used saving mediums, such as
     * `tf.io.browserDownloads` and `tf.io.browserLocalStorage`. See `tf.io`
     * for more details.
     *
     * This method also allows you to refer to certain types of `IOHandler`s
     * as URL-like string shortcuts, such as 'localstorage://' and
     * 'indexeddb://'.
     *
     * Example 1: Save `model`'s topology and weights to browser [local
     * storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage);
     * then load it back.
     *
     * ```js
     * const modelUrl =
     *    'https://storage.googleapis.com/tfjs-models/savedmodel/mobilenet_v2_1.0_224/model.json';
     * const model = await tf.loadGraphModel(modelUrl);
     * const zeros = tf.zeros([1, 224, 224, 3]);
     * model.predict(zeros).print();
     *
     * const saveResults = await model.save('localstorage://my-model-1');
     *
     * const loadedModel = await tf.loadGraphModel('localstorage://my-model-1');
     * console.log('Prediction from loaded model:');
     * model.predict(zeros).print();
     * ```
     *
     * @param handlerOrURL An instance of `IOHandler` or a URL-like,
     * scheme-based string shortcut for `IOHandler`.
     * @param config Options for saving the model.
     * @returns A `Promise` of `SaveResult`, which summarizes the result of
     * the saving, such as byte sizes of the saved artifacts for the model's
     *   topology and weight values.
     *
     * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}
     */async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof a.Tensor?[e]:e,r={};return t.forEach((e,t)=>r[this.structuredOutputKeys[t]]=e),r}return e}/**
     * Execute the inference for the input tensors.
     *
     * @param input The input tensors, when there is single input for the model,
     * inputs param should be a `tf.Tensor`. For models with mutliple inputs,
     * inputs params should be in either `tf.Tensor`[] if the input order is
     * fixed, or otherwise NamedTensorMap format.
     *
     * For model with multiple inputs, we recommend you use NamedTensorMap as the
     * input type, if you use `tf.Tensor`[], the order of the array needs to
     * follow the
     * order of inputNodes array. @see {@link GraphModel.inputNodes}
     *
     * You can also feed any intermediate nodes using the NamedTensorMap as the
     * input type. For example, given the graph
     *    InputNode => Intermediate => OutputNode,
     * you can execute the subgraph Intermediate => OutputNode by calling
     *    model.execute('IntermediateNode' : tf.tensor(...));
     *
     * This is useful for models that uses tf.dynamic_rnn, where the intermediate
     * state needs to be fed manually.
     *
     * For batch inference execution, the tensors for each input need to be
     * concatenated together. For example with mobilenet, the required input shape
     * is [1, 244, 244, 3], which represents the [batch, height, width, channel].
     * If we are provide a batched data of 100 images, the input tensor should be
     * in the shape of [100, 244, 244, 3].
     *
     * @param config Prediction configuration for specifying the batch size.
     * Currently the batch size option is ignored for graph model.
     *
     * @returns Inference result tensors. If the model is converted and it
     * originally had structured_outputs in tensorflow, then a NamedTensorMap
     * will be returned matching the structured_outputs. If no structured_outputs
     * are present, the output will be single `tf.Tensor` if the model has single
     * output node, otherwise Tensor[].
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */predict(e,t){let r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}/**
     * Execute the inference for the input tensors in async fashion, use this
     * method when your model contains control flow ops.
     *
     * @param input The input tensors, when there is single input for the model,
     * inputs param should be a `tf.Tensor`. For models with mutliple inputs,
     * inputs params should be in either `tf.Tensor`[] if the input order is
     * fixed, or otherwise NamedTensorMap format.
     *
     * For model with multiple inputs, we recommend you use NamedTensorMap as the
     * input type, if you use `tf.Tensor`[], the order of the array needs to
     * follow the
     * order of inputNodes array. @see {@link GraphModel.inputNodes}
     *
     * You can also feed any intermediate nodes using the NamedTensorMap as the
     * input type. For example, given the graph
     *    InputNode => Intermediate => OutputNode,
     * you can execute the subgraph Intermediate => OutputNode by calling
     *    model.execute('IntermediateNode' : tf.tensor(...));
     *
     * This is useful for models that uses tf.dynamic_rnn, where the intermediate
     * state needs to be fed manually.
     *
     * For batch inference execution, the tensors for each input need to be
     * concatenated together. For example with mobilenet, the required input shape
     * is [1, 244, 244, 3], which represents the [batch, height, width, channel].
     * If we are provide a batched data of 100 images, the input tensor should be
     * in the shape of [100, 244, 244, 3].
     *
     * @param config Prediction configuration for specifying the batch size.
     * Currently the batch size option is ignored for graph model.
     *
     * @returns A Promise of inference result tensors. If the model is converted
     * and it originally had structured_outputs in tensorflow, then a
     * NamedTensorMap will be returned matching the structured_outputs. If no
     * structured_outputs are present, the output will be single `tf.Tensor` if
     * the model has single output node, otherwise Tensor[].
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */async predictAsync(e,t){let r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var t;if(!(e instanceof a.Tensor)&&!Array.isArray(e)){// The input is already a NamedTensorMap.
let r=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=r)for(let t in r){let n=r[t];null!=n.resourceId&&(e[t]=this.resourceIdToCapturedInput[n.resourceId])}return e}e=Array.isArray(e)?e:[e];let r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let n=0;return this.inputNodes.reduce((t,r)=>{var a,s,i;let o=null===(i=null===(s=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===s?void 0:s[r])||void 0===i?void 0:i.resourceId;return null!=o?t[r]=this.resourceIdToCapturedInput[o]:t[r]=e[n++],t},{})}normalizeOutputs(e){return Array.isArray(e=e||this.outputNodes)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,r=Object.keys(t);for(let n=0;n<r.length;n++){let a=r[n],s=t[a];this.resourceIdToCapturedInput[s.resourceId]=e[n]}}}/**
     * Executes inference for the model for given input tensors.
     * @param inputs tensor, tensor array or tensor map of the inputs for the
     * model, keyed by the input node names.
     * @param outputs output node name from the TensorFlow model, if no
     * outputs are specified, the default outputs of the model would be used.
     * You can inspect intermediate nodes of the model by adding them to the
     * outputs array.
     *
     * @returns A single tensor if provided with a single output or no outputs
     * are provided and there is only one default output, otherwise return a
     * tensor array. The order of the tensor array is the same as the outputs
     * if provided, otherwise the order of outputNodes attribute of the model.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let r=this.executor.execute(e,t);return r.length>1?r:r[0]}/**
     * Executes inference for the model for given input tensors in async
     * fashion, use this method when your model contains control flow ops.
     * @param inputs tensor, tensor array or tensor map of the inputs for the
     * model, keyed by the input node names.
     * @param outputs output node name from the TensorFlow model, if no outputs
     * are specified, the default outputs of the model would be used. You can
     * inspect intermediate nodes of the model by adding them to the outputs
     * array.
     *
     * @returns A Promise of single tensor if provided with a single output or
     * no outputs are provided and there is only one default output, otherwise
     * return a tensor map.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}/**
     * Get intermediate tensors for model debugging mode (flag
     * KEEP_INTERMEDIATE_TENSORS is true).
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */getIntermediateTensors(){return this.executor.getIntermediateTensors()}/**
     * Dispose intermediate tensors for model debugging mode (flag
     * KEEP_INTERMEDIATE_TENSORS is true).
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}/**
     * Releases the memory used by the weight tensors and resourceManager.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,s.dispose)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function d(e,t={},n=r){var a;if(null==e)throw Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&((a=e).endsWith("/")||(a+="/"),e=`${a}model.json?tfjs-format=file`);let s=new u(e,t,n);return await s.load(),s}function p(e){let t;if(null==e)throw Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");if(e instanceof Array){let[n,a]=e;if(!n)throw Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw Error("Model JSON is missing 'weightsManifest'");let s=r.getWeightSpecs(n.weightsManifest),i=r.getModelArtifactsForJSONSync(n,s,a);t=r.fromMemorySync(i)}else if("load"in e)t=e;else if("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e)t=r.fromMemorySync(e);else throw Error("Unknown model format");let n=new u(t);return n.load(),n}}),R("jRFPP",function(e,t){c(e.exports,"OperationMapper",()=>C),c(e.exports,"getStringParam",()=>R),c(e.exports,"getStringArrayParam",()=>B),c(e.exports,"getNumberParam",()=>O),c(e.exports,"getNumericArrayParam",()=>j),c(e.exports,"getBoolParam",()=>_),c(e.exports,"getBoolArrayParam",()=>V),c(e.exports,"getTensorShapeParam",()=>L),c(e.exports,"getTensorShapeArrayParam",()=>z),c(e.exports,"getDtypeParam",()=>D),c(e.exports,"getDtypeArrayParam",()=>M),/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var r=A("ibsdL"),n=A("iILH2"),a=A("dWfqP"),s=A("9PnRL"),i=A("cCcNy"),o=A("6T10F"),l=A("25do8"),u=A("kQhpu"),d=A("iKevB"),p=A("gul1X"),h=A("8ADHf"),f=A("cf9s6"),m=A("agimj"),g=A("j4qIR"),y=A("gUOFE"),b=A("6seiJ"),v=A("1st1Z"),x=A("l0Shb"),w=A("eTKRE"),k=A("5vXpX"),S=A("kuUeg"),N=A("3Fxik"),T=A("3km3B"),I=A("6ZWSX").Buffer;class C{// Singleton instance for the mapper
static get Instance(){return this._instance||(this._instance=new this)}// Loads the op mapping from the JSON file.
constructor(){let e=[].concat(...[i,o,l,u,d,p,h,f,m,g,y,b,v,x,w,k,S,N,T].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}// Converts the model inference graph from Tensorflow GraphDef to local
// representation for TensorFlow.js API
transformGraph(e,t={}){let r=e.node,n=[],a=[],i=[],o=r.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?n.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&i.push(e[t.name]),e),{}),l=[],u=[],c={},d={};null!=t&&(c=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let p=Object.keys(o);p.forEach(e=>{let t=o[e];t.inputNames.forEach((e,r)=>{let[n,,a]=(0,s.getNodeNameAndIndex)(e),i=o[n];if(null!=i.outputs){let e=i.outputs.indexOf(a);if(-1!==e){let a=`${n}:${e}`;// update the input name to use the mapped output index directly.
t.inputNames[r]=a}}t.inputs.push(i),i.children.push(t)})}),0===Object.keys(d).length?p.forEach(e=>{let t=o[e];0===t.children.length&&u.push(t)}):Object.keys(d).forEach(e=>{let[t]=(0,s.getNodeNameAndIndex)(e),r=o[t];null!=r&&(r.signatureKey=d[e],u.push(r))}),Object.keys(c).length>0?Object.keys(c).forEach(e=>{let[t]=(0,s.getNodeNameAndIndex)(e),r=o[t];r&&(r.signatureKey=c[e],l.push(r))}):l=n;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));let f={nodes:o,inputs:l,outputs:u,weights:a,placeholders:n,signature:t,functions:h};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){// Unsupported ops will cause an error at run-time (not parse time), since
// they may not be used by the actual execution subgraph.
let t=(0,a.getRegisteredOp)(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(r.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(r.attrParams=t.attrs.reduce((t,r)=>{let n;let a=r.type;switch(r.type){case"string":void 0===(n=R(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=R(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":void 0===(n=B(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=B(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":void 0===(n=O(e.attr,r.tfName,r.defaultValue||0))&&r.tfDeprecatedName&&(n=O(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":void 0===(n=j(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=j(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":void 0===(n=_(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=_(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":void 0===(n=V(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=V(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":void 0===(n=L(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=L(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":void 0===(n=z(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=z(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":void 0===(n=D(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=D(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":void 0===(n=M(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=M(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":void 0===(n=$(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=$(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return t[r.name]={value:n,type:a},t},{})),r}// map the TFunctionDef to TFJS graph object
mapFunction(e){let t=e.nodeDef,r=[],n={};null!=t&&(n=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&r.push(e[t.name]),e),{}));let a=[],i=[];e.signature.inputArg.forEach(e=>{let[t]=(0,s.getNodeNameAndIndex)(e.name),r={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:P(e.type),type:"dtype"}},children:[]};r.signatureKey=e.name,a.push(r),n[t]=r});let o=Object.keys(n);o.forEach(e=>{let t=n[e];t.inputNames.forEach((e,r)=>{let[a,,i]=(0,s.getNodeNameAndIndex)(e),o=n[a];if(null!=o.outputs){let e=o.outputs.indexOf(i);if(-1!==e){let n=`${a}:${e}`;// update the input name to use the mapped output index directly.
t.inputNames[r]=n}}t.inputs.push(o),o.children.push(t)})});let l=e.ret;e.signature.outputArg.forEach(e=>{let[t,r]=(0,s.getNodeNameAndIndex)(l[e.name]),a=n[t];null!=a&&(a.defaultOutput=r,i.push(a))});let u=this.mapArgsToSignature(e);return{nodes:n,inputs:a,outputs:i,weights:r,placeholders:[],signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return null!=t&&(r=t[r]),{name:r,dtype:e.type}}}function E(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=(0,r.env)().global;if(void 0!==t.atob)return t.atob(e);if(void 0!==I)return new I(e,"base64").toString();throw Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function R(e,t,r,n=!1){let a=e[t];return null!=a?E(a.s,n):r}function _(e,t,r){let n=e[t];return n?n.b:r}function O(e,t,r){let n=e[t]||{},a=null!=n.i?n.i:null!=n.f?n.f:r;return"number"==typeof a?a:parseInt(a,10)}function P(e){switch("string"==typeof e&&(e=n.DataType[e]),e){case n.DataType.DT_FLOAT:case n.DataType.DT_HALF:return"float32";case n.DataType.DT_INT32:case n.DataType.DT_INT64:case n.DataType.DT_INT8:case n.DataType.DT_UINT8:return"int32";case n.DataType.DT_BOOL:return"bool";case n.DataType.DT_DOUBLE:return"float32";case n.DataType.DT_STRING:return"string";default:// Unknown dtype error will happen at runtime (instead of parse time),
// since these nodes might not be used by the actual subgraph execution.
return null}}function $(e,t,r){let n=e[t];return n&&n.func?n.func.name:r}function D(e,t,r){let n=e[t];return n&&n.type?P(n.type):r}function M(e,t,r){let n=e[t];return n&&n.list&&n.list.type?n.list.type.map(e=>P(e)):r}function F(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function L(e,t,r){let n=e[t];return n&&n.shape?F(n.shape):r}function j(e,t,r){let n=e[t];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):r}function B(e,t,r,n=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>E(e,n)):r}function z(e,t,r){let n=e[t];return n&&n.list&&n.list.shape?n.list.shape.map(e=>F(e)):r}function V(e,t,r){let n=e[t];return n&&n.list&&n.list.b?n.list.b:r}}),R("iILH2",function(e,t){var r,n,a,s,i;c(e.exports,"DataType",()=>r),// Not a legal value for DataType.  Used to indicate a DataType field
// has not been set.
(a=r||(r={}))[a.DT_INVALID=0]="DT_INVALID",// Data types that all computation devices are expected to be
// capable to support.
a[a.DT_FLOAT=1]="DT_FLOAT",a[a.DT_DOUBLE=2]="DT_DOUBLE",a[a.DT_INT32=3]="DT_INT32",a[a.DT_UINT8=4]="DT_UINT8",a[a.DT_INT16=5]="DT_INT16",a[a.DT_INT8=6]="DT_INT8",a[a.DT_STRING=7]="DT_STRING",a[a.DT_COMPLEX64=8]="DT_COMPLEX64",a[a.DT_INT64=9]="DT_INT64",a[a.DT_BOOL=10]="DT_BOOL",a[a.DT_QINT8=11]="DT_QINT8",a[a.DT_QUINT8=12]="DT_QUINT8",a[a.DT_QINT32=13]="DT_QINT32",a[a.DT_BFLOAT16=14]="DT_BFLOAT16",a[a.DT_QINT16=15]="DT_QINT16",a[a.DT_QUINT16=16]="DT_QUINT16",a[a.DT_UINT16=17]="DT_UINT16",a[a.DT_COMPLEX128=18]="DT_COMPLEX128",a[a.DT_HALF=19]="DT_HALF",a[a.DT_RESOURCE=20]="DT_RESOURCE",a[a.DT_VARIANT=21]="DT_VARIANT",a[a.DT_UINT32=22]="DT_UINT32",a[a.DT_UINT64=23]="DT_UINT64",// Do not use!  These are only for parameters.  Every enum above
// should have a corresponding value below (verified by types_test).
a[a.DT_FLOAT_REF=101]="DT_FLOAT_REF",a[a.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",a[a.DT_INT32_REF=103]="DT_INT32_REF",a[a.DT_UINT8_REF=104]="DT_UINT8_REF",a[a.DT_INT16_REF=105]="DT_INT16_REF",a[a.DT_INT8_REF=106]="DT_INT8_REF",a[a.DT_STRING_REF=107]="DT_STRING_REF",a[a.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",a[a.DT_INT64_REF=109]="DT_INT64_REF",a[a.DT_BOOL_REF=110]="DT_BOOL_REF",a[a.DT_QINT8_REF=111]="DT_QINT8_REF",a[a.DT_QUINT8_REF=112]="DT_QUINT8_REF",a[a.DT_QINT32_REF=113]="DT_QINT32_REF",a[a.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",a[a.DT_QINT16_REF=115]="DT_QINT16_REF",a[a.DT_QUINT16_REF=116]="DT_QUINT16_REF",a[a.DT_UINT16_REF=117]="DT_UINT16_REF",a[a.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",a[a.DT_HALF_REF=119]="DT_HALF_REF",a[a.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",a[a.DT_VARIANT_REF=121]="DT_VARIANT_REF",a[a.DT_UINT32_REF=122]="DT_UINT32_REF",a[a.DT_UINT64_REF=123]="DT_UINT64_REF",(i=(s=n||(n={})).CheckpointFormatVersion||(s.CheckpointFormatVersion={}))[i.LEGACY=0]="LEGACY",i[i.V1=1]="V1",i[i.V2=2]="V2"}),R("dWfqP",function(e,t){c(e.exports,"registerOp",()=>n),c(e.exports,"getRegisteredOp",()=>a),c(e.exports,"deregisterOp",()=>s);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r={};function n(e,t){r[e]={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t}}function a(e){return r[e]}function s(e){delete r[e]}}),R("9PnRL",function(e,t){c(e.exports,"getParamValue",()=>a),c(e.exports,"getTensor",()=>s),c(e.exports,"parseNodeName",()=>u),c(e.exports,"getTensorsForCurrentContext",()=>i),c(e.exports,"getNodeNameAndIndex",()=>o),c(e.exports,"getPadding",()=>d),c(e.exports,"cloneTensor",()=>p),/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var r=A("jjNRA"),n=A("5TuCW");function a(e,t,n,a,i){let o=t.inputParams[e];if(o&&void 0!==o.inputIndexStart){let e=o.inputIndexStart,l=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?e+1:o.inputIndexEnd,u=e<0?t.inputNames.length+e:e;if("tensor"===o.type)return s(t.inputNames[u],n,a,i);if("tensors"===o.type){// TODO(mattSoulanille): This filters out NoOp nodes during execution, but
// these should really never be in the execution graph in the first place.
// They're necessary for ordering the graph, but should not be visible
// during execution. Perhaps have different sets of children, one for
// control dependencies and another for real dependencies.
let r=t.inputs.slice(e,l),o=t.inputNames.slice(e,l).filter((e,t)=>{var n;return(null===(n=r[t])||void 0===n?void 0:n.op)!=="NoOp"});return o.map(e=>s(e,n,a,i))}let c=s(t.inputNames[u],n,a,i),d=c.dataSync();return"number"===o.type?d[0]:r.toNestedArray(c.shape,d)}let l=t.attrParams[e];return l&&l.value}function s(e,t,r,n){let[a,s]=u(e,r);if(null!=n){let e=n.getHashTableHandleByName(a);if(null!=e)return e}let i=r.currentContextIds.find(e=>!!t[l(a,e)]);return void 0!==i?t[l(a,i)][s]:void 0}function i(e,t,r){return t[l(e,r.currentContextId)]}function o(e,t){let[r,n,a]=u(e,t);return[l(r,t&&t.currentContextId),n,a]}function l(e,t){return t?`${e}-${t}`:e}function u(e,t){let r;if(""===e)return["",0,void 0];let n=null!=t&&null!=t.parseNodeNameCache;if(n){let r=t.parseNodeNameCache.get(e);if(null!=r)return r}let a=e.split(":");if(1===a.length)r=[e,0,void 0];else{let e=a[0],t=3===a.length?a[1]:void 0,n=Number(a[a.length-1]);r=[e,n,t]}return n&&t.parseNodeNameCache.set(e,r),r}function d(e,t,r){let n=a("pad",e,t,r);if("explicit"===n){// This is 1d array, we need to convert it to 2d array
n=a("explicitPaddings",e,t,r);let s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=n[2*e],s[e][1]=n[2*e+1];return s}return n}function p(e){return e.kept?e:(0,n.clone)(e)}}),R("cCcNy",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),R("6T10F",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),R("25do8",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}]}),R("kQhpu",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]}),R("iKevB",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]}),R("gul1X",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),R("8ADHf",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]}),R("cf9s6",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]}),R("agimj",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}]}),R("j4qIR",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}]}),R("gUOFE",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}]}),R("6seiJ",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}]}),R("1st1Z",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}]}),R("l0Shb",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]}),R("eTKRE",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}]}),R("5vXpX",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]}),R("kuUeg",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]}),R("3Fxik",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]}),R("3km3B",function(e,t){c(e.exports,"json",()=>r);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}]}),R("eZl48",function(e,t){c(e.exports,"GraphExecutor",()=>u),/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var r=A("c2DT1"),n=A("ibsdL"),a=A("jjNRA"),s=A("9PnRL"),i=A("11iKq"),o=A("hv42p"),l=A("a96bd");class u{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}/**
     * Set `ResourceManager` shared by executors of a model.
     * @param resourceManager: `ResourceManager` of the `GraphModel`.
     */set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}/**
     *
     * @param graph Graph the model or function graph to be executed.
     * @param parent When building function exector you need to set the parent
     * executor. Since the weights and function executor maps are set at parant
     * level, that function executor can access the function maps and weight maps
     * through the parent.
     */constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new u(e.functions[t],this)})}getCompilationKey(e,t){let r=e.map(e=>e.name).sort(),n=t.map(e=>e.name).sort();return r.join(this.SEPARATOR)+"--"+n.join(this.SEPARATOR)}/**
     * Compiles the inference graph and returns the minimal set of nodes that are
     * required for execution, in the correct execution order.
     * @returns {Object} compilation The compile result.
     * @returns {Node[]} compilation.orderedNodes Nodes in the correct execution
     *     order.
     * @returns {Map<string, Node[]>} compilation.nodeLiveUntilMap A map from node
     *     to disposable nodes after its execution. That is, for a node `x`,
     *     `nodeLiveUntilMap[x]` indicates all nodes whose intermediate
     *     tensors should be disposed after `x` is executed.
     */compile(e,t){let r=(0,l.getExecutionSubgraph)(e,t,this.weightMap,this._initNodes),{missingInputs:n,dynamicNode:a,syncInputs:s}=r;if(null!=a)throw Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(n.length>0){let r=t.map(e=>e.name),a=Object.keys(e);throw Error(`Cannot compute the outputs [${r}] from the provided inputs [${a}]. Missing the following inputs: [${n}]`)}let i=(0,l.getNodesInTopologicalOrder)(this.graph,r),o=(0,l.getNodeLiveUntilMap)(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return(// Keep the clone because`model.execute()` may be called within
// a `tidy()`, but the user may inspect these tensors after the
// tidy.
(0,r.keep)(t),t)}cloneTensorList(e){if(!e)return null;let t=e.map(e=>this.cloneAndKeepTensor(e));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([e,t])=>[e,this.cloneTensorList(t)]))}/**
     * Executes the inference for given input tensors.
     * @param inputs Tensor map for the model inputs, keyed by the input node
     * names.
     * @param outputs Optional. output node name from the Tensorflow model, if
     * no outputs are specified, the default outputs of the model would be used.
     * You can inspect intermediate nodes of the model by adding them to the
     * outputs array.
     */execute(e,t){// Dispose any tensors from a prior run to avoid leaking them.
this.disposeIntermediateTensors(),e=this.mapInputs(e);let l=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let u=l.map(e=>this.graph.nodes[(0,s.parseNodeName)(e)[0]]),c=t.map(e=>(0,s.parseNodeName)(e)[0]),d=new Set(c),p=c.map(e=>this.graph.nodes[e]);0===p.length&&(p=this._outputs);let h=this.getCompilationKey(u,p),f=this.compiledMap.get(h);null==f&&(f=this.compile(e,p),this.compiledMap.set(h,f));// Keep tensors if KEEP_INTERMEDIATE_TENSORS is on.
try{this.keepIntermediateTensors=(0,n.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let m={},g={};return(0,r.tidy)(()=>{let r=new o.ExecutionContext(this.weightMap,m,g,this.functionExecutorMap,this.parseNodeNameCache),n=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{let[a,i]=(0,s.parseNodeName)(t,r),o=[];o[i]=e[t],n[a]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(o))});let l=this.getFrozenTensorIds(n),{orderedNodes:u,nodeLiveUntilMap:c}=f;for(let e of u){if(n[e.name])continue;let t=(0,i.executeOp)(e,n,r,this._resourceManager);if(a.isPromise(t))throw Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);n[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,n,r,l,d,c.get(e.name))}return null==this.parent&&r.dispose(l),t.map(e=>(0,s.getTensor)(e,n,r))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,r,n,a,i,o){// Skip output nodes and any control flow nodes, since its dependency is
// tricky to track correctly.
if(!((0,l.isControlFlow)(t)||i.has(e))){for(let n of r[e])null!=n&&(o[n.id]=(o[n.id]||0)+t.children.length);for(let e of t.inputs){// Skip any control flow nodes, since its dependency is tricky to track
// correctly.
if((0,l.isControlFlow)(e))continue;let t=(0,s.getTensorsForCurrentContext)(e.name,r,n);if(null!=t)for(let e of t){if(!e||e.kept||a.has(e.id))continue;// Only intermediate nodes' tensors have counts set, not marked as
// kept, and not in `tensorsToKeep`.
// Input and weight nodes' tensors should exist in `tensorsToKeep`.
// Output and control flow nodes' tensors should never have count set.
let t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,r,n,a,i){if(!(0,l.isControlFlow)(e)&&null!=i)for(let e of i){if((0,l.isControlFlow)(e)||a.has(e.name))continue;let i=(0,s.getTensorsForCurrentContext)(e.name,t,r);for(let e of i)!e||e.kept||n.has(e.id)||e.dispose()}}/**
     * Executes the inference for given input tensors in Async fashion.
     * @param inputs Tensor map for the model inputs, keyed by the input node
     * names.
     * @param outputs output node name from the Tensorflow model, if no outputs
     * are specified, the default outputs of the model would be used. You can
     * inspect intermediate nodes of the model by adding them to the outputs
     * array.
     */async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}/**
     * Executes the inference for given input tensors in Async fashion.
     * @param inputs Tensor map for the model inputs, keyed by the input node
     * names.
     * @param outputs Optional. output node name from the Tensorflow model,
     * if no outputs are specified, the default outputs of the model would be
     * used. You can inspect intermediate nodes of the model by adding them to
     * the outputs array.
     * @param isFunctionExecution Optional. Flag for executing a function.
     * @param tensorArrayMap Optional, global TensorArray map by id. Used for
     * function execution.
     * @param tensorArrayMap Optinal global TensorList map by id. Used for
     * function execution.
     */async _executeAsync(e,t,r=!1,a={},i={}){// Dispose any tensors from a prior run to avoid leaking them.
this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));// Keep tensors if KEEP_INTERMEDIATE_TENSORS is on.
try{this.keepIntermediateTensors=(0,n.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let l=new o.ExecutionContext(this.weightMap,a,i,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));// Graph with control flow op requires runtime evaluation of the execution
// order, while without control flow the execution order is pre-determined
// in the compile method.
let u=await this.executeWithControlFlow(e,l,t,r),c=t.map(e=>(0,s.getTensor)(e,u,l)),d=c.map(e=>e.id),p=Object.keys(e).map(t=>e[t].id),h=new Set([...d,...p,...this.weightIds]);return Object.values(u).forEach(e=>{e.forEach(e=>{!e||e.isDisposed||h.has(e.id)||e.dispose()})}),null==this.parent&&l.dispose(h),c}async executeFunctionAsync(e,t,r){let n=e.reduce((e,t,r)=>(e[this.inputs[r].name]=t,e),{});return this._executeAsync(n,this.outputNodes,!0,t,r)}/**
     * When there are control flow nodes in the graph, the graph execution use
     * ExecutionContext to keep track of the frames and loop iterators.
     * @param inputs placeholder tensors for the graph.
     * @param context the execution context object for current execution.
     * @param outputNames Optional. output node name from the Tensorflow model,
     * if no outputs are specified, the default outputs of the model would be
     * used. You can inspect intermediate nodes of the model by adding them to
     * the outputs array.
     * @param isFunctionExecution Flag for executing a function.
     */async executeWithControlFlow(e,t,r,n){let a=Object.keys(e),i=a.map(e=>this.graph.nodes[(0,s.parseNodeName)(e)[0]]),o=r.map(e=>(0,s.parseNodeName)(e)[0]),u=new Set(o),c=o.map(e=>this.graph.nodes[e]);// If no outputs are specified, then use the default outputs of the model.
0===c.length&&(c=this._outputs);let{usedNodes:d,missingInputs:p,dynamicNode:h,syncInputs:f}=(0,l.getExecutionSubgraph)(e,c,this.weightMap,this._initNodes),m=[...i,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),g=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{let[r,n]=(0,s.parseNodeName)(t),a=[];a[n]=e[t],g[r]=a});let y={},b=this.getFrozenTensorIds(g),v={};for(;m.length>0;){let e=this.processStack(i,m,t,g,v,b,u,y,d);await Promise.all(e)}null!=h||n||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let x=c.filter(e=>!(0,l.isControlFlow)(e)&&!(0,s.getTensor)(e.name,g,t)).map(e=>e.name);if(x.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),Error(`Cannot compute the outputs [${x}] from the provided inputs [${a}]. Consider providing the following inputs: [${p}]. ${e}`)}return g}processStack(e,t,r,n,o,l,u,c,d){let p=[];for(;t.length>0;){let e=t.pop();r.currentContext=e.contexts;let h="";// only process nodes that are not in the tensorMap yet, this include
// inputNodes and internal initNodes.
if("Enter"===e.node.op&&(0,s.getParamValue)("isConstant",e.node,n,r)&&([h]=(0,s.getNodeNameAndIndex)(e.node.name,r)),null==n[e.node.name]){let f=(0,i.executeOp)(e.node,n,r,this._resourceManager);h||([h]=(0,s.getNodeNameAndIndex)(e.node.name,r));let m=r.currentContext;a.isPromise(f)?p.push(f.then(a=>(n[h]=a,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(a)),r.currentContext=m,this.checkTensorForDisposal(h,e.node,n,r,l,u,c),this.processChildNodes(e.node,t,r,n,o,d),a))):(n[h]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(f)),this.checkTensorForDisposal(h,e.node,n,r,l,u,c),this.processChildNodes(e.node,t,r,n,o,d))}else this.processChildNodes(e.node,t,r,n,o,d)}return p}processChildNodes(e,t,r,n,a,i){e.children.forEach(e=>{let[o]=(0,s.getNodeNameAndIndex)(e.name,r);!a[o]&&i.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!(0,s.getTensor)(e,n,r))&&(a[o]=!0,t.push({contexts:r.currentContext,node:e})):e.inputNames.every(e=>!!(0,s.getTensor)(e,n,r))&&(a[o]=!0,t.push({contexts:r.currentContext,node:e})))})}/**
     * Releases the memory used by the weight tensors.
     */dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let r=e[t],[n]=(0,s.parseNodeName)(t),i=this.graph.nodes[n];if(i.attrParams.shape&&i.attrParams.shape.value){let e=i.attrParams.shape.value,t=e.length===r.shape.length&&r.shape.every((t,r)=>-1===e[r]||e[r]===t);a.assert(t,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${e}], but was [${r.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&a.assert(r.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var t,r;let n={};for(let a in e){let s=null===(r=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===r?void 0:r[a];null!=s?n[s.name]=e[a]:n[a]=e[a]}return n}checkInputs(e){let t=Object.keys(e).filter(e=>{let[t]=(0,s.parseNodeName)(e);return null==this.graph.nodes[t]});if(t.length>0)throw Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{var t,r;let n=null===(r=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===r?void 0:r[e];return null!=n?n.name:e},{})}checkOutputs(e){e.forEach(e=>{let[t]=(0,s.parseNodeName)(e);if(!this.graph.nodes[t])throw Error(`The output '${e}' is not found in the graph`)})}}}),R("11iKq",function(e,t){c(e.exports,"executeOp",()=>C),/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var r=A("c2DT1"),n=A("jjNRA"),a=A("1EcJz"),s=A("dWfqP"),i=A("cWPX8"),o=A("4c4iS"),l=A("c3X9P"),u=A("gT6Ou"),d=A("3TPMs"),p=A("c0ywX"),h=A("gPS1H"),f=A("ln7DR"),m=A("c6NzH"),g=A("dQiCM"),y=A("h1Kl3"),b=A("7TMBo"),v=A("9lSzv"),x=A("bPan9"),w=A("bHY7p"),k=A("9Buta"),S=A("3pwdq"),N=A("7RSIj"),T=A("j4Rla"),I=A("cXzgX");function C(e,t,c,C,E=r.tidy){let A=((e,t,r)=>{switch(e.category){case"arithmetic":return E(()=>i.executeOp(e,t,r));case"basic_math":return E(()=>o.executeOp(e,t,r));case"control":return l.executeOp(e,t,r);case"convolution":return E(()=>u.executeOp(e,t,r));case"creation":return E(()=>d.executeOp(e,t,r));case"dynamic":return p.executeOp(e,t,r);case"evaluation":return E(()=>h.executeOp(e,t,r));case"image":return E(()=>g.executeOp(e,t,r));case"graph":return E(()=>f.executeOp(e,t,r));case"logical":return E(()=>y.executeOp(e,t,r));case"matrices":return E(()=>b.executeOp(e,t,r));case"normalization":return E(()=>v.executeOp(e,t,r));case"ragged":return E(()=>x.executeOp(e,t,r));case"reduction":return E(()=>w.executeOp(e,t,r));case"slice_join":return E(()=>k.executeOp(e,t,r));case"sparse":return E(()=>S.executeOp(e,t,r));case"spectral":return E(()=>N.executeOp(e,t,r));case"string":return E(()=>T.executeOp(e,t,r));case"transformation":return E(()=>I.executeOp(e,t,r));case"hash_table":return m.executeOp(e,t,r,C);case"custom":let n=(0,s.getRegisteredOp)(e.op);if(n&&n.customExecutor)return n.customExecutor(new a.NodeValueImpl(e,t,r));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,c);return n.isPromise(A)?A.then(e=>[].concat(e)):[].concat(A)}}),R("1EcJz",function(e,t){c(e.exports,"NodeValueImpl",()=>a);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("9PnRL"),n=A("jRFPP");class a{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}/**
     * Return the value of the attribute or input param.
     * @param name String: name of attribute or input param.
     */getInput(e){return(0,r.getTensor)(e,this.tensorMap,this.context)}/**
     * Return the value of the attribute or input param.
     * @param name String: name of attribute or input param.
     */getAttr(e,t){let a=this.node.rawAttrs[e];if(null!=a.tensor)return(0,r.getTensor)(e,this.tensorMap,this.context);if(null!=a.i||null!=a.f)return(0,n.getNumberParam)(this.node.rawAttrs,e,t);if(null!=a.s)return(0,n.getStringParam)(this.node.rawAttrs,e,t);if(null!=a.b)return(0,n.getBoolParam)(this.node.rawAttrs,e,t);if(null!=a.shape)return(0,n.getTensorShapeParam)(this.node.rawAttrs,e,t);if(null!=a.type)return(0,n.getDtypeParam)(this.node.rawAttrs,e,t);if(null!=a.list){if(null!=a.list.i||null!=a.list.f)return(0,n.getNumericArrayParam)(this.node.rawAttrs,e,t);if(null!=a.list.s)return(0,n.getStringArrayParam)(this.node.rawAttrs,e,t);if(null!=a.list.shape)return(0,n.getTensorShapeArrayParam)(this.node.rawAttrs,e,t);if(null!=a.list.b)return(0,n.getBoolArrayParam)(this.node.rawAttrs,e,t);if(null!=a.list.type)return(0,n.getDtypeArrayParam)(this.node.rawAttrs,e,t)}return t}}}),R("cWPX8",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[s.add((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"AddN":return[s.addN((0,n.getParamValue)("tensors",e,t,a))];case"FloorMod":case"Mod":return[s.mod((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"Mul":return[s.mul((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"RealDiv":case"Div":return[s.div((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"DivNoNan":return[s.divNoNan((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"FloorDiv":return[s.floorDiv((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"Sub":return[s.sub((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"Minimum":return[s.minimum((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"Maximum":return[s.maximum((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"Pow":return[s.pow((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"SquaredDifference":return[s.squaredDifference((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("h8nZK",function(e,t){/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * This file exports ops used by the converters executors. By default it
 * re-exports all ops. In a custom build this is aliased to a file that will
 * only exports ops for a given model.json.
 */var r=A("aosGd");d(e.exports,r)}),R("4c4iS",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"Abs":case"ComplexAbs":return[s.abs((0,n.getParamValue)("x",e,t,a))];case"Acos":return[s.acos((0,n.getParamValue)("x",e,t,a))];case"Acosh":return[s.acosh((0,n.getParamValue)("x",e,t,a))];case"Asin":return[s.asin((0,n.getParamValue)("x",e,t,a))];case"Asinh":return[s.asinh((0,n.getParamValue)("x",e,t,a))];case"Atan":return[s.atan((0,n.getParamValue)("x",e,t,a))];case"Atan2":return[s.atan2((0,n.getParamValue)("x",e,t,a),(0,n.getParamValue)("y",e,t,a))];case"Atanh":return[s.atanh((0,n.getParamValue)("x",e,t,a))];case"Ceil":return[s.ceil((0,n.getParamValue)("x",e,t,a))];case"Complex":return[s.complex((0,n.getParamValue)("real",e,t,a),(0,n.getParamValue)("imag",e,t,a))];case"Cos":return[s.cos((0,n.getParamValue)("x",e,t,a))];case"Cosh":return[s.cosh((0,n.getParamValue)("x",e,t,a))];case"Elu":return[s.elu((0,n.getParamValue)("x",e,t,a))];case"Erf":return[s.erf((0,n.getParamValue)("x",e,t,a))];case"Exp":return[s.exp((0,n.getParamValue)("x",e,t,a))];case"Expm1":return[s.expm1((0,n.getParamValue)("x",e,t,a))];case"Floor":return[s.floor((0,n.getParamValue)("x",e,t,a))];case"Log":return[s.log((0,n.getParamValue)("x",e,t,a))];case"Log1p":return[s.log1p((0,n.getParamValue)("x",e,t,a))];case"Imag":return[s.imag((0,n.getParamValue)("x",e,t,a))];case"Neg":return[s.neg((0,n.getParamValue)("x",e,t,a))];case"Reciprocal":return[s.reciprocal((0,n.getParamValue)("x",e,t,a))];case"Real":return[s.real((0,n.getParamValue)("x",e,t,a))];case"Relu":return[s.relu((0,n.getParamValue)("x",e,t,a))];case"Round":return[s.round((0,n.getParamValue)("x",e,t,a))];case"Selu":return[s.selu((0,n.getParamValue)("x",e,t,a))];case"Sigmoid":return[s.sigmoid((0,n.getParamValue)("x",e,t,a))];case"Sin":return[s.sin((0,n.getParamValue)("x",e,t,a))];case"Sign":return[s.sign((0,n.getParamValue)("x",e,t,a))];case"Sinh":return[s.sinh((0,n.getParamValue)("x",e,t,a))];case"Softplus":return[s.softplus((0,n.getParamValue)("x",e,t,a))];case"Sqrt":return[s.sqrt((0,n.getParamValue)("x",e,t,a))];case"Square":return[s.square((0,n.getParamValue)("x",e,t,a))];case"Tanh":return[s.tanh((0,n.getParamValue)("x",e,t,a))];case"Tan":return[s.tan((0,n.getParamValue)("x",e,t,a))];case"ClipByValue":return[s.clipByValue((0,n.getParamValue)("x",e,t,a),(0,n.getParamValue)("clipValueMin",e,t,a),(0,n.getParamValue)("clipValueMax",e,t,a))];case"Relu6":return[s.relu6((0,n.getParamValue)("x",e,t,a))];case"Rsqrt":return[s.rsqrt((0,n.getTensor)(e.inputNames[0],t,a))];case"LeakyRelu":return[s.leakyRelu((0,n.getParamValue)("x",e,t,a),(0,n.getParamValue)("alpha",e,t,a))];case"Prelu":return[s.prelu((0,n.getParamValue)("x",e,t,a),(0,n.getParamValue)("alpha",e,t,a))];case"IsNan":return[s.isNaN((0,n.getTensor)(e.inputNames[0],t,a))];case"IsInf":return[s.isInf((0,n.getTensor)(e.inputNames[0],t,a))];case"IsFinite":return[s.isFinite((0,n.getTensor)(e.inputNames[0],t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("c3X9P",function(e,t){c(e.exports,"executeOp",()=>i),/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var r=A("3xp7o"),n=A("gwwf3"),a=A("7TU8D"),s=A("9PnRL");let i=async(e,t,i)=>{switch(e.op){case"If":case"StatelessIf":{let r=(0,s.getParamValue)("thenBranch",e,t,i),n=(0,s.getParamValue)("elseBranch",e,t,i),a=(0,s.getParamValue)("cond",e,t,i),o=(0,s.getParamValue)("args",e,t,i),l=await a.data();if(l[0])return i.functionMap[r].executeFunctionAsync(o,i.tensorArrayMap,i.tensorListMap);return i.functionMap[n].executeFunctionAsync(o,i.tensorArrayMap,i.tensorListMap)}case"While":case"StatelessWhile":{let r=(0,s.getParamValue)("body",e,t,i),n=(0,s.getParamValue)("cond",e,t,i),a=(0,s.getParamValue)("args",e,t,i),o=await i.functionMap[n].executeFunctionAsync(a,i.tensorArrayMap,i.tensorListMap),l=a.map(e=>e.id),u=await o[0].data();// Dispose the intermediate tensors for condition function
o.forEach(e=>{e.kept||-1!==l.indexOf(e.id)||e.dispose()});let c=a;for(;u[0];){// Record the previous result for intermediate tensor tracking
let e=c;// Execution the body of the loop
c=await i.functionMap[r].executeFunctionAsync(c,i.tensorArrayMap,i.tensorListMap);let t=c.map(e=>e.id);// Dispose the intermediate tensor for body function that is not global
// kept, not input/output of the body function
e.forEach(e=>{e.kept||-1!==l.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});// Recalcuate the condition of the loop using the latest results.
let a=await i.functionMap[n].executeFunctionAsync(c,i.tensorArrayMap,i.tensorListMap);u=await a[0].data(),// Dispose the intermediate tensors for condition function
a.forEach(e=>{e.kept||-1!==l.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return c}case"LoopCond":{let r=(0,s.getParamValue)("pred",e,t,i);return[(0,s.cloneTensor)(r)]}case"Switch":{let r=(0,s.getParamValue)("pred",e,t,i),n=(0,s.getParamValue)("data",e,t,i);// Outputs nodes :0 => false, :1 => true
return n.kept||(n=(0,s.cloneTensor)(n)),(await r.data())[0]?[void 0,n]:[n,void 0]}case"Merge":{let r=e.inputNames.find(e=>void 0!==(0,s.getTensor)(e,t,i));if(r){let e=(0,s.getTensor)(r,t,i);return[(0,s.cloneTensor)(e)]}return}case"Enter":{let r=(0,s.getParamValue)("frameName",e,t,i),n=(0,s.getParamValue)("tensor",e,t,i);return i.enterFrame(r),[(0,s.cloneTensor)(n)]}case"Exit":{let r=(0,s.getParamValue)("tensor",e,t,i);return i.exitFrame(),[(0,s.cloneTensor)(r)]}case"NextIteration":{let r=(0,s.getParamValue)("tensor",e,t,i);return i.nextIteration(),[(0,s.cloneTensor)(r)]}case"TensorArrayV3":{let a=(0,s.getParamValue)("size",e,t,i),o=(0,s.getParamValue)("dtype",e,t,i),l=(0,s.getParamValue)("elementShape",e,t,i),u=(0,s.getParamValue)("dynamicSize",e,t,i),c=(0,s.getParamValue)("clearAfterRead",e,t,i),d=(0,s.getParamValue)("identicalElementShapes",e,t,i),p=(0,s.getParamValue)("name",e,t,i),h=new n.TensorArray(p,o,a,l,d,u,c);return i.addTensorArray(h),[h.idTensor,(0,r.scalar)(1)]}case"TensorArrayWriteV3":{let r=(0,s.getParamValue)("tensorArrayId",e,t,i),n=(0,s.getParamValue)("index",e,t,i),a=(0,s.getParamValue)("tensor",e,t,i),o=i.getTensorArray(r.id);return o.write(n,a),[o.idTensor]}case"TensorArrayReadV3":{let r=(0,s.getParamValue)("tensorArrayId",e,t,i),n=(0,s.getParamValue)("index",e,t,i),a=i.getTensorArray(r.id);return[a.read(n)]}case"TensorArrayGatherV3":{let r=(0,s.getParamValue)("tensorArrayId",e,t,i),n=(0,s.getParamValue)("indices",e,t,i),a=(0,s.getParamValue)("dtype",e,t,i),o=i.getTensorArray(r.id);return[o.gather(n,a)]}case"TensorArrayScatterV3":{let r=(0,s.getParamValue)("tensorArrayId",e,t,i),n=(0,s.getParamValue)("indices",e,t,i),a=(0,s.getParamValue)("tensor",e,t,i),o=i.getTensorArray(r.id);return o.scatter(n,a),[o.idTensor]}case"TensorArrayConcatV3":{let r=(0,s.getParamValue)("tensorArrayId",e,t,i),n=i.getTensorArray(r.id),a=(0,s.getParamValue)("dtype",e,t,i);return[n.concat(a)]}case"TensorArraySplitV3":{let r=(0,s.getParamValue)("tensorArrayId",e,t,i),n=(0,s.getParamValue)("tensor",e,t,i),a=(0,s.getParamValue)("lengths",e,t,i),o=i.getTensorArray(r.id);return o.split(a,n),[o.idTensor]}case"TensorArraySizeV3":{let n=(0,s.getParamValue)("tensorArrayId",e,t,i),a=i.getTensorArray(n.id);return[(0,r.scalar)(a.size(),"int32")]}case"TensorArrayCloseV3":{let r=(0,s.getParamValue)("tensorArrayId",e,t,i),n=i.getTensorArray(r.id);return n.clearAndClose(),[n.idTensor]}case"TensorListSetItem":{let r=(0,s.getParamValue)("tensorListId",e,t,i),n=(0,s.getParamValue)("index",e,t,i),a=(0,s.getParamValue)("tensor",e,t,i),o=i.getTensorList(r.id);return o.setItem(n,a),[o.idTensor]}case"TensorListGetItem":{let r=(0,s.getParamValue)("tensorListId",e,t,i),n=(0,s.getParamValue)("index",e,t,i),a=(0,s.getParamValue)("elementShape",e,t,i),o=(0,s.getParamValue)("elementDType",e,t,i),l=i.getTensorList(r.id);return[l.getItem(n,a,o)]}case"TensorListScatterV2":case"TensorListScatter":{let r=(0,s.getParamValue)("indices",e,t,i),n=(0,s.getParamValue)("tensor",e,t,i),o=(0,s.getParamValue)("elementShape",e,t,i),l=(0,s.getParamValue)("numElements",e,t,i),u=(0,a.scatter)(n,r,o,l);return i.addTensorList(u),[u.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r;let n=(0,s.getParamValue)("elementShape",e,t,i),o=(0,s.getParamValue)("elementDType",e,t,i);r="TensorListReserve"===e.op?"numElements":"maxNumElements";let l=(0,s.getParamValue)(r,e,t,i),u="TensorListReserve"===e.op?-1:l,c=(0,a.reserve)(n,o,l,u);return i.addTensorList(c),[c.idTensor]}case"TensorListGather":{let r=(0,s.getParamValue)("tensorListId",e,t,i),n=(0,s.getParamValue)("indices",e,t,i),a=(0,s.getParamValue)("elementShape",e,t,i),o=(0,s.getParamValue)("elementDType",e,t,i),l=i.getTensorList(r.id);return[l.gather(n,o,a)]}case"TensorListStack":{let r=(0,s.getParamValue)("tensorListId",e,t,i),n=(0,s.getParamValue)("elementShape",e,t,i),a=(0,s.getParamValue)("elementDType",e,t,i),o=(0,s.getParamValue)("numElements",e,t,i),l=i.getTensorList(r.id);return[l.stack(n,a,o)]}case"TensorListFromTensor":{let r=(0,s.getParamValue)("tensor",e,t,i),n=(0,s.getParamValue)("elementShape",e,t,i),o=(0,s.getParamValue)("elementDType",e,t,i),l=(0,a.fromTensor)(r,n,o);return i.addTensorList(l),[l.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=(0,s.getParamValue)("tensorListId",e,t,i),n=i.getTensorList(r.id),a=(0,s.getParamValue)("dtype",e,t,i),o=(0,s.getParamValue)("elementShape",e,t,i);return[n.concat(a,o)]}case"TensorListPushBack":{let r=(0,s.getParamValue)("tensorListId",e,t,i),n=(0,s.getParamValue)("tensor",e,t,i),a=i.getTensorList(r.id);return a.pushBack(n),[a.idTensor]}case"TensorListPopBack":{let r=(0,s.getParamValue)("tensorListId",e,t,i),n=(0,s.getParamValue)("elementShape",e,t,i),a=(0,s.getParamValue)("elementDType",e,t,i),o=i.getTensorList(r.id);return[o.popBack(n,a)]}case"TensorListSplit":{let r=(0,s.getParamValue)("tensor",e,t,i),n=(0,s.getParamValue)("elementShape",e,t,i),o=(0,s.getParamValue)("lengths",e,t,i),l=(0,a.split)(r,o,n);return i.addTensorList(l),[l.idTensor]}case"TensorListLength":{let n=(0,s.getParamValue)("tensorListId",e,t,i),a=i.getTensorList(n.id);return[(0,r.scalar)(a.size(),"int32")]}case"TensorListResize":{let r=(0,s.getParamValue)("tensorListId",e,t,i),n=(0,s.getParamValue)("size",e,t,i),a=i.getTensorList(r.id),o=a.resize(n);return i.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("gwwf3",function(e,t){c(e.exports,"TensorArray",()=>p),/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var r=A("3xp7o"),n=A("c2DT1"),a=A("erbmM"),s=A("8BrLX"),i=A("iTu6j"),o=A("gBOC6"),l=A("4sqA7"),u=A("79KOG"),d=A("cC9h5");class p{constructor(e,t,a,s,i,o,l){this.name=e,this.dtype=t,this.maxSize=a,this.elementShape=s,this.identicalElementShapes=i,this.dynamicSize=o,this.clearAfterRead=l,this.tensors=[],this.closed_=!1,this.idTensor=(0,r.scalar)(0),(0,n.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}/**
     * Dispose the tensors and idTensor and mark the TensoryArray as closed.
     */clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}/**
     * Read the value at location index in the TensorArray.
     * @param index Number the index to read from.
     */read(e){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}/**
     * Helper method to read multiple tensors from the specified indices.
     */readMany(e){return e.map(e=>this.read(e))}/**
     * Write value into the index of the TensorArray.
     * @param index number the index to write to.
     * @param tensor
     */write(e,t){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),(0,d.assertShapesMatchAllowUndefinedSize)(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,(0,n.keep)(t),r.written=!0,this.tensors[e]=r}/**
     * Helper method to write multiple tensors to the specified indices.
     */writeMany(e,t){if(e.length!==t.length)throw Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,r)=>this.write(e,t[r]))}/**
     * Return selected values in the TensorArray as a packed Tensor. All of
     * selected values must have been written and their shapes must all match.
     * @param [indices] number[] Optional. Taking values in [0, max_value). If the
     *    TensorArray is not dynamic, max_value=size(). If not specified returns
     *    all tensors in the original order.
     * @param [dtype]
     */gather(e,t){if(t&&t!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,a.tensor)([],[0].concat(this.elementShape));// Read all the PersistentTensors into a vector to keep track of
// their memory.
let r=this.readMany(e);return(0,d.assertShapesMatchAllowUndefinedSize)(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),(0,s.stack)(r,0)}/**
     * Return the values in the TensorArray as a concatenated Tensor.
     */concat(e){if(e&&e!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,a.tensor)([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);// Collect all the tensors from the tensors array.
let r=this.readMany(t);return(0,d.assertShapesMatchAllowUndefinedSize)(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),(0,i.concat)(r,0)}/**
     * Scatter the values of a Tensor in specific indices of a TensorArray.
     * @param indices nummber[] values in [0, max_value). If the
     *    TensorArray is not dynamic, max_value=size().
     * @param tensor Tensor input tensor.
     */scatter(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,(0,o.unstack)(t,0))}/**
     * Split the values of a Tensor into the TensorArray.
     * @param length number[] with the lengths to use when splitting value along
     *    its first dimension.
     * @param tensor Tensor, the tensor to split.
     */split(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0,a=e.map(e=>r+=e);if(r!==t.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let s=0===r?0:t.size/r,i=[];(0,n.tidy)(()=>{t=(0,l.reshape)(t,[1,r,s]);for(let r=0;r<e.length;++r){let n=0===r?0:a[r-1],o=[0,n,0],c=[1,e[r],s];i[r]=(0,l.reshape)((0,u.slice)(t,o,c),this.elementShape)}return i});let o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,i)}}}),R("cC9h5",function(e,t){c(e.exports,"assertShapesMatchAllowUndefinedSize",()=>n),c(e.exports,"inferElementShape",()=>s),c(e.exports,"mergeElementShape",()=>i),/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * This differs from util.assertShapesMatch in that it allows values of
 * negative one, an undefined size of a dimensinon, in a shape to match
 * anything.
 */A("i64bB");var r=A("jjNRA");function n(e,t,n=""){// constant shape means unknown rank
if("number"!=typeof e&&"number"!=typeof t){r.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let a=0;a<e.length;a++){let s=e[a],i=t[a];r.assert(s<0||i<0||s===i,()=>n+` Shapes ${e} and ${t} must match`)}}}function a(e){return!("number"==typeof e||e.some(e=>e<0))}function s(e,t,r){let n=i(e,r),s=!a(n);if(s&&0===t.length)throw Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(s&&t.forEach(e=>{n=i(e.shape,n)}),!a(n))throw Error(`Non-fully-defined elementShape: ${n}`);return n}function i(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let r=[];for(let n=0;n<e.length;++n){let a=e[n],s=t[n];if(a>=0&&s>=0&&a!==s)throw Error(`Incompatible shape during merge: ${e} vs. ${t}`);r[n]=a>=0?a:s}return r}}),R("7TU8D",function(e,t){c(e.exports,"fromTensor",()=>h),c(e.exports,"reserve",()=>f),c(e.exports,"scatter",()=>m),c(e.exports,"split",()=>g),/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var r=A("c2DT1"),n=A("3xp7o"),a=A("4sqA7"),s=A("8BrLX"),i=A("erbmM"),o=A("iTu6j"),l=A("gBOC6"),u=A("79KOG"),d=A("cC9h5");class p{get id(){return this.idTensor.id}/**
     *
     * @param tensors list of tensors
     * @param elementShape shape of each tensor, this can be a single number (any
     * shape is allowed) or partial shape (dim = -1).
     * @param elementDtype data type of each tensor
     * @param maxNumElements The maximum allowed size of `tensors`. Defaults to -1
     *   meaning that the size of `tensors` is unbounded.
     */constructor(e,t,a,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=a,null!=e&&e.forEach(e=>{if(a!==e.dtype)throw Error(`Invalid data types; op elements ${a}, but list elements ${e.dtype}`);(0,d.assertShapesMatchAllowUndefinedSize)(t,e.shape,"TensorList shape mismatch: "),(0,r.keep)(e)}),this.idTensor=(0,n.scalar)(0),this.maxNumElements=s,(0,r.keep)(this.idTensor)}/**
     * Get a new TensorList containing a copy of the underlying tensor container.
     */copy(){return new p([...this.tensors],this.elementShape,this.elementDtype)}/**
     * Dispose the tensors and idTensor and clear the tensor list.
     */clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}/**
     * The size of the tensors in the tensor list.
     */size(){return this.tensors.length}/**
     * Return a tensor that stacks a list of rank-R tf.Tensors into one rank-(R+1)
     * tf.Tensor.
     * @param elementShape shape of each tensor
     * @param elementDtype data type of each tensor
     * @param numElements the number of elements to stack
     */stack(e,t,n=-1){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);(0,d.assertShapesMatchAllowUndefinedSize)(e,this.elementShape,"TensorList shape mismatch: ");let i=(0,d.inferElementShape)(this.elementShape,this.tensors,e);return(0,r.tidy)(()=>{let e=this.tensors.map(e=>(0,a.reshape)(e,i));return(0,s.stack)(e,0)})}/**
     * Pop a tensor from the end of the list.
     * @param elementShape shape of the tensor
     * @param elementDtype data type of the tensor
     */popBack(e,t){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw Error("Trying to pop from an empty list.");let r=(0,d.inferElementShape)(this.elementShape,this.tensors,e),n=this.tensors.pop();return n.kept=!1,(0,d.assertShapesMatchAllowUndefinedSize)(n.shape,e,"TensorList shape mismatch: "),(0,a.reshape)(n,r)}/**
     * Push a tensor to the end of the list.
     * @param tensor Tensor to be pushed.
     */pushBack(e){if(e.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if((0,d.assertShapesMatchAllowUndefinedSize)(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw Error("Trying to push element into a full list.");(0,r.keep)(e),this.tensors.push(e)}/**
     * Update the size of the list.
     * @param size the new size of the list.
     */resize(e){if(e<0)throw Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new p([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}/**
     * Retrieve the element at the provided index
     * @param elementShape shape of the tensor
     * @param elementDtype dtype of the tensor
     * @param elementIndex index of the tensor
     */getItem(e,t,r){if(r!==this.elementDtype)throw Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw Error(`element at index ${e} is null.`);(0,d.assertShapesMatchAllowUndefinedSize)(this.tensors[e].shape,t,"TensorList shape mismatch: ");let n=(0,d.inferElementShape)(this.elementShape,this.tensors,t);return(0,a.reshape)(this.tensors[e],n)}/**
     * Set the tensor at the index
     * @param elementIndex index of the tensor
     * @param tensor the tensor to be inserted into the list
     */setItem(e,t){if(t.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);(0,d.assertShapesMatchAllowUndefinedSize)(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,r.keep)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}/**
     * Return selected values in the TensorList as a stacked Tensor. All of
     * selected values must have been written and their shapes must all match.
     * @param indices indices of tensors to gather
     * @param elementDtype output tensor dtype
     * @param elementShape output tensor element shape
     */gather(e,t,n){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);(0,d.assertShapesMatchAllowUndefinedSize)(this.elementShape,n,"TensorList shape mismatch: "),// When indices is greater than the size of the list, indices beyond the
// size of the list are ignored.
e=e.slice(0,this.size());let o=(0,d.inferElementShape)(this.elementShape,this.tensors,n);return 0===e.length?(0,i.tensor)([],[0].concat(o)):(0,r.tidy)(()=>{let t=e.map(e=>(0,a.reshape)(this.tensors[e],o));return(0,s.stack)(t,0)})}/**
     * Return the values in the TensorList as a concatenated Tensor.
     * @param elementDtype output tensor dtype
     * @param elementShape output tensor element shape
     */concat(e,t){if(e&&e!==this.elementDtype)throw Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);(0,d.assertShapesMatchAllowUndefinedSize)(this.elementShape,t,"TensorList shape mismatch: ");let n=(0,d.inferElementShape)(this.elementShape,this.tensors,t);return 0===this.size()?(0,i.tensor)([],[0].concat(n)):(0,r.tidy)(()=>{let e=this.tensors.map(e=>(0,a.reshape)(e,n));return(0,o.concat)(e,0)})}}function h(e,t,r){let n=e.dtype;if(e.shape.length<1)throw Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==r)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${r}`);let a=e.shape.slice(1);(0,d.assertShapesMatchAllowUndefinedSize)(a,t,"TensorList shape mismatch: ");let s=(0,l.unstack)(e);return new p(s,t,n)}function f(e,t,r,n){return new p([],e,t,n)}function m(e,t,r,n){if(t.length!==e.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=n&&-1!==n&&a>=n)throw Error(`Max index must be < array size (${a}  vs. ${n})`);let s=new p([],r,e.dtype,n),i=(0,l.unstack)(e,0);return t.forEach((e,t)=>{s.setItem(e,i[t])}),s}function g(e,t,n){let s=0,i=t.map(e=>s+=e);if(s!==e.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let o=e.shape.slice(1),l=(0,d.mergeElementShape)(o,n),c=0===s?0:e.size/s,h=(0,r.tidy)(()=>{let r=[];e=(0,a.reshape)(e,[1,s,c]);for(let n=0;n<t.length;++n){let s=0===n?0:i[n-1],o=[0,s,0],d=[1,t[n],c];r[n]=(0,a.reshape)((0,u.slice)(e,o,d),l)}return e.dispose(),r}),f=new p([],n,e.dtype,t.length);for(let e=0;e<h.length;e++)f.setItem(e,h[e]);return f}}),R("gT6Ou",function(e,t){c(e.exports,"executeOp",()=>s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");function a(e,t,r){let[a,s]=(0,n.getParamValue)("fusedOps",e,t,r),i="biasadd"===a,o="prelu"===s,l=(0,n.getParamValue)("numArgs",e,t,r);if(i){if(o&&2!==l)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i&&1!==l)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if("fusedbatchnorm"===a)throw Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=(0,n.getParamValue)("strides",e,t,r),c=(0,n.getPadding)(e,t,r),d=(0,n.getParamValue)("dataFormat",e,t,r).toUpperCase(),p=(0,n.getParamValue)("dilations",e,t,r),[h,f]=(0,n.getParamValue)("args",e,t,r);i||(f=h,h=void 0);let m=(0,n.getParamValue)("leakyreluAlpha",e,t,r);return{stride:u,pad:c,dataFormat:d,dilations:p,biasArg:h,preluArg:f,activationFunc:s,leakyreluAlpha:m}}let s=(e,t,s,i=r)=>{switch(e.op){case"Conv1D":{let r=(0,n.getParamValue)("stride",e,t,s),a=(0,n.getParamValue)("pad",e,t,s),o=(0,n.getParamValue)("dataFormat",e,t,s).toUpperCase(),l=(0,n.getParamValue)("dilation",e,t,s);return[i.conv1d((0,n.getParamValue)("x",e,t,s),(0,n.getParamValue)("filter",e,t,s),r,a,o,l)]}case"Conv2D":{let r=(0,n.getParamValue)("strides",e,t,s),a=(0,n.getPadding)(e,t,s),o=(0,n.getParamValue)("dataFormat",e,t,s).toUpperCase(),l=(0,n.getParamValue)("dilations",e,t,s);return[i.conv2d((0,n.getParamValue)("x",e,t,s),(0,n.getParamValue)("filter",e,t,s),[r[1],r[2]],a,o,[l[1],l[2]])]}case"_FusedConv2D":{let{stride:r,pad:o,dataFormat:l,dilations:u,biasArg:c,preluArg:d,activationFunc:p,leakyreluAlpha:h}=a(e,t,s);return[i.fused.conv2d({x:(0,n.getParamValue)("x",e,t,s),filter:(0,n.getParamValue)("filter",e,t,s),strides:[r[1],r[2]],pad:o,dataFormat:l,dilations:[u[1],u[2]],bias:c,activation:p,preluActivationWeights:d,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:o,dataFormat:l,dilations:u,biasArg:c,preluArg:d,activationFunc:p,leakyreluAlpha:h}=a(e,t,s);return[i.fused.depthwiseConv2d({x:(0,n.getParamValue)("x",e,t,s),filter:(0,n.getParamValue)("filter",e,t,s),strides:[r[1],r[2]],pad:o,dataFormat:l,dilations:[u[1],u[2]],bias:c,activation:p,preluActivationWeights:d,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=(0,n.getParamValue)("outputShape",e,t,s),a=(0,n.getParamValue)("strides",e,t,s),o=(0,n.getPadding)(e,t,s);return[i.conv2dTranspose((0,n.getParamValue)("x",e,t,s),(0,n.getParamValue)("filter",e,t,s),r,[a[1],a[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=(0,n.getParamValue)("strides",e,t,s),a=(0,n.getPadding)(e,t,s),o=(0,n.getParamValue)("dilations",e,t,s),l=(0,n.getParamValue)("dataFormat",e,t,s).toUpperCase();return[i.depthwiseConv2d((0,n.getParamValue)("input",e,t,s),(0,n.getParamValue)("filter",e,t,s),[r[1],r[2]],a,l,[o[1],o[2]])]}case"Conv3D":{let r=(0,n.getParamValue)("strides",e,t,s),a=(0,n.getParamValue)("pad",e,t,s),o=(0,n.getParamValue)("dataFormat",e,t,s).toUpperCase(),l=(0,n.getParamValue)("dilations",e,t,s);return[i.conv3d((0,n.getParamValue)("x",e,t,s),(0,n.getParamValue)("filter",e,t,s),[r[1],r[2],r[3]],a,o,[l[1],l[2],l[3]])]}case"AvgPool":{let r=(0,n.getParamValue)("strides",e,t,s),a=(0,n.getParamValue)("pad",e,t,s),o=(0,n.getParamValue)("kernelSize",e,t,s);return[i.avgPool((0,n.getParamValue)("x",e,t,s),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPool":{let r=(0,n.getParamValue)("strides",e,t,s),a=(0,n.getParamValue)("pad",e,t,s),o=(0,n.getParamValue)("kernelSize",e,t,s);return[i.maxPool((0,n.getParamValue)("x",e,t,s),[o[1],o[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{let r=(0,n.getParamValue)("strides",e,t,s),a=(0,n.getParamValue)("pad",e,t,s),o=(0,n.getParamValue)("kernelSize",e,t,s),l=(0,n.getParamValue)("includeBatchInIndex",e,t,s),{result:u,indexes:c}=i.maxPoolWithArgmax((0,n.getParamValue)("x",e,t,s),[o[1],o[2]],[r[1],r[2]],a,l);return[u,c]}case"AvgPool3D":{let r=(0,n.getParamValue)("strides",e,t,s),a=(0,n.getParamValue)("pad",e,t,s),o=(0,n.getParamValue)("kernelSize",e,t,s);return[i.avgPool3d((0,n.getParamValue)("x",e,t,s),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{let r=(0,n.getParamValue)("strides",e,t,s),a=(0,n.getParamValue)("pad",e,t,s),o=(0,n.getParamValue)("kernelSize",e,t,s);return[i.maxPool3d((0,n.getParamValue)("x",e,t,s),[o[1],o[2],o[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{let r=(0,n.getParamValue)("strides",e,t,s),a=(0,n.getParamValue)("pad",e,t,s),o=(0,n.getParamValue)("dilations",e,t,s),l=r[1],u=r[2],c=o[1],d=o[2];return[i.dilation2d((0,n.getParamValue)("x",e,t,s),(0,n.getParamValue)("filter",e,t,s),[l,u],a,[c,d],"NHWC"/* dataFormat */)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("3TPMs",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"Fill":{let r=(0,n.getParamValue)("shape",e,t,a),i=(0,n.getParamValue)("dtype",e,t,a),o=(0,n.getParamValue)("value",e,t,a);return[s.fill(r,o,i)]}case"LinSpace":{let r=(0,n.getParamValue)("start",e,t,a),i=(0,n.getParamValue)("stop",e,t,a),o=(0,n.getParamValue)("num",e,t,a);return[s.linspace(r,i,o)]}case"Multinomial":{let r=(0,n.getParamValue)("logits",e,t,a),i=(0,n.getParamValue)("numSamples",e,t,a),o=(0,n.getParamValue)("seed",e,t,a);return[s.multinomial(r,i,o)]}case"OneHot":{let r=(0,n.getParamValue)("indices",e,t,a),i=(0,n.getParamValue)("depth",e,t,a),o=(0,n.getParamValue)("onValue",e,t,a),l=(0,n.getParamValue)("offValue",e,t,a),u=(0,n.getParamValue)("dtype",e,t,a);return[s.oneHot(r,i,o,l,u)]}case"Ones":return[s.ones((0,n.getParamValue)("shape",e,t,a),(0,n.getParamValue)("dtype",e,t,a))];case"OnesLike":return[s.onesLike((0,n.getParamValue)("x",e,t,a))];case"RandomStandardNormal":return[s.randomStandardNormal((0,n.getParamValue)("shape",e,t,a),(0,n.getParamValue)("dtype",e,t,a),(0,n.getParamValue)("seed",e,t,a))];case"RandomUniform":return[s.randomUniform((0,n.getParamValue)("shape",e,t,a),(0,n.getParamValue)("minval",e,t,a),(0,n.getParamValue)("maxval",e,t,a),(0,n.getParamValue)("dtype",e,t,a))];case"RandomUniformInt":return[s.randomUniformInt((0,n.getParamValue)("shape",e,t,a),(0,n.getParamValue)("minval",e,t,a),(0,n.getParamValue)("maxval",e,t,a),(0,n.getParamValue)("seed",e,t,a))];case"Range":{let r=(0,n.getParamValue)("start",e,t,a),i=(0,n.getParamValue)("stop",e,t,a),o=(0,n.getParamValue)("step",e,t,a);return[s.range(r,i,o,(0,n.getParamValue)("dtype",e,t,a))]}case"TruncatedNormal":{let r=(0,n.getParamValue)("shape",e,t,a),i=(0,n.getParamValue)("mean",e,t,a),o=(0,n.getParamValue)("stdDev",e,t,a),l=(0,n.getParamValue)("seed",e,t,a);return[s.truncatedNormal(r,i,o,(0,n.getParamValue)("dtype",e,t,a),l)]}case"Zeros":return[s.zeros((0,n.getParamValue)("shape",e,t,a),(0,n.getParamValue)("dtype",e,t,a))];case"ZerosLike":return[s.zerosLike((0,n.getParamValue)("x",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("c0ywX",function(e,t){c(e.exports,"executeOp",()=>s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");function a(e,t,r){let a=(0,n.getParamValue)("boxes",e,t,r),s=(0,n.getParamValue)("scores",e,t,r),i=(0,n.getParamValue)("maxOutputSize",e,t,r),o=(0,n.getParamValue)("iouThreshold",e,t,r),l=(0,n.getParamValue)("scoreThreshold",e,t,r),u=(0,n.getParamValue)("softNmsSigma",e,t,r);return{boxes:a,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}}let s=async(e,t,s,i,o=r)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:r,scores:n,maxOutputSize:i,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=a(e,t,s),d=await o.image.nonMaxSuppressionWithScoreAsync(r,n,i,l,u,c);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:r,scores:i,maxOutputSize:l,iouThreshold:u,scoreThreshold:c}=a(e,t,s),d=(0,n.getParamValue)("padToMaxOutputSize",e,t,s),p=await o.image.nonMaxSuppressionPaddedAsync(r,i,l,u,c,d);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:r,scores:n,maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=a(e,t,s);return[await o.image.nonMaxSuppressionAsync(r,n,i,l,u)]}case"Where":{let r=o.cast((0,n.getParamValue)("condition",e,t,s),"bool"),a=[await o.whereAsync(r)];return r.dispose(),a}case"ListDiff":return o.setdiff1dAsync((0,n.getParamValue)("x",e,t,s),(0,n.getParamValue)("y",e,t,s));default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("gPS1H",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"LowerBound":{let r=(0,n.getParamValue)("sortedSequence",e,t,a),i=(0,n.getParamValue)("values",e,t,a);return[s.lowerBound(r,i)]}case"TopKV2":{let r=(0,n.getParamValue)("x",e,t,a),i=(0,n.getParamValue)("k",e,t,a),o=(0,n.getParamValue)("sorted",e,t,a),l=s.topk(r,i,o);return[l.values,l.indices]}case"UpperBound":{let r=(0,n.getParamValue)("sortedSequence",e,t,a),i=(0,n.getParamValue)("values",e,t,a);return[s.upperBound(r,i)]}case"Unique":{let r=(0,n.getParamValue)("x",e,t,a),i=s.unique(r);return[i.values,i.indices]}case"UniqueV2":{let r=(0,n.getParamValue)("x",e,t,a),i=(0,n.getParamValue)("axis",e,t,a),o=s.unique(r,i);return[o.values,o.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("ln7DR",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let i=(0,n.getParamValue)("default",e,t,a);return[(0,n.getTensor)(e.name,t,a)||i];case"Placeholder":return[(0,n.getTensor)(e.name,t,a)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let r=(0,n.getParamValue)("x",e,t,a);return[(0,n.cloneTensor)(r)]}case"IdentityN":return(0,n.getParamValue)("x",e,t,a).map(e=>(0,n.cloneTensor)(e));case"Snapshot":let o=(0,n.getParamValue)("x",e,t,a);return[(0,n.cloneTensor)(o)];case"Shape":return[s.tensor1d((0,n.getParamValue)("x",e,t,a).shape,"int32")];case"ShapeN":return(0,n.getParamValue)("x",e,t,a).map(e=>s.tensor1d(e.shape));case"Size":return[s.scalar((0,n.getParamValue)("x",e,t,a).size,"int32")];case"Rank":return[s.scalar((0,n.getParamValue)("x",e,t,a).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":let l=(0,n.getParamValue)("x",e,t,a),u=(0,n.getParamValue)("data",e,t,a),c=(0,n.getParamValue)("message",e,t,a),d=(0,n.getParamValue)("summarize",e,t,a);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(c);for(let e=0;e<u.length;e++)console.log(Array.prototype.slice.call(u[e].dataSync()).slice(0,d));return[l];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("c6NzH",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("8pINL"),n=A("9PnRL");let a=async(e,t,a,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let i=s.getHashTableHandleByName(e.name);// Table is shared with initializer.
if(null!=i)return[i];{let i=(0,n.getParamValue)("keyDType",e,t,a),o=(0,n.getParamValue)("valueDType",e,t,a),l=new r.HashTable(i,o);return s.addHashTable(e.name,l),[l.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let r=(0,n.getParamValue)("tableHandle",e,t,a,s),i=(0,n.getParamValue)("keys",e,t,a),o=(0,n.getParamValue)("values",e,t,a),l=s.getHashTableById(r.id);return[await l.import(i,o)]}case"LookupTableFind":case"LookupTableFindV2":{let r=(0,n.getParamValue)("tableHandle",e,t,a,s),i=(0,n.getParamValue)("keys",e,t,a),o=(0,n.getParamValue)("defaultValue",e,t,a),l=s.getHashTableById(r.id);return[await l.find(i,o)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=(0,n.getParamValue)("tableHandle",e,t,a,s),i=s.getHashTableById(r.id);return[i.tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("8pINL",function(e,t){c(e.exports,"HashTable",()=>o),/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var r=A("3xp7o"),n=A("c2DT1"),a=A("gBOC6"),s=A("jjNRA"),i=A("8BrLX"),r=A("3xp7o");class o{get id(){return this.handle.id}/**
     * Constructor of HashTable. Creates a hash table.
     *
     * @param keyDType `dtype` of the table keys.
     * @param valueDType `dtype` of the table values.
     */constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,r.scalar)(0),// tslint:disable-next-line: no-any
this.tensorMap=new Map,(0,n.keep)(this.handle)}/**
     * Dispose the tensors and handle and clear the hashtable.
     */clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}/**
     * The number of items in the hash table.
     */size(){return this.tensorMap.size}/**
     * The number of items in the hash table as a rank-0 tensor.
     */tensorSize(){return r.scalar(this.size(),"int32")}/**
     * Replaces the contents of the table with the specified keys and values.
     * @param keys Keys to store in the hashtable.
     * @param values Values to store in the hashtable.
     */async import(e,t){this.checkKeyAndValueTensor(e,t);// We only store the primitive values of the keys, this allows lookup
// to be O(1).
let r=await e.data();return(// Clear the hashTable before inserting new values.
this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),(0,n.tidy)(()=>{let e=(0,a.unstack)(t),i=r.length,o=e.length;s.assert(i===o,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${o} elements.`);for(let t=0;t<i;t++){let a=r[t],s=e[t];(0,n.keep)(s),this.tensorMap.set(a,s)}return this.handle}))}/**
     * Looks up keys in a hash table, outputs the corresponding values.
     *
     * Performs batch lookups, for every element in the key tensor, `find`
     * stacks the corresponding value into the return tensor.
     *
     * If an element is not present in the table, the given `defaultValue` is
     * used.
     *
     * @param keys Keys to look up. Must have the same type as the keys of the
     *     table.
     * @param defaultValue The scalar `defaultValue` is the value output for keys
     *     not present in the table. It must also be of the same type as the
     *     table values.
     */async find(e,t){this.checkKeyAndValueTensor(e,t);let r=await e.data();return(0,n.tidy)(()=>{let e=[];for(let n=0;n<r.length;n++){let a=r[n],s=this.findWithDefault(a,t);e.push(s)}return(0,i.stack)(e)})}// tslint:disable-next-line: no-any
findWithDefault(e,t){let r=this.tensorMap.get(e);return null!=r?r:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}}),R("dQiCM",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"ResizeBilinear":{let r=(0,n.getParamValue)("images",e,t,a),i=(0,n.getParamValue)("size",e,t,a),o=(0,n.getParamValue)("alignCorners",e,t,a),l=(0,n.getParamValue)("halfPixelCenters",e,t,a);return[s.image.resizeBilinear(r,[i[0],i[1]],o,l)]}case"ResizeNearestNeighbor":{let r=(0,n.getParamValue)("images",e,t,a),i=(0,n.getParamValue)("size",e,t,a),o=(0,n.getParamValue)("alignCorners",e,t,a),l=(0,n.getParamValue)("halfPixelCenters",e,t,a);return[s.image.resizeNearestNeighbor(r,[i[0],i[1]],o,l)]}case"CropAndResize":{let r=(0,n.getParamValue)("image",e,t,a),i=(0,n.getParamValue)("boxes",e,t,a),o=(0,n.getParamValue)("boxInd",e,t,a),l=(0,n.getParamValue)("cropSize",e,t,a),u=(0,n.getParamValue)("method",e,t,a),c=(0,n.getParamValue)("extrapolationValue",e,t,a);return[s.image.cropAndResize(r,i,o,l,u,c)]}case"ImageProjectiveTransformV3":{let r=(0,n.getParamValue)("images",e,t,a),i=(0,n.getParamValue)("transforms",e,t,a),o=(0,n.getParamValue)("outputShape",e,t,a),l=(0,n.getParamValue)("fillValue",e,t,a),u=(0,n.getParamValue)("interpolation",e,t,a),c=(0,n.getParamValue)("fillMode",e,t,a);return[s.image.transform(r,i,u.toLowerCase(),c.toLowerCase(),l,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("h1Kl3",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"Equal":return[s.equal((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"NotEqual":return[s.notEqual((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"Greater":return[s.greater((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"GreaterEqual":return[s.greaterEqual((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"Less":return[s.less((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"LessEqual":return[s.lessEqual((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"LogicalAnd":return[s.logicalAnd((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"LogicalNot":return[s.logicalNot((0,n.getParamValue)("a",e,t,a))];case"LogicalOr":return[s.logicalOr((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"Select":case"SelectV2":return[s.where((0,n.getParamValue)("condition",e,t,a),(0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];case"BitwiseAnd":return[s.bitwiseAnd((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("7TMBo",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("b",e,t,a),(0,n.getParamValue)("transposeA",e,t,a),(0,n.getParamValue)("transposeB",e,t,a))];case"Einsum":return[s.einsum((0,n.getParamValue)("equation",e,t,a),...(0,n.getParamValue)("tensors",e,t,a))];case"Transpose":return[s.transpose((0,n.getParamValue)("x",e,t,a),(0,n.getParamValue)("perm",e,t,a))];case"_FusedMatMul":let[i,o]=(0,n.getParamValue)("fusedOps",e,t,a),l="prelu"===o,u=(0,n.getParamValue)("numArgs",e,t,a),c=(0,n.getParamValue)("leakyreluAlpha",e,t,a);if("biasadd"===i){if(l&&2!==u)throw Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&1!==u)throw Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[d,p]=(0,n.getParamValue)("args",e,t,a);return[s.fused.matMul({a:(0,n.getParamValue)("a",e,t,a),b:(0,n.getParamValue)("b",e,t,a),transposeA:(0,n.getParamValue)("transposeA",e,t,a),transposeB:(0,n.getParamValue)("transposeB",e,t,a),bias:d,activation:o,preluActivationWeights:p,leakyreluAlpha:c})];case"MatrixBandPart":return[s.linalg.bandPart((0,n.getParamValue)("a",e,t,a),(0,n.getParamValue)("numLower",e,t,a),(0,n.getParamValue)("numUpper",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("9lSzv",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"EuclideanNorm":return[s.euclideanNorm((0,n.getParamValue)("x",e,t,a),(0,n.getParamValue)("axis",e,t,a),(0,n.getParamValue)("keepDims",e,t,a))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[s.batchNorm((0,n.getParamValue)("x",e,t,a),(0,n.getParamValue)("mean",e,t,a),(0,n.getParamValue)("variance",e,t,a),(0,n.getParamValue)("offset",e,t,a),(0,n.getParamValue)("scale",e,t,a),(0,n.getParamValue)("epsilon",e,t,a))];case"LRN":return[s.localResponseNormalization((0,n.getParamValue)("x",e,t,a),(0,n.getParamValue)("radius",e,t,a),(0,n.getParamValue)("bias",e,t,a),(0,n.getParamValue)("alpha",e,t,a),(0,n.getParamValue)("beta",e,t,a))];case"Softmax":return[s.softmax((0,n.getParamValue)("x",e,t,a))];case"LogSoftmax":return[s.logSoftmax((0,n.getParamValue)("x",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("bPan9",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:r,outputDenseValues:i}=s.raggedGather((0,n.getParamValue)("paramsNestedSplits",e,t,a),(0,n.getParamValue)("paramsDenseValues",e,t,a),(0,n.getParamValue)("indices",e,t,a),(0,n.getParamValue)("outputRaggedRank",e,t,a));return r.concat(i)}case"RaggedRange":{let{rtNestedSplits:r,rtDenseValues:i}=s.raggedRange((0,n.getParamValue)("starts",e,t,a),(0,n.getParamValue)("limits",e,t,a),(0,n.getParamValue)("splits",e,t,a));return[r,i]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor((0,n.getParamValue)("shape",e,t,a),(0,n.getParamValue)("values",e,t,a),(0,n.getParamValue)("defaultValue",e,t,a),(0,n.getParamValue)("rowPartitionTensors",e,t,a),(0,n.getParamValue)("rowPartitionTypes",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("bHY7p",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"Max":{let r=(0,n.getParamValue)("axis",e,t,a),i=(0,n.getParamValue)("keepDims",e,t,a);return[s.max((0,n.getParamValue)("x",e,t,a),r,i)]}case"Mean":{let r=(0,n.getParamValue)("axis",e,t,a),i=(0,n.getParamValue)("keepDims",e,t,a);return[s.mean((0,n.getParamValue)("x",e,t,a),r,i)]}case"Min":{let r=(0,n.getParamValue)("axis",e,t,a),i=(0,n.getParamValue)("keepDims",e,t,a);return[s.min((0,n.getParamValue)("x",e,t,a),r,i)]}case"Sum":{let r=(0,n.getParamValue)("axis",e,t,a),i=(0,n.getParamValue)("keepDims",e,t,a);return[s.sum((0,n.getParamValue)("x",e,t,a),r,i)]}case"All":{let r=(0,n.getParamValue)("axis",e,t,a),i=(0,n.getParamValue)("keepDims",e,t,a);return[s.all((0,n.getParamValue)("x",e,t,a),r,i)]}case"Any":{let r=(0,n.getParamValue)("axis",e,t,a),i=(0,n.getParamValue)("keepDims",e,t,a);return[s.any((0,n.getParamValue)("x",e,t,a),r,i)]}case"ArgMax":{let r=(0,n.getParamValue)("axis",e,t,a);return[s.argMax((0,n.getParamValue)("x",e,t,a),r)]}case"ArgMin":{let r=(0,n.getParamValue)("axis",e,t,a);return[s.argMin((0,n.getParamValue)("x",e,t,a),r)]}case"Prod":{let r=(0,n.getParamValue)("axis",e,t,a),i=(0,n.getParamValue)("keepDims",e,t,a);return[s.prod((0,n.getParamValue)("x",e,t,a),r,i)]}case"Cumprod":{let r=(0,n.getParamValue)("axis",e,t,a),i=(0,n.getParamValue)("exclusive",e,t,a),o=(0,n.getParamValue)("reverse",e,t,a);return[s.cumprod((0,n.getParamValue)("x",e,t,a),r,i,o)]}case"Cumsum":{let r=(0,n.getParamValue)("axis",e,t,a),i=(0,n.getParamValue)("exclusive",e,t,a),o=(0,n.getParamValue)("reverse",e,t,a);return[s.cumsum((0,n.getParamValue)("x",e,t,a),r,i,o)]}case"Bincount":let i=(0,n.getParamValue)("x",e,t,a),o=(0,n.getParamValue)("weights",e,t,a),l=(0,n.getParamValue)("size",e,t,a);return[s.bincount(i,o,l)];case"DenseBincount":{let r=(0,n.getParamValue)("x",e,t,a),i=(0,n.getParamValue)("weights",e,t,a),o=(0,n.getParamValue)("size",e,t,a),l=(0,n.getParamValue)("binaryOutput",e,t,a);return[s.denseBincount(r,i,o,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("9Buta",function(e,t){c(e.exports,"executeOp",()=>i),/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var r=A("c2DT1"),n=A("jjNRA"),a=A("h8nZK"),s=A("9PnRL");let i=(e,t,i,o=a)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=(0,s.getParamValue)("n",e,t,i),n=(0,s.getParamValue)("axis",e,t,i),a=(0,s.getParamValue)("tensors",e,t,i);return a=a.slice(0,r),[o.concat(a,n)]}case"Gather":{let r=(0,s.getParamValue)("x",e,t,i),n=(0,s.getParamValue)("indices",e,t,i);return[o.gather(r,o.cast(n,"int32"),0)]}case"GatherV2":{let r=(0,s.getParamValue)("axis",e,t,i),n=(0,s.getParamValue)("batchDims",e,t,i),a=(0,s.getParamValue)("x",e,t,i),l=(0,s.getParamValue)("indices",e,t,i);return[o.gather(a,o.cast(l,"int32"),r,n)]}case"Reverse":{let r=(0,s.getParamValue)("dims",e,t,i),n=[];for(let e=0;e<r.length;e++)r[e]&&n.push(e);let a=(0,s.getParamValue)("x",e,t,i);return[o.reverse(a,n)]}case"ReverseV2":{let r=(0,s.getParamValue)("axis",e,t,i),n=(0,s.getParamValue)("x",e,t,i);return[o.reverse(n,r)]}case"Slice":{// tslint:disable-next-line:no-any
let r=(0,s.getParamValue)("begin",e,t,i),n=(0,s.getParamValue)("size",e,t,i);return[o.slice((0,s.getParamValue)("x",e,t,i),r,n)]}case"StridedSlice":{let r=(0,s.getParamValue)("begin",e,t,i),n=(0,s.getParamValue)("end",e,t,i),a=(0,s.getParamValue)("strides",e,t,i),l=(0,s.getParamValue)("beginMask",e,t,i),u=(0,s.getParamValue)("endMask",e,t,i),c=(0,s.getParamValue)("ellipsisMask",e,t,i),d=(0,s.getParamValue)("newAxisMask",e,t,i),p=(0,s.getParamValue)("shrinkAxisMask",e,t,i),h=(0,s.getParamValue)("x",e,t,i);return[o.stridedSlice(h,r,n,a,l,u,c,d,p)]}case"Pack":return(0,r.tidy)(()=>{let r=(0,s.getParamValue)("axis",e,t,i),a=(0,s.getParamValue)("tensors",e,t,i),l=a[0].shape,u=o.squeeze(a[0]).shape,c=a.map(e=>{let t=n.arraysEqual(e.shape,l);if(!t&&!n.arraysEqual(o.squeeze(e).shape,u))throw Error("the input tensors shape does not match");return t?e:o.reshape(e,l)});return[o.stack(c,r)]});case"Unpack":{let r=(0,s.getParamValue)("axis",e,t,i),n=(0,s.getParamValue)("tensor",e,t,i);return o.unstack(n,r)}case"Tile":{let r=(0,s.getParamValue)("reps",e,t,i);return[o.tile((0,s.getParamValue)("x",e,t,i),r)]}case"Split":case"SplitV":{let r=(0,s.getParamValue)("axis",e,t,i),n=(0,s.getParamValue)("numOrSizeSplits",e,t,i),a=(0,s.getParamValue)("x",e,t,i);return o.split(a,n,r)}case"ScatterNd":{let r=(0,s.getParamValue)("indices",e,t,i),n=(0,s.getParamValue)("values",e,t,i),a=(0,s.getParamValue)("shape",e,t,i);return[o.scatterND(r,n,a)]}case"GatherNd":{let r=(0,s.getParamValue)("x",e,t,i),n=(0,s.getParamValue)("indices",e,t,i);return[o.gatherND(r,n)]}case"SparseToDense":{let r=(0,s.getParamValue)("sparseIndices",e,t,i),n=(0,s.getParamValue)("outputShape",e,t,i),a=(0,s.getParamValue)("sparseValues",e,t,i),l=(0,s.getParamValue)("defaultValue",e,t,i);return[o.sparseToDense(r,a,n,a.dtype===l.dtype?l:o.cast(l,a.dtype))]}case"TensorScatterUpdate":{let r=(0,s.getParamValue)("indices",e,t,i),n=(0,s.getParamValue)("values",e,t,i),a=(0,s.getParamValue)("tensor",e,t,i);return[o.tensorScatterUpdate(a,r,n)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("3pwdq",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:i,emptyRowIndicator:o,reverseIndexMap:l}=s.sparse.sparseFillEmptyRows((0,n.getParamValue)("indices",e,t,a),(0,n.getParamValue)("values",e,t,a),(0,n.getParamValue)("denseShape",e,t,a),(0,n.getParamValue)("defaultValue",e,t,a));return[r,i,o,l]}case"SparseReshape":{let{outputIndices:r,outputShape:i}=s.sparse.sparseReshape((0,n.getParamValue)("inputIndices",e,t,a),(0,n.getParamValue)("inputShape",e,t,a),(0,n.getParamValue)("newShape",e,t,a));return[r,i]}case"SparseSegmentMean":{let r=s.sparse.sparseSegmentMean((0,n.getParamValue)("data",e,t,a),(0,n.getParamValue)("indices",e,t,a),(0,n.getParamValue)("segmentIds",e,t,a));return[r]}case"SparseSegmentSum":{let r=s.sparse.sparseSegmentSum((0,n.getParamValue)("data",e,t,a),(0,n.getParamValue)("indices",e,t,a),(0,n.getParamValue)("segmentIds",e,t,a));return[r]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("7RSIj",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"FFT":return[s.fft((0,n.getParamValue)("x",e,t,a))];case"IFFT":return[s.ifft((0,n.getParamValue)("x",e,t,a))];case"RFFT":return[s.rfft((0,n.getParamValue)("x",e,t,a))];case"IRFFT":return[s.irfft((0,n.getParamValue)("x",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("j4Rla",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"StaticRegexReplace":return[s.string.staticRegexReplace((0,n.getParamValue)("input",e,t,a),(0,n.getParamValue)("pattern",e,t,a),(0,n.getParamValue)("rewrite",e,t,a),(0,n.getParamValue)("replaceGlobal",e,t,a))];case"StringNGrams":{let{nGrams:r,nGramsSplits:i}=s.string.stringNGrams((0,n.getParamValue)("data",e,t,a),(0,n.getParamValue)("dataSplits",e,t,a),(0,n.getParamValue)("separator",e,t,a),(0,n.getParamValue)("nGramWidths",e,t,a),(0,n.getParamValue)("leftPad",e,t,a),(0,n.getParamValue)("rightPad",e,t,a),(0,n.getParamValue)("padWidth",e,t,a),(0,n.getParamValue)("preserveShortSequences",e,t,a));return[r,i]}case"StringSplit":{let{indices:r,values:i,shape:o}=s.string.stringSplit((0,n.getParamValue)("input",e,t,a),(0,n.getParamValue)("delimiter",e,t,a),(0,n.getParamValue)("skipEmpty",e,t,a));return[r,i,o]}case"StringToHashBucketFast":{let r=s.string.stringToHashBucketFast((0,n.getParamValue)("input",e,t,a),(0,n.getParamValue)("numBuckets",e,t,a));return[r]}default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("cXzgX",function(e,t){c(e.exports,"executeOp",()=>a);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// tslint:disable-next-line: no-imports-from-dist
var r=A("h8nZK"),n=A("9PnRL");let a=(e,t,a,s=r)=>{switch(e.op){case"Cast":return[s.cast((0,n.getParamValue)("x",e,t,a),(0,n.getParamValue)("dtype",e,t,a))];case"ExpandDims":{let r=(0,n.getParamValue)("axis",e,t,a);return[s.expandDims((0,n.getParamValue)("x",e,t,a),r)]}case"Squeeze":{let r=(0,n.getParamValue)("axis",e,t,a);return[s.squeeze((0,n.getParamValue)("x",e,t,a),r)]}case"Reshape":return[s.reshape((0,n.getParamValue)("x",e,t,a),(0,n.getParamValue)("shape",e,t,a))];case"EnsureShape":return[s.ensureShape((0,n.getParamValue)("x",e,t,a),(0,n.getParamValue)("shape",e,t,a))];case"MirrorPad":return[s.mirrorPad((0,n.getParamValue)("x",e,t,a),(0,n.getParamValue)("padding",e,t,a),(0,n.getParamValue)("mode",e,t,a))];case"PadV2":case"Pad":return[s.pad((0,n.getParamValue)("x",e,t,a),(0,n.getParamValue)("padding",e,t,a),(0,n.getParamValue)("constantValue",e,t,a))];case"SpaceToBatchND":{let r=(0,n.getParamValue)("blockShape",e,t,a),i=(0,n.getParamValue)("paddings",e,t,a);return[s.spaceToBatchND((0,n.getParamValue)("x",e,t,a),r,i)]}case"BatchToSpaceND":{let r=(0,n.getParamValue)("blockShape",e,t,a),i=(0,n.getParamValue)("crops",e,t,a);return[s.batchToSpaceND((0,n.getParamValue)("x",e,t,a),r,i)]}case"DepthToSpace":{let r=(0,n.getParamValue)("blockSize",e,t,a),i=(0,n.getParamValue)("dataFormat",e,t,a).toUpperCase();return[s.depthToSpace((0,n.getParamValue)("x",e,t,a),r,i)]}case"BroadcastTo":return[s.broadcastTo((0,n.getParamValue)("x",e,t,a),(0,n.getParamValue)("shape",e,t,a))];case"BroadcastArgs":return[s.broadcastArgs((0,n.getParamValue)("s0",e,t,a),(0,n.getParamValue)("s1",e,t,a))];default:throw TypeError(`Node type ${e.op} is not implemented`)}}}),R("hv42p",function(e,t){c(e.exports,"ExecutionContext",()=>r);/**
 * ExecutionContext captures the runtime environment of the node. It keeps
 * track of the current frame and iteration for the control flow ops.
 *
 * For example, typical Dynamic RNN model may contain loops, for which
 * TensorFlow will generate graphs with Enter/Exit nodes to control the
 * current execution frame, and NextIteration Nodes for iteration id increment.
 * For model with branch logic, TensorFLow will generate Switch/Merge ops.
 */class r{constructor(e={},t={},r={},n={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=n,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}/**
     * Set the current context
     * @param contexts: ExecutionContextInfo[] the current path of execution
     * frames
     */set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}/**
     * Returns the current context in string format.
     */get currentContextId(){return this._currentContextIds[0]}/**
     * Returns the current context and all parent contexts in string format.
     * This allow access to the nodes in the current and parent frames.
     */get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}/**
     * Enter a new frame, a new context is pushed on the current context list.
     * @param frameId new frame id
     */enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}/**
     * Exit the current frame, the last context is removed from the current
     * context list.
     */exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw Error("Cannot exit frame, the context is empty")}/**
     * Enter the next iteration of a loop, the iteration id of last context is
     * increased.
     */nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}}),R("a96bd",function(e,t){c(e.exports,"getExecutionSubgraph",()=>n),c(e.exports,"isControlFlow",()=>d),c(e.exports,"getNodesInTopologicalOrder",()=>a),c(e.exports,"getNodeLiveUntilMap",()=>i);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r=A("9PnRL");function n(e,t,n,a){let s=new Set,i=[],o=null,c=null,p=new Set,h=new Set(Object.keys(e).map(e=>(0,r.parseNodeName)(e)[0]));a=a||[];let f=new Set(a.map(e=>(0,r.parseNodeName)(e.name)[0])),m=[...t];for(;m.length>0;){let e=m.pop();// Weights are dead end since we already have their values.
if((d(e)||l.has(e.op)||u.has(e.op))&&null==o&&(c=(o=e).children.map(e=>e.name).filter(e=>s.has(e))),s.add(e.name),!(null!=n[e.name]||h.has(e.name)||f.has(e.name))){if(0===e.inputs.length){i.push(e.name);continue}e.inputs.forEach(e=>{// Don't add to the frontier if it is already there.
p.has(e.name)||(p.add(e.name),m.push(e))})}}return{inputs:e,outputs:t,usedNodes:s,missingInputs:i,dynamicNode:o,syncInputs:c}}function a(e,t){let{usedNodes:n,inputs:a}=t,i=Object.keys(a).map(e=>(0,r.parseNodeName)(e)[0]).map(t=>e.nodes[t]),o=e.initNodes||[],l=e=>n.has("string"==typeof e?e:e.name);function u(e){return[...new Map(e.map(e=>[e.name,e])).values()]}let c=u([...i,...e.weights,...o]).filter(l),d=u([...c,...Object.values(e.nodes)]).filter(l),p=new Map(d.map(e=>[e.name,e])),h={};for(let e of d)for(let t of(h[e.name]=h[e.name]||0,e.children))l(t)||(h[t.name]=Number.POSITIVE_INFINITY),h[t.name]=(h[t.name]||0)+1;// Build execution order for all used nodes regardless whether they are
// predefined or not.
let f=Object.entries(h).filter(([,e])=>0===e).map(([e])=>e),m=[...f];for(;f.length>0;){let e=f.pop(),t=p.get(e);for(let e of t.children.filter(l))0==--h[e.name]&&(m.push(e.name),f.push(e.name))}let g=m.map(e=>p.get(e)),y=/**
 * This is a helper function of `getNodesInTopologicalOrder`.
 * Returns ordered nodes reachable by at least one predefined node.
 * This can help us filter out redundant nodes from the returned node list.
 * For example:
 * If we have four nodes with dependencies like this:
 *   a --> b --> c --> d
 * when node `c` is predefined (e.g. given as an input tensor), we can
 * skip node `a` and `b` since their outputs will never be used.
 *
 * @param orderedNodes Graph nodes in execution order.
 * @param predefinedNodes Graph inputs, weights, and init nodes. Nodes in this
 *     list must have distinct names.
 */function(e,t){let r=new Map(e.map(e=>[e.name,e])),n=t.map(e=>e.name),a=new Set(n);// Perform a DFS starting from the set of all predefined nodes
// to find the set of all nodes reachable from the predefined nodes.
for(;n.length>0;){let e=n.pop(),t=r.get(e);for(let e of t.children)!r.has(e.name)||a.has(e.name)||(a.add(e.name),n.push(e.name))}// Filter out unreachable nodes and build the ordered node list.
let s=e.filter(e=>a.has(e.name));return s}(g,c);return(// TODO: Turn validation on/off with tf env flag.
/**
 * This is a helper function of `getNodesInTopologicalOrder`.
 * Validates property: given nodes `a` and `b`, Order(a) > Order(b) if `a`
 * is a child of `b`. This function throws an error if validation fails.
 *
 * @param orderedNodes Graph nodes in execution order.
 * @param predefinedNodes Graph inputs, weights, and init nodes. Nodes in this
 *     list must have distinct names.
 */function(e,t){let r=new Map(e.map((e,t)=>[e.name,t])),n=new Set(t.map(e=>e.name)),a=e=>n.has("string"==typeof e?e:e.name),i=new Set(e.map(e=>e.name)),o=e=>i.has("string"==typeof e?e:e.name);for(let t of e){for(let e of t.children.filter(o)){if(!r.has(e.name))throw new s(`Child ${e.name} of node ${t.name} is unreachable.`);if(r.get(t.name)>r.get(e.name))throw new s(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!a(t))for(let e of t.inputs){if(!r.has(e.name))throw new s(`Input ${e.name} of node ${t.name} is unreachable.`);if(r.get(e.name)>r.get(t.name))throw new s(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(y,c),y)}class s extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function i(e){let t=new Map(e.map((e,t)=>[e.name,t])),r=Number.MAX_SAFE_INTEGER,n=e.map((e,t)=>d(e)?r:t),a=e=>{let r=n[t.get(e.name)];return null==r?-1:r},s=e.map((e,t)=>e.children.map(a).reduce((e,t)=>Math.max(e,t),n[t])),i=new Map;for(let t=0;t<e.length;++t){let n=s[t];if(n===r)continue;let a=e[t],o=e[n];i.has(o.name)||i.set(o.name,[]),i.get(o.name).push(a)}return i}let o=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),l=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),u=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function d(e){return o.has(e.op)}}),R("kqYp1",function(e,t){c(e.exports,"ResourceManager",()=>r);/**
 * Contains global resources of a model.
 */class r{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}/**
     * Register a `HashTable` in the resource manager.
     *
     * The `HashTable` can be retrieved by `resourceManager.getHashTableById`,
     * where id is the table handle tensor's id.
     *
     * @param name Op node name that creates the `HashTable`.
     * @param hashTable The `HashTable` to be added to resource manager.
     */addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}/**
     * Get the table handle by node name.
     * @param name Op node name that creates the `HashTable`. This name is also
     *     used in the inputs list of lookup and import `HashTable` ops.
     */getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}/**
     * Get the actual `HashTable` by its handle tensor's id.
     * @param id The id of the handle tensor.
     */getHashTableById(e){return this.hashTableMap[e]}/**
     * Dispose `ResourceManager`, including its hashTables and tensors in them.
     */dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}),R("1SddR",function(e,t){c(e.exports,"version",()=>r);/** @license See the LICENSE file. */// This code is auto-generated, do not modify this file!
let r="4.13.0"}),R("45HU9",function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.default=e.exports.useSpeechRecognition=void 0;var r,n,a,s,i=A("acw62"),o=A("dYC5L"),l=A("efBa6"),u=A("3mWln"),c=h(A("6ubUz")),d=h(A("fOfvk")),p=h(A("cjtvA"));function h(e){return e&&e.__esModule?e:{default:e}}function f(e,t,r,n,a,s,i){try{var o=e[s](i),l=o.value}catch(e){r(e);return}o.done?t(l):Promise.resolve(l).then(n,a)}function m(e){return function(){var t=this,r=arguments;return new Promise(function(n,a){var s=e.apply(t,r);function i(e){f(s,n,a,i,o,"next",e)}function o(e){f(s,n,a,i,o,"throw",e)}i(void 0)})}}function g(e){return(g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function y(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var r=[],n=!0,a=!1,s=void 0;try{for(var i,o=e[Symbol.iterator]();!(n=(i=o.next()).done)&&(r.push(i.value),!t||r.length!==t);n=!0);}catch(e){a=!0,s=e}finally{try{n||null==o.return||o.return()}finally{if(a)throw s}}return r}}(e,t)||b(e,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function b(e,t){if(e){if("string"==typeof e)return v(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);if("Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return v(e,t)}}function v(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=Array(t);r<t;r++)n[r]=e[r];return n}var x=!!p.default,w=x&&!(0,d.default)();e.exports.useSpeechRecognition=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.transcribing,r=void 0===t||t,n=e.clearTranscriptOnListen,a=void 0===n||n,s=e.commands,c=void 0===s?[]:s,d=y((0,i.useState)(k.getRecognitionManager()),1)[0],p=y((0,i.useState)(x),2),h=p[0],f=p[1],m=y((0,i.useState)(w),2),S=m[0],N=m[1],T=y((0,i.useReducer)(u.transcriptReducer,{interimTranscript:d.interimTranscript,finalTranscript:""}),2),I=T[0],C=I.interimTranscript,E=I.finalTranscript,A=T[1],R=y((0,i.useState)(d.listening),2),_=R[0],O=R[1],P=y((0,i.useState)(d.isMicrophoneAvailable),2),$=P[0],D=P[1],M=(0,i.useRef)(c);M.current=c;var F=function(){A((0,l.clearTranscript)())},L=(0,i.useCallback)(function(){d.resetTranscript(),F()},[d]),j=function(e,t,r){var n=("object"===g(e)?e.toString():e).replace(/[&/\\#,+()!$~%.'":*?<>{}]/g,"").replace(/  +/g," ").trim(),a=(0,o.compareTwoStringsUsingDiceCoefficient)(n,t);return a>=r?{command:e,commandWithoutSpecials:n,howSimilar:a,isFuzzyMatch:!0}:null},B=function(e,t){var r=(0,o.commandToRegExp)(e).exec(t);return r?{command:e,parameters:r.slice(1)}:null},z=(0,i.useCallback)(function(e,t){M.current.forEach(function(r){var n=r.command,a=r.callback,s=r.matchInterim,i=r.isFuzzyMatch,o=void 0!==i&&i,l=r.fuzzyMatchingThreshold,u=void 0===l?.8:l,c=r.bestMatchOnly,d=!t&&void 0!==s&&s?e.trim():t.trim(),p=(Array.isArray(n)?n:[n]).map(function(e){return o?j(e,d,u):B(e,d)}).filter(function(e){return e});if(o&&void 0!==c&&c&&p.length>=2){p.sort(function(e,t){return t.howSimilar-e.howSimilar});var h=p[0],f=h.command;a(h.commandWithoutSpecials,d,h.howSimilar,{command:f,resetTranscript:L})}else p.forEach(function(e){if(e.isFuzzyMatch){var t=e.command;a(e.commandWithoutSpecials,d,e.howSimilar,{command:t,resetTranscript:L})}else{var r=e.command,n=e.parameters;a.apply(void 0,((function(e){if(Array.isArray(e))return v(e)})(n)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(n)||b(n)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).concat([{command:r,resetTranscript:L}]))}})})},[L]),V=(0,i.useCallback)(function(e,t){r&&A((0,l.appendTranscript)(e,t)),z(e,t)},[z,r]),G=(0,i.useCallback)(function(){a&&F()},[a]);return(0,i.useEffect)(function(){var e=k.counter;return k.counter+=1,d.subscribe(e,{onListeningChange:O,onMicrophoneAvailabilityChange:D,onTranscriptChange:V,onClearTranscript:G,onBrowserSupportsSpeechRecognitionChange:f,onBrowserSupportsContinuousListeningChange:N}),function(){d.unsubscribe(e)}},[r,a,d,V,G]),{transcript:(0,o.concatTranscripts)(E,C),interimTranscript:C,finalTranscript:E,listening:_,isMicrophoneAvailable:$,resetTranscript:L,browserSupportsSpeechRecognition:h,browserSupportsContinuousListening:S}};var k={counter:0,applyPolyfill:function(e){s?s.setSpeechRecognition(e):s=new c.default(e);var t=!!e&&(0,o.browserSupportsPolyfills)();x=t,w=t},removePolyfill:function(){s?s.setSpeechRecognition(p.default):s=new c.default(p.default),w=(x=!!p.default)&&!(0,d.default)()},getRecognitionManager:function(){return s||(s=new c.default(p.default)),s},getRecognition:function(){return k.getRecognitionManager().getRecognition()},startListening:(r=m(/*#__PURE__*/regeneratorRuntime.mark(function e(){var t,r,n,a,s=arguments;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return r=(t=s.length>0&&void 0!==s[0]?s[0]:{}).continuous,n=t.language,a=k.getRecognitionManager(),e.next=4,a.startListening({continuous:r,language:n});case 4:case"end":return e.stop()}},e)})),function(){return r.apply(this,arguments)}),stopListening:(n=m(/*#__PURE__*/regeneratorRuntime.mark(function e(){var t;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=k.getRecognitionManager(),e.next=3,t.stopListening();case 3:case"end":return e.stop()}},e)})),function(){return n.apply(this,arguments)}),abortListening:(a=m(/*#__PURE__*/regeneratorRuntime.mark(function e(){var t;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=k.getRecognitionManager(),e.next=3,t.abortListening();case 3:case"end":return e.stop()}},e)})),function(){return a.apply(this,arguments)}),browserSupportsSpeechRecognition:function(){return x},browserSupportsContinuousListening:function(){return w}};e.exports.default=k}),R("dYC5L",function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.browserSupportsPolyfills=e.exports.compareTwoStringsUsingDiceCoefficient=e.exports.commandToRegExp=e.exports.concatTranscripts=e.exports.debounce=void 0,e.exports.debounce=function(e,t,r){var n;return function(){var a=this,s=arguments,i=r&&!n;clearTimeout(n),n=setTimeout(function(){n=null,r||e.apply(a,s)},t),i&&e.apply(a,s)}},e.exports.concatTranscripts=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return t.map(function(e){return e.trim()}).join(" ").trim()};var r=/\s*\((.*?)\)\s*/g,n=/(\(\?:[^)]+\))\?/g,a=/(\(\?)?:\w+/g,s=/\*/g,i=/[-{}[\]+?.,\\^$|#]/g;e.exports.commandToRegExp=function(e){return e instanceof RegExp?RegExp(e.source,"i"):RegExp("^"+(e=e.replace(i,"\\$&").replace(r,"(?:$1)?").replace(a,function(e,t){return t?e:"([^\\s]+)"}).replace(s,"(.*?)").replace(n,"\\s*$1?\\s*"))+"$","i")},e.exports.compareTwoStringsUsingDiceCoefficient=function(e,t){if(e=e.replace(/\s+/g,"").toLowerCase(),t=t.replace(/\s+/g,"").toLowerCase(),!e.length&&!t.length)return 1;// if both are empty strings
if(!e.length||!t.length)return 0;// if only one is empty string
if(e===t)return 1;// identical
if(1===e.length&&1===t.length||e.length<2||t.length<2)return 0;// both are 1-letter strings
for(var r=new Map,n=0;n<e.length-1;n++){var a=e.substring(n,n+2),s=r.has(a)?r.get(a)+1:1;r.set(a,s)}for(var i=0,o=0;o<t.length-1;o++){var l=t.substring(o,o+2),u=r.has(l)?r.get(l):0;u>0&&(r.set(l,u-1),i++)}return 2*i/(e.length+t.length-2)},e.exports.browserSupportsPolyfills=function(){return"undefined"!=typeof window&&void 0!==window.navigator&&void 0!==window.navigator.mediaDevices&&void 0!==window.navigator.mediaDevices.getUserMedia&&(void 0!==window.AudioContext||void 0!==window.webkitAudioContext)}}),R("efBa6",function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.appendTranscript=e.exports.clearTranscript=void 0;var r=A("gJ1Uu");e.exports.clearTranscript=function(){return{type:r.CLEAR_TRANSCRIPT}},e.exports.appendTranscript=function(e,t){return{type:r.APPEND_TRANSCRIPT,payload:{interimTranscript:e,finalTranscript:t}}}}),R("gJ1Uu",function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.APPEND_TRANSCRIPT=e.exports.CLEAR_TRANSCRIPT=void 0,e.exports.CLEAR_TRANSCRIPT="CLEAR_TRANSCRIPT",e.exports.APPEND_TRANSCRIPT="APPEND_TRANSCRIPT"}),R("3mWln",function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.transcriptReducer=void 0;var r=A("gJ1Uu"),n=A("dYC5L");e.exports.transcriptReducer=function(e,t){switch(t.type){case r.CLEAR_TRANSCRIPT:return{interimTranscript:"",finalTranscript:""};case r.APPEND_TRANSCRIPT:return{interimTranscript:t.payload.interimTranscript,finalTranscript:(0,n.concatTranscripts)(e.finalTranscript,t.payload.finalTranscript)};default:throw Error()}}}),R("6ubUz",function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.default=void 0;var r,n=(r=A("fOfvk"))&&r.__esModule?r:{default:r},a=A("dYC5L"),s=A("cjtvA");function i(e,t,r,n,a,s,i){try{var o=e[s](i),l=o.value}catch(e){r(e);return}o.done?t(l):Promise.resolve(l).then(n,a)}function o(e){return function(){var t=this,r=arguments;return new Promise(function(n,a){var s=e.apply(t,r);function o(e){i(s,n,a,o,l,"next",e)}function l(e){i(s,n,a,o,l,"throw",e)}o(void 0)})}}function l(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var u=/*#__PURE__*/function(){var e,t,r,i,u,c;function d(e){(function(e,t){if(!(e instanceof t))throw TypeError("Cannot call a class as a function")})(this,d),this.recognition=null,this.pauseAfterDisconnect=!1,this.interimTranscript="",this.finalTranscript="",this.listening=!1,this.isMicrophoneAvailable=!0,this.subscribers={},this.onStopListening=function(){},this.previousResultWasFinalOnly=!1,this.resetTranscript=this.resetTranscript.bind(this),this.startListening=this.startListening.bind(this),this.stopListening=this.stopListening.bind(this),this.abortListening=this.abortListening.bind(this),this.setSpeechRecognition=this.setSpeechRecognition.bind(this),this.disableRecognition=this.disableRecognition.bind(this),this.setSpeechRecognition(e),(0,n.default)()&&(this.updateFinalTranscript=(0,a.debounce)(this.updateFinalTranscript,250,!0))}return u=[{key:"setSpeechRecognition",value:function(e){var t=!!e&&((0,s.isNative)(e)||(0,a.browserSupportsPolyfills)());t&&(this.disableRecognition(),this.recognition=new e,this.recognition.continuous=!1,this.recognition.interimResults=!0,this.recognition.onresult=this.updateTranscript.bind(this),this.recognition.onend=this.onRecognitionDisconnect.bind(this),this.recognition.onerror=this.onError.bind(this)),this.emitBrowserSupportsSpeechRecognitionChange(t)}},{key:"subscribe",value:function(e,t){this.subscribers[e]=t}},{key:"unsubscribe",value:function(e){delete this.subscribers[e]}},{key:"emitListeningChange",value:function(e){var t=this;this.listening=e,Object.keys(this.subscribers).forEach(function(r){(0,t.subscribers[r].onListeningChange)(e)})}},{key:"emitMicrophoneAvailabilityChange",value:function(e){var t=this;this.isMicrophoneAvailable=e,Object.keys(this.subscribers).forEach(function(r){(0,t.subscribers[r].onMicrophoneAvailabilityChange)(e)})}},{key:"emitTranscriptChange",value:function(e,t){var r=this;Object.keys(this.subscribers).forEach(function(n){(0,r.subscribers[n].onTranscriptChange)(e,t)})}},{key:"emitClearTranscript",value:function(){var e=this;Object.keys(this.subscribers).forEach(function(t){(0,e.subscribers[t].onClearTranscript)()})}},{key:"emitBrowserSupportsSpeechRecognitionChange",value:function(e){var t=this;Object.keys(this.subscribers).forEach(function(r){var n=t.subscribers[r],a=n.onBrowserSupportsSpeechRecognitionChange,s=n.onBrowserSupportsContinuousListeningChange;a(e),s(e)})}},{key:"disconnect",value:function(e){if(this.recognition&&this.listening)switch(e){case"ABORT":this.pauseAfterDisconnect=!0,this.abort();break;case"RESET":this.pauseAfterDisconnect=!1,this.abort();break;default:this.pauseAfterDisconnect=!0,this.stop()}}},{key:"disableRecognition",value:function(){this.recognition&&(this.recognition.onresult=function(){},this.recognition.onend=function(){},this.recognition.onerror=function(){},this.listening&&this.stopListening())}},{key:"onError",value:function(e){e&&e.error&&"not-allowed"===e.error&&(this.emitMicrophoneAvailabilityChange(!1),this.disableRecognition())}},{key:"onRecognitionDisconnect",value:function(){this.onStopListening(),this.listening=!1,this.pauseAfterDisconnect?this.emitListeningChange(!1):this.recognition&&(this.recognition.continuous?this.startListening({continuous:this.recognition.continuous}):this.emitListeningChange(!1)),this.pauseAfterDisconnect=!1}},{key:"updateTranscript",value:function(e){var t=e.results,r=e.resultIndex,s=void 0===r?t.length-1:r;this.interimTranscript="",this.finalTranscript="";for(var i=s;i<t.length;++i)t[i].isFinal&&(!(0,n.default)()||t[i][0].confidence>0)?this.updateFinalTranscript(t[i][0].transcript):this.interimTranscript=(0,a.concatTranscripts)(this.interimTranscript,t[i][0].transcript);var o=!1;""===this.interimTranscript&&""!==this.finalTranscript?(this.previousResultWasFinalOnly&&(o=!0),this.previousResultWasFinalOnly=!0):this.previousResultWasFinalOnly=!1,o||this.emitTranscriptChange(this.interimTranscript,this.finalTranscript)}},{key:"updateFinalTranscript",value:function(e){this.finalTranscript=(0,a.concatTranscripts)(this.finalTranscript,e)}},{key:"resetTranscript",value:function(){this.disconnect("RESET")}},{key:"startListening",value:(e=o(/*#__PURE__*/regeneratorRuntime.mark(function e(){var t,r,n,a,s,i,o=arguments;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=void 0!==(r=(t=o.length>0&&void 0!==o[0]?o[0]:{}).continuous)&&r,a=t.language,this.recognition){e.next=3;break}return e.abrupt("return");case 3:if(s=n!==this.recognition.continuous,i=a&&a!==this.recognition.lang,!(s||i)){e.next=11;break}if(!this.listening){e.next=9;break}return e.next=9,this.stopListening();case 9:this.recognition.continuous=s?n:this.recognition.continuous,this.recognition.lang=i?a:this.recognition.lang;case 11:if(this.listening){e.next=22;break}return this.recognition.continuous||(this.resetTranscript(),this.emitClearTranscript()),e.prev=13,e.next=16,this.start();case 16:this.emitListeningChange(!0),e.next=22;break;case 19:e.prev=19,e.t0=e.catch(13),e.t0 instanceof DOMException||this.emitMicrophoneAvailabilityChange(!1);case 22:case"end":return e.stop()}},e,this,[[13,19]])})),function(){return e.apply(this,arguments)})},{key:"abortListening",value:(t=o(/*#__PURE__*/regeneratorRuntime.mark(function e(){var t=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return this.disconnect("ABORT"),this.emitListeningChange(!1),e.next=4,new Promise(function(e){t.onStopListening=e});case 4:case"end":return e.stop()}},e,this)})),function(){return t.apply(this,arguments)})},{key:"stopListening",value:(r=o(/*#__PURE__*/regeneratorRuntime.mark(function e(){var t=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return this.disconnect("STOP"),this.emitListeningChange(!1),e.next=4,new Promise(function(e){t.onStopListening=e});case 4:case"end":return e.stop()}},e,this)})),function(){return r.apply(this,arguments)})},{key:"getRecognition",value:function(){return this.recognition}},{key:"start",value:(i=o(/*#__PURE__*/regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(this.recognition&&!this.listening)){e.next=4;break}return e.next=3,this.recognition.start();case 3:this.listening=!0;case 4:case"end":return e.stop()}},e,this)})),function(){return i.apply(this,arguments)})},{key:"stop",value:function(){this.recognition&&this.listening&&(this.recognition.stop(),this.listening=!1)}},{key:"abort",value:function(){this.recognition&&this.listening&&(this.recognition.abort(),this.listening=!1)}}],l(d.prototype,u),c&&l(d,c),d}();e.exports.default=u}),R("fOfvk",function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.default=void 0,e.exports.default=function(){return/(android)/i.test("undefined"!=typeof navigator?navigator.userAgent:"")}}),R("cjtvA",function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.default=e.exports.isNative=void 0;var r="undefined"!=typeof window&&(window.SpeechRecognition||window.webkitSpeechRecognition||window.mozSpeechRecognition||window.msSpeechRecognition||window.oSpeechRecognition);e.exports.isNative=function(e){return e===r},e.exports.default=r});var _=A("ayMG0"),O=A("acw62"),P={};c(P,"createRoot",()=>it,e=>it=e),c(P,"hydrateRoot",()=>ir,e=>ir=e);var $={};!// DCE check should happen before ReactDOM bundle executes so that
// DevTools can report bad minification during injection.
function e(){/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{// Verify that the code above has been dead code eliminated (DCE'd).
__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){// DevTools shouldn't crash React, no matter what.
// We should still report in case we break this code.
console.error(e)}}(),it=($=A("Xw6Mv")).createRoot,ir=$.hydrateRoot;var _=A("ayMG0"),O=A("acw62");A("lzNIT");var D=A("aphAM"),M=A("lzNIT"),F=A("hfliI"),L={};L=A("6VZtt");let j=// Default to a dummy "batch" implementation that just runs the callback
function(e){e()};// Allow injecting another batching function later
const B=()=>j;var O=(A("acw62"),A("acw62"),A("acw62"));const z=Symbol.for("react-redux-context"),V="undefined"!=typeof globalThis?globalThis:/* fall back to a per-module scope (pre-8.1 behaviour) if `globalThis` is not available */{},G=/*#__PURE__*/function(){var e;if(!O.createContext)return{};let t=null!=(e=V[z])?e:V[z]=new Map,r=t.get(O.createContext);return r||(r=O.createContext(null),t.set(O.createContext,r)),r}();function U(e=G){return function(){let t=(0,O.useContext)(e);return t}}const W=/*#__PURE__*/U();let q=()=>{throw Error("uSES not initialized!")};const H=(e,t)=>e===t,K=/*#__PURE__*/function(e=G){let t=e===G?W:U(e);return function(e,r={}){let{equalityFn:n=H,stabilityCheck:a,noopCheck:s}="function"==typeof r?{equalityFn:r}:r,{store:i,subscription:o,getServerState:l,stabilityCheck:u,noopCheck:c}=t();(0,O.useRef)(!0);let d=(0,O.useCallback)({[e.name](t){let r=e(t);return r}}[e.name],[e,u,a]),p=q(o.addNestedSub,i.getState,l||i.getState,d,n);return(0,O.useDebugValue)(p),p}}();var X={};X=A("dNL7g");/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */var Z={};Z[X.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},Z[X.Memo]={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0};var O=A("acw62");A("9cCWX");const Q={notify(){},get:()=>[]};var O=A("acw62");const Y=!!("undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement),J=Y?O.useLayoutEffect:O.useEffect;var O=A("acw62"),ee=function({store:e,context:t,children:r,serverState:n,stabilityCheck:a="once",noopCheck:s="once"}){let i=O.useMemo(()=>{let t=function(e,t){let r;let n=Q,a=0,s=!1;// Reasons to keep the subscription active
function i(){u.onStateChange&&u.onStateChange()}function o(){a++,r||(r=t?t.addNestedSub(i):e.subscribe(i),n=// well as nesting subscriptions of descendant components, so that we can ensure the
// ancestor components re-render before descendants
function(){let e=B(),t=null,r=null;return{clear(){t=null,r=null},notify(){e(()=>{let e=t;for(;e;)e.callback(),e=e.next})},get(){let e=[],r=t;for(;r;)e.push(r),r=r.next;return e},subscribe(e){let n=!0,a=r={callback:e,next:null,prev:r};return a.prev?a.prev.next=a:t=a,function(){n&&null!==t&&(n=!1,a.next?a.next.prev=a.prev:r=a.prev,a.prev?a.prev.next=a.next:t=a.next)}}}}())}function l(){a--,r&&0===a&&(r(),r=void 0,n.clear(),n=Q)}let u={addNestedSub:function(e){o();let t=n.subscribe(e),r=!1;// cleanup nested sub
return()=>{r||(r=!0,t(),l())}},notifyNestedSubs:function(){n.notify()},handleChangeWrapper:i,isSubscribed:function(){return s},trySubscribe:function(){s||(s=!0,o())},tryUnsubscribe:function(){s&&(s=!1,l())},getListeners:()=>n};return u}(e);return{store:e,subscription:t,getServerState:n?()=>n:void 0,stabilityCheck:a,noopCheck:s}},[e,n,a,s]),o=O.useMemo(()=>e.getState(),[e]);return J(()=>{let{subscription:t}=i;return t.onStateChange=t.notifyNestedSubs,t.trySubscribe(),o!==e.getState()&&t.notifyNestedSubs(),()=>{t.tryUnsubscribe(),t.onStateChange=void 0}},[i,o]),/*#__PURE__*/O.createElement((t||G).Provider,{value:i},r)};function et(e=G){let t=e===G?W:U(e);return function(){let{store:e}=t();// @ts-ignore
return e}}const er=/*#__PURE__*/et(),en=/*#__PURE__*/function(e=G){let t=e===G?er:et(e);return function(){let e=t();// @ts-ignore
return e.dispatch}}();q=L.useSyncExternalStoreWithSelector,F.useSyncExternalStore,j=$.unstable_batchedUpdates;/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
 */var ea=A("hPtJY");/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const es=function(e){// TODO(user): Use native implementations if/when available
let t=[],r=0;for(let n=0;n<e.length;n++){let a=e.charCodeAt(n);a<128?t[r++]=a:(a<2048?t[r++]=a>>6|192:((64512&a)==55296&&n+1<e.length&&(64512&e.charCodeAt(n+1))==56320?(// Surrogate Pair
a=65536+((1023&a)<<10)+(1023&e.charCodeAt(++n)),t[r++]=a>>18|240,t[r++]=a>>12&63|128):t[r++]=a>>12|224,t[r++]=a>>6&63|128),t[r++]=63&a|128)}return t},ei=function(e){// TODO(user): Use native implementations if/when available
let t=[],r=0,n=0;for(;r<e.length;){let a=e[r++];if(a<128)t[n++]=String.fromCharCode(a);else if(a>191&&a<224){let s=e[r++];t[n++]=String.fromCharCode((31&a)<<6|63&s)}else if(a>239&&a<365){// Surrogate Pair
let s=e[r++],i=e[r++],o=e[r++],l=((7&a)<<18|(63&s)<<12|(63&i)<<6|63&o)-65536;t[n++]=String.fromCharCode(55296+(l>>10)),t[n++]=String.fromCharCode(56320+(1023&l))}else{let s=e[r++],i=e[r++];t[n++]=String.fromCharCode((15&a)<<12|(63&s)<<6|63&i)}}return t.join("")},eo={/**
     * Maps bytes to characters.
     */byteToCharMap_:null,/**
     * Maps characters to bytes.
     */charToByteMap_:null,/**
     * Maps bytes to websafe characters.
     * @private
     */byteToCharMapWebSafe_:null,/**
     * Maps websafe characters to bytes.
     * @private
     */charToByteMapWebSafe_:null,/**
     * Our default alphabet, shared between
     * ENCODED_VALS and ENCODED_VALS_WEBSAFE
     */ENCODED_VALS_BASE:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",/**
     * Our default alphabet. Value 64 (=) is special; it means "nothing."
     */get ENCODED_VALS(){return this.ENCODED_VALS_BASE+"+/="},/**
     * Our websafe alphabet.
     */get ENCODED_VALS_WEBSAFE(){return this.ENCODED_VALS_BASE+"-_."},/**
     * Whether this browser supports the atob and btoa functions. This extension
     * started at Mozilla but is now implemented by many browsers. We use the
     * ASSUME_* variables to avoid pulling in the full useragent detection library
     * but still allowing the standard per-browser compilations.
     *
     */HAS_NATIVE_SUPPORT:"function"==typeof atob,/**
     * Base64-encode an array of bytes.
     *
     * @param input An array of bytes (numbers with
     *     value in [0, 255]) to encode.
     * @param webSafe Boolean indicating we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */encodeByteArray(e,t){if(!Array.isArray(e))throw Error("encodeByteArray takes an array as a parameter");this.init_();let r=t?this.byteToCharMapWebSafe_:this.byteToCharMap_,n=[];for(let t=0;t<e.length;t+=3){let a=e[t],s=t+1<e.length,i=s?e[t+1]:0,o=t+2<e.length,l=o?e[t+2]:0,u=a>>2,c=(3&a)<<4|i>>4,d=(15&i)<<2|l>>6,p=63&l;o||(p=64,s||(d=64)),n.push(r[u],r[c],r[d],r[p])}return n.join("")},/**
     * Base64-encode a string.
     *
     * @param input A string to encode.
     * @param webSafe If true, we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */encodeString(e,t){return(// Shortcut for Mozilla browsers that implement
// a native base64 encoder in the form of "btoa/atob"
this.HAS_NATIVE_SUPPORT&&!t?btoa(e):this.encodeByteArray(es(e),t))},/**
     * Base64-decode a string.
     *
     * @param input to decode.
     * @param webSafe True if we should use the
     *     alternative alphabet.
     * @return string representing the decoded value.
     */decodeString(e,t){return(// Shortcut for Mozilla browsers that implement
// a native base64 encoder in the form of "btoa/atob"
this.HAS_NATIVE_SUPPORT&&!t?atob(e):ei(this.decodeStringToByteArray(e,t)))},/**
     * Base64-decode a string.
     *
     * In base-64 decoding, groups of four characters are converted into three
     * bytes.  If the encoder did not apply padding, the input length may not
     * be a multiple of 4.
     *
     * In this case, the last group will have fewer than 4 characters, and
     * padding will be inferred.  If the group has one or two characters, it decodes
     * to one byte.  If the group has three characters, it decodes to two bytes.
     *
     * @param input Input to decode.
     * @param webSafe True if we should use the web-safe alphabet.
     * @return bytes representing the decoded value.
     */decodeStringToByteArray(e,t){this.init_();let r=t?this.charToByteMapWebSafe_:this.charToByteMap_,n=[];for(let t=0;t<e.length;){let a=r[e.charAt(t++)],s=t<e.length,i=s?r[e.charAt(t)]:0;++t;let o=t<e.length,l=o?r[e.charAt(t)]:64;++t;let u=t<e.length,c=u?r[e.charAt(t)]:64;if(++t,null==a||null==i||null==l||null==c)throw new el;let d=a<<2|i>>4;if(n.push(d),64!==l){let e=i<<4&240|l>>2;if(n.push(e),64!==c){let e=l<<6&192|c;n.push(e)}}}return n},/**
     * Lazy static initialization function. Called before
     * accessing any of the static map variables.
     * @private
     */init_(){if(!this.byteToCharMap_){this.byteToCharMap_={},this.charToByteMap_={},this.byteToCharMapWebSafe_={},this.charToByteMapWebSafe_={};// We want quick mappings back and forth, so we precompute two maps.
for(let e=0;e<this.ENCODED_VALS.length;e++)this.byteToCharMap_[e]=this.ENCODED_VALS.charAt(e),this.charToByteMap_[this.byteToCharMap_[e]]=e,this.byteToCharMapWebSafe_[e]=this.ENCODED_VALS_WEBSAFE.charAt(e),this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[e]]=e,e>=this.ENCODED_VALS_BASE.length&&(this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(e)]=e,this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(e)]=e)}}};/**
 * An error encountered while decoding base64 string.
 */class el extends Error{constructor(){super(...arguments),this.name="DecodeBase64StringError"}}/**
 * URL-safe base64 encoding
 */const eu=function(e){let t=es(e);return eo.encodeByteArray(t,!0)},ec=function(e){// Use base64url encoding and remove padding in the end (dot characters).
return eu(e).replace(/\./g,"")},ed=function(e){try{return eo.decodeString(e,!0)}catch(e){console.error("base64Decode failed: ",e)}return null},ep=()=>/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Polyfill for `globalThis` object.
 * @returns the `globalThis` object for the given environment.
 * @public
 */(function(){if("undefined"!=typeof self)return self;if("undefined"!=typeof window)return window;if(void 0!==T)return T;throw Error("Unable to locate global object.")})().__FIREBASE_DEFAULTS__,eh=()=>{if(void 0===ea||void 0===ea.env)return;let e=void 0;if(e)return JSON.parse(e)},ef=()=>{let e;if("undefined"==typeof document)return;try{e=document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/)}catch(e){// Some environments such as Angular Universal SSR have a
// `document` object but error on accessing `document.cookie`.
return}let t=e&&ed(e[1]);return t&&JSON.parse(t)},em=()=>{try{return ep()||eh()||ef()}catch(e){/**
         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due
         * to any environment case we have not accounted for. Log to
         * info instead of swallowing so we can find these unknown cases
         * and add paths for them if needed.
         */console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);return}},eg=e=>{var t,r;return null===(r=null===(t=em())||void 0===t?void 0:t.emulatorHosts)||void 0===r?void 0:r[e]},ey=()=>{var e;return null===(e=em())||void 0===e?void 0:e.config},eb=e=>{var t;return null===(t=em())||void 0===t?void 0:t[`_${e}`]};/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class ev{constructor(){this.reject=()=>{},this.resolve=()=>{},this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}/**
     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
     * and returns a node-style callback which will resolve or reject the Deferred's promise.
     */wrapCallback(e){return(t,r)=>{t?this.reject(t):this.resolve(r),"function"==typeof e&&(// Attaching noop handler just in case developer wasn't expecting
// promises
this.promise.catch(()=>{}),1===e.length?e(t):e(t,r))}}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Returns navigator.userAgent string or '' if it's not defined.
 * @return user agent string
 */function ex(){return"undefined"!=typeof navigator&&"string"==typeof navigator.userAgent?navigator.userAgent:""}function ew(){let e="object"==typeof chrome?chrome.runtime:"object"==typeof browser?browser.runtime:void 0;return"object"==typeof e&&void 0!==e.id}/**
 * This method checks if indexedDB is supported by current browser/service worker context
 * @return true if indexedDB is supported by current browser/service worker context
 */function ek(){try{return"object"==typeof indexedDB}catch(e){return!1}}/**
 * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject
 * if errors occur during the database open operation.
 *
 * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox
 * private browsing)
 */function eS(){return new Promise((e,t)=>{try{let r=!0,n="validate-browser-context-for-indexeddb-analytics-module",a=self.indexedDB.open(n);a.onsuccess=()=>{a.result.close(),r||self.indexedDB.deleteDatabase(n),e(!0)},a.onupgradeneeded=()=>{r=!1},a.onerror=()=>{var e;t((null===(e=a.error)||void 0===e?void 0:e.message)||"")}}catch(e){t(e)}})}// Based on code from:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types
class eN extends Error{constructor(/** The error code for this error. */e,t,/** Custom data for this error. */r){super(t),this.code=e,this.customData=r,/** The custom name for all FirebaseErrors. */this.name="FirebaseError",// Fix For ES5
// https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
Object.setPrototypeOf(this,eN.prototype),Error.captureStackTrace&&Error.captureStackTrace(this,eT.prototype.create)}}class eT{constructor(e,t,r){this.service=e,this.serviceName=t,this.errors=r}create(e,...t){let r=t[0]||{},n=`${this.service}/${e}`,a=this.errors[e],s=a?a.replace(eI,(e,t)=>{let n=r[t];return null!=n?String(n):`<${t}?>`}):"Error",i=`${this.serviceName}: ${s} (${n}).`,o=new eN(n,i,r);return o}}const eI=/\{\$([^}]+)}/g;/**
 * Deep equal two objects. Support Arrays and Objects.
 */function eC(e,t){if(e===t)return!0;let r=Object.keys(e),n=Object.keys(t);for(let a of r){if(!n.includes(a))return!1;let r=e[a],s=t[a];if(eE(r)&&eE(s)){if(!eC(r,s))return!1}else if(r!==s)return!1}for(let e of n)if(!r.includes(e))return!1;return!0}function eE(e){return null!==e&&"object"==typeof e}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a
 * params object (e.g. {arg: 'val', arg2: 'val2'})
 * Note: You must prepend it with ? when adding it to a URL.
 */function eA(e){let t=[];for(let[r,n]of Object.entries(e))Array.isArray(n)?n.forEach(e=>{t.push(encodeURIComponent(r)+"="+encodeURIComponent(e))}):t.push(encodeURIComponent(r)+"="+encodeURIComponent(n));return t.length?"&"+t.join("&"):""}/**
 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object
 * (e.g. {arg: 'val', arg2: 'val2'})
 */function eR(e){let t={},r=e.replace(/^\?/,"").split("&");return r.forEach(e=>{if(e){let[r,n]=e.split("=");t[decodeURIComponent(r)]=decodeURIComponent(n)}}),t}/**
 * Extract the query string part of a URL, including the leading question mark (if present).
 */function e_(e){let t=e.indexOf("?");if(!t)return"";let r=e.indexOf("#",t);return e.substring(t,r>0?r:void 0)}/**
 * Implement fan-out for any number of Observers attached via a subscribe
 * function.
 */class eO{/**
     * @param executor Function which can make calls to a single Observer
     *     as a proxy.
     * @param onNoObservers Callback when count of Observers goes to zero.
     */constructor(e,t){this.observers=[],this.unsubscribes=[],this.observerCount=0,// Micro-task scheduling by calling task.then().
this.task=Promise.resolve(),this.finalized=!1,this.onNoObservers=t,// Call the executor asynchronously so subscribers that are called
// synchronously after the creation of the subscribe function
// can still receive the very first value generated in the executor.
this.task.then(()=>{e(this)}).catch(e=>{this.error(e)})}next(e){this.forEachObserver(t=>{t.next(e)})}error(e){this.forEachObserver(t=>{t.error(e)}),this.close(e)}complete(){this.forEachObserver(e=>{e.complete()}),this.close()}/**
     * Subscribe function that can be used to add an Observer to the fan-out list.
     *
     * - We require that no event is sent to a subscriber sychronously to their
     *   call to subscribe().
     */subscribe(e,t,r){let n;if(void 0===e&&void 0===t&&void 0===r)throw Error("Missing Observer.");void 0===(n=!/**
 * Return true if the object passed in implements any of the named methods.
 */function(e,t){if("object"!=typeof e||null===e)return!1;for(let r of t)if(r in e&&"function"==typeof e[r])return!0;return!1}(e,["next","error","complete"])?{next:e,error:t,complete:r}:e).next&&(n.next=eP),void 0===n.error&&(n.error=eP),void 0===n.complete&&(n.complete=eP);let a=this.unsubscribeOne.bind(this,this.observers.length);return this.finalized&&this.task.then(()=>{try{this.finalError?n.error(this.finalError):n.complete()}catch(e){// nothing
}}),this.observers.push(n),a}// Unsubscribe is synchronous - we guarantee that no events are sent to
// any unsubscribed Observer.
unsubscribeOne(e){void 0!==this.observers&&void 0!==this.observers[e]&&(delete this.observers[e],this.observerCount-=1,0===this.observerCount&&void 0!==this.onNoObservers&&this.onNoObservers(this))}forEachObserver(e){if(!this.finalized)// Since sendOne calls asynchronously - there is no chance that
// this.observers will become undefined.
for(let t=0;t<this.observers.length;t++)this.sendOne(t,e)}// Call the Observer via one of it's callback function. We are careful to
// confirm that the observe has not been unsubscribed since this asynchronous
// function had been queued.
sendOne(e,t){// Execute the callback asynchronously
// eslint-disable-next-line @typescript-eslint/no-floating-promises
this.task.then(()=>{if(void 0!==this.observers&&void 0!==this.observers[e])try{t(this.observers[e])}catch(e){// Ignore exceptions raised in Observers or missing methods of an
// Observer.
// Log error to console. b/31404806
"undefined"!=typeof console&&console.error&&console.error(e)}})}close(e){this.finalized||(this.finalized=!0,void 0!==e&&(this.finalError=e),// Proxy is no longer needed - garbage collect references
// eslint-disable-next-line @typescript-eslint/no-floating-promises
this.task.then(()=>{this.observers=void 0,this.onNoObservers=void 0}))}}function eP(){// do nothing
}/**
 * Based on the backoff method from
 * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.
 * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.
 */function e$(e,t=1e3,r=2){// Calculates an exponentially increasing value.
// Deviation: calculates value from count and a constant interval, so we only need to save value
// and count to restore state.
let n=t*Math.pow(r,e),a=Math.round(// Deviation: changes multiplication order to improve readability.
.5*n*// A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines
// if we add or subtract.
(Math.random()-.5)*2);// Limits backoff to max to avoid effectively permanent backoff.
return Math.min(144e5,n+a)}/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function eD(e){return e&&e._delegate?e._delegate:e}/**
 * Component for service name T, e.g. `auth`, `auth-internal`
 */class eM{/**
     *
     * @param name The public service name, e.g. app, auth, firestore, database
     * @param instanceFactory Service factory responsible for creating the public interface
     * @param type whether the service provided by the component is public or private
     */constructor(e,t,r){this.name=e,this.instanceFactory=t,this.type=r,this.multipleInstances=!1,/**
         * Properties to be added to the service namespace
         */this.serviceProps={},this.instantiationMode="LAZY"/* InstantiationMode.LAZY */,this.onInstanceCreated=null}setInstantiationMode(e){return this.instantiationMode=e,this}setMultipleInstances(e){return this.multipleInstances=e,this}setServiceProps(e){return this.serviceProps=e,this}setInstanceCreatedCallback(e){return this.onInstanceCreated=e,this}}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const eF="[DEFAULT]";/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Provider for instance for service name T, e.g. 'auth', 'auth-internal'
 * NameServiceMapping[T] is an alias for the type of the instance
 */class eL{constructor(e,t){this.name=e,this.container=t,this.component=null,this.instances=new Map,this.instancesDeferred=new Map,this.instancesOptions=new Map,this.onInitCallbacks=new Map}/**
     * @param identifier A provider can provide mulitple instances of a service
     * if this.component.multipleInstances is true.
     */get(e){// if multipleInstances is not supported, use the default name
let t=this.normalizeInstanceIdentifier(e);if(!this.instancesDeferred.has(t)){let e=new ev;if(this.instancesDeferred.set(t,e),this.isInitialized(t)||this.shouldAutoInitialize())try{let r=this.getOrInitializeService({instanceIdentifier:t});r&&e.resolve(r)}catch(e){// when the instance factory throws an exception during get(), it should not cause
// a fatal error. We just return the unresolved promise in this case.
}}return this.instancesDeferred.get(t).promise}getImmediate(e){var t;// if multipleInstances is not supported, use the default name
let r=this.normalizeInstanceIdentifier(null==e?void 0:e.identifier),n=null!==(t=null==e?void 0:e.optional)&&void 0!==t&&t;if(this.isInitialized(r)||this.shouldAutoInitialize())try{return this.getOrInitializeService({instanceIdentifier:r})}catch(e){if(n)return null;throw e}else{// In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw
if(n)return null;throw Error(`Service ${this.name} is not available`)}}getComponent(){return this.component}setComponent(e){if(e.name!==this.name)throw Error(`Mismatching Component ${e.name} for Provider ${this.name}.`);if(this.component)throw Error(`Component for ${this.name} has already been provided`);// return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)
if(this.component=e,this.shouldAutoInitialize()){// if the service is eager, initialize the default instance
if("EAGER"/* InstantiationMode.EAGER */===e.instantiationMode)try{this.getOrInitializeService({instanceIdentifier:eF})}catch(e){// when the instance factory for an eager Component throws an exception during the eager
// initialization, it should not cause a fatal error.
// TODO: Investigate if we need to make it configurable, because some component may want to cause
// a fatal error in this case?
}// Create service instances for the pending promises and resolve them
// NOTE: if this.multipleInstances is false, only the default instance will be created
// and all promises with resolve with it regardless of the identifier.
for(let[e,t]of this.instancesDeferred.entries()){let r=this.normalizeInstanceIdentifier(e);try{// `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.
let e=this.getOrInitializeService({instanceIdentifier:r});t.resolve(e)}catch(e){// when the instance factory throws an exception, it should not cause
// a fatal error. We just leave the promise unresolved.
}}}}clearInstance(e=eF){this.instancesDeferred.delete(e),this.instancesOptions.delete(e),this.instances.delete(e)}// app.delete() will call this method on every provider to delete the services
// TODO: should we mark the provider as deleted?
async delete(){let e=Array.from(this.instances.values());await Promise.all([...e.filter(e=>"INTERNAL"in e)// legacy services
// eslint-disable-next-line @typescript-eslint/no-explicit-any
.map(e=>e.INTERNAL.delete()),...e.filter(e=>"_delete"in e)// modularized services
// eslint-disable-next-line @typescript-eslint/no-explicit-any
.map(e=>e._delete())])}isComponentSet(){return null!=this.component}isInitialized(e=eF){return this.instances.has(e)}getOptions(e=eF){return this.instancesOptions.get(e)||{}}initialize(e={}){let{options:t={}}=e,r=this.normalizeInstanceIdentifier(e.instanceIdentifier);if(this.isInitialized(r))throw Error(`${this.name}(${r}) has already been initialized`);if(!this.isComponentSet())throw Error(`Component ${this.name} has not been registered yet`);let n=this.getOrInitializeService({instanceIdentifier:r,options:t});// resolve any pending promise waiting for the service instance
for(let[e,t]of this.instancesDeferred.entries()){let a=this.normalizeInstanceIdentifier(e);r===a&&t.resolve(n)}return n}/**
     *
     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().
     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.
     *
     * @param identifier An optional instance identifier
     * @returns a function to unregister the callback
     */onInit(e,t){var r;let n=this.normalizeInstanceIdentifier(t),a=null!==(r=this.onInitCallbacks.get(n))&&void 0!==r?r:new Set;a.add(e),this.onInitCallbacks.set(n,a);let s=this.instances.get(n);return s&&e(s,n),()=>{a.delete(e)}}/**
     * Invoke onInit callbacks synchronously
     * @param instance the service instance`
     */invokeOnInitCallbacks(e,t){let r=this.onInitCallbacks.get(t);if(r)for(let n of r)try{n(e,t)}catch(e){// ignore errors in the onInit callback
}}getOrInitializeService({instanceIdentifier:e,options:t={}}){let r=this.instances.get(e);if(!r&&this.component&&(r=this.component.instanceFactory(this.container,{instanceIdentifier:e===eF?void 0:e,options:t}),this.instances.set(e,r),this.instancesOptions.set(e,t),/**
             * Invoke onInit listeners.
             * Note this.component.onInstanceCreated is different, which is used by the component creator,
             * while onInit listeners are registered by consumers of the provider.
             */this.invokeOnInitCallbacks(r,e),this.component.onInstanceCreated))try{this.component.onInstanceCreated(this.container,e,r)}catch(e){// ignore errors in the onInstanceCreatedCallback
}return r||null}normalizeInstanceIdentifier(e=eF){return this.component?this.component.multipleInstances?e:eF:e// assume multiple instances are supported before the component is provided.
}shouldAutoInitialize(){return!!this.component&&"EXPLICIT"/* InstantiationMode.EXPLICIT */!==this.component.instantiationMode}}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`
 */class ej{constructor(e){this.name=e,this.providers=new Map}/**
     *
     * @param component Component being added
     * @param overwrite When a component with the same name has already been registered,
     * if overwrite is true: overwrite the existing component with the new component and create a new
     * provider with the new component. It can be useful in tests where you want to use different mocks
     * for different tests.
     * if overwrite is false: throw an exception
     */addComponent(e){let t=this.getProvider(e.name);if(t.isComponentSet())throw Error(`Component ${e.name} has already been registered with ${this.name}`);t.setComponent(e)}addOrOverwriteComponent(e){let t=this.getProvider(e.name);t.isComponentSet()&&this.providers.delete(e.name),this.addComponent(e)}/**
     * getProvider provides a type safe interface where it can only be called with a field name
     * present in NameServiceMapping interface.
     *
     * Firebase SDKs providing services should extend NameServiceMapping interface to register
     * themselves.
     */getProvider(e){if(this.providers.has(e))return this.providers.get(e);// create a Provider for a service that hasn't registered with Firebase
let t=new eL(e,this);return this.providers.set(e,t),t}getProviders(){return Array.from(this.providers.values())}}/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A container for all of the Logger instances
 */const eB=[];(s9=ia||(ia={}))[s9.DEBUG=0]="DEBUG",s9[s9.VERBOSE=1]="VERBOSE",s9[s9.INFO=2]="INFO",s9[s9.WARN=3]="WARN",s9[s9.ERROR=4]="ERROR",s9[s9.SILENT=5]="SILENT";const ez={debug:ia.DEBUG,verbose:ia.VERBOSE,info:ia.INFO,warn:ia.WARN,error:ia.ERROR,silent:ia.SILENT},eV=ia.INFO,eG={[ia.DEBUG]:"log",[ia.VERBOSE]:"log",[ia.INFO]:"info",[ia.WARN]:"warn",[ia.ERROR]:"error"},eU=(e,t,...r)=>{if(t<e.logLevel)return;let n=new Date().toISOString(),a=eG[t];if(a)console[a](`[${n}]  ${e.name}:`,...r);else throw Error(`Attempted to log a message with an invalid logType (value: ${t})`)};class eW{/**
     * Gives you an instance of a Logger to capture messages according to
     * Firebase's logging scheme.
     *
     * @param name The name that the logs will be associated with
     */constructor(e){this.name=e,/**
         * The log level of the given Logger instance.
         */this._logLevel=eV,/**
         * The main (internal) log handler for the Logger instance.
         * Can be set to a new function in internal package code but not by user.
         */this._logHandler=eU,/**
         * The optional, additional, user-defined log handler for the Logger instance.
         */this._userLogHandler=null,/**
         * Capture the current instance for later use
         */eB.push(this)}get logLevel(){return this._logLevel}set logLevel(e){if(!(e in ia))throw TypeError(`Invalid value "${e}" assigned to \`logLevel\``);this._logLevel=e}// Workaround for setter/getter having to be the same type.
setLogLevel(e){this._logLevel="string"==typeof e?ez[e]:e}get logHandler(){return this._logHandler}set logHandler(e){if("function"!=typeof e)throw TypeError("Value assigned to `logHandler` must be a function");this._logHandler=e}get userLogHandler(){return this._userLogHandler}set userLogHandler(e){this._userLogHandler=e}/**
     * The functions below are all based on the `console` interface
     */debug(...e){this._userLogHandler&&this._userLogHandler(this,ia.DEBUG,...e),this._logHandler(this,ia.DEBUG,...e)}log(...e){this._userLogHandler&&this._userLogHandler(this,ia.VERBOSE,...e),this._logHandler(this,ia.VERBOSE,...e)}info(...e){this._userLogHandler&&this._userLogHandler(this,ia.INFO,...e),this._logHandler(this,ia.INFO,...e)}warn(...e){this._userLogHandler&&this._userLogHandler(this,ia.WARN,...e),this._logHandler(this,ia.WARN,...e)}error(...e){this._userLogHandler&&this._userLogHandler(this,ia.ERROR,...e),this._logHandler(this,ia.ERROR,...e)}}const eq=(e,t)=>t.some(t=>e instanceof t),eH=new WeakMap,eK=new WeakMap,eX=new WeakMap,eZ=new WeakMap,eQ=new WeakMap;let eY={get(e,t,r){if(e instanceof IDBTransaction){// Special handling for transaction.done.
if("done"===t)return eK.get(e);// Polyfill for objectStoreNames because of Edge.
if("objectStoreNames"===t)return e.objectStoreNames||eX.get(e);// Make tx.store return the only store in the transaction, or undefined if there are many.
if("store"===t)return r.objectStoreNames[1]?void 0:r.objectStore(r.objectStoreNames[0])}// Else transform whatever we get back.
return eJ(e[t])},set:(e,t,r)=>(e[t]=r,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function eJ(r){var n;// We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because
// IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.
if(r instanceof IDBRequest)return function(e){let t=new Promise((t,r)=>{let n=()=>{e.removeEventListener("success",a),e.removeEventListener("error",s)},a=()=>{t(eJ(e.result)),n()},s=()=>{r(e.error),n()};e.addEventListener("success",a),e.addEventListener("error",s)});return t.then(t=>{// Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval
// (see wrapFunction).
t instanceof IDBCursor&&eH.set(t,e);// Catching to avoid "Uncaught Promise exceptions"
}).catch(()=>{}),// This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This
// is because we create many promises from a single IDBRequest.
eQ.set(t,e),t}(r);// If we've already transformed this value before, reuse the transformed value.
// This is faster, but it also provides object equality.
if(eZ.has(r))return eZ.get(r);let a="function"==typeof(n=r)?// Due to expected object equality (which is enforced by the caching in `wrap`), we
// only create one new func per func.
// Edge doesn't support objectStoreNames (booo), so we polyfill it here.
n!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(t||(t=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(n)?function(...e){return(// Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use
// the original object.
n.apply(e0(this),e),eJ(eH.get(this)))}:function(...e){// Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use
// the original object.
return eJ(n.apply(e0(this),e))}:function(e,...t){let r=n.call(e0(this),e,...t);return eX.set(r,e.sort?e.sort():[e]),eJ(r)}:(n instanceof IDBTransaction&&function(e){// Early bail if we've already created a done promise for this transaction.
if(eK.has(e))return;let t=new Promise((t,r)=>{let n=()=>{e.removeEventListener("complete",a),e.removeEventListener("error",s),e.removeEventListener("abort",s)},a=()=>{t(),n()},s=()=>{r(e.error||new DOMException("AbortError","AbortError")),n()};e.addEventListener("complete",a),e.addEventListener("error",s),e.addEventListener("abort",s)});// Cache it for later retrieval.
eK.set(e,t)}(n),eq(n,e||(e=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])))?new Proxy(n,eY):n;return a!==r&&(eZ.set(r,a),eQ.set(a,r)),a}const e0=e=>eQ.get(e);/**
 * Open a database.
 *
 * @param name Name of the database.
 * @param version Schema version.
 * @param callbacks Additional callbacks.
 */function e1(e,t,{blocked:r,upgrade:n,blocking:a,terminated:s}={}){let i=indexedDB.open(e,t),o=eJ(i);return n&&i.addEventListener("upgradeneeded",e=>{n(eJ(i.result),e.oldVersion,e.newVersion,eJ(i.transaction),e)}),r&&i.addEventListener("blocked",e=>r(e.oldVersion,e.newVersion,e)),o.then(e=>{s&&e.addEventListener("close",()=>s()),a&&e.addEventListener("versionchange",e=>a(e.oldVersion,e.newVersion,e))}).catch(()=>{}),o}const e2=["get","getKey","getAll","getAllKeys","count"],e4=["put","add","delete","clear"],e3=new Map;function e8(e,t){if(!(e instanceof IDBDatabase&&!(t in e)&&"string"==typeof t))return;if(e3.get(t))return e3.get(t);let r=t.replace(/FromIndex$/,""),n=t!==r,a=e4.includes(r);if(!(r in(n?IDBIndex:IDBObjectStore).prototype)||!(a||e2.includes(r)))return;let s=async function(e,...t){// isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(
let s=this.transaction(e,a?"readwrite":"readonly"),i=s.store;// Must reject if op rejects.
// If it's a write operation, must reject if tx.done rejects.
// Must reject with op rejection first.
// Must resolve with op value.
// Must handle both promises (no unhandled rejections)
return n&&(i=i.index(t.shift())),(await Promise.all([i[r](...t),a&&s.done]))[0]};return e3.set(t,s),s}eY={...s5=eY,get:(e,t,r)=>e8(e,t)||s5.get(e,t,r),has:(e,t)=>!!e8(e,t)||s5.has(e,t)};/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class e6{constructor(e){this.container=e}// In initial implementation, this will be called by installations on
// auth token refresh, and installations will send this string.
getPlatformInfoString(){let e=this.container.getProviders();// Loop through providers and get library/version pairs from any that are
// version components.
return e.map(e=>{if(!/**
 *
 * @param provider check if this provider provides a VersionService
 *
 * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider
 * provides VersionService. The provider is not necessarily a 'app-version'
 * provider.
 */function(e){let t=e.getComponent();return(null==t?void 0:t.type)==="VERSION"/* ComponentType.VERSION */}(e))return null;{let t=e.getImmediate();return`${t.library}/${t.version}`}}).filter(e=>e).join(" ")}}const e5="@firebase/app",e7="0.10.5",e9=new eW("@firebase/app"),te="[DEFAULT]",tt={[e5]:"fire-core","@firebase/app-compat":"fire-core-compat","@firebase/analytics":"fire-analytics","@firebase/analytics-compat":"fire-analytics-compat","@firebase/app-check":"fire-app-check","@firebase/app-check-compat":"fire-app-check-compat","@firebase/auth":"fire-auth","@firebase/auth-compat":"fire-auth-compat","@firebase/database":"fire-rtdb","@firebase/database-compat":"fire-rtdb-compat","@firebase/functions":"fire-fn","@firebase/functions-compat":"fire-fn-compat","@firebase/installations":"fire-iid","@firebase/installations-compat":"fire-iid-compat","@firebase/messaging":"fire-fcm","@firebase/messaging-compat":"fire-fcm-compat","@firebase/performance":"fire-perf","@firebase/performance-compat":"fire-perf-compat","@firebase/remote-config":"fire-rc","@firebase/remote-config-compat":"fire-rc-compat","@firebase/storage":"fire-gcs","@firebase/storage-compat":"fire-gcs-compat","@firebase/firestore":"fire-fst","@firebase/firestore-compat":"fire-fst-compat","@firebase/vertexai-preview":"fire-vertex","fire-js":"fire-js",firebase:"fire-js-all"},tr=new Map,tn=new Map,ta=new Map;/**
 * @param component - the component being added to this app's container
 *
 * @internal
 */function ts(e,t){try{e.container.addComponent(t)}catch(r){e9.debug(`Component ${t.name} failed to register with FirebaseApp ${e.name}`,r)}}/**
 *
 * @param component - the component to register
 * @returns whether or not the component is registered successfully
 *
 * @internal
 */function ti(e){let t=e.name;if(ta.has(t))return e9.debug(`There were multiple attempts to register component ${t}.`),!1;// add the component to existing app instances
for(let r of(ta.set(t,e),tr.values()))ts(r,e);for(let t of tn.values())ts(t,e);return!0}/**
 *
 * @param app - FirebaseApp instance
 * @param name - service name
 *
 * @returns the provider for the service with the matching name
 *
 * @internal
 */function to(e,t){let r=e.container.getProvider("heartbeat").getImmediate({optional:!0});return r&&r.triggerHeartbeat(),e.container.getProvider(t)}/**
 *
 * @param obj - an object of type FirebaseApp.
 *
 * @returns true if the provided object is of type FirebaseServerAppImpl.
 *
 * @internal
 */function tl(e){return void 0!==e.settings}const tu=new eT("app","Firebase",{"no-app":"No Firebase App '{$appName}' has been created - call initializeApp() first","bad-app-name":"Illegal App name: '{$appName}'","duplicate-app":"Firebase App named '{$appName}' already exists with different options or config","app-deleted":"Firebase App named '{$appName}' already deleted","server-app-deleted":"Firebase Server App has been deleted","no-options":"Need to provide options, when not being deployed to hosting via source.","invalid-app-argument":"firebase.{$appName}() takes either no argument or a Firebase App instance.","invalid-log-argument":"First argument to `onLog` must be null or a function.","idb-open":"Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.","idb-get":"Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.","idb-set":"Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.","idb-delete":"Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.","finalization-registry-not-supported":"FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.","invalid-server-app-environment":"FirebaseServerApp is not for use in browser environments."});/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class tc{constructor(e,t,r){this._isDeleted=!1,this._options=Object.assign({},e),this._config=Object.assign({},t),this._name=t.name,this._automaticDataCollectionEnabled=t.automaticDataCollectionEnabled,this._container=r,this.container.addComponent(new eM("app",()=>this,"PUBLIC"/* ComponentType.PUBLIC */))}get automaticDataCollectionEnabled(){return this.checkDestroyed(),this._automaticDataCollectionEnabled}set automaticDataCollectionEnabled(e){this.checkDestroyed(),this._automaticDataCollectionEnabled=e}get name(){return this.checkDestroyed(),this._name}get options(){return this.checkDestroyed(),this._options}get config(){return this.checkDestroyed(),this._config}get container(){return this._container}get isDeleted(){return this._isDeleted}set isDeleted(e){this._isDeleted=e}/**
     * This function will throw an Error if the App has already been deleted -
     * use before performing API actions on the App.
     */checkDestroyed(){if(this.isDeleted)throw tu.create("app-deleted"/* AppError.APP_DELETED */,{appName:this._name})}}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * The current SDK version.
 *
 * @public
 */const td="10.12.2";function tp(e,t={}){let r=e;if("object"!=typeof t){let e=t;t={name:e}}let n=Object.assign({name:te,automaticDataCollectionEnabled:!1},t),a=n.name;if("string"!=typeof a||!a)throw tu.create("bad-app-name"/* AppError.BAD_APP_NAME */,{appName:String(a)});if(r||(r=ey()),!r)throw tu.create("no-options"/* AppError.NO_OPTIONS */);let s=tr.get(a);if(s){// return the existing app if options and config deep equal the ones in the existing app.
if(eC(r,s.options)&&eC(n,s.config))return s;throw tu.create("duplicate-app"/* AppError.DUPLICATE_APP */,{appName:a})}let i=new ej(a);for(let e of ta.values())i.addComponent(e);let o=new tc(r,n,i);return tr.set(a,o),o}/**
 * Retrieves a {@link @firebase/app#FirebaseApp} instance.
 *
 * When called with no arguments, the default app is returned. When an app name
 * is provided, the app corresponding to that name is returned.
 *
 * An exception is thrown if the app being retrieved has not yet been
 * initialized.
 *
 * @example
 * ```javascript
 * // Return the default app
 * const app = getApp();
 * ```
 *
 * @example
 * ```javascript
 * // Return a named app
 * const otherApp = getApp("otherApp");
 * ```
 *
 * @param name - Optional name of the app to return. If no name is
 *   provided, the default is `"[DEFAULT]"`.
 *
 * @returns The app corresponding to the provided app name.
 *   If no app name is provided, the default app is returned.
 *
 * @public
 */function th(e=te){let t=tr.get(e);if(!t&&e===te&&ey())return tp();if(!t)throw tu.create("no-app"/* AppError.NO_APP */,{appName:e});return t}/**
 * Registers a library's name and version for platform logging purposes.
 * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)
 * @param version - Current version of that library.
 * @param variant - Bundle variant, e.g., node, rn, etc.
 *
 * @public
 */function tf(e,t,r){var n;// TODO: We can use this check to whitelist strings when/if we set up
// a good whitelist system.
let a=null!==(n=tt[e])&&void 0!==n?n:e;r&&(a+=`-${r}`);let s=a.match(/\s|\//),i=t.match(/\s|\//);if(s||i){let e=[`Unable to register library "${a}" with version "${t}":`];s&&e.push(`library name "${a}" contains illegal characters (whitespace or "/")`),s&&i&&e.push("and"),i&&e.push(`version name "${t}" contains illegal characters (whitespace or "/")`),e9.warn(e.join(" "));return}ti(new eM(`${a}-version`,()=>({library:a,version:t}),"VERSION"/* ComponentType.VERSION */))}const tm="firebase-heartbeat-store";let tg=null;function ty(){return tg||(tg=e1("firebase-heartbeat-database",1,{upgrade:(e,t)=>{// We don't use 'break' in this switch statement, the fall-through
// behavior is what we want, because if there are multiple versions between
// the old version and the current version, we want ALL the migrations
// that correspond to those versions to run, not only the last one.
// eslint-disable-next-line default-case
if(0===t)try{e.createObjectStore(tm)}catch(e){// Safari/iOS browsers throw occasional exceptions on
// db.createObjectStore() that may be a bug. Avoid blocking
// the rest of the app functionality.
console.warn(e)}}}).catch(e=>{throw tu.create("idb-open"/* AppError.IDB_OPEN */,{originalErrorMessage:e.message})})),tg}async function tb(e){try{let t=await ty(),r=t.transaction(tm),n=await r.objectStore(tm).get(tx(e));return(// We already have the value but tx.done can throw,
// so we need to await it here to catch errors
await r.done,n)}catch(e){if(e instanceof eN)e9.warn(e.message);else{let t=tu.create("idb-get"/* AppError.IDB_GET */,{originalErrorMessage:null==e?void 0:e.message});e9.warn(t.message)}}}async function tv(e,t){try{let r=await ty(),n=r.transaction(tm,"readwrite"),a=n.objectStore(tm);await a.put(t,tx(e)),await n.done}catch(e){if(e instanceof eN)e9.warn(e.message);else{let t=tu.create("idb-set"/* AppError.IDB_WRITE */,{originalErrorMessage:null==e?void 0:e.message});e9.warn(t.message)}}}function tx(e){return`${e.name}!${e.options.appId}`}class tw{constructor(e){this.container=e,/**
         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate
         * the header string.
         * Stores one record per date. This will be consolidated into the standard
         * format of one record per user agent string before being sent as a header.
         * Populated from indexedDB when the controller is instantiated and should
         * be kept in sync with indexedDB.
         * Leave public for easier testing.
         */this._heartbeatsCache=null;let t=this.container.getProvider("app").getImmediate();this._storage=new tS(t),this._heartbeatsCachePromise=this._storage.read().then(e=>(this._heartbeatsCache=e,e))}/**
     * Called to report a heartbeat. The function will generate
     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it
     * to IndexedDB.
     * Note that we only store one heartbeat per day. So if a heartbeat for today is
     * already logged, subsequent calls to this function in the same day will be ignored.
     */async triggerHeartbeat(){var e,t;let r=this.container.getProvider("platform-logger").getImmediate(),n=r.getPlatformInfoString(),a=tk();return(null===(e=this._heartbeatsCache)||void 0===e?void 0:e.heartbeats)==null&&(this._heartbeatsCache=await this._heartbeatsCachePromise,(null===(t=this._heartbeatsCache)||void 0===t?void 0:t.heartbeats)==null)?void 0:this._heartbeatsCache.lastSentHeartbeatDate===a||this._heartbeatsCache.heartbeats.some(e=>e.date===a)?void 0:(this._heartbeatsCache.heartbeats.push({date:a,agent:n}),// Remove entries older than 30 days.
this._heartbeatsCache.heartbeats=this._heartbeatsCache.heartbeats.filter(e=>{let t=new Date(e.date).valueOf(),r=Date.now();return r-t<=2592e6}),this._storage.overwrite(this._heartbeatsCache))}/**
     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.
     * It also clears all heartbeats from memory as well as in IndexedDB.
     *
     * NOTE: Consuming product SDKs should not send the header if this method
     * returns an empty string.
     */async getHeartbeatsHeader(){var e;// If it's still null or the array is empty, there is no data to send.
if(null===this._heartbeatsCache&&await this._heartbeatsCachePromise,(null===(e=this._heartbeatsCache)||void 0===e?void 0:e.heartbeats)==null||0===this._heartbeatsCache.heartbeats.length)return"";let t=tk(),{heartbeatsToSend:r,unsentEntries:n}=function(e,t=1024){// Heartbeats grouped by user agent in the standard format to be sent in
// the header.
let r=[],n=e.slice();for(let a of e){// Look for an existing entry with the same user agent.
let e=r.find(e=>e.agent===a.agent);if(e)// If the header would exceed max size, remove the added date
// and stop adding to the header.
{if(e.dates.push(a.date),tN(r)>t){e.dates.pop();break}}else if(// If no entry for this user agent exists, create one.
r.push({agent:a.agent,dates:[a.date]}),tN(r)>t){// If the header would exceed max size, remove the added heartbeat
// entry and stop adding to the header.
r.pop();break}// Pop unsent entry from queue. (Skipped if adding the entry exceeded
// quota and the loop breaks early.)
n=n.slice(1)}return{heartbeatsToSend:r,unsentEntries:n}}(this._heartbeatsCache.heartbeats),a=ec(JSON.stringify({version:2,heartbeats:r}));return(// Store last sent date to prevent another being logged/sent for the same day.
this._heartbeatsCache.lastSentHeartbeatDate=t,n.length>0?(// Store any unsent entries if they exist.
this._heartbeatsCache.heartbeats=n,// This seems more likely than emptying the array (below) to lead to some odd state
// since the cache isn't empty and this will be called again on the next request,
// and is probably safest if we await it.
await this._storage.overwrite(this._heartbeatsCache)):(this._heartbeatsCache.heartbeats=[],// Do not wait for this, to reduce latency.
this._storage.overwrite(this._heartbeatsCache)),a)}}function tk(){let e=new Date;// Returns date format 'YYYY-MM-DD'
return e.toISOString().substring(0,10)}class tS{constructor(e){this.app=e,this._canUseIndexedDBPromise=this.runIndexedDBEnvironmentCheck()}async runIndexedDBEnvironmentCheck(){return!!ek()&&eS().then(()=>!0).catch(()=>!1)}/**
     * Read all heartbeats.
     */async read(){let e=await this._canUseIndexedDBPromise;if(!e)return{heartbeats:[]};{let e=await tb(this.app);return(null==e?void 0:e.heartbeats)?e:{heartbeats:[]}}}// overwrite the storage with the provided heartbeats
async overwrite(e){var t;let r=await this._canUseIndexedDBPromise;if(r){let r=await this.read();return tv(this.app,{lastSentHeartbeatDate:null!==(t=e.lastSentHeartbeatDate)&&void 0!==t?t:r.lastSentHeartbeatDate,heartbeats:e.heartbeats})}}// add heartbeats
async add(e){var t;let r=await this._canUseIndexedDBPromise;if(r){let r=await this.read();return tv(this.app,{lastSentHeartbeatDate:null!==(t=e.lastSentHeartbeatDate)&&void 0!==t?t:r.lastSentHeartbeatDate,heartbeats:[...r.heartbeats,...e.heartbeats]})}}}/**
 * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped
 * in a platform logging header JSON object, stringified, and converted
 * to base 64.
 */function tN(e){// base64 has a restricted set of characters, all of which should be 1 byte.
return ec(JSON.stringify({version:2,heartbeats:e})).length}function tT(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&0>t.indexOf(n)&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,n=Object.getOwnPropertySymbols(e);a<n.length;a++)0>t.indexOf(n[a])&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(r[n[a]]=e[n[a]]);return r}function tI(){// We will include this one message in the prod error map since by the very
// nature of this error, developers will never be able to see the message
// using the debugErrorMap (which is installed during auth initialization).
return{"dependent-sdk-initialized-before-auth":"Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK."}}ti(new eM("platform-logger",e=>new e6(e),"PRIVATE"/* ComponentType.PRIVATE */)),ti(new eM("heartbeat",e=>new tw(e),"PRIVATE"/* ComponentType.PRIVATE */)),// Register `app` package.
tf(e5,e7,""),// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation
tf(e5,e7,"esm2017"),// Register platform SDK identifier (no version).
tf("fire-js",""),"function"==typeof SuppressedError&&SuppressedError;const tC=new eT("auth","Firebase",tI()),tE=new eW("@firebase/auth");function tA(e,...t){tE.logLevel<=ia.ERROR&&tE.error(`Auth (${td}): ${e}`,...t)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function tR(e,...t){throw t$(e,...t)}function t_(e,...t){return t$(e,...t)}function tO(e,t,r){let n=Object.assign(Object.assign({},tI()),{[t]:r}),a=new eT("auth","Firebase",n);return a.create(t,{appName:e.name})}function tP(e){return tO(e,"operation-not-supported-in-this-environment"/* AuthErrorCode.OPERATION_NOT_SUPPORTED */,"Operations that alter the current user are not supported in conjunction with FirebaseServerApp")}function t$(e,...t){if("string"!=typeof e){let r=t[0],n=[...t.slice(1)];return n[0]&&(n[0].appName=e.name),e._errorFactory.create(r,...n)}return tC.create(e,...t)}function tD(e,t,...r){if(!e)throw t$(t,...r)}/**
 * Unconditionally fails, throwing an internal error with the given message.
 *
 * @param failure type of failure encountered
 * @throws Error
 */function tM(e){// Log the failure in addition to throw an exception, just in case the
// exception is swallowed.
let t="INTERNAL ASSERTION FAILED: "+e;// NOTE: We don't use FirebaseError here because these are internal failures
// that cannot be handled by the user. (Also it would create a circular
// dependency between the error and assert modules which doesn't work.)
throw tA(t),Error(t)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function tF(){var e;return"undefined"!=typeof self&&(null===(e=self.location)||void 0===e?void 0:e.href)||""}function tL(){var e;return"undefined"!=typeof self&&(null===(e=self.location)||void 0===e?void 0:e.protocol)||null}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * A structure to help pick between a range of long and short delay durations
 * depending on the current environment. In general, the long delay is used for
 * mobile environments whereas short delays are used for desktop environments.
 */class tj{constructor(e,t){this.shortDelay=e,this.longDelay=t,t>e||tM("Short delay should be less than long delay!"),this.isMobile="undefined"!=typeof window&&// @ts-ignore Setting up an broadly applicable index signature for Window
// just to deal with this case would probably be a bad idea.
!!(window.cordova||window.phonegap||window.PhoneGap)&&/ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(ex())||"object"==typeof navigator&&"ReactNative"===navigator.product}get(){return!("undefined"!=typeof navigator&&navigator&&"onLine"in navigator&&"boolean"==typeof navigator.onLine&&// Apply only for traditional web apps and Chrome extensions.
// This is especially true for Cordova apps which have unreliable
// navigator.onLine behavior unless cordova-plugin-network-information is
// installed which overwrites the native navigator.onLine value and
// defines navigator.connection.
("http:"===tL()||"https:"===tL()||ew()||"connection"in navigator))||navigator.onLine?this.isMobile?this.longDelay:this.shortDelay:Math.min(5e3/* DelayMin.OFFLINE */,this.shortDelay)}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function tB(e,t){e.emulator||tM("Emulator should always be set here");let{url:r}=e.emulator;return t?`${r}${t.startsWith("/")?t.slice(1):t}`:r}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class tz{static initialize(e,t,r){this.fetchImpl=e,t&&(this.headersImpl=t),r&&(this.responseImpl=r)}static fetch(){return this.fetchImpl?this.fetchImpl:"undefined"!=typeof self&&"fetch"in self?self.fetch:"undefined"!=typeof globalThis&&globalThis.fetch?globalThis.fetch:"undefined"!=typeof fetch?fetch:void tM("Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill")}static headers(){return this.headersImpl?this.headersImpl:"undefined"!=typeof self&&"Headers"in self?self.Headers:"undefined"!=typeof globalThis&&globalThis.Headers?globalThis.Headers:"undefined"!=typeof Headers?Headers:void tM("Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill")}static response(){return this.responseImpl?this.responseImpl:"undefined"!=typeof self&&"Response"in self?self.Response:"undefined"!=typeof globalThis&&globalThis.Response?globalThis.Response:"undefined"!=typeof Response?Response:void tM("Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill")}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Map from errors returned by the server to errors to developer visible errors
 */const tV={CREDENTIAL_MISMATCH:"custom-token-mismatch"/* AuthErrorCode.CREDENTIAL_MISMATCH */,MISSING_CUSTOM_TOKEN:"internal-error"/* AuthErrorCode.INTERNAL_ERROR */,INVALID_IDENTIFIER:"invalid-email"/* AuthErrorCode.INVALID_EMAIL */,MISSING_CONTINUE_URI:"internal-error"/* AuthErrorCode.INTERNAL_ERROR */,INVALID_PASSWORD:"wrong-password"/* AuthErrorCode.INVALID_PASSWORD */,MISSING_PASSWORD:"missing-password"/* AuthErrorCode.MISSING_PASSWORD */,INVALID_LOGIN_CREDENTIALS:"invalid-credential"/* AuthErrorCode.INVALID_CREDENTIAL */,EMAIL_EXISTS:"email-already-in-use"/* AuthErrorCode.EMAIL_EXISTS */,PASSWORD_LOGIN_DISABLED:"operation-not-allowed"/* AuthErrorCode.OPERATION_NOT_ALLOWED */,INVALID_IDP_RESPONSE:"invalid-credential"/* AuthErrorCode.INVALID_CREDENTIAL */,INVALID_PENDING_TOKEN:"invalid-credential"/* AuthErrorCode.INVALID_CREDENTIAL */,FEDERATED_USER_ID_ALREADY_LINKED:"credential-already-in-use"/* AuthErrorCode.CREDENTIAL_ALREADY_IN_USE */,MISSING_REQ_TYPE:"internal-error"/* AuthErrorCode.INTERNAL_ERROR */,EMAIL_NOT_FOUND:"user-not-found"/* AuthErrorCode.USER_DELETED */,RESET_PASSWORD_EXCEED_LIMIT:"too-many-requests"/* AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER */,EXPIRED_OOB_CODE:"expired-action-code"/* AuthErrorCode.EXPIRED_OOB_CODE */,INVALID_OOB_CODE:"invalid-action-code"/* AuthErrorCode.INVALID_OOB_CODE */,MISSING_OOB_CODE:"internal-error"/* AuthErrorCode.INTERNAL_ERROR */,CREDENTIAL_TOO_OLD_LOGIN_AGAIN:"requires-recent-login"/* AuthErrorCode.CREDENTIAL_TOO_OLD_LOGIN_AGAIN */,INVALID_ID_TOKEN:"invalid-user-token"/* AuthErrorCode.INVALID_AUTH */,TOKEN_EXPIRED:"user-token-expired"/* AuthErrorCode.TOKEN_EXPIRED */,USER_NOT_FOUND:"user-token-expired"/* AuthErrorCode.TOKEN_EXPIRED */,TOO_MANY_ATTEMPTS_TRY_LATER:"too-many-requests"/* AuthErrorCode.TOO_MANY_ATTEMPTS_TRY_LATER */,PASSWORD_DOES_NOT_MEET_REQUIREMENTS:"password-does-not-meet-requirements"/* AuthErrorCode.PASSWORD_DOES_NOT_MEET_REQUIREMENTS */,INVALID_CODE:"invalid-verification-code"/* AuthErrorCode.INVALID_CODE */,INVALID_SESSION_INFO:"invalid-verification-id"/* AuthErrorCode.INVALID_SESSION_INFO */,INVALID_TEMPORARY_PROOF:"invalid-credential"/* AuthErrorCode.INVALID_CREDENTIAL */,MISSING_SESSION_INFO:"missing-verification-id"/* AuthErrorCode.MISSING_SESSION_INFO */,SESSION_EXPIRED:"code-expired"/* AuthErrorCode.CODE_EXPIRED */,MISSING_ANDROID_PACKAGE_NAME:"missing-android-pkg-name"/* AuthErrorCode.MISSING_ANDROID_PACKAGE_NAME */,UNAUTHORIZED_DOMAIN:"unauthorized-continue-uri"/* AuthErrorCode.UNAUTHORIZED_DOMAIN */,INVALID_OAUTH_CLIENT_ID:"invalid-oauth-client-id"/* AuthErrorCode.INVALID_OAUTH_CLIENT_ID */,ADMIN_ONLY_OPERATION:"admin-restricted-operation"/* AuthErrorCode.ADMIN_ONLY_OPERATION */,INVALID_MFA_PENDING_CREDENTIAL:"invalid-multi-factor-session"/* AuthErrorCode.INVALID_MFA_SESSION */,MFA_ENROLLMENT_NOT_FOUND:"multi-factor-info-not-found"/* AuthErrorCode.MFA_INFO_NOT_FOUND */,MISSING_MFA_ENROLLMENT_ID:"missing-multi-factor-info"/* AuthErrorCode.MISSING_MFA_INFO */,MISSING_MFA_PENDING_CREDENTIAL:"missing-multi-factor-session"/* AuthErrorCode.MISSING_MFA_SESSION */,SECOND_FACTOR_EXISTS:"second-factor-already-in-use"/* AuthErrorCode.SECOND_FACTOR_ALREADY_ENROLLED */,SECOND_FACTOR_LIMIT_EXCEEDED:"maximum-second-factor-count-exceeded"/* AuthErrorCode.SECOND_FACTOR_LIMIT_EXCEEDED */,BLOCKING_FUNCTION_ERROR_RESPONSE:"internal-error"/* AuthErrorCode.INTERNAL_ERROR */,RECAPTCHA_NOT_ENABLED:"recaptcha-not-enabled"/* AuthErrorCode.RECAPTCHA_NOT_ENABLED */,MISSING_RECAPTCHA_TOKEN:"missing-recaptcha-token"/* AuthErrorCode.MISSING_RECAPTCHA_TOKEN */,INVALID_RECAPTCHA_TOKEN:"invalid-recaptcha-token"/* AuthErrorCode.INVALID_RECAPTCHA_TOKEN */,INVALID_RECAPTCHA_ACTION:"invalid-recaptcha-action"/* AuthErrorCode.INVALID_RECAPTCHA_ACTION */,MISSING_CLIENT_TYPE:"missing-client-type"/* AuthErrorCode.MISSING_CLIENT_TYPE */,MISSING_RECAPTCHA_VERSION:"missing-recaptcha-version"/* AuthErrorCode.MISSING_RECAPTCHA_VERSION */,INVALID_RECAPTCHA_VERSION:"invalid-recaptcha-version"/* AuthErrorCode.INVALID_RECAPTCHA_VERSION */,INVALID_REQ_TYPE:"invalid-req-type"/* AuthErrorCode.INVALID_REQ_TYPE */},tG=new tj(3e4,6e4);function tU(e,t){return e.tenantId&&!t.tenantId?Object.assign(Object.assign({},t),{tenantId:e.tenantId}):t}async function tW(e,t,r,n,a={}){return tq(e,a,async()=>{let a={},s={};n&&("GET"/* HttpMethod.GET */===t?s=n:a={body:JSON.stringify(n)});let i=eA(Object.assign({key:e.config.apiKey},s)).slice(1),o=await e._getAdditionalHeaders();return o["Content-Type"/* HttpHeader.CONTENT_TYPE */]="application/json",e.languageCode&&(o["X-Firebase-Locale"/* HttpHeader.X_FIREBASE_LOCALE */]=e.languageCode),tz.fetch()(tK(e,e.config.apiHost,r,i),Object.assign({method:t,headers:o,referrerPolicy:"no-referrer"},a))})}async function tq(e,t,r){e._canInitEmulator=!1;let n=Object.assign(Object.assign({},tV),t);try{let t=new tX(e),a=await Promise.race([r(),t.promise]);// If we've reached this point, the fetch succeeded and the networkTimeout
// didn't throw; clear the network timeout delay so that Node won't hang
t.clearNetworkTimeout();let s=await a.json();if("needConfirmation"in s)throw tZ(e,"account-exists-with-different-credential"/* AuthErrorCode.NEED_CONFIRMATION */,s);if(a.ok&&!("errorMessage"in s))return s;{let t=a.ok?s.errorMessage:s.error.message,[r,i]=t.split(" : ");if("FEDERATED_USER_ID_ALREADY_LINKED"/* ServerError.FEDERATED_USER_ID_ALREADY_LINKED */===r)throw tZ(e,"credential-already-in-use"/* AuthErrorCode.CREDENTIAL_ALREADY_IN_USE */,s);if("EMAIL_EXISTS"/* ServerError.EMAIL_EXISTS */===r)throw tZ(e,"email-already-in-use"/* AuthErrorCode.EMAIL_EXISTS */,s);if("USER_DISABLED"/* ServerError.USER_DISABLED */===r)throw tZ(e,"user-disabled"/* AuthErrorCode.USER_DISABLED */,s);let o=n[r]||r.toLowerCase().replace(/[_\s]+/g,"-");if(i)throw tO(e,o,i);tR(e,o)}}catch(t){if(t instanceof eN)throw t;// Changing this to a different error code will log user out when there is a network error
// because we treat any error other than NETWORK_REQUEST_FAILED as token is invalid.
// https://github.com/firebase/firebase-js-sdk/blob/4fbc73610d70be4e0852e7de63a39cb7897e8546/packages/auth/src/core/auth/auth_impl.ts#L309-L316
tR(e,"network-request-failed"/* AuthErrorCode.NETWORK_REQUEST_FAILED */,{message:String(t)})}}async function tH(e,t,r,n,a={}){let s=await tW(e,t,r,n,a);return"mfaPendingCredential"in s&&tR(e,"multi-factor-auth-required"/* AuthErrorCode.MFA_REQUIRED */,{_serverResponse:s}),s}function tK(e,t,r,n){let a=`${t}${r}?${n}`;return e.config.emulator?tB(e.config,a):`${e.config.apiScheme}://${a}`}class tX{constructor(e){this.auth=e,// Node timers and browser timers are fundamentally incompatible, but we
// don't care about the value here
// eslint-disable-next-line @typescript-eslint/no-explicit-any
this.timer=null,this.promise=new Promise((e,t)=>{this.timer=setTimeout(()=>t(t_(this.auth,"network-request-failed"/* AuthErrorCode.NETWORK_REQUEST_FAILED */)),tG.get())})}clearNetworkTimeout(){clearTimeout(this.timer)}}function tZ(e,t,r){let n={appName:e.name};r.email&&(n.email=r.email),r.phoneNumber&&(n.phoneNumber=r.phoneNumber);let a=t_(e,t,n);return(// We know customData is defined on error because errorParams is defined
a.customData._tokenResponse=r,a)}function tQ(e){return void 0!==e&&void 0!==e.enterprise}class tY{constructor(e){if(/**
         * The reCAPTCHA site key.
         */this.siteKey="",/**
         * The list of providers and their enablement status for reCAPTCHA Enterprise.
         */this.recaptchaEnforcementState=[],void 0===e.recaptchaKey)throw Error("recaptchaKey undefined");// Example response.recaptchaKey: "projects/proj123/keys/sitekey123"
this.siteKey=e.recaptchaKey.split("/")[3],this.recaptchaEnforcementState=e.recaptchaEnforcementState}/**
     * Returns the reCAPTCHA Enterprise enforcement state for the given provider.
     *
     * @param providerStr - The provider whose enforcement state is to be returned.
     * @returns The reCAPTCHA Enterprise enforcement state for the given provider.
     */getProviderEnforcementState(e){if(!this.recaptchaEnforcementState||0===this.recaptchaEnforcementState.length)return null;for(let t of this.recaptchaEnforcementState)if(t.provider&&t.provider===e)return function(e){switch(e){case"ENFORCE":return"ENFORCE"/* EnforcementState.ENFORCE */;case"AUDIT":return"AUDIT"/* EnforcementState.AUDIT */;case"OFF":return"OFF"/* EnforcementState.OFF */;default:return"ENFORCEMENT_STATE_UNSPECIFIED"/* EnforcementState.ENFORCEMENT_STATE_UNSPECIFIED */}}(t.enforcementState);return null}/**
     * Returns true if the reCAPTCHA Enterprise enforcement state for the provider is set to ENFORCE or AUDIT.
     *
     * @param providerStr - The provider whose enablement state is to be returned.
     * @returns Whether or not reCAPTCHA Enterprise protection is enabled for the given provider.
     */isProviderEnabled(e){return"ENFORCE"/* EnforcementState.ENFORCE */===this.getProviderEnforcementState(e)||"AUDIT"/* EnforcementState.AUDIT */===this.getProviderEnforcementState(e)}}async function tJ(e,t){return tW(e,"GET"/* HttpMethod.GET */,"/v2/recaptchaConfig"/* Endpoint.GET_RECAPTCHA_CONFIG */,tU(e,t))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function t0(e,t){return tW(e,"POST"/* HttpMethod.POST */,"/v1/accounts:delete"/* Endpoint.DELETE_ACCOUNT */,t)}async function t1(e,t){return tW(e,"POST"/* HttpMethod.POST */,"/v1/accounts:lookup"/* Endpoint.GET_ACCOUNT_INFO */,t)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function t2(e){if(e)try{// Convert to date object.
let t=new Date(Number(e));// Test date is valid.
if(!isNaN(t.getTime()))return t.toUTCString()}catch(e){// Do nothing. undefined will be returned.
}}/**
 * Returns a deserialized JSON Web Token (JWT) used to identify the user to a Firebase service.
 *
 * @remarks
 * Returns the current token if it has not expired or if it will not expire in the next five
 * minutes. Otherwise, this will refresh the token and return a new one.
 *
 * @param user - The user.
 * @param forceRefresh - Force refresh regardless of token expiration.
 *
 * @public
 */async function t4(e,t=!1){let r=eD(e),n=await r.getIdToken(t),a=t8(n);tD(a&&a.exp&&a.auth_time&&a.iat,r.auth,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */);let s="object"==typeof a.firebase?a.firebase:void 0,i=null==s?void 0:s.sign_in_provider;return{claims:a,token:n,authTime:t2(t3(a.auth_time)),issuedAtTime:t2(t3(a.iat)),expirationTime:t2(t3(a.exp)),signInProvider:i||null,signInSecondFactor:(null==s?void 0:s.sign_in_second_factor)||null}}function t3(e){return 1e3*Number(e)}function t8(e){let[t,r,n]=e.split(".");if(void 0===t||void 0===r||void 0===n)return tA("JWT malformed, contained fewer than 3 sections"),null;try{let e=ed(r);if(!e)return tA("Failed to decode base64 JWT payload"),null;return JSON.parse(e)}catch(e){return tA("Caught error parsing JWT payload as JSON",null==e?void 0:e.toString()),null}}/**
 * Extract expiresIn TTL from a token by subtracting the expiration from the issuance.
 */function t6(e){let t=t8(e);return tD(t,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),tD(void 0!==t.exp,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),tD(void 0!==t.iat,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),Number(t.exp)-Number(t.iat)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function t5(e,t,r=!1){if(r)return t;try{return await t}catch(t){throw t instanceof eN&&function({code:e}){return"auth/user-disabled"===e||"auth/user-token-expired"===e}(t)&&e.auth.currentUser===e&&await e.auth.signOut(),t}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class t7{constructor(e){this.user=e,this.isRunning=!1,// Node timers and browser timers return fundamentally different types.
// We don't actually care what the value is but TS won't accept unknown and
// we can't cast properly in both environments.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
this.timerId=null,this.errorBackoff=3e4/* Duration.RETRY_BACKOFF_MIN */}_start(){this.isRunning||(this.isRunning=!0,this.schedule())}_stop(){this.isRunning&&(this.isRunning=!1,null!==this.timerId&&clearTimeout(this.timerId))}getInterval(e){var t;if(e){let e=this.errorBackoff;return this.errorBackoff=Math.min(2*this.errorBackoff,96e4/* Duration.RETRY_BACKOFF_MAX */),e}{// Reset the error backoff
this.errorBackoff=3e4/* Duration.RETRY_BACKOFF_MIN */;let e=null!==(t=this.user.stsTokenManager.expirationTime)&&void 0!==t?t:0,r=e-Date.now()-3e5/* Duration.OFFSET */;return Math.max(0,r)}}schedule(e=!1){if(!this.isRunning)return;let t=this.getInterval(e);this.timerId=setTimeout(async()=>{await this.iteration()},t)}async iteration(){try{await this.user.getIdToken(!0)}catch(e){// Only retry on network errors
(null==e?void 0:e.code)==="auth/network-request-failed"&&this.schedule(/* wasError */!0);return}this.schedule()}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class t9{constructor(e,t){this.createdAt=e,this.lastLoginAt=t,this._initializeTime()}_initializeTime(){this.lastSignInTime=t2(this.lastLoginAt),this.creationTime=t2(this.createdAt)}_copy(e){this.createdAt=e.createdAt,this.lastLoginAt=e.lastLoginAt,this._initializeTime()}toJSON(){return{createdAt:this.createdAt,lastLoginAt:this.lastLoginAt}}}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function re(e){var t;let r=e.auth,n=await e.getIdToken(),a=await t5(e,t1(r,{idToken:n}));tD(null==a?void 0:a.users.length,r,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */);let s=a.users[0];e._notifyReloadListener(s);let i=(null===(t=s.providerUserInfo)||void 0===t?void 0:t.length)?rr(s.providerUserInfo):[],o=function(e,t){let r=e.filter(e=>!t.some(t=>t.providerId===e.providerId));return[...r,...t]}(e.providerData,i),l=e.isAnonymous,u=!(e.email&&s.passwordHash)&&!(null==o?void 0:o.length),c={uid:s.localId,displayName:s.displayName||null,photoURL:s.photoUrl||null,email:s.email||null,emailVerified:s.emailVerified||!1,phoneNumber:s.phoneNumber||null,tenantId:s.tenantId||null,providerData:o,metadata:new t9(s.createdAt,s.lastLoginAt),isAnonymous:!!l&&u};Object.assign(e,c)}/**
 * Reloads user account data, if signed in.
 *
 * @param user - The user.
 *
 * @public
 */async function rt(e){let t=eD(e);await re(t),// Even though the current user hasn't changed, update
// current user will trigger a persistence update w/ the
// new info.
await t.auth._persistUserIfCurrent(t),t.auth._notifyListenersIfCurrent(t)}function rr(e){return e.map(e=>{var{providerId:t}=e,r=tT(e,["providerId"]);return{providerId:t,uid:r.rawId||"",displayName:r.displayName||null,email:r.email||null,phoneNumber:r.phoneNumber||null,photoURL:r.photoUrl||null}})}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function rn(e,t){let r=await tq(e,{},async()=>{let r=eA({grant_type:"refresh_token",refresh_token:t}).slice(1),{tokenApiHost:n,apiKey:a}=e.config,s=tK(e,n,"/v1/token"/* Endpoint.TOKEN */,`key=${a}`),i=await e._getAdditionalHeaders();return i["Content-Type"/* HttpHeader.CONTENT_TYPE */]="application/x-www-form-urlencoded",tz.fetch()(s,{method:"POST"/* HttpMethod.POST */,headers:i,body:r})});// The response comes back in snake_case. Convert to camel:
return{accessToken:r.access_token,expiresIn:r.expires_in,refreshToken:r.refresh_token}}async function ra(e,t){return tW(e,"POST"/* HttpMethod.POST */,"/v2/accounts:revokeToken"/* Endpoint.REVOKE_TOKEN */,tU(e,t))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * We need to mark this class as internal explicitly to exclude it in the public typings, because
 * it references AuthInternal which has a circular dependency with UserInternal.
 *
 * @internal
 */class rs{constructor(){this.refreshToken=null,this.accessToken=null,this.expirationTime=null}get isExpired(){return!this.expirationTime||Date.now()>this.expirationTime-3e4/* Buffer.TOKEN_REFRESH */}updateFromServerResponse(e){tD(e.idToken,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),tD(void 0!==e.idToken,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),tD(void 0!==e.refreshToken,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */);let t="expiresIn"in e&&void 0!==e.expiresIn?Number(e.expiresIn):t6(e.idToken);this.updateTokensAndExpiration(e.idToken,e.refreshToken,t)}updateFromIdToken(e){tD(0!==e.length,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */);let t=t6(e);this.updateTokensAndExpiration(e,null,t)}async getToken(e,t=!1){return t||!this.accessToken||this.isExpired?(tD(this.refreshToken,e,"user-token-expired"/* AuthErrorCode.TOKEN_EXPIRED */),this.refreshToken)?(await this.refresh(e,this.refreshToken),this.accessToken):null:this.accessToken}clearRefreshToken(){this.refreshToken=null}async refresh(e,t){let{accessToken:r,refreshToken:n,expiresIn:a}=await rn(e,t);this.updateTokensAndExpiration(r,n,Number(a))}updateTokensAndExpiration(e,t,r){this.refreshToken=t||null,this.accessToken=e||null,this.expirationTime=Date.now()+1e3*r}static fromJSON(e,t){let{refreshToken:r,accessToken:n,expirationTime:a}=t,s=new rs;return r&&(tD("string"==typeof r,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */,{appName:e}),s.refreshToken=r),n&&(tD("string"==typeof n,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */,{appName:e}),s.accessToken=n),a&&(tD("number"==typeof a,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */,{appName:e}),s.expirationTime=a),s}toJSON(){return{refreshToken:this.refreshToken,accessToken:this.accessToken,expirationTime:this.expirationTime}}_assign(e){this.accessToken=e.accessToken,this.refreshToken=e.refreshToken,this.expirationTime=e.expirationTime}_clone(){return Object.assign(new rs,this.toJSON())}_performRefresh(){return tM("not implemented")}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function ri(e,t){tD("string"==typeof e||void 0===e,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */,{appName:t})}class ro{constructor(e){var{uid:t,auth:r,stsTokenManager:n}=e,a=tT(e,["uid","auth","stsTokenManager"]);// For the user object, provider is always Firebase.
this.providerId="firebase"/* ProviderId.FIREBASE */,this.proactiveRefresh=new t7(this),this.reloadUserInfo=null,this.reloadListener=null,this.uid=t,this.auth=r,this.stsTokenManager=n,this.accessToken=n.accessToken,this.displayName=a.displayName||null,this.email=a.email||null,this.emailVerified=a.emailVerified||!1,this.phoneNumber=a.phoneNumber||null,this.photoURL=a.photoURL||null,this.isAnonymous=a.isAnonymous||!1,this.tenantId=a.tenantId||null,this.providerData=a.providerData?[...a.providerData]:[],this.metadata=new t9(a.createdAt||void 0,a.lastLoginAt||void 0)}async getIdToken(e){let t=await t5(this,this.stsTokenManager.getToken(this.auth,e));return tD(t,this.auth,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),this.accessToken!==t&&(this.accessToken=t,await this.auth._persistUserIfCurrent(this),this.auth._notifyListenersIfCurrent(this)),t}getIdTokenResult(e){return t4(this,e)}reload(){return rt(this)}_assign(e){this!==e&&(tD(this.uid===e.uid,this.auth,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),this.displayName=e.displayName,this.photoURL=e.photoURL,this.email=e.email,this.emailVerified=e.emailVerified,this.phoneNumber=e.phoneNumber,this.isAnonymous=e.isAnonymous,this.tenantId=e.tenantId,this.providerData=e.providerData.map(e=>Object.assign({},e)),this.metadata._copy(e.metadata),this.stsTokenManager._assign(e.stsTokenManager))}_clone(e){let t=new ro(Object.assign(Object.assign({},this),{auth:e,stsTokenManager:this.stsTokenManager._clone()}));return t.metadata._copy(this.metadata),t}_onReload(e){// There should only ever be one listener, and that is a single instance of MultiFactorUser
tD(!this.reloadListener,this.auth,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),this.reloadListener=e,this.reloadUserInfo&&(this._notifyReloadListener(this.reloadUserInfo),this.reloadUserInfo=null)}_notifyReloadListener(e){this.reloadListener?this.reloadListener(e):this.reloadUserInfo=e}_startProactiveRefresh(){this.proactiveRefresh._start()}_stopProactiveRefresh(){this.proactiveRefresh._stop()}async _updateTokensIfNecessary(e,t=!1){let r=!1;e.idToken&&e.idToken!==this.stsTokenManager.accessToken&&(this.stsTokenManager.updateFromServerResponse(e),r=!0),t&&await re(this),await this.auth._persistUserIfCurrent(this),r&&this.auth._notifyListenersIfCurrent(this)}async delete(){if(tl(this.auth.app))return Promise.reject(tP(this.auth));let e=await this.getIdToken();// TODO: Determine if cancellable-promises are necessary to use in this class so that delete()
//       cancels pending actions...
return await t5(this,t0(this.auth,{idToken:e})),this.stsTokenManager.clearRefreshToken(),this.auth.signOut()}toJSON(){return Object.assign(Object.assign({uid:this.uid,email:this.email||void 0,emailVerified:this.emailVerified,displayName:this.displayName||void 0,isAnonymous:this.isAnonymous,photoURL:this.photoURL||void 0,phoneNumber:this.phoneNumber||void 0,tenantId:this.tenantId||void 0,providerData:this.providerData.map(e=>Object.assign({},e)),stsTokenManager:this.stsTokenManager.toJSON(),// Redirect event ID must be maintained in case there is a pending
// redirect event.
_redirectEventId:this._redirectEventId},this.metadata.toJSON()),{// Required for compatibility with the legacy SDK (go/firebase-auth-sdk-persistence-parsing):
apiKey:this.auth.config.apiKey,appName:this.auth.name})}get refreshToken(){return this.stsTokenManager.refreshToken||""}static _fromJSON(e,t){var r,n,a,s,i,o,l,u;let c=null!==(r=t.displayName)&&void 0!==r?r:void 0,d=null!==(n=t.email)&&void 0!==n?n:void 0,p=null!==(a=t.phoneNumber)&&void 0!==a?a:void 0,h=null!==(s=t.photoURL)&&void 0!==s?s:void 0,f=null!==(i=t.tenantId)&&void 0!==i?i:void 0,m=null!==(o=t._redirectEventId)&&void 0!==o?o:void 0,g=null!==(l=t.createdAt)&&void 0!==l?l:void 0,y=null!==(u=t.lastLoginAt)&&void 0!==u?u:void 0,{uid:b,emailVerified:v,isAnonymous:x,providerData:w,stsTokenManager:k}=t;tD(b&&k,e,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */);let S=rs.fromJSON(this.name,k);tD("string"==typeof b,e,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),ri(c,e.name),ri(d,e.name),tD("boolean"==typeof v,e,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),tD("boolean"==typeof x,e,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),ri(p,e.name),ri(h,e.name),ri(f,e.name),ri(m,e.name),ri(g,e.name),ri(y,e.name);let N=new ro({uid:b,auth:e,email:d,emailVerified:v,displayName:c,isAnonymous:x,photoURL:h,phoneNumber:p,tenantId:f,stsTokenManager:S,createdAt:g,lastLoginAt:y});return w&&Array.isArray(w)&&(N.providerData=w.map(e=>Object.assign({},e))),m&&(N._redirectEventId=m),N}/**
     * Initialize a User from an idToken server response
     * @param auth
     * @param idTokenResponse
     */static async _fromIdTokenResponse(e,t,r=!1){let n=new rs;n.updateFromServerResponse(t);// Initialize the Firebase Auth user.
let a=new ro({uid:t.localId,auth:e,stsTokenManager:n,isAnonymous:r});return(// Updates the user info and data and resolves with a user instance.
await re(a),a)}/**
     * Initialize a User from an idToken server response
     * @param auth
     * @param idTokenResponse
     */static async _fromGetAccountInfoResponse(e,t,r){let n=t.users[0];tD(void 0!==n.localId,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */);let a=void 0!==n.providerUserInfo?rr(n.providerUserInfo):[],s=!(n.email&&n.passwordHash)&&!(null==a?void 0:a.length),i=new rs;i.updateFromIdToken(r);// Initialize the Firebase Auth user.
let o=new ro({uid:n.localId,auth:e,stsTokenManager:i,isAnonymous:s}),l={uid:n.localId,displayName:n.displayName||null,photoURL:n.photoUrl||null,email:n.email||null,emailVerified:n.emailVerified||!1,phoneNumber:n.phoneNumber||null,tenantId:n.tenantId||null,providerData:a,metadata:new t9(n.createdAt,n.lastLoginAt),isAnonymous:!(n.email&&n.passwordHash)&&!(null==a?void 0:a.length)};return Object.assign(o,l),o}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const rl=new Map;function ru(e){e instanceof Function||tM("Expected a class definition");let t=rl.get(e);return t?t instanceof e||tM("Instance stored in cache mismatched with class"):(t=new e,rl.set(e,t)),t}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class rc{constructor(){this.type="NONE"/* PersistenceType.NONE */,this.storage={}}async _isAvailable(){return!0}async _set(e,t){this.storage[e]=t}async _get(e){let t=this.storage[e];return void 0===t?null:t}async _remove(e){delete this.storage[e]}_addListener(e,t){}_removeListener(e,t){}}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function rd(e,t,r){return`firebase:${e}:${t}:${r}`}rc.type="NONE";class rp{constructor(e,t,r){this.persistence=e,this.auth=t,this.userKey=r;let{config:n,name:a}=this.auth;this.fullUserKey=rd(this.userKey,n.apiKey,a),this.fullPersistenceKey=rd("persistence"/* KeyName.PERSISTENCE_USER */,n.apiKey,a),this.boundEventHandler=t._onStorageEvent.bind(t),this.persistence._addListener(this.fullUserKey,this.boundEventHandler)}setCurrentUser(e){return this.persistence._set(this.fullUserKey,e.toJSON())}async getCurrentUser(){let e=await this.persistence._get(this.fullUserKey);return e?ro._fromJSON(this.auth,e):null}removeCurrentUser(){return this.persistence._remove(this.fullUserKey)}savePersistenceForRedirect(){return this.persistence._set(this.fullPersistenceKey,this.persistence.type)}async setPersistence(e){if(this.persistence===e)return;let t=await this.getCurrentUser();if(await this.removeCurrentUser(),this.persistence=e,t)return this.setCurrentUser(t)}delete(){this.persistence._removeListener(this.fullUserKey,this.boundEventHandler)}static async create(e,t,r="authUser"/* KeyName.AUTH_USER */){if(!t.length)return new rp(ru(rc),e,r);// Eliminate any persistences that are not available
let n=(await Promise.all(t.map(async e=>{if(await e._isAvailable())return e}))).filter(e=>e),a=n[0]||ru(rc),s=rd(r,e.config.apiKey,e.name),i=null;// Note, here we check for a user in _all_ persistences, not just the
// ones deemed available. If we can migrate a user out of a broken
// persistence, we will (but only if that persistence supports migration).
for(let r of t)try{let t=await r._get(s);if(t){let n=ro._fromJSON(e,t);// throws for unparsable blob (wrong format)
r!==a&&(i=n),a=r;break}}catch(e){}// If we find the user in a persistence that does support migration, use
// that migration path (of only persistences that support migration)
let o=n.filter(e=>e._shouldAllowMigration);return a._shouldAllowMigration&&o.length&&(a=o[0],i&&// we'll just let it bubble to surface the error.
await a._set(s,i.toJSON()),// Attempt to clear the key in other persistences but ignore errors. This helps prevent issues
// such as users getting stuck with a previous account after signing out and refreshing the tab.
await Promise.all(t.map(async e=>{if(e!==a)try{await e._remove(s)}catch(e){}}))),new rp(a,e,r)}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Determine the browser for the purposes of reporting usage to the API
 */function rh(e){let t=e.toLowerCase();if(t.includes("opera/")||t.includes("opr/")||t.includes("opios/"))return"Opera"/* BrowserName.OPERA */;{if(ry(t))return"IEMobile"/* BrowserName.IEMOBILE */;if(t.includes("msie")||t.includes("trident/"))return"IE"/* BrowserName.IE */;if(t.includes("edge/"))return"Edge"/* BrowserName.EDGE */;if(rf(t))return"Firefox"/* BrowserName.FIREFOX */;if(t.includes("silk/"))return"Silk"/* BrowserName.SILK */;if(rv(t))return"Blackberry"/* BrowserName.BLACKBERRY */;if(rx(t))return"Webos"/* BrowserName.WEBOS */;if(rm(t))return"Safari"/* BrowserName.SAFARI */;if((t.includes("chrome/")||rg(t))&&!t.includes("edge/"))return"Chrome"/* BrowserName.CHROME */;if(rb(t))return"Android"/* BrowserName.ANDROID */;let r=e.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/);if((null==r?void 0:r.length)===2)return r[1]}return"Other"/* BrowserName.OTHER */}function rf(e=ex()){return/firefox\//i.test(e)}function rm(e=ex()){let t=e.toLowerCase();return t.includes("safari/")&&!t.includes("chrome/")&&!t.includes("crios/")&&!t.includes("android")}function rg(e=ex()){return/crios\//i.test(e)}function ry(e=ex()){return/iemobile/i.test(e)}function rb(e=ex()){return/android/i.test(e)}function rv(e=ex()){return/blackberry/i.test(e)}function rx(e=ex()){return/webos/i.test(e)}function rw(e=ex()){return/iphone|ipad|ipod/i.test(e)||/macintosh/i.test(e)&&/mobile/i.test(e)}function rk(e=ex()){// TODO: implement getBrowserName equivalent for OS.
return rw(e)||rb(e)||rx(e)||rv(e)||/windows phone/i.test(e)||ry(e)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//*
 * Determine the SDK version string
 */function rS(e,t=[]){let r;switch(e){case"Browser"/* ClientPlatform.BROWSER */:// In a browser environment, report the browser name.
r=rh(ex());break;case"Worker"/* ClientPlatform.WORKER */:// Technically a worker runs from a browser but we need to differentiate a
// worker from a browser.
// For example: Chrome-Worker/JsCore/4.9.1/FirebaseCore-web.
r=`${rh(ex())}-${e}`;break;default:r=e}let n=t.length?t.join(","):"FirebaseCore-web";/* default value if no other framework is used */return`${r}/JsCore/${td}/${n}`}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class rN{constructor(e){this.auth=e,this.queue=[]}pushCallback(e,t){// The callback could be sync or async. Wrap it into a
// function that is always async.
let r=t=>new Promise((r,n)=>{try{let n=e(t);// Either resolve with existing promise or wrap a non-promise
    // return value into a promise.
    r(n)}catch(e){// Sync callback throws.
    n(e)}});// Attach the onAbort if present
r.onAbort=t,this.queue.push(r);let n=this.queue.length-1;return()=>{// Unsubscribe. Replace with no-op. Do not remove from array, or it will disturb
// indexing of other elements.
this.queue[n]=()=>Promise.resolve()}}async runMiddleware(e){if(this.auth.currentUser===e)return;// While running the middleware, build a temporary stack of onAbort
// callbacks to call if one middleware callback rejects.
let t=[];try{for(let r of this.queue)await r(e),r.onAbort&&t.push(r.onAbort)}catch(e){for(let e of(// Run all onAbort, with separate try/catch to ignore any errors and
// continue
t.reverse(),t))try{e()}catch(e){/* swallow error */}throw this.auth._errorFactory.create("login-blocked"/* AuthErrorCode.LOGIN_BLOCKED */,{originalMessage:null==e?void 0:e.message})}}}/**
 * @license
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Fetches the password policy for the currently set tenant or the project if no tenant is set.
 *
 * @param auth Auth object.
 * @param request Password policy request.
 * @returns Password policy response.
 */async function rT(e,t={}){return tW(e,"GET"/* HttpMethod.GET */,"/v2/passwordPolicy"/* Endpoint.GET_PASSWORD_POLICY */,tU(e,t))}/**
 * Stores password policy requirements and provides password validation against the policy.
 *
 * @internal
 */class rI{constructor(e){var t,r,n,a;// Only include custom strength options defined in the response.
let s=e.customStrengthOptions;this.customStrengthOptions={},// TODO: Remove once the backend is updated to include the minimum min password length instead of undefined when there is no minimum length set.
this.customStrengthOptions.minPasswordLength=null!==(t=s.minPasswordLength)&&void 0!==t?t:6,s.maxPasswordLength&&(this.customStrengthOptions.maxPasswordLength=s.maxPasswordLength),void 0!==s.containsLowercaseCharacter&&(this.customStrengthOptions.containsLowercaseLetter=s.containsLowercaseCharacter),void 0!==s.containsUppercaseCharacter&&(this.customStrengthOptions.containsUppercaseLetter=s.containsUppercaseCharacter),void 0!==s.containsNumericCharacter&&(this.customStrengthOptions.containsNumericCharacter=s.containsNumericCharacter),void 0!==s.containsNonAlphanumericCharacter&&(this.customStrengthOptions.containsNonAlphanumericCharacter=s.containsNonAlphanumericCharacter),this.enforcementState=e.enforcementState,"ENFORCEMENT_STATE_UNSPECIFIED"===this.enforcementState&&(this.enforcementState="OFF"),// Use an empty string if no non-alphanumeric characters are specified in the response.
this.allowedNonAlphanumericCharacters=null!==(n=null===(r=e.allowedNonAlphanumericCharacters)||void 0===r?void 0:r.join(""))&&void 0!==n?n:"",this.forceUpgradeOnSignin=null!==(a=e.forceUpgradeOnSignin)&&void 0!==a&&a,this.schemaVersion=e.schemaVersion}validatePassword(e){var t,r,n,a,s,i;let o={isValid:!0,passwordPolicy:this};return(// Check the password length and character options.
this.validatePasswordLengthOptions(e,o),this.validatePasswordCharacterOptions(e,o),// Combine the status into single isValid property.
o.isValid&&(o.isValid=null===(t=o.meetsMinPasswordLength)||void 0===t||t),o.isValid&&(o.isValid=null===(r=o.meetsMaxPasswordLength)||void 0===r||r),o.isValid&&(o.isValid=null===(n=o.containsLowercaseLetter)||void 0===n||n),o.isValid&&(o.isValid=null===(a=o.containsUppercaseLetter)||void 0===a||a),o.isValid&&(o.isValid=null===(s=o.containsNumericCharacter)||void 0===s||s),o.isValid&&(o.isValid=null===(i=o.containsNonAlphanumericCharacter)||void 0===i||i),o)}/**
     * Validates that the password meets the length options for the policy.
     *
     * @param password Password to validate.
     * @param status Validation status.
     */validatePasswordLengthOptions(e,t){let r=this.customStrengthOptions.minPasswordLength,n=this.customStrengthOptions.maxPasswordLength;r&&(t.meetsMinPasswordLength=e.length>=r),n&&(t.meetsMaxPasswordLength=e.length<=n)}/**
     * Validates that the password meets the character options for the policy.
     *
     * @param password Password to validate.
     * @param status Validation status.
     */validatePasswordCharacterOptions(e,t){let r;// Assign statuses for requirements even if the password is an empty string.
this.updatePasswordCharacterOptionsStatuses(t,/* containsLowercaseCharacter= */!1,/* containsUppercaseCharacter= */!1,/* containsNumericCharacter= */!1,/* containsNonAlphanumericCharacter= */!1);for(let n=0;n<e.length;n++)r=e.charAt(n),this.updatePasswordCharacterOptionsStatuses(t,/* containsLowercaseCharacter= */r>="a"&&r<="z",/* containsUppercaseCharacter= */r>="A"&&r<="Z",/* containsNumericCharacter= */r>="0"&&r<="9",/* containsNonAlphanumericCharacter= */this.allowedNonAlphanumericCharacters.includes(r))}/**
     * Updates the running validation status with the statuses for the character options.
     * Expected to be called each time a character is processed to update each option status
     * based on the current character.
     *
     * @param status Validation status.
     * @param containsLowercaseCharacter Whether the character is a lowercase letter.
     * @param containsUppercaseCharacter Whether the character is an uppercase letter.
     * @param containsNumericCharacter Whether the character is a numeric character.
     * @param containsNonAlphanumericCharacter Whether the character is a non-alphanumeric character.
     */updatePasswordCharacterOptionsStatuses(e,t,r,n,a){this.customStrengthOptions.containsLowercaseLetter&&(e.containsLowercaseLetter||(e.containsLowercaseLetter=t)),this.customStrengthOptions.containsUppercaseLetter&&(e.containsUppercaseLetter||(e.containsUppercaseLetter=r)),this.customStrengthOptions.containsNumericCharacter&&(e.containsNumericCharacter||(e.containsNumericCharacter=n)),this.customStrengthOptions.containsNonAlphanumericCharacter&&(e.containsNonAlphanumericCharacter||(e.containsNonAlphanumericCharacter=a))}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class rC{constructor(e,t,r,n){this.app=e,this.heartbeatServiceProvider=t,this.appCheckServiceProvider=r,this.config=n,this.currentUser=null,this.emulatorConfig=null,this.operations=Promise.resolve(),this.authStateSubscription=new rE(this),this.idTokenSubscription=new rE(this),this.beforeStateQueue=new rN(this),this.redirectUser=null,this.isProactiveRefreshEnabled=!1,this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION=1,// Any network calls will set this to true and prevent subsequent emulator
// initialization
this._canInitEmulator=!0,this._isInitialized=!1,this._deleted=!1,this._initializationPromise=null,this._popupRedirectResolver=null,this._errorFactory=tC,this._agentRecaptchaConfig=null,this._tenantRecaptchaConfigs={},this._projectPasswordPolicy=null,this._tenantPasswordPolicies={},// Tracks the last notified UID for state change listeners to prevent
// repeated calls to the callbacks. Undefined means it's never been
// called, whereas null means it's been called with a signed out user
this.lastNotifiedUid=void 0,this.languageCode=null,this.tenantId=null,this.settings={appVerificationDisabledForTesting:!1},this.frameworks=[],this.name=e.name,this.clientVersion=n.sdkClientVersion}_initializeWithPersistence(e,t){return t&&(this._popupRedirectResolver=ru(t)),// Have to check for app deletion throughout initialization (after each
// promise resolution)
this._initializationPromise=this.queue(async()=>{var r,n;if(!this._deleted&&(this.persistenceManager=await rp.create(this,e),!this._deleted)){// Initialize the resolver early if necessary (only applicable to web:
// this will cause the iframe to load immediately in certain cases)
if(null===(r=this._popupRedirectResolver)||void 0===r?void 0:r._shouldInitProactively)try{await this._popupRedirectResolver._initialize(this)}catch(e){/* Ignore the error */}await this.initializeCurrentUser(t),this.lastNotifiedUid=(null===(n=this.currentUser)||void 0===n?void 0:n.uid)||null,this._deleted||(this._isInitialized=!0)}}),this._initializationPromise}/**
     * If the persistence is changed in another window, the user manager will let us know
     */async _onStorageEvent(){if(this._deleted)return;let e=await this.assertedPersistence.getCurrentUser();if(this.currentUser||e){// If the same user is to be synchronized.
if(this.currentUser&&e&&this.currentUser.uid===e.uid){// Data update, simply copy data changes.
this._currentUser._assign(e),// If tokens changed from previous user tokens, this will trigger
// notifyAuthListeners_.
await this.currentUser.getIdToken();return}// Update current Auth state. Either a new login or logout.
// Skip blocking callbacks, they should not apply to a change in another tab.
await this._updateCurrentUser(e,/* skipBeforeStateCallbacks */!0)}}async initializeCurrentUserFromIdToken(e){try{let t=await t1(this,{idToken:e}),r=await ro._fromGetAccountInfoResponse(this,t,e);await this.directlySetCurrentUser(r)}catch(e){console.warn("FirebaseServerApp could not login user with provided authIdToken: ",e),await this.directlySetCurrentUser(null)}}async initializeCurrentUser(e){var t;if(tl(this.app)){let e=this.app.settings.authIdToken;return e?new Promise(t=>{setTimeout(()=>this.initializeCurrentUserFromIdToken(e).then(t,t))}):this.directlySetCurrentUser(null)}// First check to see if we have a pending redirect event.
let r=await this.assertedPersistence.getCurrentUser(),n=r,a=!1;if(e&&this.config.authDomain){await this.getOrInitRedirectPersistenceManager();let r=null===(t=this.redirectUser)||void 0===t?void 0:t._redirectEventId,s=null==n?void 0:n._redirectEventId,i=await this.tryRedirectSignIn(e);// If the stored user (i.e. the old "currentUser") has a redirectId that
// matches the redirect user, then we want to initially sign in with the
// new user object from result.
// TODO(samgho): More thoroughly test all of this
(!r||r===s)&&(null==i?void 0:i.user)&&(n=i.user,a=!0)}// If no user in persistence, there is no current user. Set to null.
if(!n)return this.directlySetCurrentUser(null);if(!n._redirectEventId){// This isn't a redirect link operation, we can reload and bail.
// First though, ensure that we check the middleware is happy.
if(a)try{await this.beforeStateQueue.runMiddleware(n)}catch(e){n=r,// We know this is available since the bit is only set when the
// resolver is available
this._popupRedirectResolver._overrideRedirectResult(this,()=>Promise.reject(e))}return n?this.reloadAndSetCurrentUserOrClear(n):this.directlySetCurrentUser(null)}return(// If the redirect user's event ID matches the current user's event ID,
// DO NOT reload the current user, otherwise they'll be cleared from storage.
// This is important for the reauthenticateWithRedirect() flow.
(tD(this._popupRedirectResolver,this,"argument-error"/* AuthErrorCode.ARGUMENT_ERROR */),await this.getOrInitRedirectPersistenceManager(),this.redirectUser&&this.redirectUser._redirectEventId===n._redirectEventId)?this.directlySetCurrentUser(n):this.reloadAndSetCurrentUserOrClear(n))}async tryRedirectSignIn(e){// The redirect user needs to be checked (and signed in if available)
// during auth initialization. All of the normal sign in and link/reauth
// flows call back into auth and push things onto the promise queue. We
// need to await the result of the redirect sign in *inside the promise
// queue*. This presents a problem: we run into deadlock. See:
//    ┌> [Initialization] ─────┐
//    ┌> [<other queue tasks>] │
//    └─ [getRedirectResult] <─┘
//    where [] are tasks on the queue and arrows denote awaits
// Initialization will never complete because it's waiting on something
// that's waiting for initialization to complete!
//
// Instead, this method calls getRedirectResult() (stored in
// _completeRedirectFn) with an optional parameter that instructs all of
// the underlying auth operations to skip anything that mutates auth state.
let t=null;try{// We know this._popupRedirectResolver is set since redirectResolver
// is passed in. The _completeRedirectFn expects the unwrapped extern.
t=await this._popupRedirectResolver._completeRedirectFn(this,e,!0)}catch(e){// Swallow any errors here; the code can retrieve them in
// getRedirectResult().
await this._setRedirectUser(null)}return t}async reloadAndSetCurrentUserOrClear(e){try{await re(e)}catch(e){if((null==e?void 0:e.code)!=="auth/network-request-failed")// them from storage
return this.directlySetCurrentUser(null)}return this.directlySetCurrentUser(e)}useDeviceLanguage(){this.languageCode=function(){if("undefined"==typeof navigator)return null;let e=navigator;return e.languages&&e.languages[0]||// Supported in most browsers, but returns the language of the browser
// UI, not the language set in browser settings.
e.language||// Couldn't determine language.
null}()}async _delete(){this._deleted=!0}async updateCurrentUser(e){if(tl(this.app))return Promise.reject(tP(this));// The public updateCurrentUser method needs to make a copy of the user,
// and also check that the project matches
let t=e?eD(e):null;return t&&tD(t.auth.config.apiKey===this.config.apiKey,this,"invalid-user-token"/* AuthErrorCode.INVALID_AUTH */),this._updateCurrentUser(t&&t._clone(this))}async _updateCurrentUser(e,t=!1){if(!this._deleted)return e&&tD(this.tenantId===e.tenantId,this,"tenant-id-mismatch"/* AuthErrorCode.TENANT_ID_MISMATCH */),t||await this.beforeStateQueue.runMiddleware(e),this.queue(async()=>{await this.directlySetCurrentUser(e),this.notifyAuthListeners()})}async signOut(){return tl(this.app)?Promise.reject(tP(this)):(// Run first, to block _setRedirectUser() if any callbacks fail.
await this.beforeStateQueue.runMiddleware(null),(this.redirectPersistenceManager||this._popupRedirectResolver)&&await this._setRedirectUser(null),this._updateCurrentUser(null,/* skipBeforeStateCallbacks */!0))}setPersistence(e){return tl(this.app)?Promise.reject(tP(this)):this.queue(async()=>{await this.assertedPersistence.setPersistence(ru(e))})}_getRecaptchaConfig(){return null==this.tenantId?this._agentRecaptchaConfig:this._tenantRecaptchaConfigs[this.tenantId]}async validatePassword(e){this._getPasswordPolicyInternal()||await this._updatePasswordPolicy();// Password policy will be defined after fetching.
let t=this._getPasswordPolicyInternal();return(// Check that the policy schema version is supported by the SDK.
// TODO: Update this logic to use a max supported policy schema version once we have multiple schema versions.
t.schemaVersion!==this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION?Promise.reject(this._errorFactory.create("unsupported-password-policy-schema-version"/* AuthErrorCode.UNSUPPORTED_PASSWORD_POLICY_SCHEMA_VERSION */,{})):t.validatePassword(e))}_getPasswordPolicyInternal(){return null===this.tenantId?this._projectPasswordPolicy:this._tenantPasswordPolicies[this.tenantId]}async _updatePasswordPolicy(){let e=await rT(this),t=new rI(e);null===this.tenantId?this._projectPasswordPolicy=t:this._tenantPasswordPolicies[this.tenantId]=t}_getPersistence(){return this.assertedPersistence.persistence.type}_updateErrorMap(e){this._errorFactory=new eT("auth","Firebase",e())}onAuthStateChanged(e,t,r){return this.registerStateListener(this.authStateSubscription,e,t,r)}beforeAuthStateChanged(e,t){return this.beforeStateQueue.pushCallback(e,t)}onIdTokenChanged(e,t,r){return this.registerStateListener(this.idTokenSubscription,e,t,r)}authStateReady(){return new Promise((e,t)=>{if(this.currentUser)e();else{let r=this.onAuthStateChanged(()=>{r(),e()},t)}})}/**
     * Revokes the given access token. Currently only supports Apple OAuth access tokens.
     */async revokeAccessToken(e){if(this.currentUser){let t=await this.currentUser.getIdToken(),r={providerId:"apple.com",tokenType:"ACCESS_TOKEN"/* TokenType.ACCESS_TOKEN */,token:e,idToken:t};null!=this.tenantId&&(r.tenantId=this.tenantId),await ra(this,r)}}toJSON(){var e;return{apiKey:this.config.apiKey,authDomain:this.config.authDomain,appName:this.name,currentUser:null===(e=this._currentUser)||void 0===e?void 0:e.toJSON()}}async _setRedirectUser(e,t){let r=await this.getOrInitRedirectPersistenceManager(t);return null===e?r.removeCurrentUser():r.setCurrentUser(e)}async getOrInitRedirectPersistenceManager(e){if(!this.redirectPersistenceManager){let t=e&&ru(e)||this._popupRedirectResolver;tD(t,this,"argument-error"/* AuthErrorCode.ARGUMENT_ERROR */),this.redirectPersistenceManager=await rp.create(this,[ru(t._redirectPersistence)],"redirectUser"/* KeyName.REDIRECT_USER */),this.redirectUser=await this.redirectPersistenceManager.getCurrentUser()}return this.redirectPersistenceManager}async _redirectUserForId(e){var t,r;return(this._isInitialized&&await this.queue(async()=>{}),(null===(t=this._currentUser)||void 0===t?void 0:t._redirectEventId)===e)?this._currentUser:(null===(r=this.redirectUser)||void 0===r?void 0:r._redirectEventId)===e?this.redirectUser:null}async _persistUserIfCurrent(e){if(e===this.currentUser)return this.queue(async()=>this.directlySetCurrentUser(e))}/** Notifies listeners only if the user is current */_notifyListenersIfCurrent(e){e===this.currentUser&&this.notifyAuthListeners()}_key(){return`${this.config.authDomain}:${this.config.apiKey}:${this.name}`}_startProactiveRefresh(){this.isProactiveRefreshEnabled=!0,this.currentUser&&this._currentUser._startProactiveRefresh()}_stopProactiveRefresh(){this.isProactiveRefreshEnabled=!1,this.currentUser&&this._currentUser._stopProactiveRefresh()}/** Returns the current user cast as the internal type */get _currentUser(){return this.currentUser}notifyAuthListeners(){var e,t;if(!this._isInitialized)return;this.idTokenSubscription.next(this.currentUser);let r=null!==(t=null===(e=this.currentUser)||void 0===e?void 0:e.uid)&&void 0!==t?t:null;this.lastNotifiedUid!==r&&(this.lastNotifiedUid=r,this.authStateSubscription.next(this.currentUser))}registerStateListener(e,t,r,n){if(this._deleted)return()=>{};let a="function"==typeof t?t:t.next.bind(t),s=!1,i=this._isInitialized?Promise.resolve():this._initializationPromise;if(tD(i,this,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),// The callback needs to be called asynchronously per the spec.
// eslint-disable-next-line @typescript-eslint/no-floating-promises
i.then(()=>{s||a(this.currentUser)}),"function"==typeof t){let a=e.addObserver(t,r,n);return()=>{s=!0,a()}}{let r=e.addObserver(t);return()=>{s=!0,r()}}}/**
     * Unprotected (from race conditions) method to set the current user. This
     * should only be called from within a queued callback. This is necessary
     * because the queue shouldn't rely on another queued callback.
     */async directlySetCurrentUser(e){this.currentUser&&this.currentUser!==e&&this._currentUser._stopProactiveRefresh(),e&&this.isProactiveRefreshEnabled&&e._startProactiveRefresh(),this.currentUser=e,e?await this.assertedPersistence.setCurrentUser(e):await this.assertedPersistence.removeCurrentUser()}queue(e){return(// In case something errors, the callback still should be called in order
// to keep the promise chain alive
this.operations=this.operations.then(e,e),this.operations)}get assertedPersistence(){return tD(this.persistenceManager,this,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),this.persistenceManager}_logFramework(e){!e||this.frameworks.includes(e)||(this.frameworks.push(e),// Sort alphabetically so that "FirebaseCore-web,FirebaseUI-web" and
// "FirebaseUI-web,FirebaseCore-web" aren't viewed as different.
this.frameworks.sort(),this.clientVersion=rS(this.config.clientPlatform,this._getFrameworks()))}_getFrameworks(){return this.frameworks}async _getAdditionalHeaders(){var e;// Additional headers on every request
let t={"X-Client-Version":this.clientVersion};this.app.options.appId&&(t["X-Firebase-gmpid"/* HttpHeader.X_FIREBASE_GMPID */]=this.app.options.appId);// If the heartbeat service exists, add the heartbeat string
let r=await (null===(e=this.heartbeatServiceProvider.getImmediate({optional:!0}))||void 0===e?void 0:e.getHeartbeatsHeader());r&&(t["X-Firebase-Client"/* HttpHeader.X_FIREBASE_CLIENT */]=r);// If the App Check service exists, add the App Check token in the headers
let n=await this._getAppCheckToken();return n&&(t["X-Firebase-AppCheck"/* HttpHeader.X_FIREBASE_APP_CHECK */]=n),t}async _getAppCheckToken(){var e;let t=await (null===(e=this.appCheckServiceProvider.getImmediate({optional:!0}))||void 0===e?void 0:e.getToken());return(null==t?void 0:t.error)&&// In the error case, a dummy token will be returned along with an error field describing
// the error. In general, we shouldn't care about the error condition and just use
// the token (actual or dummy) to send requests.
function(e,...t){tE.logLevel<=ia.WARN&&tE.warn(`Auth (${td}): ${e}`,...t)}(`Error while retrieving App Check token: ${t.error}`),null==t?void 0:t.token}}/** Helper class to wrap subscriber logic */class rE{constructor(e){this.auth=e,this.observer=null,this.addObserver=/**
 * Helper to make a Subscribe function (just like Promise helps make a
 * Thenable).
 *
 * @param executor Function which can make calls to a single Observer
 *     as a proxy.
 * @param onNoObservers Callback when count of Observers goes to zero.
 */function(e,t){let r=new eO(e,void 0);return r.subscribe.bind(r)}(e=>this.observer=e)}get next(){return tD(this.observer,this.auth,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),this.observer.next.bind(this.observer)}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */let rA={async loadJS(){throw Error("Unable to load external scripts")},recaptchaV2Script:"",recaptchaEnterpriseScript:"",gapiScript:""};function rR(e){return`__${e}${Math.floor(1e6*Math.random())}`}class r_{/**
     *
     * @param authExtern - The corresponding Firebase {@link Auth} instance.
     *
     */constructor(e){/**
         * Identifies the type of application verifier (e.g. "recaptcha-enterprise").
         */this.type="recaptcha-enterprise",this.auth=eD(e)}/**
     * Executes the verification process.
     *
     * @returns A Promise for a token that can be used to assert the validity of a request.
     */async verify(e="verify",t=!1){async function r(e){if(!t){if(null==e.tenantId&&null!=e._agentRecaptchaConfig)return e._agentRecaptchaConfig.siteKey;if(null!=e.tenantId&&void 0!==e._tenantRecaptchaConfigs[e.tenantId])return e._tenantRecaptchaConfigs[e.tenantId].siteKey}return new Promise(async(t,r)=>{tJ(e,{clientType:"CLIENT_TYPE_WEB"/* RecaptchaClientType.WEB */,version:"RECAPTCHA_ENTERPRISE"/* RecaptchaVersion.ENTERPRISE */}).then(n=>{if(void 0===n.recaptchaKey)r(Error("recaptcha Enterprise site key undefined"));else{let r=new tY(n);return null==e.tenantId?e._agentRecaptchaConfig=r:e._tenantRecaptchaConfigs[e.tenantId]=r,t(r.siteKey)}}).catch(e=>{r(e)})})}function n(t,r,n){let a=window.grecaptcha;tQ(a)?a.enterprise.ready(()=>{a.enterprise.execute(t,{action:e}).then(e=>{r(e)}).catch(()=>{r("NO_RECAPTCHA")})}):n(Error("No reCAPTCHA enterprise script loaded."))}return new Promise((e,a)=>{r(this.auth).then(r=>{if(!t&&tQ(window.grecaptcha))n(r,e,a);else{var s;if("undefined"==typeof window){a(Error("RecaptchaVerifier is only supported in browser"));return}let t=rA.recaptchaEnterpriseScript;0!==t.length&&(t+=r),(s=t,rA.loadJS(s)).then(()=>{n(r,e,a)}).catch(e=>{a(e)})}}).catch(e=>{a(e)})})}}async function rO(e,t,r,n=!1){let a;let s=new r_(e);try{a=await s.verify(r)}catch(e){a=await s.verify(r,!0)}let i=Object.assign({},t);return n?Object.assign(i,{captchaResp:a}):Object.assign(i,{captchaResponse:a}),Object.assign(i,{clientType:"CLIENT_TYPE_WEB"/* RecaptchaClientType.WEB */}),Object.assign(i,{recaptchaVersion:"RECAPTCHA_ENTERPRISE"/* RecaptchaVersion.ENTERPRISE */}),i}async function rP(e,t,r,n){var a;if(null===(a=e._getRecaptchaConfig())||void 0===a||!a.isProviderEnabled("EMAIL_PASSWORD_PROVIDER"/* RecaptchaProvider.EMAIL_PASSWORD_PROVIDER */))return n(e,t).catch(async a=>{if("auth/missing-recaptcha-token"!==a.code)return Promise.reject(a);{console.log(`${r} is protected by reCAPTCHA Enterprise for this project. Automatically triggering the reCAPTCHA flow and restarting the flow.`);let a=await rO(e,t,r,"getOobCode"/* RecaptchaActionName.GET_OOB_CODE */===r);return n(e,a)}});{let a=await rO(e,t,r,"getOobCode"/* RecaptchaActionName.GET_OOB_CODE */===r);return n(e,a)}}function r$(e){let t=e.indexOf(":");return t<0?"":e.substr(0,t+1)}function rD(e){if(!e)return null;let t=Number(e);return isNaN(t)?null:t}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Interface that represents the credentials returned by an {@link AuthProvider}.
 *
 * @remarks
 * Implementations specify the details about each auth provider's credential requirements.
 *
 * @public
 */class rM{/** @internal */constructor(/**
     * The authentication provider ID for the credential.
     *
     * @remarks
     * For example, 'facebook.com', or 'google.com'.
     */e,/**
     * The authentication sign in method for the credential.
     *
     * @remarks
     * For example, {@link SignInMethod}.EMAIL_PASSWORD, or
     * {@link SignInMethod}.EMAIL_LINK. This corresponds to the sign-in method
     * identifier as returned in {@link fetchSignInMethodsForEmail}.
     */t){this.providerId=e,this.signInMethod=t}/**
     * Returns a JSON-serializable representation of this object.
     *
     * @returns a JSON-serializable representation of this object.
     */toJSON(){return tM("not implemented")}/** @internal */_getIdTokenResponse(e){return tM("not implemented")}/** @internal */_linkToIdToken(e,t){return tM("not implemented")}/** @internal */_getReauthenticationResolver(e){return tM("not implemented")}}// Used for linking an email/password account to an existing idToken. Uses the same request/response
// format as updateEmailPassword.
async function rF(e,t){return tW(e,"POST"/* HttpMethod.POST */,"/v1/accounts:signUp"/* Endpoint.SIGN_UP */,t)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function rL(e,t){return tH(e,"POST"/* HttpMethod.POST */,"/v1/accounts:signInWithPassword"/* Endpoint.SIGN_IN_WITH_PASSWORD */,tU(e,t))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function rj(e,t){return tH(e,"POST"/* HttpMethod.POST */,"/v1/accounts:signInWithEmailLink"/* Endpoint.SIGN_IN_WITH_EMAIL_LINK */,tU(e,t))}async function rB(e,t){return tH(e,"POST"/* HttpMethod.POST */,"/v1/accounts:signInWithEmailLink"/* Endpoint.SIGN_IN_WITH_EMAIL_LINK */,tU(e,t))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Interface that represents the credentials returned by {@link EmailAuthProvider} for
 * {@link ProviderId}.PASSWORD
 *
 * @remarks
 * Covers both {@link SignInMethod}.EMAIL_PASSWORD and
 * {@link SignInMethod}.EMAIL_LINK.
 *
 * @public
 */class rz extends rM{/** @internal */constructor(/** @internal */e,/** @internal */t,r,/** @internal */n=null){super("password"/* ProviderId.PASSWORD */,r),this._email=e,this._password=t,this._tenantId=n}/** @internal */static _fromEmailAndPassword(e,t){return new rz(e,t,"password"/* SignInMethod.EMAIL_PASSWORD */)}/** @internal */static _fromEmailAndCode(e,t,r=null){return new rz(e,t,"emailLink"/* SignInMethod.EMAIL_LINK */,r)}/** {@inheritdoc AuthCredential.toJSON} */toJSON(){return{email:this._email,password:this._password,signInMethod:this.signInMethod,tenantId:this._tenantId}}/**
     * Static method to deserialize a JSON representation of an object into an {@link  AuthCredential}.
     *
     * @param json - Either `object` or the stringified representation of the object. When string is
     * provided, `JSON.parse` would be called first.
     *
     * @returns If the JSON input does not represent an {@link AuthCredential}, null is returned.
     */static fromJSON(e){let t="string"==typeof e?JSON.parse(e):e;if((null==t?void 0:t.email)&&(null==t?void 0:t.password)){if("password"/* SignInMethod.EMAIL_PASSWORD */===t.signInMethod)return this._fromEmailAndPassword(t.email,t.password);if("emailLink"/* SignInMethod.EMAIL_LINK */===t.signInMethod)return this._fromEmailAndCode(t.email,t.password,t.tenantId)}return null}/** @internal */async _getIdTokenResponse(e){switch(this.signInMethod){case"password"/* SignInMethod.EMAIL_PASSWORD */:let t={returnSecureToken:!0,email:this._email,password:this._password,clientType:"CLIENT_TYPE_WEB"/* RecaptchaClientType.WEB */};return rP(e,t,"signInWithPassword"/* RecaptchaActionName.SIGN_IN_WITH_PASSWORD */,rL);case"emailLink"/* SignInMethod.EMAIL_LINK */:return rj(e,{email:this._email,oobCode:this._password});default:tR(e,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */)}}/** @internal */async _linkToIdToken(e,t){switch(this.signInMethod){case"password"/* SignInMethod.EMAIL_PASSWORD */:let r={idToken:t,returnSecureToken:!0,email:this._email,password:this._password,clientType:"CLIENT_TYPE_WEB"/* RecaptchaClientType.WEB */};return rP(e,r,"signUpPassword"/* RecaptchaActionName.SIGN_UP_PASSWORD */,rF);case"emailLink"/* SignInMethod.EMAIL_LINK */:return rB(e,{idToken:t,email:this._email,oobCode:this._password});default:tR(e,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */)}}/** @internal */_getReauthenticationResolver(e){return this._getIdTokenResponse(e)}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function rV(e,t){return tH(e,"POST"/* HttpMethod.POST */,"/v1/accounts:signInWithIdp"/* Endpoint.SIGN_IN_WITH_IDP */,tU(e,t))}/**
 * Represents the OAuth credentials returned by an {@link OAuthProvider}.
 *
 * @remarks
 * Implementations specify the details about each auth provider's credential requirements.
 *
 * @public
 */class rG extends rM{constructor(){super(...arguments),this.pendingToken=null}/** @internal */static _fromParams(e){let t=new rG(e.providerId,e.signInMethod);return e.idToken||e.accessToken?(e.idToken&&(t.idToken=e.idToken),e.accessToken&&(t.accessToken=e.accessToken),e.nonce&&!e.pendingToken&&(t.nonce=e.nonce),e.pendingToken&&(t.pendingToken=e.pendingToken)):e.oauthToken&&e.oauthTokenSecret?(// OAuth 1 and OAuth token with token secret
t.accessToken=e.oauthToken,t.secret=e.oauthTokenSecret):tR("argument-error"/* AuthErrorCode.ARGUMENT_ERROR */),t}/** {@inheritdoc AuthCredential.toJSON}  */toJSON(){return{idToken:this.idToken,accessToken:this.accessToken,secret:this.secret,nonce:this.nonce,pendingToken:this.pendingToken,providerId:this.providerId,signInMethod:this.signInMethod}}/**
     * Static method to deserialize a JSON representation of an object into an
     * {@link  AuthCredential}.
     *
     * @param json - Input can be either Object or the stringified representation of the object.
     * When string is provided, JSON.parse would be called first.
     *
     * @returns If the JSON input does not represent an {@link  AuthCredential}, null is returned.
     */static fromJSON(e){let t="string"==typeof e?JSON.parse(e):e,{providerId:r,signInMethod:n}=t,a=tT(t,["providerId","signInMethod"]);if(!r||!n)return null;let s=new rG(r,n);return s.idToken=a.idToken||void 0,s.accessToken=a.accessToken||void 0,s.secret=a.secret,s.nonce=a.nonce,s.pendingToken=a.pendingToken||null,s}/** @internal */_getIdTokenResponse(e){let t=this.buildRequest();return rV(e,t)}/** @internal */_linkToIdToken(e,t){let r=this.buildRequest();return r.idToken=t,rV(e,r)}/** @internal */_getReauthenticationResolver(e){let t=this.buildRequest();return t.autoCreate=!1,rV(e,t)}buildRequest(){let e={requestUri:"http://localhost",returnSecureToken:!0};if(this.pendingToken)e.pendingToken=this.pendingToken;else{let t={};this.idToken&&(t.id_token=this.idToken),this.accessToken&&(t.access_token=this.accessToken),this.secret&&(t.oauth_token_secret=this.secret),t.providerId=this.providerId,this.nonce&&!this.pendingToken&&(t.nonce=this.nonce),e.postBody=eA(t)}return e}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function rU(e,t){return tW(e,"POST"/* HttpMethod.POST */,"/v1/accounts:sendVerificationCode"/* Endpoint.SEND_VERIFICATION_CODE */,tU(e,t))}async function rW(e,t){return tH(e,"POST"/* HttpMethod.POST */,"/v1/accounts:signInWithPhoneNumber"/* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */,tU(e,t))}async function rq(e,t){let r=await tH(e,"POST"/* HttpMethod.POST */,"/v1/accounts:signInWithPhoneNumber"/* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */,tU(e,t));if(r.temporaryProof)throw tZ(e,"account-exists-with-different-credential"/* AuthErrorCode.NEED_CONFIRMATION */,r);return r}const rH={USER_NOT_FOUND:"user-not-found"/* AuthErrorCode.USER_DELETED */};async function rK(e,t){let r=Object.assign(Object.assign({},t),{operation:"REAUTH"});return tH(e,"POST"/* HttpMethod.POST */,"/v1/accounts:signInWithPhoneNumber"/* Endpoint.SIGN_IN_WITH_PHONE_NUMBER */,tU(e,r),rH)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Represents the credentials returned by {@link PhoneAuthProvider}.
 *
 * @public
 */class rX extends rM{constructor(e){super("phone"/* ProviderId.PHONE */,"phone"/* SignInMethod.PHONE */),this.params=e}/** @internal */static _fromVerification(e,t){return new rX({verificationId:e,verificationCode:t})}/** @internal */static _fromTokenResponse(e,t){return new rX({phoneNumber:e,temporaryProof:t})}/** @internal */_getIdTokenResponse(e){return rW(e,this._makeVerificationRequest())}/** @internal */_linkToIdToken(e,t){return rq(e,Object.assign({idToken:t},this._makeVerificationRequest()))}/** @internal */_getReauthenticationResolver(e){return rK(e,this._makeVerificationRequest())}/** @internal */_makeVerificationRequest(){let{temporaryProof:e,phoneNumber:t,verificationId:r,verificationCode:n}=this.params;return e&&t?{temporaryProof:e,phoneNumber:t}:{sessionInfo:r,code:n}}/** {@inheritdoc AuthCredential.toJSON} */toJSON(){let e={providerId:this.providerId};return this.params.phoneNumber&&(e.phoneNumber=this.params.phoneNumber),this.params.temporaryProof&&(e.temporaryProof=this.params.temporaryProof),this.params.verificationCode&&(e.verificationCode=this.params.verificationCode),this.params.verificationId&&(e.verificationId=this.params.verificationId),e}/** Generates a phone credential based on a plain object or a JSON string. */static fromJSON(e){"string"==typeof e&&(e=JSON.parse(e));let{verificationId:t,verificationCode:r,phoneNumber:n,temporaryProof:a}=e;return r||t||n||a?new rX({verificationId:t,verificationCode:r,phoneNumber:n,temporaryProof:a}):null}}/**
 * A utility class to parse email action URLs such as password reset, email verification,
 * email link sign in, etc.
 *
 * @public
 */class rZ{/**
     * @param actionLink - The link from which to extract the URL.
     * @returns The {@link ActionCodeURL} object, or null if the link is invalid.
     *
     * @internal
     */constructor(e){var t,r,n,a,s,i;let o=eR(e_(e)),l=null!==(t=o.apiKey)&&void 0!==t?t:null,u=null!==(r=o.oobCode)&&void 0!==r?r:null,c=/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Maps the mode string in action code URL to Action Code Info operation.
 *
 * @param mode
 */function(e){switch(e){case"recoverEmail":return"RECOVER_EMAIL"/* ActionCodeOperation.RECOVER_EMAIL */;case"resetPassword":return"PASSWORD_RESET"/* ActionCodeOperation.PASSWORD_RESET */;case"signIn":return"EMAIL_SIGNIN"/* ActionCodeOperation.EMAIL_SIGNIN */;case"verifyEmail":return"VERIFY_EMAIL"/* ActionCodeOperation.VERIFY_EMAIL */;case"verifyAndChangeEmail":return"VERIFY_AND_CHANGE_EMAIL"/* ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL */;case"revertSecondFactorAddition":return"REVERT_SECOND_FACTOR_ADDITION"/* ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION */;default:return null}}(null!==(n=o.mode)&&void 0!==n?n:null);// Validate API key, code and mode.
tD(l&&u&&c,"argument-error"/* AuthErrorCode.ARGUMENT_ERROR */),this.apiKey=l,this.operation=c,this.code=u,this.continueUrl=null!==(a=o.continueUrl)&&void 0!==a?a:null,this.languageCode=null!==(s=o.languageCode)&&void 0!==s?s:null,this.tenantId=null!==(i=o.tenantId)&&void 0!==i?i:null}/**
     * Parses the email action link string and returns an {@link ActionCodeURL} if the link is valid,
     * otherwise returns null.
     *
     * @param link  - The email action link string.
     * @returns The {@link ActionCodeURL} object, or null if the link is invalid.
     *
     * @public
     */static parseLink(e){let t=/**
 * Helper to parse FDL links
 *
 * @param url
 */function(e){let t=eR(e_(e)).link,r=t?eR(e_(t)).deep_link_id:null,n=eR(e_(e)).deep_link_id,a=n?eR(e_(n)).link:null;return a||n||r||t||e}(e);try{return new rZ(t)}catch(e){return null}}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Provider for generating {@link EmailAuthCredential}.
 *
 * @public
 */class rQ{constructor(){/**
         * Always set to {@link ProviderId}.PASSWORD, even for email link.
         */this.providerId=rQ.PROVIDER_ID}/**
     * Initialize an {@link AuthCredential} using an email and password.
     *
     * @example
     * ```javascript
     * const authCredential = EmailAuthProvider.credential(email, password);
     * const userCredential = await signInWithCredential(auth, authCredential);
     * ```
     *
     * @example
     * ```javascript
     * const userCredential = await signInWithEmailAndPassword(auth, email, password);
     * ```
     *
     * @param email - Email address.
     * @param password - User account password.
     * @returns The auth provider credential.
     */static credential(e,t){return rz._fromEmailAndPassword(e,t)}/**
     * Initialize an {@link AuthCredential} using an email and an email link after a sign in with
     * email link operation.
     *
     * @example
     * ```javascript
     * const authCredential = EmailAuthProvider.credentialWithLink(auth, email, emailLink);
     * const userCredential = await signInWithCredential(auth, authCredential);
     * ```
     *
     * @example
     * ```javascript
     * await sendSignInLinkToEmail(auth, email);
     * // Obtain emailLink from user.
     * const userCredential = await signInWithEmailLink(auth, email, emailLink);
     * ```
     *
     * @param auth - The {@link Auth} instance used to verify the link.
     * @param email - Email address.
     * @param emailLink - Sign-in email link.
     * @returns - The auth provider credential.
     */static credentialWithLink(e,t){let r=rZ.parseLink(t);return tD(r,"argument-error"/* AuthErrorCode.ARGUMENT_ERROR */),rz._fromEmailAndCode(e,r.code,r.tenantId)}}/**
 * Always set to {@link ProviderId}.PASSWORD, even for email link.
 */rQ.PROVIDER_ID="password"/* ProviderId.PASSWORD */,/**
 * Always set to {@link SignInMethod}.EMAIL_PASSWORD.
 */rQ.EMAIL_PASSWORD_SIGN_IN_METHOD="password"/* SignInMethod.EMAIL_PASSWORD */,/**
 * Always set to {@link SignInMethod}.EMAIL_LINK.
 */rQ.EMAIL_LINK_SIGN_IN_METHOD="emailLink"/* SignInMethod.EMAIL_LINK */;/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * The base class for all Federated providers (OAuth (including OIDC), SAML).
 *
 * This class is not meant to be instantiated directly.
 *
 * @public
 */class rY{/**
     * Constructor for generic OAuth providers.
     *
     * @param providerId - Provider for which credentials should be generated.
     */constructor(e){this.providerId=e,/** @internal */this.defaultLanguageCode=null,/** @internal */this.customParameters={}}/**
     * Set the language gode.
     *
     * @param languageCode - language code
     */setDefaultLanguage(e){this.defaultLanguageCode=e}/**
     * Sets the OAuth custom parameters to pass in an OAuth request for popup and redirect sign-in
     * operations.
     *
     * @remarks
     * For a detailed list, check the reserved required OAuth 2.0 parameters such as `client_id`,
     * `redirect_uri`, `scope`, `response_type`, and `state` are not allowed and will be ignored.
     *
     * @param customOAuthParameters - The custom OAuth parameters to pass in the OAuth request.
     */setCustomParameters(e){return this.customParameters=e,this}/**
     * Retrieve the current list of {@link CustomParameters}.
     */getCustomParameters(){return this.customParameters}}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Common code to all OAuth providers. This is separate from the
 * {@link OAuthProvider} so that child providers (like
 * {@link GoogleAuthProvider}) don't inherit the `credential` instance method.
 * Instead, they rely on a static `credential` method.
 */class rJ extends rY{constructor(){super(...arguments),/** @internal */this.scopes=[]}/**
     * Add an OAuth scope to the credential.
     *
     * @param scope - Provider OAuth scope to add.
     */addScope(e){return this.scopes.includes(e)||this.scopes.push(e),this}/**
     * Retrieve the current list of OAuth scopes.
     */getScopes(){return[...this.scopes]}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.FACEBOOK.
 *
 * @example
 * ```javascript
 * // Sign in using a redirect.
 * const provider = new FacebookAuthProvider();
 * // Start a sign in process for an unauthenticated user.
 * provider.addScope('user_birthday');
 * await signInWithRedirect(auth, provider);
 * // This will trigger a full page redirect away from your app
 *
 * // After returning from the redirect when your app initializes you can obtain the result
 * const result = await getRedirectResult(auth);
 * if (result) {
 *   // This is the signed-in user
 *   const user = result.user;
 *   // This gives you a Facebook Access Token.
 *   const credential = FacebookAuthProvider.credentialFromResult(result);
 *   const token = credential.accessToken;
 * }
 * ```
 *
 * @example
 * ```javascript
 * // Sign in using a popup.
 * const provider = new FacebookAuthProvider();
 * provider.addScope('user_birthday');
 * const result = await signInWithPopup(auth, provider);
 *
 * // The signed-in user info.
 * const user = result.user;
 * // This gives you a Facebook Access Token.
 * const credential = FacebookAuthProvider.credentialFromResult(result);
 * const token = credential.accessToken;
 * ```
 *
 * @public
 */class r0 extends rJ{constructor(){super("facebook.com"/* ProviderId.FACEBOOK */)}/**
     * Creates a credential for Facebook.
     *
     * @example
     * ```javascript
     * // `event` from the Facebook auth.authResponseChange callback.
     * const credential = FacebookAuthProvider.credential(event.authResponse.accessToken);
     * const result = await signInWithCredential(credential);
     * ```
     *
     * @param accessToken - Facebook access token.
     */static credential(e){return rG._fromParams({providerId:r0.PROVIDER_ID,signInMethod:r0.FACEBOOK_SIGN_IN_METHOD,accessToken:e})}/**
     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.
     *
     * @param userCredential - The user credential.
     */static credentialFromResult(e){return r0.credentialFromTaggedObject(e)}/**
     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was
     * thrown during a sign-in, link, or reauthenticate operation.
     *
     * @param userCredential - The user credential.
     */static credentialFromError(e){return r0.credentialFromTaggedObject(e.customData||{})}static credentialFromTaggedObject({_tokenResponse:e}){if(!e||!("oauthAccessToken"in e)||!e.oauthAccessToken)return null;try{return r0.credential(e.oauthAccessToken)}catch(e){return null}}}/** Always set to {@link SignInMethod}.FACEBOOK. */r0.FACEBOOK_SIGN_IN_METHOD="facebook.com"/* SignInMethod.FACEBOOK */,/** Always set to {@link ProviderId}.FACEBOOK. */r0.PROVIDER_ID="facebook.com"/* ProviderId.FACEBOOK */;/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GOOGLE.
 *
 * @example
 * ```javascript
 * // Sign in using a redirect.
 * const provider = new GoogleAuthProvider();
 * // Start a sign in process for an unauthenticated user.
 * provider.addScope('profile');
 * provider.addScope('email');
 * await signInWithRedirect(auth, provider);
 * // This will trigger a full page redirect away from your app
 *
 * // After returning from the redirect when your app initializes you can obtain the result
 * const result = await getRedirectResult(auth);
 * if (result) {
 *   // This is the signed-in user
 *   const user = result.user;
 *   // This gives you a Google Access Token.
 *   const credential = GoogleAuthProvider.credentialFromResult(result);
 *   const token = credential.accessToken;
 * }
 * ```
 *
 * @example
 * ```javascript
 * // Sign in using a popup.
 * const provider = new GoogleAuthProvider();
 * provider.addScope('profile');
 * provider.addScope('email');
 * const result = await signInWithPopup(auth, provider);
 *
 * // The signed-in user info.
 * const user = result.user;
 * // This gives you a Google Access Token.
 * const credential = GoogleAuthProvider.credentialFromResult(result);
 * const token = credential.accessToken;
 * ```
 *
 * @public
 */class r1 extends rJ{constructor(){super("google.com"/* ProviderId.GOOGLE */),this.addScope("profile")}/**
     * Creates a credential for Google. At least one of ID token and access token is required.
     *
     * @example
     * ```javascript
     * // \`googleUser\` from the onsuccess Google Sign In callback.
     * const credential = GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);
     * const result = await signInWithCredential(credential);
     * ```
     *
     * @param idToken - Google ID token.
     * @param accessToken - Google access token.
     */static credential(e,t){return rG._fromParams({providerId:r1.PROVIDER_ID,signInMethod:r1.GOOGLE_SIGN_IN_METHOD,idToken:e,accessToken:t})}/**
     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.
     *
     * @param userCredential - The user credential.
     */static credentialFromResult(e){return r1.credentialFromTaggedObject(e)}/**
     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was
     * thrown during a sign-in, link, or reauthenticate operation.
     *
     * @param userCredential - The user credential.
     */static credentialFromError(e){return r1.credentialFromTaggedObject(e.customData||{})}static credentialFromTaggedObject({_tokenResponse:e}){if(!e)return null;let{oauthIdToken:t,oauthAccessToken:r}=e;if(!t&&!r)return null;try{return r1.credential(t,r)}catch(e){return null}}}/** Always set to {@link SignInMethod}.GOOGLE. */r1.GOOGLE_SIGN_IN_METHOD="google.com"/* SignInMethod.GOOGLE */,/** Always set to {@link ProviderId}.GOOGLE. */r1.PROVIDER_ID="google.com"/* ProviderId.GOOGLE */;/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.GITHUB.
 *
 * @remarks
 * GitHub requires an OAuth 2.0 redirect, so you can either handle the redirect directly, or use
 * the {@link signInWithPopup} handler:
 *
 * @example
 * ```javascript
 * // Sign in using a redirect.
 * const provider = new GithubAuthProvider();
 * // Start a sign in process for an unauthenticated user.
 * provider.addScope('repo');
 * await signInWithRedirect(auth, provider);
 * // This will trigger a full page redirect away from your app
 *
 * // After returning from the redirect when your app initializes you can obtain the result
 * const result = await getRedirectResult(auth);
 * if (result) {
 *   // This is the signed-in user
 *   const user = result.user;
 *   // This gives you a Github Access Token.
 *   const credential = GithubAuthProvider.credentialFromResult(result);
 *   const token = credential.accessToken;
 * }
 * ```
 *
 * @example
 * ```javascript
 * // Sign in using a popup.
 * const provider = new GithubAuthProvider();
 * provider.addScope('repo');
 * const result = await signInWithPopup(auth, provider);
 *
 * // The signed-in user info.
 * const user = result.user;
 * // This gives you a Github Access Token.
 * const credential = GithubAuthProvider.credentialFromResult(result);
 * const token = credential.accessToken;
 * ```
 * @public
 */class r2 extends rJ{constructor(){super("github.com"/* ProviderId.GITHUB */)}/**
     * Creates a credential for Github.
     *
     * @param accessToken - Github access token.
     */static credential(e){return rG._fromParams({providerId:r2.PROVIDER_ID,signInMethod:r2.GITHUB_SIGN_IN_METHOD,accessToken:e})}/**
     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.
     *
     * @param userCredential - The user credential.
     */static credentialFromResult(e){return r2.credentialFromTaggedObject(e)}/**
     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was
     * thrown during a sign-in, link, or reauthenticate operation.
     *
     * @param userCredential - The user credential.
     */static credentialFromError(e){return r2.credentialFromTaggedObject(e.customData||{})}static credentialFromTaggedObject({_tokenResponse:e}){if(!e||!("oauthAccessToken"in e)||!e.oauthAccessToken)return null;try{return r2.credential(e.oauthAccessToken)}catch(e){return null}}}/** Always set to {@link SignInMethod}.GITHUB. */r2.GITHUB_SIGN_IN_METHOD="github.com"/* SignInMethod.GITHUB */,/** Always set to {@link ProviderId}.GITHUB. */r2.PROVIDER_ID="github.com"/* ProviderId.GITHUB */;/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Provider for generating an {@link OAuthCredential} for {@link ProviderId}.TWITTER.
 *
 * @example
 * ```javascript
 * // Sign in using a redirect.
 * const provider = new TwitterAuthProvider();
 * // Start a sign in process for an unauthenticated user.
 * await signInWithRedirect(auth, provider);
 * // This will trigger a full page redirect away from your app
 *
 * // After returning from the redirect when your app initializes you can obtain the result
 * const result = await getRedirectResult(auth);
 * if (result) {
 *   // This is the signed-in user
 *   const user = result.user;
 *   // This gives you a Twitter Access Token and Secret.
 *   const credential = TwitterAuthProvider.credentialFromResult(result);
 *   const token = credential.accessToken;
 *   const secret = credential.secret;
 * }
 * ```
 *
 * @example
 * ```javascript
 * // Sign in using a popup.
 * const provider = new TwitterAuthProvider();
 * const result = await signInWithPopup(auth, provider);
 *
 * // The signed-in user info.
 * const user = result.user;
 * // This gives you a Twitter Access Token and Secret.
 * const credential = TwitterAuthProvider.credentialFromResult(result);
 * const token = credential.accessToken;
 * const secret = credential.secret;
 * ```
 *
 * @public
 */class r4 extends rJ{constructor(){super("twitter.com"/* ProviderId.TWITTER */)}/**
     * Creates a credential for Twitter.
     *
     * @param token - Twitter access token.
     * @param secret - Twitter secret.
     */static credential(e,t){return rG._fromParams({providerId:r4.PROVIDER_ID,signInMethod:r4.TWITTER_SIGN_IN_METHOD,oauthToken:e,oauthTokenSecret:t})}/**
     * Used to extract the underlying {@link OAuthCredential} from a {@link UserCredential}.
     *
     * @param userCredential - The user credential.
     */static credentialFromResult(e){return r4.credentialFromTaggedObject(e)}/**
     * Used to extract the underlying {@link OAuthCredential} from a {@link AuthError} which was
     * thrown during a sign-in, link, or reauthenticate operation.
     *
     * @param userCredential - The user credential.
     */static credentialFromError(e){return r4.credentialFromTaggedObject(e.customData||{})}static credentialFromTaggedObject({_tokenResponse:e}){if(!e)return null;let{oauthAccessToken:t,oauthTokenSecret:r}=e;if(!t||!r)return null;try{return r4.credential(t,r)}catch(e){return null}}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function r3(e,t){return tH(e,"POST"/* HttpMethod.POST */,"/v1/accounts:signUp"/* Endpoint.SIGN_UP */,tU(e,t))}/** Always set to {@link SignInMethod}.TWITTER. */r4.TWITTER_SIGN_IN_METHOD="twitter.com"/* SignInMethod.TWITTER */,/** Always set to {@link ProviderId}.TWITTER. */r4.PROVIDER_ID="twitter.com"/* ProviderId.TWITTER */;/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class r8{constructor(e){this.user=e.user,this.providerId=e.providerId,this._tokenResponse=e._tokenResponse,this.operationType=e.operationType}static async _fromIdTokenResponse(e,t,r,n=!1){let a=await ro._fromIdTokenResponse(e,r,n),s=r6(r),i=new r8({user:a,providerId:s,_tokenResponse:r,operationType:t});return i}static async _forOperation(e,t,r){await e._updateTokensIfNecessary(r,/* reload */!0);let n=r6(r);return new r8({user:e,providerId:n,_tokenResponse:r,operationType:t})}}function r6(e){return e.providerId?e.providerId:"phoneNumber"in e?"phone"/* ProviderId.PHONE */:null}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class r5 extends eN{constructor(e,t,r,n){var a;super(t.code,t.message),this.operationType=r,this.user=n,// https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
Object.setPrototypeOf(this,r5.prototype),this.customData={appName:e.name,tenantId:null!==(a=e.tenantId)&&void 0!==a?a:void 0,_serverResponse:t.customData._serverResponse,operationType:r}}static _fromErrorAndOperation(e,t,r,n){return new r5(e,t,r,n)}}function r7(e,t,r,n){let a="reauthenticate"/* OperationType.REAUTHENTICATE */===t?r._getReauthenticationResolver(e):r._getIdTokenResponse(e);return a.catch(r=>{if("auth/multi-factor-auth-required"===r.code)throw r5._fromErrorAndOperation(e,r,t,n);throw r})}async function r9(e,t,r=!1){let n=await t5(e,t._linkToIdToken(e.auth,await e.getIdToken()),r);return r8._forOperation(e,"link"/* OperationType.LINK */,n)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function ne(e,t,r=!1){let{auth:n}=e;if(tl(n.app))return Promise.reject(tP(n));let a="reauthenticate"/* OperationType.REAUTHENTICATE */;try{let s=await t5(e,r7(n,a,t,e),r);tD(s.idToken,n,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */);let i=t8(s.idToken);tD(i,n,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */);let{sub:o}=i;return tD(e.uid===o,n,"user-mismatch"/* AuthErrorCode.USER_MISMATCH */),r8._forOperation(e,a,s)}catch(e){throw(null==e?void 0:e.code)==="auth/user-not-found"&&tR(n,"user-mismatch"/* AuthErrorCode.USER_MISMATCH */),e}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function nt(e,t,r=!1){if(tl(e.app))return Promise.reject(tP(e));let n="signIn"/* OperationType.SIGN_IN */,a=await r7(e,n,t),s=await r8._fromIdTokenResponse(e,n,a);return r||await e._updateCurrentUser(s.user),s}/**
 * Asynchronously signs in with the given credentials.
 *
 * @remarks
 * An {@link AuthProvider} can be used to generate the credential.
 *
 * This method is not supported by {@link Auth} instances created with a
 * {@link @firebase/app#FirebaseServerApp}.
 *
 * @param auth - The {@link Auth} instance.
 * @param credential - The auth credential.
 *
 * @public
 */async function nr(e,t){return nt(eD(e),t)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Updates the password policy cached in the {@link Auth} instance if a policy is already
 * cached for the project or tenant.
 *
 * @remarks
 * We only fetch the password policy if the password did not meet policy requirements and
 * there is an existing policy cached. A developer must call validatePassword at least
 * once for the cache to be automatically updated.
 *
 * @param auth - The {@link Auth} instance.
 *
 * @private
 */async function nn(e){let t=eD(e);t._getPasswordPolicyInternal()&&await t._updatePasswordPolicy()}/**
 * Creates a new user account associated with the specified email address and password.
 *
 * @remarks
 * On successful creation of the user account, this user will also be signed in to your application.
 *
 * User account creation can fail if the account already exists or the password is invalid.
 *
 * This method is not supported on {@link Auth} instances created with a
 * {@link @firebase/app#FirebaseServerApp}.
 *
 * Note: The email address acts as a unique identifier for the user and enables an email-based
 * password reset. This function will create a new user account and set the initial user password.
 *
 * @param auth - The {@link Auth} instance.
 * @param email - The user's email address.
 * @param password - The user's chosen password.
 *
 * @public
 */async function na(e,t,r){if(tl(e.app))return Promise.reject(tP(e));let n=eD(e),a=rP(n,{returnSecureToken:!0,email:t,password:r,clientType:"CLIENT_TYPE_WEB"/* RecaptchaClientType.WEB */},"signUpPassword"/* RecaptchaActionName.SIGN_UP_PASSWORD */,r3),s=await a.catch(t=>{throw"auth/password-does-not-meet-requirements"===t.code&&nn(e),t}),i=await r8._fromIdTokenResponse(n,"signIn"/* OperationType.SIGN_IN */,s);return await n._updateCurrentUser(i.user),i}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function ns(e,t){return tW(e,"POST"/* HttpMethod.POST */,"/v1/accounts:update"/* Endpoint.SET_ACCOUNT_INFO */,t)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Updates a user's profile data.
 *
 * @param user - The user.
 * @param profile - The profile's `displayName` and `photoURL` to update.
 *
 * @public
 */async function ni(e,{displayName:t,photoURL:r}){if(void 0===t&&void 0===r)return;let n=eD(e),a=await n.getIdToken(),s=await t5(n,ns(n.auth,{idToken:a,displayName:t,photoUrl:r,returnSecureToken:!0}));n.displayName=s.displayName||null,n.photoURL=s.photoUrl||null;// Update the password provider as well
let i=n.providerData.find(({providerId:e})=>"password"/* ProviderId.PASSWORD */===e);i&&(i.displayName=n.displayName,i.photoURL=n.photoURL),await n._updateTokensIfNecessary(s)}new WeakMap;const no="__sak";/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */// There are two different browser persistence types: local and session.
// Both have the same implementation but use a different underlying storage
// object.
class nl{constructor(e,t){this.storageRetriever=e,this.type=t}_isAvailable(){try{if(!this.storage)return Promise.resolve(!1);return this.storage.setItem(no,"1"),this.storage.removeItem(no),Promise.resolve(!0)}catch(e){return Promise.resolve(!1)}}_set(e,t){return this.storage.setItem(e,JSON.stringify(t)),Promise.resolve()}_get(e){let t=this.storage.getItem(e);return Promise.resolve(t?JSON.parse(t):null)}_remove(e){return this.storage.removeItem(e),Promise.resolve()}get storage(){return this.storageRetriever()}}class nu extends nl{constructor(){super(()=>window.localStorage,"LOCAL"/* PersistenceType.LOCAL */),this.boundEventHandler=(e,t)=>this.onStorageEvent(e,t),this.listeners={},this.localCache={},// setTimeout return value is platform specific
// eslint-disable-next-line @typescript-eslint/no-explicit-any
this.pollTimer=null,// Safari or iOS browser and embedded in an iframe.
this.safariLocalStorageNotSynced=/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(){let e=ex();return rm(e)||rw(e)}()&&function(){try{// Check that the current window is not the top window.
// If so, return true.
return!!(window&&window!==window.top)}catch(e){return!1}}(),// Whether to use polling instead of depending on window events
this.fallbackToPolling=rk(),this._shouldAllowMigration=!0}forAllChangedKeys(e){// Check all keys with listeners on them.
for(let t of Object.keys(this.listeners)){// Get value from localStorage.
let r=this.storage.getItem(t),n=this.localCache[t];// If local map value does not match, trigger listener with storage event.
// Differentiate this simulated event from the real storage event.
r!==n&&e(t,n,r)}}onStorageEvent(e,t=!1){// Key would be null in some situations, like when localStorage is cleared
if(!e.key){this.forAllChangedKeys((e,t,r)=>{this.notifyListeners(e,r)});return}let r=e.key;// Safari embedded iframe. Storage event will trigger with the delta
// changes but no changes will be applied to the iframe localStorage.
if(t?// Remove storage event listener to prevent possible event duplication.
this.detachListener():// Remove polling listener to prevent possible event duplication.
this.stopPolling(),this.safariLocalStorageNotSynced){// Get current iframe page value.
let n=this.storage.getItem(r);// Value not synchronized, synchronize manually.
if(e.newValue!==n)null!==e.newValue?this.storage.setItem(r,e.newValue):this.storage.removeItem(r);else if(this.localCache[r]===e.newValue&&!t)return}let n=()=>{// Keep local map up to date in case storage event is triggered before
// poll.
let e=this.storage.getItem(r);(t||this.localCache[r]!==e)&&this.notifyListeners(r,e)},a=this.storage.getItem(r);/** Detects Internet Explorer. */(function(){let e=ex();return e.indexOf("MSIE ")>=0||e.indexOf("Trident/")>=0})()&&10===document.documentMode&&a!==e.newValue&&e.newValue!==e.oldValue?// correct key, oldValue and newValue but localStorage.getItem(key) does
// not yield the updated value until a few milliseconds. This ensures
// this recovers from that situation.
setTimeout(n,10):n()}notifyListeners(e,t){this.localCache[e]=t;let r=this.listeners[e];if(r)for(let e of Array.from(r))e(t?JSON.parse(t):t)}startPolling(){this.stopPolling(),this.pollTimer=setInterval(()=>{this.forAllChangedKeys((e,t,r)=>{this.onStorageEvent(new StorageEvent("storage",{key:e,oldValue:t,newValue:r}),/* poll */!0)})},1e3)}stopPolling(){this.pollTimer&&(clearInterval(this.pollTimer),this.pollTimer=null)}attachListener(){window.addEventListener("storage",this.boundEventHandler)}detachListener(){window.removeEventListener("storage",this.boundEventHandler)}_addListener(e,t){0===Object.keys(this.listeners).length&&(this.fallbackToPolling?this.startPolling():this.attachListener()),this.listeners[e]||(this.listeners[e]=new Set,// Populate the cache to avoid spuriously triggering on first poll.
this.localCache[e]=this.storage.getItem(e)),this.listeners[e].add(t)}_removeListener(e,t){this.listeners[e]&&(this.listeners[e].delete(t),0===this.listeners[e].size&&delete this.listeners[e]),0===Object.keys(this.listeners).length&&(this.detachListener(),this.stopPolling())}// Update local cache on base operations:
async _set(e,t){await super._set(e,t),this.localCache[e]=JSON.stringify(t)}async _get(e){let t=await super._get(e);return this.localCache[e]=JSON.stringify(t),t}async _remove(e){await super._remove(e),delete this.localCache[e]}}nu.type="LOCAL";/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class nc extends nl{constructor(){super(()=>window.sessionStorage,"SESSION"/* PersistenceType.SESSION */)}_addListener(e,t){}_removeListener(e,t){}}nc.type="SESSION";/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Interface class for receiving messages.
 *
 */class nd{constructor(e){this.eventTarget=e,this.handlersMap={},this.boundEventHandler=this.handleEvent.bind(this)}/**
     * Obtain an instance of a Receiver for a given event target, if none exists it will be created.
     *
     * @param eventTarget - An event target (such as window or self) through which the underlying
     * messages will be received.
     */static _getInstance(e){// The results are stored in an array since objects can't be keys for other
// objects. In addition, setting a unique property on an event target as a
// hash map key may not be allowed due to CORS restrictions.
let t=this.receivers.find(t=>t.isListeningto(e));if(t)return t;let r=new nd(e);return this.receivers.push(r),r}isListeningto(e){return this.eventTarget===e}/**
     * Fans out a MessageEvent to the appropriate listeners.
     *
     * @remarks
     * Sends an {@link Status.ACK} upon receipt and a {@link Status.DONE} once all handlers have
     * finished processing.
     *
     * @param event - The MessageEvent.
     *
     */async handleEvent(e){let{eventId:t,eventType:r,data:n}=e.data,a=this.handlersMap[r];if(!(null==a?void 0:a.size))return;e.ports[0].postMessage({status:"ack"/* _Status.ACK */,eventId:t,eventType:r});let s=Array.from(a).map(async t=>t(e.origin,n)),i=await Promise.all(s.map(async e=>{try{let t=await e;return{fulfilled:!0,value:t}}catch(e){return{fulfilled:!1,reason:e}}}));e.ports[0].postMessage({status:"done"/* _Status.DONE */,eventId:t,eventType:r,response:i})}/**
     * Subscribe an event handler for a particular event.
     *
     * @param eventType - Event name to subscribe to.
     * @param eventHandler - The event handler which should receive the events.
     *
     */_subscribe(e,t){0===Object.keys(this.handlersMap).length&&this.eventTarget.addEventListener("message",this.boundEventHandler),this.handlersMap[e]||(this.handlersMap[e]=new Set),this.handlersMap[e].add(t)}/**
     * Unsubscribe an event handler from a particular event.
     *
     * @param eventType - Event name to unsubscribe from.
     * @param eventHandler - Optinoal event handler, if none provided, unsubscribe all handlers on this event.
     *
     */_unsubscribe(e,t){this.handlersMap[e]&&t&&this.handlersMap[e].delete(t),t&&0!==this.handlersMap[e].size||delete this.handlersMap[e],0===Object.keys(this.handlersMap).length&&this.eventTarget.removeEventListener("message",this.boundEventHandler)}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function np(e="",t=10){let r="";for(let e=0;e<t;e++)r+=Math.floor(10*Math.random());return e+r}nd.receivers=[];/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Interface for sending messages and waiting for a completion response.
 *
 */class nh{constructor(e){this.target=e,this.handlers=new Set}/**
     * Unsubscribe the handler and remove it from our tracking Set.
     *
     * @param handler - The handler to unsubscribe.
     */removeMessageHandler(e){e.messageChannel&&(e.messageChannel.port1.removeEventListener("message",e.onMessage),e.messageChannel.port1.close()),this.handlers.delete(e)}/**
     * Send a message to the Receiver located at {@link target}.
     *
     * @remarks
     * We'll first wait a bit for an ACK , if we get one we will wait significantly longer until the
     * receiver has had a chance to fully process the event.
     *
     * @param eventType - Type of event to send.
     * @param data - The payload of the event.
     * @param timeout - Timeout for waiting on an ACK from the receiver.
     *
     * @returns An array of settled promises from all the handlers that were listening on the receiver.
     */async _send(e,t,r=50/* _TimeoutDuration.ACK */){let n,a;let s="undefined"!=typeof MessageChannel?new MessageChannel:null;if(!s)throw Error("connection_unavailable"/* _MessageError.CONNECTION_UNAVAILABLE */);return new Promise((i,o)=>{let l=np("",20);s.port1.start();let u=setTimeout(()=>{o(Error("unsupported_event"/* _MessageError.UNSUPPORTED_EVENT */))},r);a={messageChannel:s,onMessage(e){if(e.data.eventId===l)switch(e.data.status){case"ack"/* _Status.ACK */:// The receiver should ACK first.
clearTimeout(u),n=setTimeout(()=>{o(Error("timeout"/* _MessageError.TIMEOUT */))},3e3/* _TimeoutDuration.COMPLETION */);break;case"done"/* _Status.DONE */:// Once the receiver's handlers are finished we will get the results.
clearTimeout(n),i(e.data.response);break;default:clearTimeout(u),clearTimeout(n),o(Error("invalid_response"/* _MessageError.INVALID_RESPONSE */))}}},this.handlers.add(a),s.port1.addEventListener("message",a.onMessage),this.target.postMessage({eventType:e,eventId:l,data:t},[s.port2])}).finally(()=>{a&&this.removeMessageHandler(a)})}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Lazy accessor for window, since the compat layer won't tree shake this out,
 * we need to make sure not to mess with window unless we have to
 */function nf(){return window}/**
 * @license
 * Copyright 2020 Google LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function nm(){return void 0!==nf().WorkerGlobalScope&&"function"==typeof nf().importScripts}async function ng(){if(!(null==navigator?void 0:navigator.serviceWorker))return null;try{let e=await navigator.serviceWorker.ready;return e.active}catch(e){return null}}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const ny="firebaseLocalStorageDb",nb="firebaseLocalStorage",nv="fbase_key";/**
 * Promise wrapper for IDBRequest
 *
 * Unfortunately we can't cleanly extend Promise<T> since promises are not callable in ES6
 *
 */class nx{constructor(e){this.request=e}toPromise(){return new Promise((e,t)=>{this.request.addEventListener("success",()=>{e(this.request.result)}),this.request.addEventListener("error",()=>{t(this.request.error)})})}}function nw(e,t){return e.transaction([nb],t?"readwrite":"readonly").objectStore(nb)}function nk(){let e=indexedDB.open(ny,1);return new Promise((t,r)=>{e.addEventListener("error",()=>{r(e.error)}),e.addEventListener("upgradeneeded",()=>{let t=e.result;try{t.createObjectStore(nb,{keyPath:nv})}catch(e){r(e)}}),e.addEventListener("success",async()=>{let r=e.result;// Strange bug that occurs in Firefox when multiple tabs are opened at the
// same time. The only way to recover seems to be deleting the database
// and re-initializing it.
// https://github.com/firebase/firebase-js-sdk/issues/634
r.objectStoreNames.contains(nb)?t(r):(// Need to close the database or else you get a `blocked` event
r.close(),await function(){let e=indexedDB.deleteDatabase(ny);return new nx(e).toPromise()}(),t(await nk()))})})}async function nS(e,t,r){let n=nw(e,!0).put({[nv]:t,value:r});return new nx(n).toPromise()}async function nN(e,t){let r=nw(e,!1).get(t),n=await new nx(r).toPromise();return void 0===n?null:n.value}function nT(e,t){let r=nw(e,!0).delete(t);return new nx(r).toPromise()}class nI{constructor(){this.type="LOCAL"/* PersistenceType.LOCAL */,this._shouldAllowMigration=!0,this.listeners={},this.localCache={},// setTimeout return value is platform specific
// eslint-disable-next-line @typescript-eslint/no-explicit-any
this.pollTimer=null,this.pendingWrites=0,this.receiver=null,this.sender=null,this.serviceWorkerReceiverAvailable=!1,this.activeServiceWorker=null,// Fire & forget the service worker registration as it may never resolve
this._workerInitializationPromise=this.initializeServiceWorkerMessaging().then(()=>{},()=>{})}async _openDb(){return this.db||(this.db=await nk()),this.db}async _withRetries(e){let t=0;for(;;)try{let t=await this._openDb();return await e(t)}catch(e){if(t++>3)throw e;this.db&&(this.db.close(),this.db=void 0);// TODO: consider adding exponential backoff
}}/**
     * IndexedDB events do not propagate from the main window to the worker context.  We rely on a
     * postMessage interface to send these events to the worker ourselves.
     */async initializeServiceWorkerMessaging(){return nm()?this.initializeReceiver():this.initializeSender()}/**
     * As the worker we should listen to events from the main window.
     */async initializeReceiver(){this.receiver=nd._getInstance(nm()?self:null),// Refresh from persistence if we receive a KeyChanged message.
this.receiver._subscribe("keyChanged"/* _EventType.KEY_CHANGED */,async(e,t)=>{let r=await this._poll();return{keyProcessed:r.includes(t.key)}}),// Let the sender know that we are listening so they give us more timeout.
this.receiver._subscribe("ping"/* _EventType.PING */,async(e,t)=>["keyChanged"/* _EventType.KEY_CHANGED */])}/**
     * As the main window, we should let the worker know when keys change (set and remove).
     *
     * @remarks
     * {@link https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerContainer/ready | ServiceWorkerContainer.ready}
     * may not resolve.
     */async initializeSender(){var e,t;if(// Check to see if there's an active service worker.
this.activeServiceWorker=await ng(),!this.activeServiceWorker)return;this.sender=new nh(this.activeServiceWorker);// Ping the service worker to check what events they can handle.
let r=await this.sender._send("ping"/* _EventType.PING */,{},800/* _TimeoutDuration.LONG_ACK */);r&&(null===(e=r[0])||void 0===e?void 0:e.fulfilled)&&(null===(t=r[0])||void 0===t?void 0:t.value.includes("keyChanged"/* _EventType.KEY_CHANGED */))&&(this.serviceWorkerReceiverAvailable=!0)}/**
     * Let the worker know about a changed key, the exact key doesn't technically matter since the
     * worker will just trigger a full sync anyway.
     *
     * @remarks
     * For now, we only support one service worker per page.
     *
     * @param key - Storage key which changed.
     */async notifyServiceWorker(e){var t;if(this.sender&&this.activeServiceWorker&&((null===(t=null==navigator?void 0:navigator.serviceWorker)||void 0===t?void 0:t.controller)||null)===this.activeServiceWorker)try{await this.sender._send("keyChanged"/* _EventType.KEY_CHANGED */,{key:e},this.serviceWorkerReceiverAvailable?800/* _TimeoutDuration.LONG_ACK */:50/* _TimeoutDuration.ACK */)}catch(e){// This is a best effort approach. Ignore errors.
}}async _isAvailable(){try{if(!indexedDB)return!1;let e=await nk();return await nS(e,no,"1"),await nT(e,no),!0}catch(e){}return!1}async _withPendingWrite(e){this.pendingWrites++;try{await e()}finally{this.pendingWrites--}}async _set(e,t){return this._withPendingWrite(async()=>(await this._withRetries(r=>nS(r,e,t)),this.localCache[e]=t,this.notifyServiceWorker(e)))}async _get(e){let t=await this._withRetries(t=>nN(t,e));return this.localCache[e]=t,t}async _remove(e){return this._withPendingWrite(async()=>(await this._withRetries(t=>nT(t,e)),delete this.localCache[e],this.notifyServiceWorker(e)))}async _poll(){// TODO: check if we need to fallback if getAll is not supported
let e=await this._withRetries(e=>{let t=nw(e,!1).getAll();return new nx(t).toPromise()});if(!e||0!==this.pendingWrites)return[];let t=[],r=new Set;if(0!==e.length)for(let{fbase_key:n,value:a}of e)r.add(n),JSON.stringify(this.localCache[n])!==JSON.stringify(a)&&(this.notifyListeners(n,a),t.push(n));for(let e of Object.keys(this.localCache))this.localCache[e]&&!r.has(e)&&(// Deleted
this.notifyListeners(e,null),t.push(e));return t}notifyListeners(e,t){this.localCache[e]=t;let r=this.listeners[e];if(r)for(let e of Array.from(r))e(t)}startPolling(){this.stopPolling(),this.pollTimer=setInterval(async()=>this._poll(),800)}stopPolling(){this.pollTimer&&(clearInterval(this.pollTimer),this.pollTimer=null)}_addListener(e,t){0===Object.keys(this.listeners).length&&this.startPolling(),this.listeners[e]||(this.listeners[e]=new Set,// Populate the cache to avoid spuriously triggering on first poll.
this._get(e)),this.listeners[e].add(t)}_removeListener(e,t){this.listeners[e]&&(this.listeners[e].delete(t),0===this.listeners[e].size&&delete this.listeners[e]),0===Object.keys(this.listeners).length&&this.stopPolling()}}/**
 * Returns a verification ID to be used in conjunction with the SMS code that is sent.
 *
 */async function nC(e,t,r){var n,a,s;let i=await r.verify();try{let o;if(tD("string"==typeof i,e,"argument-error"/* AuthErrorCode.ARGUMENT_ERROR */),tD("recaptcha"===r.type,e,"argument-error"/* AuthErrorCode.ARGUMENT_ERROR */),o="string"==typeof t?{phoneNumber:t}:t,"session"in o){let t=o.session;if("phoneNumber"in o){tD("enroll"/* MultiFactorSessionType.ENROLL */===t.type,e,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */);let r=await (a={idToken:t.credential,phoneEnrollmentInfo:{phoneNumber:o.phoneNumber,recaptchaToken:i}},tW(e,"POST"/* HttpMethod.POST */,"/v2/accounts/mfaEnrollment:start"/* Endpoint.START_MFA_ENROLLMENT */,tU(e,a)));return r.phoneSessionInfo.sessionInfo}{tD("signin"/* MultiFactorSessionType.SIGN_IN */===t.type,e,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */);let r=(null===(n=o.multiFactorHint)||void 0===n?void 0:n.uid)||o.multiFactorUid;tD(r,e,"missing-multi-factor-info"/* AuthErrorCode.MISSING_MFA_INFO */);let a=await (s={mfaPendingCredential:t.credential,mfaEnrollmentId:r,phoneSignInInfo:{recaptchaToken:i}},tW(e,"POST"/* HttpMethod.POST */,"/v2/accounts/mfaSignIn:start"/* Endpoint.START_MFA_SIGN_IN */,tU(e,s)));return a.phoneResponseInfo.sessionInfo}}{let{sessionInfo:t}=await rU(e,{phoneNumber:o.phoneNumber,recaptchaToken:i});return t}}finally{r._reset()}}nI.type="LOCAL",rR("rcb"),new tj(3e4,6e4);/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Provider for generating an {@link PhoneAuthCredential}.
 *
 * @remarks
 * `PhoneAuthProvider` does not work in a Node.js environment.
 *
 * @example
 * ```javascript
 * // 'recaptcha-container' is the ID of an element in the DOM.
 * const applicationVerifier = new RecaptchaVerifier('recaptcha-container');
 * const provider = new PhoneAuthProvider(auth);
 * const verificationId = await provider.verifyPhoneNumber('+16505550101', applicationVerifier);
 * // Obtain the verificationCode from the user.
 * const phoneCredential = PhoneAuthProvider.credential(verificationId, verificationCode);
 * const userCredential = await signInWithCredential(auth, phoneCredential);
 * ```
 *
 * @public
 */class nE{/**
     * @param auth - The Firebase {@link Auth} instance in which sign-ins should occur.
     *
     */constructor(e){/** Always set to {@link ProviderId}.PHONE. */this.providerId=nE.PROVIDER_ID,this.auth=eD(e)}/**
     *
     * Starts a phone number authentication flow by sending a verification code to the given phone
     * number.
     *
     * @example
     * ```javascript
     * const provider = new PhoneAuthProvider(auth);
     * const verificationId = await provider.verifyPhoneNumber(phoneNumber, applicationVerifier);
     * // Obtain verificationCode from the user.
     * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);
     * const userCredential = await signInWithCredential(auth, authCredential);
     * ```
     *
     * @example
     * An alternative flow is provided using the `signInWithPhoneNumber` method.
     * ```javascript
     * const confirmationResult = signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);
     * // Obtain verificationCode from the user.
     * const userCredential = confirmationResult.confirm(verificationCode);
     * ```
     *
     * @param phoneInfoOptions - The user's {@link PhoneInfoOptions}. The phone number should be in
     * E.164 format (e.g. +16505550101).
     * @param applicationVerifier - For abuse prevention, this method also requires a
     * {@link ApplicationVerifier}. This SDK includes a reCAPTCHA-based implementation,
     * {@link RecaptchaVerifier}.
     *
     * @returns A Promise for a verification ID that can be passed to
     * {@link PhoneAuthProvider.credential} to identify this flow..
     */verifyPhoneNumber(e,t){return nC(this.auth,e,eD(t))}/**
     * Creates a phone auth credential, given the verification ID from
     * {@link PhoneAuthProvider.verifyPhoneNumber} and the code that was sent to the user's
     * mobile device.
     *
     * @example
     * ```javascript
     * const provider = new PhoneAuthProvider(auth);
     * const verificationId = provider.verifyPhoneNumber(phoneNumber, applicationVerifier);
     * // Obtain verificationCode from the user.
     * const authCredential = PhoneAuthProvider.credential(verificationId, verificationCode);
     * const userCredential = signInWithCredential(auth, authCredential);
     * ```
     *
     * @example
     * An alternative flow is provided using the `signInWithPhoneNumber` method.
     * ```javascript
     * const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, applicationVerifier);
     * // Obtain verificationCode from the user.
     * const userCredential = await confirmationResult.confirm(verificationCode);
     * ```
     *
     * @param verificationId - The verification ID returned from {@link PhoneAuthProvider.verifyPhoneNumber}.
     * @param verificationCode - The verification code sent to the user's mobile device.
     *
     * @returns The auth provider credential.
     */static credential(e,t){return rX._fromVerification(e,t)}/**
     * Generates an {@link AuthCredential} from a {@link UserCredential}.
     * @param userCredential - The user credential.
     */static credentialFromResult(e){return nE.credentialFromTaggedObject(e)}/**
     * Returns an {@link AuthCredential} when passed an error.
     *
     * @remarks
     *
     * This method works for errors like
     * `auth/account-exists-with-different-credentials`. This is useful for
     * recovering when attempting to set a user's phone number but the number
     * in question is already tied to another account. For example, the following
     * code tries to update the current user's phone number, and if that
     * fails, links the user with the account associated with that number:
     *
     * ```js
     * const provider = new PhoneAuthProvider(auth);
     * const verificationId = await provider.verifyPhoneNumber(number, verifier);
     * try {
     *   const code = ''; // Prompt the user for the verification code
     *   await updatePhoneNumber(
     *       auth.currentUser,
     *       PhoneAuthProvider.credential(verificationId, code));
     * } catch (e) {
     *   if ((e as FirebaseError)?.code === 'auth/account-exists-with-different-credential') {
     *     const cred = PhoneAuthProvider.credentialFromError(e);
     *     await linkWithCredential(auth.currentUser, cred);
     *   }
     * }
     *
     * // At this point, auth.currentUser.phoneNumber === number.
     * ```
     *
     * @param error - The error to generate a credential from.
     */static credentialFromError(e){return nE.credentialFromTaggedObject(e.customData||{})}static credentialFromTaggedObject({_tokenResponse:e}){if(!e)return null;let{phoneNumber:t,temporaryProof:r}=e;return t&&r?rX._fromTokenResponse(t,r):null}}/** Always set to {@link ProviderId}.PHONE. */nE.PROVIDER_ID="phone"/* ProviderId.PHONE */,/** Always set to {@link SignInMethod}.PHONE. */nE.PHONE_SIGN_IN_METHOD="phone"/* SignInMethod.PHONE */;/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class nA extends rM{constructor(e){super("custom"/* ProviderId.CUSTOM */,"custom"/* ProviderId.CUSTOM */),this.params=e}_getIdTokenResponse(e){return rV(e,this._buildIdpRequest())}_linkToIdToken(e,t){return rV(e,this._buildIdpRequest(t))}_getReauthenticationResolver(e){return rV(e,this._buildIdpRequest())}_buildIdpRequest(e){let t={requestUri:this.params.requestUri,sessionId:this.params.sessionId,postBody:this.params.postBody,tenantId:this.params.tenantId,pendingToken:this.params.pendingToken,returnSecureToken:!0,returnIdpCredential:!0};return e&&(t.idToken=e),t}}function nR(e){return nt(e.auth,new nA(e),e.bypassAuthState)}function n_(e){let{auth:t,user:r}=e;return tD(r,t,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),ne(r,new nA(e),e.bypassAuthState)}async function nO(e){let{auth:t,user:r}=e;return tD(r,t,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),r9(r,new nA(e),e.bypassAuthState)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Popup event manager. Handles the popup's entire lifecycle; listens to auth
 * events
 */class nP{constructor(e,t,r,n,a=!1){this.auth=e,this.resolver=r,this.user=n,this.bypassAuthState=a,this.pendingPromise=null,this.eventManager=null,this.filter=Array.isArray(t)?t:[t]}execute(){return new Promise(async(e,t)=>{this.pendingPromise={resolve:e,reject:t};try{this.eventManager=await this.resolver._initialize(this.auth),await this.onExecution(),this.eventManager.registerConsumer(this)}catch(e){this.reject(e)}})}async onAuthEvent(e){let{urlResponse:t,sessionId:r,postBody:n,tenantId:a,error:s,type:i}=e;if(s){this.reject(s);return}let o={auth:this.auth,requestUri:t,sessionId:r,tenantId:a||void 0,postBody:n||void 0,user:this.user,bypassAuthState:this.bypassAuthState};try{this.resolve(await this.getIdpTask(i)(o))}catch(e){this.reject(e)}}onError(e){this.reject(e)}getIdpTask(e){switch(e){case"signInViaPopup"/* AuthEventType.SIGN_IN_VIA_POPUP */:case"signInViaRedirect"/* AuthEventType.SIGN_IN_VIA_REDIRECT */:return nR;case"linkViaPopup"/* AuthEventType.LINK_VIA_POPUP */:case"linkViaRedirect"/* AuthEventType.LINK_VIA_REDIRECT */:return nO;case"reauthViaPopup"/* AuthEventType.REAUTH_VIA_POPUP */:case"reauthViaRedirect"/* AuthEventType.REAUTH_VIA_REDIRECT */:return n_;default:tR(this.auth,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */)}}resolve(e){this.pendingPromise||tM("Pending promise was never set"),this.pendingPromise.resolve(e),this.unregisterAndCleanUp()}reject(e){this.pendingPromise||tM("Pending promise was never set"),this.pendingPromise.reject(e),this.unregisterAndCleanUp()}unregisterAndCleanUp(){this.eventManager&&this.eventManager.unregisterConsumer(this),this.pendingPromise=null,this.cleanUp()}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const n$=new tj(2e3,1e4);/**
 * Popup event manager. Handles the popup's entire lifecycle; listens to auth
 * events
 *
 */class nD extends nP{constructor(e,t,r,n,a){super(e,t,n,a),this.provider=r,this.authWindow=null,this.pollId=null,nD.currentPopupAction&&nD.currentPopupAction.cancel(),nD.currentPopupAction=this}async executeNotNull(){let e=await this.execute();return tD(e,this.auth,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),e}async onExecution(){1===this.filter.length||tM("Popup operations only handle one event");let e=np();this.authWindow=await this.resolver._openPopup(this.auth,this.provider,this.filter[0],e),this.authWindow.associatedEvent=e,// Check for web storage support and origin validation _after_ the popup is
// loaded. These operations are slow (~1 second or so) Rather than
// waiting on them before opening the window, optimistically open the popup
// and check for storage support at the same time. If storage support is
// not available, this will cause the whole thing to reject properly. It
// will also close the popup, but since the promise has already rejected,
// the popup closed by user poll will reject into the void.
this.resolver._originValidation(this.auth).catch(e=>{this.reject(e)}),this.resolver._isIframeWebStorageSupported(this.auth,e=>{e||this.reject(t_(this.auth,"web-storage-unsupported"/* AuthErrorCode.WEB_STORAGE_UNSUPPORTED */))}),// Handle user closure. Notice this does *not* use await
this.pollUserCancellation()}get eventId(){var e;return(null===(e=this.authWindow)||void 0===e?void 0:e.associatedEvent)||null}cancel(){this.reject(t_(this.auth,"cancelled-popup-request"/* AuthErrorCode.EXPIRED_POPUP_REQUEST */))}cleanUp(){this.authWindow&&this.authWindow.close(),this.pollId&&window.clearTimeout(this.pollId),this.authWindow=null,this.pollId=null,nD.currentPopupAction=null}pollUserCancellation(){let e=()=>{var t,r;if(null===(r=null===(t=this.authWindow)||void 0===t?void 0:t.window)||void 0===r?void 0:r.closed){// Make sure that there is sufficient time for whatever action to
// complete. The window could have closed but the sign in network
// call could still be in flight. This is specifically true for
// Firefox or if the opener is in an iframe, in which case the oauth
// helper closes the popup.
this.pollId=window.setTimeout(()=>{this.pollId=null,this.reject(t_(this.auth,"popup-closed-by-user"/* AuthErrorCode.POPUP_CLOSED_BY_USER */))},8e3/* _Timeout.AUTH_EVENT */);return}this.pollId=window.setTimeout(e,n$.get())};e()}}// Only one popup is ever shown at once. The lifecycle of the current popup
// can be managed / cancelled by the constructor.
nD.currentPopupAction=null;// We only get one redirect outcome for any one auth, so just store it
// in here.
const nM=new Map;class nF extends nP{constructor(e,t,r=!1){super(e,["signInViaRedirect"/* AuthEventType.SIGN_IN_VIA_REDIRECT */,"linkViaRedirect"/* AuthEventType.LINK_VIA_REDIRECT */,"reauthViaRedirect"/* AuthEventType.REAUTH_VIA_REDIRECT */,"unknown"/* AuthEventType.UNKNOWN */],t,void 0,r),this.eventId=null}/**
     * Override the execute function; if we already have a redirect result, then
     * just return it.
     */async execute(){let e=nM.get(this.auth._key());if(!e){try{let t=await nL(this.resolver,this.auth),r=t?await super.execute():null;e=()=>Promise.resolve(r)}catch(t){e=()=>Promise.reject(t)}nM.set(this.auth._key(),e)}return this.bypassAuthState||nM.set(this.auth._key(),()=>Promise.resolve(null)),e()}async onAuthEvent(e){if("signInViaRedirect"/* AuthEventType.SIGN_IN_VIA_REDIRECT */===e.type)return super.onAuthEvent(e);if("unknown"/* AuthEventType.UNKNOWN */===e.type){// This is a sentinel value indicating there's no pending redirect
this.resolve(null);return}if(e.eventId){let t=await this.auth._redirectUserForId(e.eventId);if(t)return this.user=t,super.onAuthEvent(e);this.resolve(null)}}async onExecution(){}cleanUp(){}}async function nL(e,t){let r=rd("pendingRedirect",t.config.apiKey,t.name),n=ru(e._redirectPersistence);if(!await n._isAvailable())return!1;let a=await n._get(r)==="true";return await n._remove(r),a}function nj(e,t){nM.set(e._key(),t)}async function nB(e,t,r=!1){if(tl(e.app))return Promise.reject(tP(e));let n=eD(e),a=t?ru(t):(tD(n._popupRedirectResolver,n,"argument-error"/* AuthErrorCode.ARGUMENT_ERROR */),n._popupRedirectResolver),s=new nF(n,a,r),i=await s.execute();return i&&!r&&(delete i.user._redirectEventId,await n._persistUserIfCurrent(i.user),await n._setRedirectUser(null,t)),i}class nz{constructor(e){this.auth=e,this.cachedEventUids=new Set,this.consumers=new Set,this.queuedRedirectEvent=null,this.hasHandledPotentialRedirect=!1,this.lastProcessedEventTime=Date.now()}registerConsumer(e){this.consumers.add(e),this.queuedRedirectEvent&&this.isEventForConsumer(this.queuedRedirectEvent,e)&&(this.sendToConsumer(this.queuedRedirectEvent,e),this.saveEventToCache(this.queuedRedirectEvent),this.queuedRedirectEvent=null)}unregisterConsumer(e){this.consumers.delete(e)}onEvent(e){// Check if the event has already been handled
if(this.hasEventBeenHandled(e))return!1;let t=!1;return this.consumers.forEach(r=>{this.isEventForConsumer(e,r)&&(t=!0,this.sendToConsumer(e,r),this.saveEventToCache(e))}),this.hasHandledPotentialRedirect||!function(e){switch(e.type){case"signInViaRedirect"/* AuthEventType.SIGN_IN_VIA_REDIRECT */:case"linkViaRedirect"/* AuthEventType.LINK_VIA_REDIRECT */:case"reauthViaRedirect"/* AuthEventType.REAUTH_VIA_REDIRECT */:return!0;case"unknown"/* AuthEventType.UNKNOWN */:return nG(e);default:return!1}}(e)||(this.hasHandledPotentialRedirect=!0,t||(this.queuedRedirectEvent=e,t=!0)),t}sendToConsumer(e,t){var r;if(e.error&&!nG(e)){let n=(null===(r=e.error.code)||void 0===r?void 0:r.split("auth/")[1])||"internal-error"/* AuthErrorCode.INTERNAL_ERROR */;t.onError(t_(this.auth,n))}else t.onAuthEvent(e)}isEventForConsumer(e,t){let r=null===t.eventId||!!e.eventId&&e.eventId===t.eventId;return t.filter.includes(e.type)&&r}hasEventBeenHandled(e){return Date.now()-this.lastProcessedEventTime>=6e5&&this.cachedEventUids.clear(),this.cachedEventUids.has(nV(e))}saveEventToCache(e){this.cachedEventUids.add(nV(e)),this.lastProcessedEventTime=Date.now()}}function nV(e){return[e.type,e.eventId,e.sessionId,e.tenantId].filter(e=>e).join("-")}function nG({type:e,error:t}){return"unknown"/* AuthEventType.UNKNOWN */===e&&(null==t?void 0:t.code)==="auth/no-auth-event"}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function nU(e,t={}){return tW(e,"GET"/* HttpMethod.GET */,"/v1/projects"/* Endpoint.GET_PROJECT_CONFIG */,t)}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const nW=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,nq=/^https?/;async function nH(e){// Skip origin validation if we are in an emulated environment
if(e.config.emulator)return;let{authorizedDomains:t}=await nU(e);for(let e of t)try{if(function(e){let t=tF(),{protocol:r,hostname:n}=new URL(t);if(e.startsWith("chrome-extension://")){let a=new URL(e);return""===a.hostname&&""===n?"chrome-extension:"===r&&e.replace("chrome-extension://","")===t.replace("chrome-extension://",""):"chrome-extension:"===r&&a.hostname===n}if(!nq.test(r))return!1;if(nW.test(e))// only contain the IP, no extra character.
return n===e;// Dots in pattern should be escaped.
let a=e.replace(/\./g,"\\."),s=RegExp("^(.+\\."+a+"|"+a+")$","i");return s.test(n)}(e))return}catch(e){// Do nothing if there's a URL error; just continue searching
}// In the old SDK, this error also provides helpful messages.
tR(e,"unauthorized-domain"/* AuthErrorCode.INVALID_ORIGIN */)}/**
 * @license
 * Copyright 2020 Google LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const nK=new tj(3e4,6e4);/**
 * Reset unlaoded GApi modules. If gapi.load fails due to a network error,
 * it will stop working after a retrial. This is a hack to fix this issue.
 */function nX(){// Clear last failed gapi.load state to force next gapi.load to first
// load the failed gapi.iframes module.
// Get gapix.beacon context.
let e=nf().___jsl;// Get current hint.
if(null==e?void 0:e.H){for(let t of Object.keys(e.H))// Clear pending callbacks.
if(// Requested modules.
e.H[t].r=e.H[t].r||[],// Loaded modules.
e.H[t].L=e.H[t].L||[],// Set requested modules to a copy of the loaded modules.
e.H[t].r=[...e.H[t].L],e.CP)for(let t=0;t<e.CP.length;t++)e.CP[t]=null}}let nZ=null;/**
 * @license
 * Copyright 2020 Google LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const nQ=new tj(5e3,15e3),nY={style:{position:"absolute",top:"-100px",width:"1px",height:"1px"},"aria-hidden":"true",tabindex:"-1"},nJ=new Map([["identitytoolkit.googleapis.com"/* DefaultConfig.API_HOST */,"p"],["staging-identitytoolkit.sandbox.googleapis.com","s"],["test-identitytoolkit.sandbox.googleapis.com","t"]// test
]);async function n0(e){let t=await (nZ=nZ||new Promise((t,r)=>{var n,a,s,i;// Function to run when gapi.load is ready.
function o(){// The developer may have tried to previously run gapi.load and failed.
// Run this to fix that.
nX(),gapi.load("gapi.iframes",{callback:()=>{t(gapi.iframes.getContext())},ontimeout:()=>{// The above reset may be sufficient, but having this reset after
// failure ensures that if the developer calls gapi.load after the
// connection is re-established and before another attempt to embed
// the iframe, it would work and would not be broken because of our
// failed attempt.
// Timeout when gapi.iframes.Iframe not loaded.
nX(),r(t_(e,"network-request-failed"/* AuthErrorCode.NETWORK_REQUEST_FAILED */))},timeout:nK.get()})}if(null===(a=null===(n=nf().gapi)||void 0===n?void 0:n.iframes)||void 0===a?void 0:a.Iframe)t(gapi.iframes.getContext());else if(null===(s=nf().gapi)||void 0===s?void 0:s.load)o();else{// Create a new iframe callback when this is called so as not to overwrite
// any previous defined callback. This happens if this method is called
// multiple times in parallel and could result in the later callback
// overwriting the previous one. This would end up with a iframe
// timeout.
let t=rR("iframefcb");// Load GApi loader.
return(// GApi loader not available, dynamically load platform.js.
nf()[t]=()=>{// GApi loader should be ready.
gapi.load?o():r(t_(e,"network-request-failed"/* AuthErrorCode.NETWORK_REQUEST_FAILED */))},(i=`${rA.gapiScript}?onload=${t}`,rA.loadJS(i)).catch(e=>r(e)))}}).catch(e=>{throw(// Reset cached promise to allow for retrial.
nZ=null,e)})),r=nf().gapi;return tD(r,e,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */),t.open({where:document.body,url:function(e){let t=e.config;tD(t.authDomain,e,"auth-domain-config-required"/* AuthErrorCode.MISSING_AUTH_DOMAIN */);let r=t.emulator?tB(t,"emulator/auth/iframe"):`https://${e.config.authDomain}/__/auth/iframe`,n={apiKey:t.apiKey,appName:e.name,v:td},a=nJ.get(e.config.apiHost);a&&(n.eid=a);let s=e._getFrameworks();return s.length&&(n.fw=s.join(",")),`${r}?${eA(n).slice(1)}`}(e),messageHandlersFilter:r.iframes.CROSS_ORIGIN_IFRAMES_FILTER,attributes:nY,dontclear:!0},t=>new Promise(async(r,n)=>{await t.restyle({// Prevent iframe from closing on mouse out.
    setHideOnLeave:!1});let a=t_(e,"network-request-failed"/* AuthErrorCode.NETWORK_REQUEST_FAILED */),s=nf().setTimeout(()=>{n(a)},nQ.get());// Clear timer and resolve pending iframe ready promise.
    function i(){nf().clearTimeout(s),r(t)}// This returns an IThenable. However the reject part does not call
    // when the iframe is not loaded.
    t.ping(i).then(i,()=>{n(a)})}))}/**
 * @license
 * Copyright 2020 Google LLC.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const n1={location:"yes",resizable:"yes",statusbar:"yes",toolbar:"no"};class n2{constructor(e){this.window=e,this.associatedEvent=null}close(){if(this.window)try{this.window.close()}catch(e){}}}/**
 * Fragment name for the App Check token that gets passed to the widget
 *
 * @internal
 */const n4=encodeURIComponent("fac");async function n3(e,t,r,n,a,s){tD(e.config.authDomain,e,"auth-domain-config-required"/* AuthErrorCode.MISSING_AUTH_DOMAIN */),tD(e.config.apiKey,e,"invalid-api-key"/* AuthErrorCode.INVALID_API_KEY */);let i={apiKey:e.config.apiKey,appName:e.name,authType:r,redirectUrl:n,v:td,eventId:a};if(t instanceof rY)// TODO set additionalParams from the provider as well?
for(let[r,n]of(t.setDefaultLanguage(e.languageCode),i.providerId=t.providerId||"",!function(e){for(let t in e)if(Object.prototype.hasOwnProperty.call(e,t))return!1;return!0}(t.getCustomParameters())&&(i.customParameters=JSON.stringify(t.getCustomParameters())),Object.entries(s||{})))i[r]=n;if(t instanceof rJ){let e=t.getScopes().filter(e=>""!==e);e.length>0&&(i.scopes=e.join(","))}for(let t of(e.tenantId&&(i.tid=e.tenantId),Object.keys(i)))void 0===i[t]&&delete i[t];// Sets the App Check token to pass to the widget
let o=await e._getAppCheckToken(),l=o?`#${n4}=${encodeURIComponent(o)}`:"";// Start at index 1 to skip the leading '&' in the query string
return`${function({config:e}){return e.emulator?tB(e,"emulator/auth/handler"):`https://${e.authDomain}/__/auth/handler`}(e)}?${eA(i).slice(1)}${l}`}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * The special web storage event
 *
 */const n8="webStorageSupport",n6=class{constructor(){this.eventManagers={},this.iframes={},this.originValidationPromises={},this._redirectPersistence=nc,this._completeRedirectFn=nB,this._overrideRedirectResult=nj}// Wrapping in async even though we don't await anywhere in order
// to make sure errors are raised as promise rejections
async _openPopup(e,t,r,n){var a;(null===(a=this.eventManagers[e._key()])||void 0===a?void 0:a.manager)||tM("_initialize() not called before _openPopup()");let s=await n3(e,t,r,tF(),n);return function(e,t,r,n=500,a=600){let s=Math.max((window.screen.availHeight-a)/2,0).toString(),i=Math.max((window.screen.availWidth-n)/2,0).toString(),o="",l=Object.assign(Object.assign({},n1),{width:n.toString(),height:a.toString(),top:s,left:i}),u=ex().toLowerCase();r&&(o=rg(u)?"_blank":r),rf(u)&&(// Firefox complains when invalid URLs are popped out. Hacky way to bypass.
t=t||"http://localhost",// Firefox disables by default scrolling on popup windows, which can create
// issues when the user has many Google accounts, for instance.
l.scrollbars="yes");let c=Object.entries(l).reduce((e,[t,r])=>`${e}${t}=${r},`,"");if(function(e=ex()){var t;return rw(e)&&!!(null===(t=window.navigator)||void 0===t?void 0:t.standalone)}(u)&&"_self"!==o)return function(e,t){let r=document.createElement("a");r.href=e,r.target=t;let n=document.createEvent("MouseEvent");n.initMouseEvent("click",!0,!0,window,1,0,0,0,0,!1,!1,!1,!1,1,null),r.dispatchEvent(n)}(t||"",o),new n2(null);// about:blank getting sanitized causing browsers like IE/Edge to display
// brief error message before redirecting to handler.
let d=window.open(t||"",o,c);tD(d,e,"popup-blocked"/* AuthErrorCode.POPUP_BLOCKED */);// Flaky on IE edge, encapsulate with a try and catch.
try{d.focus()}catch(e){}return new n2(d)}(e,s,np())}async _openRedirect(e,t,r,n){await this._originValidation(e);let a=await n3(e,t,r,tF(),n);return nf().location.href=a,new Promise(()=>{})}_initialize(e){let t=e._key();if(this.eventManagers[t]){let{manager:e,promise:r}=this.eventManagers[t];return e?Promise.resolve(e):(r||tM("If manager is not set, promise should be"),r)}let r=this.initAndGetManager(e);return this.eventManagers[t]={promise:r},// If the promise is rejected, the key should be removed so that the
// operation can be retried later.
r.catch(()=>{delete this.eventManagers[t]}),r}async initAndGetManager(e){let t=await n0(e),r=new nz(e);return t.register("authEvent",t=>{tD(null==t?void 0:t.authEvent,e,"invalid-auth-event"/* AuthErrorCode.INVALID_AUTH_EVENT */);// TODO: Consider splitting redirect and popup events earlier on
let n=r.onEvent(t.authEvent);return{status:n?"ACK"/* GapiOutcome.ACK */:"ERROR"/* GapiOutcome.ERROR */}},gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER),this.eventManagers[e._key()]={manager:r},this.iframes[e._key()]=t,r}_isIframeWebStorageSupported(e,t){let r=this.iframes[e._key()];r.send(n8,{type:n8},r=>{var n;let a=null===(n=null==r?void 0:r[0])||void 0===n?void 0:n[n8];void 0!==a&&t(!!a),tR(e,"internal-error"/* AuthErrorCode.INTERNAL_ERROR */)},gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER)}_originValidation(e){let t=e._key();return this.originValidationPromises[t]||(this.originValidationPromises[t]=nH(e)),this.originValidationPromises[t]}get _shouldInitProactively(){// Mobile browsers and Safari need to optimistically initialize
return rk()||rm()||rw()}};class n5{constructor(e){this.factorId=e}_process(e,t,r){switch(t.type){case"enroll"/* MultiFactorSessionType.ENROLL */:return this._finalizeEnroll(e,t.credential,r);case"signin"/* MultiFactorSessionType.SIGN_IN */:return this._finalizeSignIn(e,t.credential);default:return tM("unexpected MultiFactorSessionType")}}}/**
 * {@inheritdoc PhoneMultiFactorAssertion}
 *
 * @public
 */class n7 extends n5{constructor(e){super("phone"/* FactorId.PHONE */),this.credential=e}/** @internal */static _fromCredential(e){return new n7(e)}/** @internal */_finalizeEnroll(e,t,r){return tW(e,"POST"/* HttpMethod.POST */,"/v2/accounts/mfaEnrollment:finalize"/* Endpoint.FINALIZE_MFA_ENROLLMENT */,tU(e,{idToken:t,displayName:r,phoneVerificationInfo:this.credential._makeVerificationRequest()}))}/** @internal */_finalizeSignIn(e,t){return tW(e,"POST"/* HttpMethod.POST */,"/v2/accounts/mfaSignIn:finalize"/* Endpoint.FINALIZE_MFA_SIGN_IN */,tU(e,{mfaPendingCredential:t,phoneVerificationInfo:this.credential._makeVerificationRequest()}))}}class n9 extends n5{constructor(e,t,r){super("totp"/* FactorId.TOTP */),this.otp=e,this.enrollmentId=t,this.secret=r}/** @internal */static _fromSecret(e,t){return new n9(t,void 0,e)}/** @internal */static _fromEnrollmentId(e,t){return new n9(t,e)}/** @internal */async _finalizeEnroll(e,t,r){return tD(void 0!==this.secret,e,"argument-error"/* AuthErrorCode.ARGUMENT_ERROR */),tW(e,"POST"/* HttpMethod.POST */,"/v2/accounts/mfaEnrollment:finalize"/* Endpoint.FINALIZE_MFA_ENROLLMENT */,tU(e,{idToken:t,displayName:r,totpVerificationInfo:this.secret._makeTotpVerificationInfo(this.otp)}))}/** @internal */async _finalizeSignIn(e,t){tD(void 0!==this.enrollmentId&&void 0!==this.otp,e,"argument-error"/* AuthErrorCode.ARGUMENT_ERROR */);let r={verificationCode:this.otp};return tW(e,"POST"/* HttpMethod.POST */,"/v2/accounts/mfaSignIn:finalize"/* Endpoint.FINALIZE_MFA_SIGN_IN */,tU(e,{mfaPendingCredential:t,mfaEnrollmentId:this.enrollmentId,totpVerificationInfo:r}))}}/**
 * Provider for generating a {@link TotpMultiFactorAssertion}.
 *
 * Stores the shared secret key and other parameters to generate time-based OTPs.
 * Implements methods to retrieve the shared secret key and generate a QR code URL.
 * @public
 */class ae{// The public members are declared outside the constructor so the docs can be generated.
constructor(e,t,r,n,a,s,i){this.sessionInfo=s,this.auth=i,this.secretKey=e,this.hashingAlgorithm=t,this.codeLength=r,this.codeIntervalSeconds=n,this.enrollmentCompletionDeadline=a}/** @internal */static _fromStartTotpMfaEnrollmentResponse(e,t){return new ae(e.totpSessionInfo.sharedSecretKey,e.totpSessionInfo.hashingAlgorithm,e.totpSessionInfo.verificationCodeLength,e.totpSessionInfo.periodSec,new Date(e.totpSessionInfo.finalizeEnrollmentTime).toUTCString(),e.totpSessionInfo.sessionInfo,t)}/** @internal */_makeTotpVerificationInfo(e){return{sessionInfo:this.sessionInfo,verificationCode:e}}/**
     * Returns a QR code URL as described in
     * https://github.com/google/google-authenticator/wiki/Key-Uri-Format
     * This can be displayed to the user as a QR code to be scanned into a TOTP app like Google Authenticator.
     * If the optional parameters are unspecified, an accountName of <userEmail> and issuer of <firebaseAppName> are used.
     *
     * @param accountName the name of the account/app along with a user identifier.
     * @param issuer issuer of the TOTP (likely the app name).
     * @returns A QR code URL string.
     */generateQrCodeUrl(e,t){var r;let n=!1;return(at(e)||at(t))&&(n=!0),n&&(at(e)&&(e=(null===(r=this.auth.currentUser)||void 0===r?void 0:r.email)||"unknownuser"),at(t)&&(t=this.auth.name)),`otpauth://totp/${t}:${e}?secret=${this.secretKey}&issuer=${t}&algorithm=${this.hashingAlgorithm}&digits=${this.codeLength}`}}/** @internal */function at(e){return void 0===e||(null==e?void 0:e.length)===0}var ar="@firebase/auth",an="1.7.4";/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */class aa{constructor(e){this.auth=e,this.internalListeners=new Map}getUid(){var e;return this.assertAuthConfigured(),(null===(e=this.auth.currentUser)||void 0===e?void 0:e.uid)||null}async getToken(e){if(this.assertAuthConfigured(),await this.auth._initializationPromise,!this.auth.currentUser)return null;let t=await this.auth.currentUser.getIdToken(e);return{accessToken:t}}addAuthTokenListener(e){if(this.assertAuthConfigured(),this.internalListeners.has(e))return;let t=this.auth.onIdTokenChanged(t=>{e((null==t?void 0:t.stsTokenManager.accessToken)||null)});this.internalListeners.set(e,t),this.updateProactiveRefresh()}removeAuthTokenListener(e){this.assertAuthConfigured();let t=this.internalListeners.get(e);t&&(this.internalListeners.delete(e),t(),this.updateProactiveRefresh())}assertAuthConfigured(){tD(this.auth._initializationPromise,"dependent-sdk-initialized-before-auth"/* AuthErrorCode.DEPENDENT_SDK_INIT_BEFORE_AUTH */)}updateProactiveRefresh(){this.internalListeners.size>0?this.auth._startProactiveRefresh():this.auth._stopProactiveRefresh()}}const as=eb("authIdTokenMaxAge")||300;let ai=null;const ao=e=>async t=>{let r=t&&await t.getIdTokenResult(),n=r&&(new Date().getTime()-Date.parse(r.issuedAtTime))/1e3;if(n&&n>as)return;// Specifically trip null => undefined when logged out, to delete any existing cookie
    let a=null==r?void 0:r.token;ai!==a&&(ai=a,await fetch(e,{method:a?"POST":"DELETE",headers:a?{Authorization:`Bearer ${a}`}:{}}))};rA={loadJS:e=>new Promise((t,r)=>{var n,a;let s=document.createElement("script");s.setAttribute("src",e),s.onload=t,s.onerror=e=>{let t=t_("internal-error"/* AuthErrorCode.INTERNAL_ERROR */);t.customData=e,r(t)},s.type="text/javascript",s.charset="UTF-8",(null!==(a=null===(n=document.getElementsByTagName("head"))||void 0===n?void 0:n[0])&&void 0!==a?a:document).appendChild(s)}),gapiScript:"https://apis.google.com/js/api.js",recaptchaV2Script:"https://www.google.com/recaptcha/api.js",recaptchaEnterpriseScript:"https://www.google.com/recaptcha/enterprise.js?render="},ie="Browser"/* ClientPlatform.BROWSER */,ti(new eM("auth"/* _ComponentName.AUTH */,(e,{options:t})=>{let r=e.getProvider("app").getImmediate(),n=e.getProvider("heartbeat"),a=e.getProvider("app-check-internal"),{apiKey:s,authDomain:i}=r.options;tD(s&&!s.includes(":"),"invalid-api-key"/* AuthErrorCode.INVALID_API_KEY */,{appName:r.name});let o={apiKey:s,authDomain:i,clientPlatform:ie,apiHost:"identitytoolkit.googleapis.com"/* DefaultConfig.API_HOST */,tokenApiHost:"securetoken.googleapis.com"/* DefaultConfig.TOKEN_API_HOST */,apiScheme:"https"/* DefaultConfig.API_SCHEME */,sdkClientVersion:rS(ie)},l=new rC(r,n,a,o);return function(e,t){let r=(null==t?void 0:t.persistence)||[],n=(Array.isArray(r)?r:[r]).map(ru);(null==t?void 0:t.errorMap)&&e._updateErrorMap(t.errorMap),// This promise is intended to float; auth initialization happens in the
// background, meanwhile the auth object may be used by the app.
// eslint-disable-next-line @typescript-eslint/no-floating-promises
e._initializeWithPersistence(n,null==t?void 0:t.popupRedirectResolver)}(l,t),l},"PUBLIC"/* ComponentType.PUBLIC */)/**
         * Auth can only be initialized by explicitly calling getAuth() or initializeAuth()
         * For why we do this, See go/firebase-next-auth-init
         */.setInstantiationMode("EXPLICIT"/* InstantiationMode.EXPLICIT */)/**
         * Because all firebase products that depend on auth depend on auth-internal directly,
         * we need to initialize auth-internal after auth is initialized to make it available to other firebase products.
         */.setInstanceCreatedCallback((e,t,r)=>{let n=e.getProvider("auth-internal"/* _ComponentName.AUTH_INTERNAL */);n.initialize()})),ti(new eM("auth-internal"/* _ComponentName.AUTH_INTERNAL */,e=>{let t=eD(e.getProvider("auth"/* _ComponentName.AUTH */).getImmediate());return new aa(t)},"PRIVATE"/* ComponentType.PRIVATE */).setInstantiationMode("EXPLICIT"/* InstantiationMode.EXPLICIT */)),tf(ar,an,/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(e){switch(e){case"Node"/* ClientPlatform.NODE */:return"node";case"ReactNative"/* ClientPlatform.REACT_NATIVE */:return"rn";case"Worker"/* ClientPlatform.WORKER */:return"webworker";case"Cordova"/* ClientPlatform.CORDOVA */:return"cordova";case"WebExtension"/* ClientPlatform.WEB_EXTENSION */:return"web-extension";default:return}}(ie)),tf(ar,an,"esm2017"),tf("firebase","10.12.2","app");const al="@firebase/installations",au="0.6.7",ac=`w:${au}`,ad="FIS_v2",ap=new eT("installations","Installations",{"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."});/** Returns true if error is a FirebaseError that is based on an error from the server. */function ah(e){return e instanceof eN&&e.code.includes("request-failed"/* ErrorCode.REQUEST_FAILED */)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function af({projectId:e}){return`https://firebaseinstallations.googleapis.com/v1/projects/${e}/installations`}function am(e){return{token:e.token,requestStatus:2/* RequestStatus.COMPLETED */,expiresIn:Number(e.expiresIn.replace("s","000")),creationTime:Date.now()}}async function ag(e,t){let r=await t.json(),n=r.error;return ap.create("request-failed"/* ErrorCode.REQUEST_FAILED */,{requestName:e,serverCode:n.code,serverMessage:n.message,serverStatus:n.status})}function ay({apiKey:e}){return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":e})}/**
 * Calls the passed in fetch wrapper and returns the response.
 * If the returned response has a status of 5xx, re-runs the function once and
 * returns the response.
 */async function ab(e){let t=await e();return t.status>=500&&t.status<600?e():t}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function av({appConfig:e,heartbeatServiceProvider:t},{fid:r}){let n=af(e),a=ay(e),s=t.getImmediate({optional:!0});if(s){let e=await s.getHeartbeatsHeader();e&&a.append("x-firebase-client",e)}let i={fid:r,authVersion:ad,appId:e.appId,sdkVersion:ac},o={method:"POST",headers:a,body:JSON.stringify(i)},l=await ab(()=>fetch(n,o));if(l.ok){let e=await l.json(),t={fid:e.fid||r,registrationStatus:2/* RequestStatus.COMPLETED */,refreshToken:e.refreshToken,authToken:am(e.authToken)};return t}throw await ag("Create Installation",l)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** Returns a promise that resolves after given time passes. */function ax(e){return new Promise(t=>{setTimeout(t,e)})}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const aw=/^[cdef][\w-]{21}$/;/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//** Returns a string key that can be used to identify the app. */function ak(e){return`${e.appName}!${e.appId}`}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const aS=new Map;/**
 * Calls the onIdChange callbacks with the new FID value, and broadcasts the
 * change to other tabs.
 */function aN(e,t){let r=ak(e);aT(r,t),function(e,t){let r=(!aI&&"BroadcastChannel"in self&&((aI=new BroadcastChannel("[Firebase] FID Change")).onmessage=e=>{aT(e.data.key,e.data.fid)}),aI);r&&r.postMessage({key:e,fid:t}),0===aS.size&&aI&&(aI.close(),aI=null)}(r,t)}function aT(e,t){let r=aS.get(e);if(r)for(let e of r)e(t)}let aI=null;const aC="firebase-installations-store";let aE=null;function aA(){return aE||(aE=e1("firebase-installations-database",1,{upgrade:(e,t)=>{// We don't use 'break' in this switch statement, the fall-through
// behavior is what we want, because if there are multiple versions between
// the old version and the current version, we want ALL the migrations
// that correspond to those versions to run, not only the last one.
// eslint-disable-next-line default-case
0===t&&e.createObjectStore(aC)}})),aE}/** Assigns or overwrites the record for the given key with the given value. */async function aR(e,t){let r=ak(e),n=await aA(),a=n.transaction(aC,"readwrite"),s=a.objectStore(aC),i=await s.get(r);return await s.put(t,r),await a.done,i&&i.fid===t.fid||aN(e,t.fid),t}/** Removes record(s) from the objectStore that match the given key. */async function a_(e){let t=ak(e),r=await aA(),n=r.transaction(aC,"readwrite");await n.objectStore(aC).delete(t),await n.done}/**
 * Atomically updates a record with the result of updateFn, which gets
 * called with the current value. If newValue is undefined, the record is
 * deleted instead.
 * @return Updated value
 */async function aO(e,t){let r=ak(e),n=await aA(),a=n.transaction(aC,"readwrite"),s=a.objectStore(aC),i=await s.get(r),o=t(i);return void 0===o?await s.delete(r):await s.put(o,r),await a.done,o&&(!i||i.fid!==o.fid)&&aN(e,o.fid),o}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Updates and returns the InstallationEntry from the database.
 * Also triggers a registration request if it is necessary and possible.
 */async function aP(e){let t;let r=await aO(e.appConfig,r=>{let n=/**
 * Creates a new Installation Entry if one does not exist.
 * Also clears timed out pending requests.
 */function(e){let t=e||{fid:/**
 * Generates a new FID using random values from Web Crypto API.
 * Returns an empty string if FID generation fails for any reason.
 */function(){try{// A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5
// bytes. our implementation generates a 17 byte array instead.
let e=new Uint8Array(17),t=self.crypto||self.msCrypto;t.getRandomValues(e),// Replace the first 4 random bits with the constant FID header of 0b0111.
e[0]=112+e[0]%16;let r=/** Converts a FID Uint8Array to a base64 string representation. */function(e){let t=/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(e){let t=btoa(String.fromCharCode(...e));return t.replace(/\+/g,"-").replace(/\//g,"_")}(e);// Remove the 23rd character that was added because of the extra 4 bits at the
// end of our 17 byte array, and the '=' padding.
return t.substr(0,22)}(e);return aw.test(r)?r:""}catch(e){// FID generation errored
return""}}(),registrationStatus:0/* RequestStatus.NOT_STARTED */};return aF(t)}(r),a=/**
 * If the Firebase Installation is not registered yet, this will trigger the
 * registration and return an InProgressInstallationEntry.
 *
 * If registrationPromise does not exist, the installationEntry is guaranteed
 * to be registered.
 */function(e,t){if(0/* RequestStatus.NOT_STARTED */===t.registrationStatus){if(!navigator.onLine){// Registration required but app is offline.
let e=Promise.reject(ap.create("app-offline"/* ErrorCode.APP_OFFLINE */));return{installationEntry:t,registrationPromise:e}}// Try registering. Change status to IN_PROGRESS.
let r={fid:t.fid,registrationStatus:1/* RequestStatus.IN_PROGRESS */,registrationTime:Date.now()},n=a$(e,r);return{installationEntry:r,registrationPromise:n}}return 1/* RequestStatus.IN_PROGRESS */===t.registrationStatus?{installationEntry:t,registrationPromise:aD(e)}:{installationEntry:t}}(e,n);return t=a.registrationPromise,a.installationEntry});return""===r.fid?{installationEntry:await t}:{installationEntry:r,registrationPromise:t}}/** This will be executed only once for each new Firebase Installation. */async function a$(e,t){try{let r=await av(e,t);return aR(e.appConfig,r)}catch(r){throw ah(r)&&409===r.customData.serverCode?// Generate a new ID next time.
await a_(e.appConfig):await aR(e.appConfig,{fid:t.fid,registrationStatus:0/* RequestStatus.NOT_STARTED */}),r}}/** Call if FID registration is pending in another request. */async function aD(e){// Unfortunately, there is no way of reliably observing when a value in
// IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),
// so we need to poll.
let t=await aM(e.appConfig);for(;1/* RequestStatus.IN_PROGRESS */===t.registrationStatus;)// createInstallation request still in progress.
await ax(100),t=await aM(e.appConfig);if(0/* RequestStatus.NOT_STARTED */===t.registrationStatus){// The request timed out or failed in a different call. Try again.
let{installationEntry:t,registrationPromise:r}=await aP(e);return r||t}return t}/**
 * Called only if there is a CreateInstallation request in progress.
 *
 * Updates the InstallationEntry in the DB based on the status of the
 * CreateInstallation request.
 *
 * Returns the updated InstallationEntry.
 */function aM(e){return aO(e,e=>{if(!e)throw ap.create("installation-not-found"/* ErrorCode.INSTALLATION_NOT_FOUND */);return aF(e)})}function aF(e){return 1/* RequestStatus.IN_PROGRESS */===e.registrationStatus&&e.registrationTime+1e4<Date.now()?{fid:e.fid,registrationStatus:0/* RequestStatus.NOT_STARTED */}:e}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function aL({appConfig:e,heartbeatServiceProvider:t},r){let n=function(e,{fid:t}){return`${af(e)}/${t}/authTokens:generate`}(e,r),a=function(e,{refreshToken:t}){let r=ay(e);return r.append("Authorization",`${ad} ${t}`),r}(e,r),s=t.getImmediate({optional:!0});if(s){let e=await s.getHeartbeatsHeader();e&&a.append("x-firebase-client",e)}let i={installation:{sdkVersion:ac,appId:e.appId}},o={method:"POST",headers:a,body:JSON.stringify(i)},l=await ab(()=>fetch(n,o));if(l.ok){let e=await l.json(),t=am(e);return t}throw await ag("Generate Auth Token",l)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Returns a valid authentication token for the installation. Generates a new
 * token if one doesn't exist, is expired or about to expire.
 *
 * Should only be called if the Firebase Installation is registered.
 */async function aj(e,t=!1){let r;let n=await aO(e.appConfig,n=>{var a;if(!aG(n))throw ap.create("not-registered"/* ErrorCode.NOT_REGISTERED */);let s=n.authToken;if(!t&&2/* RequestStatus.COMPLETED */===(a=s).requestStatus&&!function(e){let t=Date.now();return t<e.creationTime||e.creationTime+e.expiresIn<t+36e5}(a))return n;if(1/* RequestStatus.IN_PROGRESS */===s.requestStatus)return(// There already is a token request in progress.
r=aB(e,t),n);{// No token or token expired.
if(!navigator.onLine)throw ap.create("app-offline"/* ErrorCode.APP_OFFLINE */);let t=/** Returns an updated InstallationEntry with an InProgressAuthToken. */function(e){let t={requestStatus:1/* RequestStatus.IN_PROGRESS */,requestTime:Date.now()};return Object.assign(Object.assign({},e),{authToken:t})}(n);return r=aV(e,t),t}}),a=r?await r:n.authToken;return a}/**
 * Call only if FID is registered and Auth Token request is in progress.
 *
 * Waits until the current pending request finishes. If the request times out,
 * tries once in this thread as well.
 */async function aB(e,t){// Unfortunately, there is no way of reliably observing when a value in
// IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),
// so we need to poll.
let r=await az(e.appConfig);for(;1/* RequestStatus.IN_PROGRESS */===r.authToken.requestStatus;)// generateAuthToken still in progress.
await ax(100),r=await az(e.appConfig);let n=r.authToken;return 0/* RequestStatus.NOT_STARTED */===n.requestStatus?aj(e,t):n}/**
 * Called only if there is a GenerateAuthToken request in progress.
 *
 * Updates the InstallationEntry in the DB based on the status of the
 * GenerateAuthToken request.
 *
 * Returns the updated InstallationEntry.
 */function az(e){return aO(e,e=>{if(!aG(e))throw ap.create("not-registered"/* ErrorCode.NOT_REGISTERED */);let t=e.authToken;return 1/* RequestStatus.IN_PROGRESS */===t.requestStatus&&t.requestTime+1e4<Date.now()?Object.assign(Object.assign({},e),{authToken:{requestStatus:0/* RequestStatus.NOT_STARTED */}}):e})}async function aV(e,t){try{let r=await aL(e,t),n=Object.assign(Object.assign({},t),{authToken:r});return await aR(e.appConfig,n),r}catch(r){if(ah(r)&&(401===r.customData.serverCode||404===r.customData.serverCode))// Generate a new ID next time.
await a_(e.appConfig);else{let r=Object.assign(Object.assign({},t),{authToken:{requestStatus:0/* RequestStatus.NOT_STARTED */}});await aR(e.appConfig,r)}throw r}}function aG(e){return void 0!==e&&2/* RequestStatus.COMPLETED */===e.registrationStatus}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Creates a Firebase Installation if there isn't one for the app and
 * returns the Installation ID.
 * @param installations - The `Installations` instance.
 *
 * @public
 */async function aU(e){let{installationEntry:t,registrationPromise:r}=await aP(e);return r?r.catch(console.error):// token if needed.
aj(e).catch(console.error),t.fid}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Returns a Firebase Installations auth token, identifying the current
 * Firebase Installation.
 * @param installations - The `Installations` instance.
 * @param forceRefresh - Force refresh regardless of token expiration.
 *
 * @public
 */async function aW(e,t=!1){await aq(e);// At this point we either have a Registered Installation in the DB, or we've
// already thrown an error.
let r=await aj(e,t);return r.token}async function aq(e){let{registrationPromise:t}=await aP(e);t&&await t}function aH(e){return ap.create("missing-app-config-values"/* ErrorCode.MISSING_APP_CONFIG_VALUES */,{valueName:e})}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const aK="installations";ti(new eM(aK,e=>{let t=e.getProvider("app").getImmediate(),r=/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function(e){if(!e||!e.options)throw aH("App Configuration");if(!e.name)throw aH("App Name");for(let t of["projectId","apiKey","appId"])if(!e.options[t])throw aH(t);return{appName:e.name,projectId:e.options.projectId,apiKey:e.options.apiKey,appId:e.options.appId}}(t),n=to(t,"heartbeat");return{app:t,appConfig:r,heartbeatServiceProvider:n,_delete:()=>Promise.resolve()}},"PUBLIC"/* ComponentType.PUBLIC */)),ti(new eM("installations-internal",e=>{let t=e.getProvider("app").getImmediate(),r=to(t,aK).getImmediate();return{getId:()=>aU(r),getToken:e=>aW(r,e)}},"PRIVATE"/* ComponentType.PRIVATE */)),tf(al,au),tf(al,au,"esm2017");/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Type constant for Firebase Analytics.
 */const aX="analytics",aZ="https://www.googletagmanager.com/gtag/js",aQ=new eW("@firebase/analytics"),aY=new eT("analytics","Analytics",{"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.',"no-client-id":'The "client_id" field is empty.',"invalid-gtag-resource":"Trusted Types detected an invalid gtag resource: {$gtagURL}."});/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Verifies and creates a TrustedScriptURL.
 */function aJ(e){if(!e.startsWith(aZ)){let t=aY.create("invalid-gtag-resource"/* AnalyticsError.INVALID_GTAG_RESOURCE */,{gtagURL:e});return aQ.warn(t.message),""}return e}/**
 * Makeshift polyfill for Promise.allSettled(). Resolves when all promises
 * have either resolved or rejected.
 *
 * @param promises Array of promises to wait for.
 */function a0(e){return Promise.all(e.map(e=>e.catch(e=>e)))}/**
 * Wrapped gtag logic when gtag is called with 'config' command.
 *
 * @param gtagCore Basic gtag function that just appends to dataLayer.
 * @param initializationPromisesMap Map of appIds to their initialization promises.
 * @param dynamicConfigPromisesList Array of dynamic config fetch promises.
 * @param measurementIdToAppId Map of GA measurementIDs to corresponding Firebase appId.
 * @param measurementId GA Measurement ID to set config for.
 * @param gtagParams Gtag config params to set.
 */async function a1(e,t,r,n,a,s){// If config is already fetched, we know the appId and can use it to look up what FID promise we
/// are waiting for, and wait only on that one.
let i=n[a];try{if(i)await t[i];else{// If config is not fetched yet, wait for all configs (we don't know which one we need) and
// find the appId (if any) corresponding to this measurementId. If there is one, wait on
// that appId's initialization promise. If there is none, promise resolves and gtag
// call goes through.
let e=await a0(r),n=e.find(e=>e.measurementId===a);n&&await t[n.appId]}}catch(e){aQ.error(e)}e("config"/* GtagCommand.CONFIG */,a,s)}/**
 * Wrapped gtag logic when gtag is called with 'event' command.
 *
 * @param gtagCore Basic gtag function that just appends to dataLayer.
 * @param initializationPromisesMap Map of appIds to their initialization promises.
 * @param dynamicConfigPromisesList Array of dynamic config fetch promises.
 * @param measurementId GA Measurement ID to log event to.
 * @param gtagParams Params to log with this event.
 */async function a2(e,t,r,n,a){try{let s=[];// If there's a 'send_to' param, check if any ID specified matches
// an initializeIds() promise we are waiting for.
if(a&&a.send_to){let e=a.send_to;// Make it an array if is isn't, so it can be dealt with the same way.
Array.isArray(e)||(e=[e]);// Checking 'send_to' fields requires having all measurement ID results back from
// the dynamic config fetch.
let n=await a0(r);for(let r of e){// Any fetched dynamic measurement ID that matches this 'send_to' ID
let e=n.find(e=>e.measurementId===r),a=e&&t[e.appId];if(a)s.push(a);else{// Found an item in 'send_to' that is not associated
// directly with an FID, possibly a group.  Empty this array,
// exit the loop early, and let it get populated below.
s=[];break}}}0===s.length&&(s=Object.values(t)),// Run core gtag function with args after all relevant initialization
// promises have been resolved.
await Promise.all(s),// Workaround for http://b/141370449 - third argument cannot be undefined.
e("event"/* GtagCommand.EVENT */,n,a||{})}catch(e){aQ.error(e)}}const a4=new /**
 * Stubbable retry data storage class.
 */class{constructor(e={},t=1e3){this.throttleMetadata=e,this.intervalMillis=t}getThrottleMetadata(e){return this.throttleMetadata[e]}setThrottleMetadata(e,t){this.throttleMetadata[e]=t}deleteThrottleMetadata(e){delete this.throttleMetadata[e]}};/**
 * Fetches dynamic config from backend.
 * @param app Firebase app to fetch config for.
 */async function a3(e){var t;let{appId:r,apiKey:n}=e,a={method:"GET",headers:new Headers({Accept:"application/json","x-goog-api-key":n})},s="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig".replace("{app-id}",r),i=await fetch(s,a);if(200!==i.status&&304!==i.status){let e="";try{// Try to get any error message text from server response.
let r=await i.json();(null===(t=r.error)||void 0===t?void 0:t.message)&&(e=r.error.message)}catch(e){}throw aY.create("config-fetch-failed"/* AnalyticsError.CONFIG_FETCH_FAILED */,{httpStatus:i.status,responseMessage:e})}return i.json()}/**
 * Fetches dynamic config from backend, retrying if failed.
 * @param app Firebase app to fetch config for.
 */async function a8(e,t=a4,r){let{appId:n,apiKey:a,measurementId:s}=e.options;if(!n)throw aY.create("no-app-id"/* AnalyticsError.NO_APP_ID */);if(!a){if(s)return{measurementId:s,appId:n};throw aY.create("no-api-key"/* AnalyticsError.NO_API_KEY */)}let i=t.getThrottleMetadata(n)||{backoffCount:0,throttleEndTimeMillis:Date.now()},o=new a5;return setTimeout(async()=>{// Note a very low delay, eg < 10ms, can elapse before listeners are initialized.
o.abort()},void 0!==r?r:6e4),a6({appId:n,apiKey:a,measurementId:s},i,o,t)}/**
 * Runs one retry attempt.
 * @param appFields Necessary app config fields.
 * @param throttleMetadata Ongoing metadata to determine throttling times.
 * @param signal Abort signal.
 */async function a6(e,{throttleEndTimeMillis:t,backoffCount:r},n,a=a4// for testing
){var s;let{appId:i,measurementId:o}=e;// Starts with a (potentially zero) timeout to support resumption from stored state.
// Ensures the throttle end time is honored if the last attempt timed out.
// Note the SDK will never make a request if the fetch timeout expires at this point.
try{await new Promise((e,r)=>{// Derives backoff from given end time, normalizing negative numbers to zero.
let a=Math.max(t-Date.now(),0),s=setTimeout(e,a);// Adds listener, rather than sets onabort, because signal is a shared object.
n.addEventListener(()=>{clearTimeout(s),// If the request completes before this timeout, the rejection has no effect.
r(aY.create("fetch-throttle"/* AnalyticsError.FETCH_THROTTLE */,{throttleEndTimeMillis:t}))})})}catch(e){if(o)return aQ.warn(`Timed out fetching this Firebase app's measurement ID from the server. Falling back to the measurement ID ${o} provided in the "measurementId" field in the local Firebase config. [${null==e?void 0:e.message}]`),{appId:i,measurementId:o};throw e}try{let t=await a3(e);return(// Note the SDK only clears throttle state if response is success or non-retriable.
a.deleteThrottleMetadata(i),t)}catch(u){if(!/**
 * Returns true if the {@link Error} indicates a fetch request may succeed later.
 */function(e){if(!(e instanceof eN)||!e.customData)return!1;// Uses string index defined by ErrorData, which FirebaseError implements.
let t=Number(e.customData.httpStatus);return 429===t||500===t||503===t||504===t}(u)){if(a.deleteThrottleMetadata(i),o)return aQ.warn(`Failed to fetch this Firebase app's measurement ID from the server. Falling back to the measurement ID ${o} provided in the "measurementId" field in the local Firebase config. [${null==u?void 0:u.message}]`),{appId:i,measurementId:o};throw u}let t=503===Number(null===(s=null==u?void 0:u.customData)||void 0===s?void 0:s.httpStatus)?e$(r,a.intervalMillis,30):e$(r,a.intervalMillis),l={throttleEndTimeMillis:Date.now()+t,backoffCount:r+1};return(// Persists state.
a.setThrottleMetadata(i,l),aQ.debug(`Calling attemptFetch again in ${t} millis`),a6(e,l,n,a))}}/**
 * Shims a minimal AbortSignal (copied from Remote Config).
 *
 * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects
 * of networking, such as retries. Firebase doesn't use AbortController enough to justify a
 * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be
 * swapped out if/when we do.
 */class a5{constructor(){this.listeners=[]}addEventListener(e){this.listeners.push(e)}abort(){this.listeners.forEach(e=>e())}}/**
 * Logs an analytics event through the Firebase SDK.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param eventName Google Analytics event name, choose from standard list or use a custom string.
 * @param eventParams Analytics event parameters.
 */async function a7(e,t,r,n,a){if(a&&a.global){e("event"/* GtagCommand.EVENT */,r,n);return}{let a=await t,s=Object.assign(Object.assign({},n),{send_to:a});e("event"/* GtagCommand.EVENT */,r,s)}}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function a9(){if(!ek())return aQ.warn(aY.create("indexeddb-unavailable"/* AnalyticsError.INDEXEDDB_UNAVAILABLE */,{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await eS()}catch(e){return aQ.warn(aY.create("indexeddb-unavailable"/* AnalyticsError.INDEXEDDB_UNAVAILABLE */,{errorInfo:null==e?void 0:e.toString()}).message),!1}return!0}/**
 * Initialize the analytics instance in gtag.js by calling config command with fid.
 *
 * NOTE: We combine analytics initialization and setting fid together because we want fid to be
 * part of the `page_view` event that's sent during the initialization
 * @param app Firebase app
 * @param gtagCore The gtag function that's not wrapped.
 * @param dynamicConfigPromisesList Array of all dynamic config promises.
 * @param measurementIdToAppId Maps measurementID to appID.
 * @param installations _FirebaseInstallationsInternal instance.
 *
 * @returns Measurement ID.
 */async function se(e,t,a,s,i,o,l){var u;let c=a8(e);// Once fetched, map measurementIds to appId, for ease of lookup in wrapped gtag function.
c.then(t=>{a[t.measurementId]=t.appId,e.options.measurementId&&t.measurementId!==e.options.measurementId&&aQ.warn(`The measurement ID in the local Firebase config (${e.options.measurementId}) does not match the measurement ID fetched from the server (${t.measurementId}). To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.`)}).catch(e=>aQ.error(e)),// Add to list to track state of all dynamic config promises.
t.push(c);let d=a9().then(e=>e?s.getId():void 0),[p,h]=await Promise.all([c,d]);!/**
 * Returns the script tag in the DOM matching both the gtag url pattern
 * and the provided data layer name.
 */function(e){let t=window.document.getElementsByTagName("script");for(let r of Object.values(t))if(r.src&&r.src.includes(aZ)&&r.src.includes(e))return r;return null}(o)&&/**
 * Inserts gtag script tag into the page to asynchronously download gtag.
 * @param dataLayerName Name of datalayer (most often the default, "_dataLayer").
 */function(e,t){let r;let n=(window.trustedTypes&&(r=window.trustedTypes.createPolicy("firebase-js-sdk-policy",{createScriptURL:aJ})),r),a=document.createElement("script"),s=`${aZ}?l=${e}&id=${t}`;a.src=n?null==n?void 0:n.createScriptURL(s):s,a.async=!0,document.head.appendChild(a)}(o,p.measurementId),n&&(i("consent"/* GtagCommand.CONSENT */,"default",n),n=void 0),// This command initializes gtag.js and only needs to be called once for the entire web app,
// but since it is idempotent, we can call it multiple times.
// We keep it together with other initialization logic for better code structure.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
i("js",new Date);// User config added first. We don't want users to accidentally overwrite
// base Firebase config properties.
let f=null!==(u=null==l?void 0:l.config)&&void 0!==u?u:{};return(// guard against developers accidentally setting properties with prefix `firebase_`
f.origin="firebase",f.update=!0,null!=h&&(f.firebase_id=h),// It should be the first config command called on this GA-ID
// Initialize this GA-ID and set FID on it using the gtag config API.
// Note: This will trigger a page_view event unless 'send_page_view' is set to false in
// `configProperties`.
i("config"/* GtagCommand.CONFIG */,p.measurementId,f),r&&(i("set"/* GtagCommand.SET */,r),r=void 0),p.measurementId)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Analytics Service class.
 */class st{constructor(e){this.app=e}_delete(){return delete sr[this.app.options.appId],Promise.resolve()}}/**
 * Maps appId to full initialization promise. Wrapped gtag calls must wait on
 * all or some of these, depending on the call's `send_to` param and the status
 * of the dynamic config fetches (see below).
 */let sr={},sn=[];/**
 * Maps fetched measurementIds to appId. Populated when the app's dynamic config
 * fetch completes. If already populated, gtag config calls can use this to
 * selectively wait for only this app's initialization promise (FID) instead of all
 * initialization promises.
 */const sa={};/**
 * Name for window global data layer array used by GA: defaults to 'dataLayer'.
 */let ss="dataLayer",si=!1;const so="@firebase/analytics",sl="0.10.4";ti(new eM(aX,(e,{options:t})=>{// getImmediate for FirebaseApp will always succeed
let r=e.getProvider("app").getImmediate(),n=e.getProvider("installations-internal").getImmediate();return(/**
 * Analytics instance factory.
 * @internal
 */function(e,t,r){!/**
 * Returns true if no environment mismatch is found.
 * If environment mismatches are found, throws an INVALID_ANALYTICS_CONTEXT
 * error that also lists details for each mismatch found.
 */function(){let e=[];if(ew()&&e.push("This is a browser extension environment."),"undefined"!=typeof navigator&&navigator.cookieEnabled||e.push("Cookies are not available."),e.length>0){let t=e.map((e,t)=>`(${t+1}) ${e}`).join(" "),r=aY.create("invalid-analytics-context"/* AnalyticsError.INVALID_ANALYTICS_CONTEXT */,{errorInfo:t});aQ.warn(r.message)}}();let n=e.options.appId;if(!n)throw aY.create("no-app-id"/* AnalyticsError.NO_APP_ID */);if(!e.options.apiKey){if(e.options.measurementId)aQ.warn(`The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest measurement ID for this Firebase app. Falling back to the measurement ID ${e.options.measurementId} provided in the "measurementId" field in the local Firebase config.`);else throw aY.create("no-api-key"/* AnalyticsError.NO_API_KEY */)}if(null!=sr[n])throw aY.create("already-exists"/* AnalyticsError.ALREADY_EXISTS */,{id:n});if(!si){var i,o;let e,t;e=[],Array.isArray(window[ss])?e=window[ss]:window[ss]=e;let{wrappedGtag:r,gtagCore:n}=(i="gtag",t=function(...e){// Must push IArguments object, not an array.
window[ss].push(arguments)},window[i]&&"function"==typeof window[i]&&(t=window[i]),window[i]=(o=t,/**
     * Wrapper around gtag that ensures FID is sent with gtag calls.
     * @param command Gtag command type.
     * @param idOrNameOrParams Measurement ID if command is EVENT/CONFIG, params if command is SET.
     * @param gtagParams Params if event is EVENT/CONFIG.
     */async function(e,...t){try{// If event, check that relevant initialization promises have completed.
if("event"/* GtagCommand.EVENT */===e){let[e,r]=t;// If EVENT, second arg must be measurementId.
await a2(o,sr,sn,e,r)}else if("config"/* GtagCommand.CONFIG */===e){let[e,r]=t;// If CONFIG, second arg must be measurementId.
await a1(o,sr,sn,sa,e,r)}else if("consent"/* GtagCommand.CONSENT */===e){let[e,r]=t;// consentAction can be one of 'default' or 'update'.
o("consent"/* GtagCommand.CONSENT */,e,r)}else if("get"/* GtagCommand.GET */===e){let[e,r,n]=t;o("get"/* GtagCommand.GET */,e,r,n)}else if("set"/* GtagCommand.SET */===e){let[e]=t;// If SET, second arg must be params.
o("set"/* GtagCommand.SET */,e)}else o(e,...t)}catch(e){aQ.error(e)}}),{gtagCore:t,wrappedGtag:window[i]});s=r,a=n,si=!0}// Async but non-blocking.
// This map reflects the completion state of all promises for each appId.
sr[n]=se(e,sn,sa,t,a,ss,r);let l=new st(e);return l}(r,n,t))},"PUBLIC"/* ComponentType.PUBLIC */)),ti(new eM("analytics-internal",function(e){try{let t=e.getProvider(aX).getImmediate();return{logEvent:(e,r,n)=>{var a;return a=t,void(a=eD(a),a7(s,sr[a.app.options.appId],e,r,n).catch(e=>aQ.error(e)))}}}catch(e){throw aY.create("interop-component-reg-failed"/* AnalyticsError.INTEROP_COMPONENT_REG_FAILED */,{reason:e})}},"PRIVATE"/* ComponentType.PRIVATE */)),tf(so,sl),tf(so,sl,"esm2017");// Initialize Firebase
const su=tp({apiKey:"AIzaSyDtvnnINiqprs2QXY_5nh0emHijIshQSbs",authDomain:"testapp-d3d3d.firebaseapp.com",projectId:"testapp-d3d3d",storageBucket:"testapp-d3d3d.appspot.com",messagingSenderId:"939768736675",appId:"1:939768736675:web:cd7d6602224d0049238816",measurementId:"G-13DYKHP47Y"});!/* eslint-disable @typescript-eslint/no-explicit-any *//**
 * Returns an {@link Analytics} instance for the given app.
 *
 * @public
 *
 * @param app - The {@link @firebase/app#FirebaseApp} to use.
 */function(e=th()){e=eD(e);// Dependencies
let t=to(e,aX);t.isInitialized()?t.getImmediate():/**
 * Returns an {@link Analytics} instance for the given app.
 *
 * @public
 *
 * @param app - The {@link @firebase/app#FirebaseApp} to use.
 */function(e,t={}){// Dependencies
let r=to(e,aX);if(r.isInitialized()){let e=r.getImmediate();if(eC(t,r.getOptions()))return e;throw aY.create("already-initialized"/* AnalyticsError.ALREADY_INITIALIZED */)}let n=r.initialize({options:t});return n}(e)}(su);const sc=/**
 * Returns the Auth instance associated with the provided {@link @firebase/app#FirebaseApp}.
 * If no instance exists, initializes an Auth instance with platform-specific default dependencies.
 *
 * @param app - The Firebase App.
 *
 * @public
 */function(e=th()){let t=to(e,"auth");if(t.isInitialized())return t.getImmediate();let r=/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *//**
 * Initializes an {@link Auth} instance with fine-grained control over
 * {@link Dependencies}.
 *
 * @remarks
 *
 * This function allows more control over the {@link Auth} instance than
 * {@link getAuth}. `getAuth` uses platform-specific defaults to supply
 * the {@link Dependencies}. In general, `getAuth` is the easiest way to
 * initialize Auth and works for most use cases. Use `initializeAuth` if you
 * need control over which persistence layer is used, or to minimize bundle
 * size if you're not using either `signInWithPopup` or `signInWithRedirect`.
 *
 * For example, if your app only uses anonymous accounts and you only want
 * accounts saved for the current session, initialize `Auth` with:
 *
 * ```js
 * const auth = initializeAuth(app, {
 *   persistence: browserSessionPersistence,
 *   popupRedirectResolver: undefined,
 * });
 * ```
 *
 * @public
 */function(e,t){let r=to(e,"auth");if(r.isInitialized()){let e=r.getImmediate(),n=r.getOptions();if(eC(n,null!=t?t:{}))return e;tR(e,"already-initialized"/* AuthErrorCode.ALREADY_INITIALIZED */)}let n=r.initialize({options:t});return n}(e,{popupRedirectResolver:n6,persistence:[nI,nu,nc]}),n=eb("authTokenSyncURL");// Only do the Cookie exchange in a secure context
if(n&&"boolean"==typeof isSecureContext&&isSecureContext){// Don't allow urls (XSS possibility), only paths on the same domain
let e=new URL(n,location.origin);if(location.origin===e.origin){let t=ao(e.toString());eD(r).beforeAuthStateChanged(t,()=>t(r.currentUser)),eD(r).onIdTokenChanged(e=>t(e),void 0,void 0)}}let a=eg("auth");return a&&/**
 * Changes the {@link Auth} instance to communicate with the Firebase Auth Emulator, instead of production
 * Firebase Auth services.
 *
 * @remarks
 * This must be called synchronously immediately following the first call to
 * {@link initializeAuth}.  Do not use with production credentials as emulator
 * traffic is not encrypted.
 *
 *
 * @example
 * ```javascript
 * connectAuthEmulator(auth, 'http://127.0.0.1:9099', { disableWarnings: true });
 * ```
 *
 * @param auth - The {@link Auth} instance.
 * @param url - The URL at which the emulator is running (eg, 'http://localhost:9099').
 * @param options - Optional. `options.disableWarnings` defaults to `false`. Set it to
 * `true` to disable the warning banner attached to the DOM.
 *
 * @public
 */function(e,t,r){let n=eD(e);tD(n._canInitEmulator,n,"emulator-config-failed"/* AuthErrorCode.EMULATOR_CONFIG_FAILED */),tD(/^https?:\/\//.test(t),n,"invalid-emulator-scheme"/* AuthErrorCode.INVALID_EMULATOR_SCHEME */);let a=!!(null==r?void 0:r.disableWarnings),s=r$(t),{host:i,port:o}=function(e){let t=r$(e),r=/(\/\/)?([^?#/]+)/.exec(e.substr(t.length));if(!r)return{host:"",port:null};let n=r[2].split("@").pop()||"",a=/^(\[[^\]]+\])(:|$)/.exec(n);// Strip out "username:password@".
if(a){let e=a[1];return{host:e,port:rD(n.substr(e.length+1))}}{let[e,t]=n.split(":");return{host:e,port:rD(t)}}}(t),l=null===o?"":`:${o}`;// Always replace path with "/" (even if input url had no path at all, or had a different one).
n.config.emulator={url:`${s}//${i}${l}/`},n.settings.appVerificationDisabledForTesting=!0,n.emulatorConfig=Object.freeze({host:i,port:o,protocol:s.replace(":",""),options:Object.freeze({disableWarnings:a})}),a||function(){function e(){let e=document.createElement("p"),t=e.style;e.innerText="Running in emulator mode. Do not use with production credentials.",t.position="fixed",t.width="100%",t.backgroundColor="#ffffff",t.border=".1em solid #000000",t.color="#b50000",t.bottom="0px",t.left="0px",t.margin="0px",t.zIndex="10000",t.textAlign="center",e.classList.add("firebase-emulator-warning"),document.body.appendChild(e)}"undefined"!=typeof console&&"function"==typeof console.info&&console.info("WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials."),"undefined"!=typeof window&&"undefined"!=typeof document&&("loading"===document.readyState?window.addEventListener("DOMContentLoaded",e):e())}()}(r,`http://${a}`),r}();var sd={};sd=new URL("logo.8926d699.png",import.meta.url).toString(),A("3E8gM");var sp=()=>{let e=K(e=>e.User),t=(0,D.useNavigate)(),[r,n]=(0,O.useState)(!1);return console.log(e),/*#__PURE__*/(0,_.jsxs)("nav",{class:"navbar navbar-expand-lg navbar-light tw-bg-white tw-shadow-sm m-0 p-0 fixed-top tw-shadow-black/5 tw-z-50",children:[/*#__PURE__*/(0,_.jsxs)("a",{className:"navbar-brand",href:"#Home",children:[/*#__PURE__*/(0,_.jsx)("img",{src:/*@__PURE__*/I(sd),alt:"",className:"tw-h-16 tw-w-16"}),"\xa0",/*#__PURE__*/(0,_.jsx)("h3",{className:" tw-inline-block",children:"Testify"})]}),/*#__PURE__*/(0,_.jsx)("button",{className:"navbar-toggler tw-bg-blue-600",type:"button","data-bs-toggle":"collapse","data-bs-target":"#navbarSupportedContent","aria-controls":"navbarSupportedContent","aria-expanded":"false","aria-label":"Toggle navigation",children:/*#__PURE__*/(0,_.jsx)("span",{className:"navbar-toggler-icon tw-text-white"})}),/*#__PURE__*/(0,_.jsxs)("div",{className:"collapse navbar-collapse",id:"navbarSupportedContent",children:[/*#__PURE__*/(0,_.jsxs)("ul",{className:"navbar-nav m-auto",children:[/*#__PURE__*/(0,_.jsx)("li",{class:"nav-item active link tw-rounded-lg tw-text-xl p-1 hover:tw-bg-green-400",children:/*#__PURE__*/(0,_.jsxs)(M.Link,{to:"/",className:"nav-link text-black",children:["Home ",/*#__PURE__*/(0,_.jsx)("span",{className:"sr-only"})]})}),/*#__PURE__*/(0,_.jsx)("li",{className:"nav-item active p-1 link tw-rounded-lg text-white hover:tw-bg-green-400 tw-text-xl",children:/*#__PURE__*/(0,_.jsxs)(M.Link,{to:"/About",className:"nav-link text-black",href:"#About",children:["About",/*#__PURE__*/(0,_.jsx)("span",{className:"sr-only"})]})}),/*#__PURE__*/(0,_.jsx)("li",{className:"nav-item active p-1 link tw-rounded-lg text-white hover:tw-bg-green-400 tw-text-xl",children:/*#__PURE__*/(0,_.jsxs)(M.Link,{to:"/test",onClick:()=>{n(!0)},className:"nav-link text-black",children:["Test Library ",/*#__PURE__*/(0,_.jsx)("span",{className:"sr-only"})]})}),/*#__PURE__*/(0,_.jsx)("li",{className:"nav-item active p-1 link tw-rounded-lg hover:tw-bg-green-400 tw-text-xl",children:/*#__PURE__*/(0,_.jsxs)(M.Link,{to:"/Contact",className:"nav-link text-black",children:["Contact ",/*#__PURE__*/(0,_.jsx)("span",{className:"sr-only"})]})})]}),/*#__PURE__*/(0,_.jsxs)("ul",{style:{listStyleType:"none"},className:" tw-flex tw-justify-center tw-items-center tw-gap-3 ",children:[/*#__PURE__*/(0,_.jsx)("li",{className:" tw-mt-2 tw-text-lg tw-text-emerald-400 tw-outline tw-outline-emerald-400 tw-rounded-md tw-p-2",children:e?.displayName}),/*#__PURE__*/(0,_.jsx)("li",{className:"tw-flex tw-justify-start tw-items-start",children:e?.uid?/*#__PURE__*/(0,_.jsx)("button",{onClick:function(){eD(sc).signOut().then(()=>{t("/Signup")}).catch(e=>{t("/error")})},className:"tw-px-2 tw-mt-3 tw-py-2 tw-no-underline tw-bg-green-400 tw-text-black tw-rounded-md",children:"SignOut"}):/*#__PURE__*/(0,_.jsx)(M.Link,{to:"/Signup",className:"tw-px-2 tw-mt-3 tw-py-2 tw-no-underline tw-bg-green-400 tw-text-black tw-rounded-md",children:"SignUp"})})]})]})]})};A("lzNIT");var D=A("aphAM"),M=A("lzNIT"),D=A("aphAM"),_=A("ayMG0");A("acw62"),new URL("back1.942570c6.avif",import.meta.url).toString();var M=A("lzNIT"),sh={};sh=new URL("Test_Your_Self-removebg-preview.d92a6c23.png",import.meta.url).toString();var sf={};sf=new URL("Analysis-removebg-preview.b3a3dd29.png",import.meta.url).toString();var sm={};sm=new URL("progress2-removebg-preview.7907c2ac.png",import.meta.url).toString();var _=A("ayMG0");A("acw62");var _=A("ayMG0");A("acw62");var _=A("ayMG0");A("acw62");var M=A("lzNIT"),sg=()=>/*#__PURE__*/(0,_.jsxs)("footer",{className:"tw-bg-gray-900 tw-text-white tw-pt-10 tw-pb-5 tw-px-6",children:[/*#__PURE__*/(0,_.jsxs)("div",{className:"tw-container tw-mx-auto tw-grid lg:tw-grid-cols-4 md:tw-grid-cols-2 tw-gap-8",children:[/*#__PURE__*/(0,_.jsxs)("div",{className:"tw-flex tw-flex-col tw-items-start",children:[/*#__PURE__*/(0,_.jsxs)(M.Link,{to:"/",className:"tw-flex tw-items-center tw-space-x-3",children:[/*#__PURE__*/(0,_.jsx)("img",{src:/*@__PURE__*/I(sd),alt:"Testify Logo",className:"tw-h-12 tw-w-12"}),/*#__PURE__*/(0,_.jsx)("h3",{className:"tw-text-2xl tw-font-semibold",children:"Testify"})]}),/*#__PURE__*/(0,_.jsx)("p",{className:"tw-mt-4 tw-text-gray-400 tw-max-w-xs",children:"Transforming talent acquisition through tech-powered testing solutions."})]}),/*#__PURE__*/(0,_.jsxs)("div",{children:[/*#__PURE__*/(0,_.jsx)("h4",{className:"tw-text-lg tw-font-semibold tw-mb-4",children:"Quick Links"}),/*#__PURE__*/(0,_.jsxs)("ul",{className:"tw-space-y-2",children:[/*#__PURE__*/(0,_.jsx)("li",{children:/*#__PURE__*/(0,_.jsx)(M.Link,{to:"/about",className:"tw-text-gray-400 hover:tw-text-white",children:"About Us"})}),/*#__PURE__*/(0,_.jsx)("li",{children:/*#__PURE__*/(0,_.jsx)(M.Link,{to:"/services",className:"tw-text-gray-400 hover:tw-text-white",children:"Services"})}),/*#__PURE__*/(0,_.jsx)("li",{children:/*#__PURE__*/(0,_.jsx)(M.Link,{to:"/test-library",className:"tw-text-gray-400 hover:tw-text-white",children:"Test Library"})}),/*#__PURE__*/(0,_.jsx)("li",{children:/*#__PURE__*/(0,_.jsx)(M.Link,{to:"/contact",className:"tw-text-gray-400 hover:tw-text-white",children:"Contact"})})]})]}),/*#__PURE__*/(0,_.jsxs)("div",{children:[/*#__PURE__*/(0,_.jsx)("h4",{className:"tw-text-lg tw-font-semibold tw-mb-4",children:"Contact Us"}),/*#__PURE__*/(0,_.jsxs)("p",{className:"tw-text-gray-400",children:[/*#__PURE__*/(0,_.jsx)("i",{className:"fa-solid fa-phone tw-mr-2"})," +1 (123) 456-7890"]}),/*#__PURE__*/(0,_.jsxs)("p",{className:"tw-text-gray-400",children:[/*#__PURE__*/(0,_.jsx)("i",{className:"fa-solid fa-envelope tw-mr-2"})," support@testify.com"]}),/*#__PURE__*/(0,_.jsxs)("p",{className:"tw-text-gray-400",children:[/*#__PURE__*/(0,_.jsx)("i",{className:"fa-solid fa-map-marker-alt tw-mr-2"})," 123 Testify St, Innovation City, TX"]})]}),/*#__PURE__*/(0,_.jsxs)("div",{children:[/*#__PURE__*/(0,_.jsx)("h4",{className:"tw-text-lg tw-font-semibold tw-mb-4",children:"Follow Us"}),/*#__PURE__*/(0,_.jsxs)("div",{className:"tw-flex tw-space-x-4",children:[/*#__PURE__*/(0,_.jsx)("a",{href:"https://facebook.com",target:"_blank",rel:"noopener noreferrer",className:"tw-text-gray-400 hover:tw-text-blue-500",children:/*#__PURE__*/(0,_.jsx)("i",{className:"fab fa-facebook-f tw-text-2xl"})}),/*#__PURE__*/(0,_.jsx)("a",{href:"https://twitter.com",target:"_blank",rel:"noopener noreferrer",className:"tw-text-gray-400 hover:tw-text-blue-400",children:/*#__PURE__*/(0,_.jsx)("i",{className:"fab fa-twitter tw-text-2xl"})}),/*#__PURE__*/(0,_.jsx)("a",{href:"https://linkedin.com",target:"_blank",rel:"noopener noreferrer",className:"tw-text-gray-400 hover:tw-text-blue-700",children:/*#__PURE__*/(0,_.jsx)("i",{className:"fab fa-linkedin tw-text-2xl"})}),/*#__PURE__*/(0,_.jsx)("a",{href:"https://instagram.com",target:"_blank",rel:"noopener noreferrer",className:"tw-text-gray-400 hover:tw-text-pink-500",children:/*#__PURE__*/(0,_.jsx)("i",{className:"fab fa-instagram tw-text-2xl"})})]})]})]}),/*#__PURE__*/(0,_.jsx)("div",{className:"tw-border-t tw-border-gray-700 tw-mt-8 tw-pt-4 tw-text-center",children:/*#__PURE__*/(0,_.jsxs)("p",{className:"tw-text-gray-500",children:["\xa9 ",new Date().getFullYear()," Testify. All rights reserved."]})})]}),sy=A("k3T0g"),_=A("ayMG0"),O=A("acw62"),sy=A("k3T0g");A("gc0qX");var _=A("ayMG0"),O=A("acw62"),sy=A("k3T0g"),M=A("lzNIT"),D=A("aphAM"),_=A("ayMG0"),O=A("acw62"),sb={};s7=A("acw62"),sb=/******/function(e){/******/// The module cache
/******/var t={};/******//******/// The require function
/******/function r(n){/******//******/// Check if module is in cache
/******/if(t[n])/******/return t[n].exports;/******/// Create a new module (and put it into the cache)
/******/var a=t[n]={/******/i:n,/******/l:!1,/******/exports:{}};/******//******/// Return the exports of the module
/******/return(/******//******/// Execute the module function
/******/e[n].call(a.exports,a,a.exports,r),/******//******/// Flag the module as loaded
/******/a.l=!0,a.exports);/******/}/******//******//******/// Load entry module and return exports
/******/return(/******//******//******/// expose the modules object (__webpack_modules__)
/******/r.m=e,/******//******/// expose the module cache
/******/r.c=t,/******//******/// define getter function for harmony exports
/******/r.d=function(e,t,n){/******/r.o(e,t)||/******/Object.defineProperty(e,t,{enumerable:!0,get:n});/******/},/******//******/// define __esModule on exports
/******/r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&/******/Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),/******/Object.defineProperty(e,"__esModule",{value:!0});/******/},/******//******/// create a fake namespace object
/******/// mode & 1: value is a module id, require it
/******/// mode & 2: merge all properties of value into the ns
/******/// mode & 4: return value when already ns object
/******/// mode & 8|1: behave like require
/******/r.t=function(e,t){/******/if(1&t&&(e=r(e)),8&t||4&t&&"object"==typeof e&&e&&e.__esModule)return e;/******/var n=Object.create(null);/******/if(/******/r.r(n),/******/Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(n,a,(function(t){return e[t]}).bind(null,a));/******/return n;/******/},/******//******/// getDefaultExport function for compatibility with non-harmony modules
/******/r.n=function(e){/******/var t=e&&e.__esModule?/******/function(){return e.default}:/******/function(){return e};/******/return /******/r.d(t,"a",t),t;/******/},/******//******/// Object.prototype.hasOwnProperty.call
/******/r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},/******//******/// __webpack_public_path__
/******/r.p="",r(r.s="./src/react-webcam.tsx"));/******/}({/***/"./src/react-webcam.tsx":/*!******************************!*\
  !*** ./src/react-webcam.tsx ***!
  \******************************//*! exports provided: default *//***/function(e,t,r){r.r(t);/* harmony import */var n,a=r(/*! react */"react"),s=(n=function(e,t){return(n=Object.setPrototypeOf||({__proto__:[]})instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),i=function(){return(i=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var a in t=arguments[r])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)},o=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&0>t.indexOf(n)&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,n=Object.getOwnPropertySymbols(e);a<n.length;a++)0>t.indexOf(n[a])&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(r[n[a]]=e[n[a]]);return r};function l(){return!!(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)}"undefined"!=typeof window&&(void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(e){// First get ahold of the legacy getUserMedia, if present
var t=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return(// Some browsers just don't implement it - return a rejected promise with an error
// to keep a consistent interface
t?new Promise(function(r,n){t.call(navigator,e,r,n)}):Promise.reject(Error("getUserMedia is not implemented in this browser")))}));var u=/** @class */function(e){function t(t){var r=e.call(this,t)||this;return r.canvas=null,r.ctx=null,r.requestUserMediaId=0,r.unmounted=!1,r.state={hasUserMedia:!1},r}return s(t,e),t.prototype.componentDidMount=function(){var e=this.state,t=this.props;if(this.unmounted=!1,!l()){t.onUserMediaError("getUserMedia not supported");return}e.hasUserMedia||this.requestUserMedia(),t.children&&"function"!=typeof t.children&&console.warn("children must be a function")},t.prototype.componentDidUpdate=function(e){var t=this.props;if(!l()){t.onUserMediaError("getUserMedia not supported");return}var r=JSON.stringify(e.audioConstraints)!==JSON.stringify(t.audioConstraints),n=JSON.stringify(e.videoConstraints)!==JSON.stringify(t.videoConstraints),a=e.minScreenshotWidth!==t.minScreenshotWidth,s=e.minScreenshotHeight!==t.minScreenshotHeight;(n||a||s)&&(this.canvas=null,this.ctx=null),(r||n)&&(this.stopAndCleanup(),this.requestUserMedia())},t.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},t.stopMediaStream=function(e){e&&(e.getVideoTracks&&e.getAudioTracks?(e.getVideoTracks().map(function(t){e.removeTrack(t),t.stop()}),e.getAudioTracks().map(function(t){e.removeTrack(t),t.stop()})):e.stop())},t.prototype.stopAndCleanup=function(){var e=this.state;e.hasUserMedia&&(t.stopMediaStream(this.stream),e.src&&window.URL.revokeObjectURL(e.src))},t.prototype.getScreenshot=function(e){var t=this.state,r=this.props;if(!t.hasUserMedia)return null;var n=this.getCanvas(e);return n&&n.toDataURL(r.screenshotFormat,r.screenshotQuality)},t.prototype.getCanvas=function(e){var t=this.state,r=this.props;if(!this.video||!t.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var n=this.video.videoWidth,a=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var s=n/a;a=(n=r.minScreenshotWidth||this.video.clientWidth)/s,r.minScreenshotHeight&&a<r.minScreenshotHeight&&(n=(a=r.minScreenshotHeight)*s)}this.canvas=document.createElement("canvas"),this.canvas.width=(null==e?void 0:e.width)||n,this.canvas.height=(null==e?void 0:e.height)||a,this.ctx=this.canvas.getContext("2d")}var i=this.ctx,o=this.canvas;return i&&o&&(// adjust the height and width of the canvas to the given dimensions
o.width=(null==e?void 0:e.width)||o.width,o.height=(null==e?void 0:e.height)||o.height,r.mirrored&&(i.translate(o.width,0),i.scale(-1,1)),i.imageSmoothingEnabled=r.imageSmoothing,i.drawImage(this.video,0,0,(null==e?void 0:e.width)||o.width,(null==e?void 0:e.height)||o.height),r.mirrored&&(i.scale(-1,1),i.translate(-o.width,0))),o},t.prototype.requestUserMedia=function(){var e=this,r=this.props,n=function(n,a){var s={video:void 0===a||a};r.audio&&(s.audio=void 0===n||n),e.requestUserMediaId++;var i=e.requestUserMediaId;navigator.mediaDevices.getUserMedia(s).then(function(r){e.unmounted||i!==e.requestUserMediaId?t.stopMediaStream(r):e.handleUserMedia(null,r)}).catch(function(t){e.handleUserMedia(t)})};if("mediaDevices"in navigator)n(r.audioConstraints,r.videoConstraints);else{var a=function(e){return{optional:[{sourceId:e}]}},s=function(e){var t=e.deviceId;return"string"==typeof t?t:Array.isArray(t)&&t.length>0?t[0]:"object"==typeof t&&t.ideal?t.ideal:null};// @ts-ignore: deprecated api
MediaStreamTrack.getSources(function(e){var t=null,i=null;e.forEach(function(e){"audio"===e.kind?t=e.id:"video"===e.kind&&(i=e.id)});var o=s(r.audioConstraints);o&&(t=o);var l=s(r.videoConstraints);l&&(i=l),n(a(t),a(i))})}},t.prototype.handleUserMedia=function(e,t){var r=this.props;if(e||!t){this.setState({hasUserMedia:!1}),r.onUserMediaError(e);return}this.stream=t;try{this.video&&(this.video.srcObject=t),this.setState({hasUserMedia:!0})}catch(e){this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(t)})}r.onUserMedia(t)},t.prototype.render=function(){var e=this,t=this.state,r=this.props,n=r.audio,s=(r.forceScreenshotSourceSize,r.disablePictureInPicture),l=(r.onUserMedia,r.onUserMediaError,r.screenshotFormat,r.screenshotQuality,r.minScreenshotWidth,r.minScreenshotHeight,r.audioConstraints,r.videoConstraints,r.imageSmoothing,r.mirrored),u=r.style,c=void 0===u?{}:u,d=r.children,p=o(r,["audio","forceScreenshotSourceSize","disablePictureInPicture","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style","children"]),h=l?i(i({},c),{transform:(c.transform||"")+" scaleX(-1)"}):c,f={getScreenshot:this.getScreenshot.bind(this)};return a.createElement(a.Fragment,null,a.createElement("video",i({autoPlay:!0,disablePictureInPicture:s,src:t.src,muted:!n,playsInline:!0,ref:function(t){e.video=t},style:h},p)),d&&d(f))},t.defaultProps={audio:!1,disablePictureInPicture:!1,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},t}(a.Component);/* harmony default export */t.default=u;/***/},/***/react:/*!**************************************************************************************!*\
  !*** external {"root":"React","commonjs2":"react","commonjs":"react","amd":"react"} ***!
  \**************************************************************************************//*! no static exports found *//***/function(e,t){e.exports=s7;/***/}}).default,new URL("Illustrator.b9018d61.png",import.meta.url).toString();var M=A("lzNIT"),D=A("aphAM"),_=A("ayMG0"),O=A("acw62"),sv={};sv=new URL("Register.173a833e.png",import.meta.url).toString();var sx=()=>{let[e,t]=(0,O.useState)(""),[r,n]=(0,O.useState)(""),[a,s]=(0,O.useState)(""),i=K(e=>e.User);return/*#__PURE__*/(0,_.jsxs)("div",{className:"row",children:[/*#__PURE__*/(0,_.jsx)("div",{className:"col-md-6 tw-p-6",children:/*#__PURE__*/(0,_.jsxs)("form",{action:"",className:" tw-p-5 tw-gap-5",children:[/*#__PURE__*/(0,_.jsxs)("fieldset",{className:" tw-bg-slate-100 tw-p-[6] tw-w-3/4 tw-rounded-sm",children:[" ",/*#__PURE__*/(0,_.jsx)("i",{className:"fa-solid fa-circle-exclamation"})," \xa0Field marked with ",/*#__PURE__*/(0,_.jsx)("span",{className:" tw-text-red-600 tw-text-lg",children:"*"})," are Required "]}),/*#__PURE__*/(0,_.jsxs)("fieldset",{className:" tw-mt-2 tw-font-semibold",children:["Name ",/*#__PURE__*/(0,_.jsx)("span",{className:" tw-text-red-600 tw-text-lg",children:"*"}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("input",{type:"text",name:"",id:"",className:" tw-w-3/4 tw-p-1  tw-rounded-tr-md tw-rounded-br-md",placeholder:"Enter your Name",value:i?.displayName?i?.displayName:e,onChange:e=>{t(e.target.value)}})]}),/*#__PURE__*/(0,_.jsxs)("fieldset",{className:" tw-mt-2 tw-font-semibold",children:["Email ",/*#__PURE__*/(0,_.jsx)("span",{className:" tw-text-red-600 tw-text-lg",children:"*"})," ",/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("input",{type:"text",className:"tw-w-3/4 tw-p-1  tw-rounded-tr-md tw-rounded-br-md",placeholder:"Enter your email",value:i?.email?i?.email:r,onChange:e=>{n(e.target.value)}})]}),/*#__PURE__*/(0,_.jsxs)("fieldset",{className:"tw-mt-2 tw-font-semibold",children:[" Mobile ",/*#__PURE__*/(0,_.jsx)("span",{className:" tw-text-red-600 tw-text-lg",children:"*"})," ",/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("input",{type:"tel",className:" tw-w-3/4 tw-p-1  tw-rounded-tr-md tw-rounded-br-md",placeholder:"Enter your Mobile phone",value:a,onChange:e=>{s(e.target.value)}})]}),/*#__PURE__*/(0,_.jsx)("button",{type:"submit",className:" tw-mt-8 tw-px-5 tw-py-1 tw-text-center tw-rounded-md tw-bg-green-500",children:"Submit"})]})}),/*#__PURE__*/(0,_.jsx)("div",{className:"col-md-6 tw-flex tw-justify-center tw-items-center",children:/*#__PURE__*/(0,_.jsx)("img",{src:/*@__PURE__*/I(sv),alt:"img",className:" tw-w-3/4"})})]})},_=A("ayMG0"),O=A("acw62"),sw={};sw=new URL("user.a9ed346f.jpg",import.meta.url).toString(),new URL("Frame.bac1d7d8.png",import.meta.url).toString(),new URL("blur.46815382.png",import.meta.url).toString(),new URL("background.7f45e66b.png",import.meta.url).toString();var sk={};sk=new URL("good.b624fae2.png",import.meta.url).toString();var sS={};sS=new URL("Bad.669c29f6.png",import.meta.url).toString();var sN=()=>{let e=(0,O.useRef)(null),[t,r]=(0,O.useState)(!1),n=(0,O.useCallback)(async()=>{let t=e?.current?.getScreenshot();r(t)},[e]);return/*#__PURE__*/(0,_.jsxs)("div",{className:"row ",children:[/*#__PURE__*/(0,_.jsx)("div",{className:"col-md-6 tw-p-2 tw-flex tw-justify-center tw-border-r-2 tw-border-black",children:/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-shadow-md tw-w-3/4 tw-bg-white tw-rounded-md",children:[/*#__PURE__*/(0,_.jsx)("h1",{className:" tw-underline tw-bg-gray-200 tw-text-sm tw-p-3 tw-w-full  tw-rounded-tl-md tw-rounded-tr-md  hover:tw-border-b-black",children:"Instructions "}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-2",children:[/*#__PURE__*/(0,_.jsxs)("h4",{className:" tw-text-sm",children:[" ",/*#__PURE__*/(0,_.jsx)("i",{className:"fa-solid fa-square"}),"\xa0 Photo Needs to be taken clealy "]}),/*#__PURE__*/(0,_.jsxs)("h4",{className:" tw-text-sm",children:[" ",/*#__PURE__*/(0,_.jsx)("i",{className:"fa-solid fa-square"})," \xa0 light need to be proper"]})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-2",children:[/*#__PURE__*/(0,_.jsx)("h4",{className:" tw-text-sm tw-text-emerald-500",children:"Good Scenario"}),/*#__PURE__*/(0,_.jsx)("img",{src:/*@__PURE__*/I(sk),alt:""}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("h4",{className:"tw-text-sm tw-text-red-600",children:"Bad Scenario"}),/*#__PURE__*/(0,_.jsx)("img",{src:/*@__PURE__*/I(sS),alt:""})]})]})}),/*#__PURE__*/(0,_.jsxs)("div",{className:"col-md-6 tw-border-r-2 tw-border-r-gray-600",children:[/*#__PURE__*/(0,_.jsx)("h4",{className:" tw-px-3 tw-text-sm tw-text-gray-400",children:'Please Center yourself to the screen and press "capture your face" button'}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-3 tw-flex tw-justify-start tw-flex-col md:tw-flex-row tw-gap-9",children:[/*#__PURE__*/(0,_.jsx)(/*@__PURE__*/I(sb),{className:"tw-object-cover tw-w-[300] tw-h-[250] tw-rounded-md tw-border-1 tw-border-solid tw-border-slate-500",screenshotFormat:"image/jpeg",ref:e}),/*#__PURE__*/(0,_.jsx)("img",{src:`${t||/*@__PURE__*/I(sw)}`,className:" tw-border-1 tw-w-[300] tw-h-[250] tw-border-solid tw-border-slate-500 tw-rounded-md"})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-justify-center tw-gap-8 tw-p-6",children:[/*#__PURE__*/(0,_.jsx)("button",{className:" tw-px-8 tw-py-2 tw-bg-green-500 tw-border-0 tw-rounded-md tw-shadow-md",onClick:n,children:"Capture your face"}),/*#__PURE__*/(0,_.jsx)("button",{className:" tw-px-8 tw-py-2 tw-bg-green-500 tw-border-0 tw-rounded-md tw-shadow-md",onClick:()=>{r(null)},children:"Retake"})]})]})]})},_=A("ayMG0"),O=A("acw62"),sT={};sT=new URL("GoodID.9b2195c4.png",import.meta.url).toString();var sI={};sI=new URL("Bad1.0a7f3300.png",import.meta.url).toString();var sC={};sC=new URL("Bad2.26fdd25f.png",import.meta.url).toString();var sE=()=>{let e=(0,O.useRef)(null),[t,r]=(0,O.useState)(!1),n=(0,O.useCallback)(async()=>{let t=e?.current?.getScreenshot();r(t)},[e]);return/*#__PURE__*/(0,_.jsxs)("div",{className:"row tw-p-2",children:[/*#__PURE__*/(0,_.jsx)("div",{className:"col-md-5 tw-p-2 tw-flex tw-justify-center tw-border-r-2 tw-border-black",children:/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-shadow-md tw-w-3/4 tw-bg-white tw-rounded-md",children:[/*#__PURE__*/(0,_.jsx)("h1",{className:" tw-underline tw-bg-gray-200 tw-text-sm tw-p-3 tw-w-full  tw-rounded-tl-md tw-rounded-tr-md  hover:tw-border-b-black",children:"Instructions "}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-2",children:[/*#__PURE__*/(0,_.jsxs)("h4",{className:" tw-text-sm",children:[" ",/*#__PURE__*/(0,_.jsx)("i",{className:"fa-solid fa-square"}),"\xa0 Photo Needs to be taken clealy "]}),/*#__PURE__*/(0,_.jsxs)("h4",{className:" tw-text-sm",children:[" ",/*#__PURE__*/(0,_.jsx)("i",{className:"fa-solid fa-square"})," \xa0 light need to be proper"]})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-2",children:[/*#__PURE__*/(0,_.jsx)("h4",{className:" tw-text-sm tw-text-emerald-500",children:"Good Scenario"}),/*#__PURE__*/(0,_.jsx)("img",{src:/*@__PURE__*/I(sT),alt:""}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("h4",{className:"tw-text-sm tw-text-red-600",children:"Bad Scenario"}),/*#__PURE__*/(0,_.jsx)("img",{src:/*@__PURE__*/I(sI),alt:""}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("img",{src:/*@__PURE__*/I(sC),alt:""})]})]})}),/*#__PURE__*/(0,_.jsx)("div",{className:"col-md-1",children:/*#__PURE__*/(0,_.jsx)("div",{className:" tw-border-2 tw-border-gray-500 tw-border-solid tw-w-full md:tw-w-[2] tw-h-full tw-rounded-xl "})}),/*#__PURE__*/(0,_.jsxs)("div",{className:"col-md-6 tw-border-r-2 tw-border-r-gray-600",children:[/*#__PURE__*/(0,_.jsx)("h4",{className:" tw-px-3 tw-text-sm tw-text-gray-400",children:'Please allign yourself to the Center of screen and press "capture your ID" button'}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-3 tw-flex tw-justify-start tw-flex-col md:tw-flex-row tw-gap-9",children:[/*#__PURE__*/(0,_.jsx)(/*@__PURE__*/I(sb),{className:"tw-object-cover tw-w-[300] tw-h-[250] tw-rounded-md tw-border-1 tw-border-solid tw-border-slate-500",screenshotFormat:"image/jpeg",ref:e}),/*#__PURE__*/(0,_.jsx)("img",{src:`${t||/*@__PURE__*/I(sw)}`,className:" tw-border-1 tw-w-[300] tw-h-[250] tw-border-solid tw-border-slate-500 tw-rounded-md"})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-justify-center tw-gap-8 tw-p-6",children:[/*#__PURE__*/(0,_.jsx)("button",{className:" tw-px-8 tw-py-2 tw-bg-green-500 tw-border-0 tw-rounded-md tw-shadow-md",onClick:n,children:"Capture your ID"}),/*#__PURE__*/(0,_.jsx)("button",{className:" tw-px-8 tw-py-2 tw-bg-green-500 tw-border-0 tw-rounded-md tw-shadow-md",onClick:()=>{r(null)},children:"Retake"})]})]})]})},_=A("ayMG0"),O=A("acw62"),M=A("lzNIT"),D=(A("aphAM"),A("aphAM")),sy=A("k3T0g"),sA={};function sR(e){for(var t=arguments.length,r=Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];throw Error("[Immer] minified error nr: "+e+(r.length?" "+r.map(function(e){return"'"+e+"'"}).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function s_(e){return!!e&&!!e[ih]}function sO(e){var t;return!!e&&(function(e){if(!e||"object"!=typeof e)return!1;var t=Object.getPrototypeOf(e);if(null===t)return!0;var r=Object.hasOwnProperty.call(t,"constructor")&&t.constructor;return r===Object||"function"==typeof r&&Function.toString.call(r)===im}(e)||Array.isArray(e)||!!e[ip]||!!(null===(t=e.constructor)||void 0===t?void 0:t[ip])||sL(e)||sj(e))}function sP(e,t,r){void 0===r&&(r=!1),0===s$(e)?(r?Object.keys:ig)(e).forEach(function(n){r&&"symbol"==typeof n||t(n,e[n],e)}):e.forEach(function(r,n){return t(n,r,e)})}function s$(e){var t=e[ih];return t?t.i>3?t.i-4:t.i:Array.isArray(e)?1:sL(e)?2:sj(e)?3:0}function sD(e,t){return 2===s$(e)?e.has(t):Object.prototype.hasOwnProperty.call(e,t)}function sM(e,t,r){var n=s$(e);2===n?e.set(t,r):3===n?e.add(r):e[t]=r}function sF(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}function sL(e){return il&&e instanceof Map}function sj(e){return iu&&e instanceof Set}function sB(e){return e.o||e.t}function sz(e){if(Array.isArray(e))return Array.prototype.slice.call(e);var t=iy(e);delete t[ih];for(var r=ig(t),n=0;n<r.length;n++){var a=r[n],s=t[a];!1===s.writable&&(s.writable=!0,s.configurable=!0),(s.get||s.set)&&(t[a]={configurable:!0,writable:!0,enumerable:s.enumerable,value:e[a]})}return Object.create(Object.getPrototypeOf(e),t)}function sV(e,t){return void 0===t&&(t=!1),sU(e)||s_(e)||!sO(e)||(s$(e)>1&&(e.set=e.add=e.clear=e.delete=sG),Object.freeze(e),t&&sP(e,function(e,t){return sV(t,!0)},!0)),e}function sG(){sR(2)}function sU(e){return null==e||"object"!=typeof e||Object.isFrozen(e)}function sW(e){var t=ib[e];return t||sR(18,e),t}function sq(e,t){t&&(sW("Patches"),e.u=[],e.s=[],e.v=t)}function sH(e){sK(e),e.p.forEach(sZ),e.p=null}function sK(e){e===ii&&(ii=e.l)}function sX(e){return ii={p:[],l:ii,h:e,m:!0,_:0}}function sZ(e){var t=e[ih];0===t.i||1===t.i?t.j():t.g=!0}function sQ(e,t){t._=t.p.length;var r=t.p[0],n=void 0!==e&&e!==r;return t.h.O||sW("ES5").S(t,e,n),n?(r[ih].P&&(sH(t),sR(4)),sO(e)&&(e=sY(t,e),t.l||s0(t,e)),t.u&&sW("Patches").M(r[ih].t,e,t.u,t.s)):e=sY(t,r,[]),sH(t),t.u&&t.v(t.u,t.s),e!==id?e:void 0}function sY(e,t,r){if(sU(t))return t;var n=t[ih];if(!n)return sP(t,function(a,s){return sJ(e,n,t,a,s,r)},!0),t;if(n.A!==e)return t;if(!n.P)return s0(e,n.t,!0),n.t;if(!n.I){n.I=!0,n.A._--;var a=4===n.i||5===n.i?n.o=sz(n.k):n.o,s=a,i=!1;3===n.i&&(s=new Set(a),a.clear(),i=!0),sP(s,function(t,s){return sJ(e,n,a,t,s,r,i)}),s0(e,a,!1),r&&e.u&&sW("Patches").N(n,r,e.u,e.s)}return n.o}function sJ(e,t,r,n,a,s,i){if(s_(a)){var o=sY(e,a,s&&t&&3!==t.i&&!sD(t.R,n)?s.concat(n):void 0);if(sM(r,n,o),!s_(o))return;e.m=!1}else i&&r.add(a);if(sO(a)&&!sU(a)){if(!e.h.D&&e._<1)return;sY(e,a),t&&t.A.l||s0(e,a)}}function s0(e,t,r){void 0===r&&(r=!1),!e.l&&e.h.D&&e.m&&sV(t,r)}function s1(e,t){var r=e[ih];return(r?sB(r):e)[t]}function s2(e,t){if(t in e)for(var r=Object.getPrototypeOf(e);r;){var n=Object.getOwnPropertyDescriptor(r,t);if(n)return n;r=Object.getPrototypeOf(r)}}function s4(e){e.P||(e.P=!0,e.l&&s4(e.l))}function s3(e){e.o||(e.o=sz(e.t))}function s8(e,t,r){var n,a,s,i,o,l,u,c=sL(t)?sW("MapSet").F(t,r):sj(t)?sW("MapSet").T(t,r):e.O?(s=a={i:(n=Array.isArray(t))?1:0,A:r?r.A:ii,P:!1,I:!1,R:{},l:r,t:t,k:null,o:null,j:null,C:!1},i=iv,n&&(s=[a],i=ix),l=(o=Proxy.revocable(s,i)).revoke,u=o.proxy,a.k=u,a.j=l,u):sW("ES5").J(t,r);return(r?r.A:ii).p.push(c),c}function s6(e,t){switch(t){case 2:return new Map(e);case 3:return Array.from(e)}return sz(e)}c(sA,"applyMiddleware",()=>iP,e=>iP=e),c(sA,"combineReducers",()=>i_,e=>i_=e),c(sA,"compose",()=>iO,e=>iO=e),c(sA,"createStore",()=>iR,e=>iR=e),c(sA,"configureStore",()=>iJ),c(sA,"createSlice",()=>i1);var s5,s7,s9,ie,it,ir,ia,is,ii,io="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),il="undefined"!=typeof Map,iu="undefined"!=typeof Set,ic="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,id=io?Symbol.for("immer-nothing"):((is={})["immer-nothing"]=!0,is),ip=io?Symbol.for("immer-draftable"):"__$immer_draftable",ih=io?Symbol.for("immer-state"):"__$immer_state",im=""+Object.prototype.constructor,ig="undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Object.getOwnPropertyNames,iy=Object.getOwnPropertyDescriptors||function(e){var t={};return ig(e).forEach(function(r){t[r]=Object.getOwnPropertyDescriptor(e,r)}),t},ib={},iv={get:function(e,t){if(t===ih)return e;var r,n,a=sB(e);if(!sD(a,t))return(n=s2(a,t))?"value"in n?n.value:null===(r=n.get)||void 0===r?void 0:r.call(e.k):void 0;var s=a[t];return e.I||!sO(s)?s:s===s1(e.t,t)?(s3(e),e.o[t]=s8(e.A.h,s,e)):s},has:function(e,t){return t in sB(e)},ownKeys:function(e){return Reflect.ownKeys(sB(e))},set:function(e,t,r){var n=s2(sB(e),t);if(null==n?void 0:n.set)return n.set.call(e.k,r),!0;if(!e.P){var a=s1(sB(e),t),s=null==a?void 0:a[ih];if(s&&s.t===r)return e.o[t]=r,e.R[t]=!1,!0;if(sF(r,a)&&(void 0!==r||sD(e.t,t)))return!0;s3(e),s4(e)}return e.o[t]===r&&(void 0!==r||t in e.o)||Number.isNaN(r)&&Number.isNaN(e.o[t])||(e.o[t]=r,e.R[t]=!0),!0},deleteProperty:function(e,t){return void 0!==s1(e.t,t)||t in e.t?(e.R[t]=!1,s3(e),s4(e)):delete e.R[t],e.o&&delete e.o[t],!0},getOwnPropertyDescriptor:function(e,t){var r=sB(e),n=Reflect.getOwnPropertyDescriptor(r,t);return n?{writable:!0,configurable:1!==e.i||"length"!==t,enumerable:n.enumerable,value:r[t]}:n},defineProperty:function(){sR(11)},getPrototypeOf:function(e){return Object.getPrototypeOf(e.t)},setPrototypeOf:function(){sR(12)}},ix={};sP(iv,function(e,t){ix[e]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}}),ix.deleteProperty=function(e,t){return ix.set.call(this,e,t,void 0)},ix.set=function(e,t,r){return iv.set.call(this,e[0],t,r,e[0])};var iw=new(function(){function e(e){var t=this;this.O=ic,this.D=!0,this.produce=function(e,r,n){if("function"==typeof e&&"function"!=typeof r){var a,s=r;return r=e,function(e){var n=this;void 0===e&&(e=s);for(var a=arguments.length,i=Array(a>1?a-1:0),o=1;o<a;o++)i[o-1]=arguments[o];return t.produce(e,function(e){var t;return(t=r).call.apply(t,[n,e].concat(i))})}}if("function"!=typeof r&&sR(6),void 0!==n&&"function"!=typeof n&&sR(7),sO(e)){var i=sX(t),o=s8(t,e,void 0),l=!0;try{a=r(o),l=!1}finally{l?sH(i):sK(i)}return"undefined"!=typeof Promise&&a instanceof Promise?a.then(function(e){return sq(i,n),sQ(e,i)},function(e){throw sH(i),e}):(sq(i,n),sQ(a,i))}if(!e||"object"!=typeof e){if(void 0===(a=r(e))&&(a=e),a===id&&(a=void 0),t.D&&sV(a,!0),n){var u=[],c=[];sW("Patches").M(e,a,u,c),n(u,c)}return a}sR(21,e)},this.produceWithPatches=function(e,r){if("function"==typeof e)return function(r){for(var n=arguments.length,a=Array(n>1?n-1:0),s=1;s<n;s++)a[s-1]=arguments[s];return t.produceWithPatches(r,function(t){return e.apply(void 0,[t].concat(a))})};var n,a,s=t.produce(e,r,function(e,t){n=e,a=t});return"undefined"!=typeof Promise&&s instanceof Promise?s.then(function(e){return[e,n,a]}):[s,n,a]},"boolean"==typeof(null==e?void 0:e.useProxies)&&this.setUseProxies(e.useProxies),"boolean"==typeof(null==e?void 0:e.autoFreeze)&&this.setAutoFreeze(e.autoFreeze)}var t=e.prototype;return t.createDraft=function(e){sO(e)||sR(8),s_(e)&&(s_(t=e)||sR(22,t),e=function e(t){if(!sO(t))return t;var r,n=t[ih],a=s$(t);if(n){if(!n.P&&(n.i<4||!sW("ES5").K(n)))return n.t;n.I=!0,r=s6(t,a),n.I=!1}else r=s6(t,a);return sP(r,function(t,a){var s;n&&(2===s$(s=n.t)?s.get(t):s[t])===a||sM(r,t,e(a))}),3===a?new Set(r):r}(t));var t,r=sX(this),n=s8(this,e,void 0);return n[ih].C=!0,sK(r),n},t.finishDraft=function(e,t){var r=(e&&e[ih]).A;return sq(r,t),sQ(void 0,r)},t.setAutoFreeze=function(e){this.D=e},t.setUseProxies=function(e){e&&!ic&&sR(20),this.O=e},t.applyPatches=function(e,t){for(r=t.length-1;r>=0;r--){var r,n=t[r];if(0===n.path.length&&"replace"===n.op){e=n.value;break}}r>-1&&(t=t.slice(r+1));var a=sW("Patches").$;return s_(e)?a(e,t):this.produce(e,function(e){return a(e,t)})},e}()),ik=iw.produce;function iS(e){return(iS="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function iN(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,n)}return r}function iT(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?iN(Object(r),!0).forEach(function(t){!function(e,t,r){var n;n=function(e,t){if("object"!==iS(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!==iS(n))return n;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"===iS(n)?n:String(n))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r}(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):iN(Object(r)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}/**
 * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js
 *
 * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes
 * during build.
 * @param {number} code
 */function iI(e){return"Minified Redux error #"+e+"; visit https://redux.js.org/Errors?code="+e+" for the full message or use the non-minified dev environment for full errors. "}iw.produceWithPatches.bind(iw),iw.setAutoFreeze.bind(iw),iw.setUseProxies.bind(iw),iw.applyPatches.bind(iw),iw.createDraft.bind(iw),iw.finishDraft.bind(iw);// Inlined version of the `symbol-observable` polyfill
var iC="function"==typeof Symbol&&Symbol.observable||"@@observable",iE=function(){return Math.random().toString(36).substring(7).split("").join(".")},iA={INIT:"@@redux/INIT"+iE(),REPLACE:"@@redux/REPLACE"+iE(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+iE()}};/**
 * @deprecated
 *
 * **We recommend using the `configureStore` method
 * of the `@reduxjs/toolkit` package**, which replaces `createStore`.
 *
 * Redux Toolkit is our recommended approach for writing Redux logic today,
 * including store setup, reducers, data fetching, and more.
 *
 * **For more details, please read this Redux docs page:**
 * **https://redux.js.org/introduction/why-rtk-is-redux-today**
 *
 * `configureStore` from Redux Toolkit is an improved version of `createStore` that
 * simplifies setup and helps avoid common bugs.
 *
 * You should not be using the `redux` core package by itself today, except for learning purposes.
 * The `createStore` method from the core `redux` package will not be removed, but we encourage
 * all users to migrate to using Redux Toolkit for all Redux code.
 *
 * If you want to use `createStore` without this visual deprecation warning, use
 * the `legacy_createStore` import instead:
 *
 * `import { legacy_createStore as createStore} from 'redux'`
 *
 */function iR(e,t,r){if("function"==typeof t&&"function"==typeof r||"function"==typeof r&&"function"==typeof arguments[3])throw Error(iI(0));if("function"==typeof t&&void 0===r&&(r=t,t=void 0),void 0!==r){if("function"!=typeof r)throw Error(iI(1));return r(iR)(e,t)}if("function"!=typeof e)throw Error(iI(2));var n,a=e,s=t,i=[],o=i,l=!1;/**
   * This makes a shallow copy of currentListeners so we can use
   * nextListeners as a temporary list while dispatching.
   *
   * This prevents any bugs around consumers calling
   * subscribe/unsubscribe in the middle of a dispatch.
   */function u(){o===i&&(o=i.slice())}/**
   * Reads the state tree managed by the store.
   *
   * @returns {any} The current state tree of your application.
   */function c(){if(l)throw Error(iI(3));return s}/**
   * Adds a change listener. It will be called any time an action is dispatched,
   * and some part of the state tree may potentially have changed. You may then
   * call `getState()` to read the current state tree inside the callback.
   *
   * You may call `dispatch()` from a change listener, with the following
   * caveats:
   *
   * 1. The subscriptions are snapshotted just before every `dispatch()` call.
   * If you subscribe or unsubscribe while the listeners are being invoked, this
   * will not have any effect on the `dispatch()` that is currently in progress.
   * However, the next `dispatch()` call, whether nested or not, will use a more
   * recent snapshot of the subscription list.
   *
   * 2. The listener should not expect to see all state changes, as the state
   * might have been updated multiple times during a nested `dispatch()` before
   * the listener is called. It is, however, guaranteed that all subscribers
   * registered before the `dispatch()` started will be called with the latest
   * state by the time it exits.
   *
   * @param {Function} listener A callback to be invoked on every dispatch.
   * @returns {Function} A function to remove this change listener.
   */function d(e){if("function"!=typeof e)throw Error(iI(4));if(l)throw Error(iI(5));var t=!0;return u(),o.push(e),function(){if(t){if(l)throw Error(iI(6));t=!1,u();var r=o.indexOf(e);o.splice(r,1),i=null}}}/**
   * Dispatches an action. It is the only way to trigger a state change.
   *
   * The `reducer` function, used to create the store, will be called with the
   * current state tree and the given `action`. Its return value will
   * be considered the **next** state of the tree, and the change listeners
   * will be notified.
   *
   * The base implementation only supports plain object actions. If you want to
   * dispatch a Promise, an Observable, a thunk, or something else, you need to
   * wrap your store creating function into the corresponding middleware. For
   * example, see the documentation for the `redux-thunk` package. Even the
   * middleware will eventually dispatch plain object actions using this method.
   *
   * @param {Object} action A plain object representing “what changed”. It is
   * a good idea to keep actions serializable so you can record and replay user
   * sessions, or use the time travelling `redux-devtools`. An action must have
   * a `type` property which may not be `undefined`. It is a good idea to use
   * string constants for action types.
   *
   * @returns {Object} For convenience, the same action object you dispatched.
   *
   * Note that, if you use a custom middleware, it may wrap `dispatch()` to
   * return something else (for example, a Promise you can await).
   */function p(e){if(!/**
 * @param {any} obj The object to inspect.
 * @returns {boolean} True if the argument appears to be a plain object.
 */function(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}(e))throw Error(iI(7));if(void 0===e.type)throw Error(iI(8));if(l)throw Error(iI(9));try{l=!0,s=a(s,e)}finally{l=!1}for(var t=i=o,r=0;r<t.length;r++)(0,t[r])();return e}return(// reducer returns their initial state. This effectively populates
// the initial state tree.
p({type:iA.INIT}),(n={dispatch:p,subscribe:d,getState:c,replaceReducer:/**
   * Replaces the reducer currently used by the store to calculate the state.
   *
   * You might need this if your app implements code splitting and you want to
   * load some of the reducers dynamically. You might also need this if you
   * implement a hot reloading mechanism for Redux.
   *
   * @param {Function} nextReducer The reducer for the store to use instead.
   * @returns {void}
   */function(e){if("function"!=typeof e)throw Error(iI(10));a=e,// Any reducers that existed in both the new and old rootReducer
// will receive the previous state. This effectively populates
// the new state tree with any relevant data from the old one.
p({type:iA.REPLACE})}})[iC]=/**
   * Interoperability point for observable/reactive libraries.
   * @returns {observable} A minimal observable of state changes.
   * For more information, see the observable proposal:
   * https://github.com/tc39/proposal-observable
   */function(){var e;return(e={/**
       * The minimal observable subscription method.
       * @param {Object} observer Any object that can be used as an observer.
       * The observer object should have a `next` method.
       * @returns {subscription} An object with an `unsubscribe` method that can
       * be used to unsubscribe the observable from the store, and prevent further
       * emission of values from the observable.
       */subscribe:function(e){if("object"!=typeof e||null===e)throw Error(iI(11));function t(){e.next&&e.next(c())}return t(),{unsubscribe:d(t)}}})[iC]=function(){return this},e}// When a store is created, an "INIT" action is dispatched so that every
,n)}/**
 * Turns an object whose values are different reducer functions, into a single
 * reducer function. It will call every child reducer, and gather their results
 * into a single state object, whose keys correspond to the keys of the passed
 * reducer functions.
 *
 * @param {Object} reducers An object whose values correspond to different
 * reducer functions that need to be combined into one. One handy way to obtain
 * it is to use ES6 `import * as reducers` syntax. The reducers may never return
 * undefined for any action. Instead, they should return their initial state
 * if the state passed to them was undefined, and the current state for any
 * unrecognized action.
 *
 * @returns {Function} A reducer function that invokes every reducer inside the
 * passed object, and builds a state object with the same shape.
 */function i_(e){for(var t,r=Object.keys(e),n={},a=0;a<r.length;a++){var s=r[a];"function"==typeof e[s]&&(n[s]=e[s])}var i=Object.keys(n);try{!function(e){Object.keys(e).forEach(function(t){var r=e[t];if(void 0===r(void 0,{type:iA.INIT}))throw Error(iI(12));if(void 0===r(void 0,{type:iA.PROBE_UNKNOWN_ACTION()}))throw Error(iI(13))})}(n)}catch(e){t=e}return function(e,r){if(void 0===e&&(e={}),t)throw t;for(var a=!1,s={},o=0;o<i.length;o++){var l=i[o],u=n[l],c=e[l],d=u(c,r);if(void 0===d)throw r&&r.type,Error(iI(14));s[l]=d,a=a||d!==c}return(a=a||i.length!==Object.keys(e).length)?s:e}}/**
 * Composes single-argument functions from right to left. The rightmost
 * function can take multiple arguments as it provides the signature for
 * the resulting composite function.
 *
 * @param {...Function} funcs The functions to compose.
 * @returns {Function} A function obtained by composing the argument functions
 * from right to left. For example, compose(f, g, h) is identical to doing
 * (...args) => f(g(h(...args))).
 */function iO(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce(function(e,t){return function(){return e(t.apply(void 0,arguments))}})}/**
 * Creates a store enhancer that applies middleware to the dispatch method
 * of the Redux store. This is handy for a variety of tasks, such as expressing
 * asynchronous actions in a concise manner, or logging every action payload.
 *
 * See `redux-thunk` package as an example of the Redux middleware.
 *
 * Because middleware is potentially asynchronous, this should be the first
 * store enhancer in the composition chain.
 *
 * Note that each middleware will be given the `dispatch` and `getState` functions
 * as named arguments.
 *
 * @param {...Function} middlewares The middleware chain to be applied.
 * @returns {Function} A store enhancer applying the middleware.
 */function iP(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return function(e){return function(){var r=e.apply(void 0,arguments),n=function(){throw Error(iI(15))},a={getState:r.getState,dispatch:function(){return n.apply(void 0,arguments)}},s=t.map(function(e){return e(a)});return n=iO.apply(void 0,s)(r.dispatch),iT(iT({},r),{},{dispatch:n})}}}/** A function that accepts a potential "extra argument" value to be injected later,
 * and returns an instance of the thunk middleware that uses that value
 */function i$(e){return function(t){var r=t.dispatch,n=t.getState;return function(t){return function(a){return(// The thunk middleware looks for any functions that were passed to `store.dispatch`.
// If this "action" is really a function, call it and return the result.
"function"==typeof a?a(r,n,e):t(a))}}}}var iD=i$();// Attach the factory function so users can create a customized version
// with whatever "extra arg" they want to inject into their thunks
iD.withExtraArgument=i$;var ea=A("hPtJY"),iM=(p=function(e,t){return(p=Object.setPrototypeOf||({__proto__:[]})instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)},function(e,t){if("function"!=typeof t&&null!==t)throw TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e}p(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}),iF=function(e,t){var r,n,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(r)throw TypeError("Generator is already executing.");for(;i;)try{if(r=1,n&&(a=2&s[0]?n.return:s[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,s[1])).done)return a;switch(n=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,n=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(a=(a=i.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],n=0}finally{r=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}},iL=function(e,t){for(var r=0,n=t.length,a=e.length;r<n;r++,a++)e[a]=t[r];return e},ij=Object.defineProperty,iB=Object.defineProperties,iz=Object.getOwnPropertyDescriptors,iV=Object.getOwnPropertySymbols,iG=Object.prototype.hasOwnProperty,iU=Object.prototype.propertyIsEnumerable,iW=function(e,t,r){return t in e?ij(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r},iq=function(e,t){for(var r in t||(t={}))iG.call(t,r)&&iW(e,r,t[r]);if(iV)for(var n=0,a=iV(t);n<a.length;n++){var r=a[n];iU.call(t,r)&&iW(e,r,t[r])}return e},iH=function(e,t){return iB(e,iz(t))},iK="undefined"!=typeof window&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__:function(){if(0!=arguments.length)return"object"==typeof arguments[0]?iO:iO.apply(null,arguments)};// src/createAction.ts
function iX(e,t){function r(){for(var r=[],n=0;n<arguments.length;n++)r[n]=arguments[n];if(t){var a=t.apply(void 0,r);if(!a)throw Error("prepareAction did not return an object");return iq(iq({type:e,payload:a.payload},"meta"in a&&{meta:a.meta}),"error"in a&&{error:a.error})}return{type:e,payload:r[0]}}return r.toString=function(){return""+e},r.type=e,r.match=function(t){return t.type===e},r}"undefined"!=typeof window&&window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__;var iZ=/** @class */function(e){function t(){for(var r=[],n=0;n<arguments.length;n++)r[n]=arguments[n];var a=e.apply(this,r)||this;return Object.setPrototypeOf(a,t.prototype),a}return iM(t,e),Object.defineProperty(t,Symbol.species,{get:function(){return t},enumerable:!1,configurable:!0}),t.prototype.concat=function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];return e.prototype.concat.apply(this,t)},t.prototype.prepend=function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];return 1===e.length&&Array.isArray(e[0])?new(t.bind.apply(t,iL([void 0],e[0].concat(this)))):new(t.bind.apply(t,iL([void 0],e.concat(this))))},t}(Array),iQ=/** @class */function(e){function t(){for(var r=[],n=0;n<arguments.length;n++)r[n]=arguments[n];var a=e.apply(this,r)||this;return Object.setPrototypeOf(a,t.prototype),a}return iM(t,e),Object.defineProperty(t,Symbol.species,{get:function(){return t},enumerable:!1,configurable:!0}),t.prototype.concat=function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];return e.prototype.concat.apply(this,t)},t.prototype.prepend=function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];return 1===e.length&&Array.isArray(e[0])?new(t.bind.apply(t,iL([void 0],e[0].concat(this)))):new(t.bind.apply(t,iL([void 0],e.concat(this))))},t}(Array);function iY(e){return sO(e)?ik(e,function(){}):e}function iJ(e){var t,r=function(e){var t,r,n,a;return void 0===(t=e)&&(t={}),n=void 0===(r=t.thunk)||r,t.immutableCheck,t.serializableCheck,t.actionCreatorCheck,a=new iZ,n&&("boolean"==typeof n?a.push(iD):a.push(iD.withExtraArgument(n.extraArgument))),a},n=e||{},a=n.reducer,s=void 0===a?void 0:a,i=n.middleware,o=void 0===i?r():i,l=n.devTools,u=void 0===l||l,c=n.preloadedState,d=void 0===c?void 0:c,p=n.enhancers,h=void 0===p?void 0:p;if("function"==typeof s)t=s;else if(// src/isPlainObject.ts
function(e){if("object"!=typeof e||null===e)return!1;var t=Object.getPrototypeOf(e);if(null===t)return!0;for(var r=t;null!==Object.getPrototypeOf(r);)r=Object.getPrototypeOf(r);return t===r}(s))t=i_(s);else throw Error('"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');var f=o;"function"==typeof f&&(f=f(r));var m=iP.apply(void 0,f),g=iO;u&&(g=iK(iq({trace:!1},"object"==typeof u&&u)));var y=new iQ(m),b=y;Array.isArray(h)?b=iL([m],h):"function"==typeof h&&(b=h(y));var v=g.apply(void 0,b);return iR(t,d,v)}// src/mapBuilders.ts
function i0(e){var t,r={},n=[],a={addCase:function(e,t){var n="string"==typeof e?e:e.type;if(!n)throw Error("`builder.addCase` cannot be called with an empty action type");if(n in r)throw Error("`builder.addCase` cannot be called with two reducers for the same action type");return r[n]=t,a},addMatcher:function(e,t){return n.push({matcher:e,reducer:t}),a},addDefaultCase:function(e){return t=e,a}};return e(a),[r,n,t]}function i1(e){var t,r=e.name;if(!r)throw Error("`name` is a required option for createSlice");var n="function"==typeof e.initialState?e.initialState:iY(e.initialState),a=e.reducers||{},s=Object.keys(a),i={},o={},l={};function u(){var t="function"==typeof e.extraReducers?i0(e.extraReducers):[e.extraReducers],r=t[0],a=t[1],s=void 0===a?[]:a,i=t[2],l=void 0===i?void 0:i,u=iq(iq({},void 0===r?{}:r),o);return function(e,t,r,n){void 0===r&&(r=[]);var a,s="function"==typeof t?i0(t):[t,r,void 0],i=s[0],o=s[1],l=s[2];if("function"==typeof e)a=function(){return iY(e())};else{var u=iY(e);a=function(){return u}}function c(e,t){void 0===e&&(e=a());var r=iL([i[t.type]],o.filter(function(e){return(0,e.matcher)(t)}).map(function(e){return e.reducer}));return 0===r.filter(function(e){return!!e}).length&&(r=[l]),r.reduce(function(e,r){if(r){if(s_(e)){var n=r(e,t);return void 0===n?e:n}if(sO(e))return ik(e,function(e){return r(e,t)});var n=r(e,t);if(void 0===n){if(null===e)return e;throw Error("A case reducer on a non-draftable value must not return undefined")}return n}return e},e)}return c.getInitialState=a,c}(n,function(e){for(var t in u)e.addCase(t,u[t]);for(var r=0;r<s.length;r++){var n=s[r];e.addMatcher(n.matcher,n.reducer)}l&&e.addDefaultCase(l)})}return s.forEach(function(e){var t,n,s=a[e],u=r+"/"+e;"reducer"in s?(t=s.reducer,n=s.prepare):t=s,i[e]=t,o[u]=t,l[e]=n?iX(u,n):iX(u)}),{name:r,reducer:function(e,r){return t||(t=u()),t(e,r)},actions:l,caseReducers:i,getInitialState:function(){return t||(t=u()),t.getInitialState()}}}var i2=function(e){void 0===e&&(e=21);for(var t="",r=e;r--;)t+="ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW"[64*Math.random()|0];return t},i4=["name","message","stack","code"],i3=function(e,t){this.payload=e,this.meta=t},i8=function(e,t){this.payload=e,this.meta=t},i6=function(e){if("object"==typeof e&&null!==e){for(var t={},r=0;r<i4.length;r++){var n=i4[r];"string"==typeof e[n]&&(t[n]=e[n])}return t}return{message:String(e)}};function i5(e){if(e.meta&&e.meta.rejectedWithValue)throw e.payload;if(e.error)throw e.error;return e.payload}!function(){function e(e,t,r){var n=iX(e+"/fulfilled",function(e,t,r,n){return{payload:e,meta:iH(iq({},n||{}),{arg:r,requestId:t,requestStatus:"fulfilled"})}}),a=iX(e+"/pending",function(e,t,r){return{payload:void 0,meta:iH(iq({},r||{}),{arg:t,requestId:e,requestStatus:"pending"})}}),s=iX(e+"/rejected",function(e,t,n,a,s){return{payload:a,error:(r&&r.serializeError||i6)(e||"Rejected"),meta:iH(iq({},s||{}),{arg:n,requestId:t,rejectedWithValue:!!a,requestStatus:"rejected",aborted:(null==e?void 0:e.name)==="AbortError",condition:(null==e?void 0:e.name)==="ConditionError"})}}),i="undefined"!=typeof AbortController?AbortController:/** @class */function(){function e(){this.signal={aborted:!1,addEventListener:function(){},dispatchEvent:function(){return!1},onabort:function(){},removeEventListener:function(){},reason:void 0,throwIfAborted:function(){}}}return e.prototype.abort=function(){},e}();return Object.assign(function(e){return function(o,l,u){var c,d=(null==r?void 0:r.idGenerator)?r.idGenerator(e):i2(),p=new i;function h(e){c=e,p.abort()}var f=function(){var i,f;return i=this,f=function(){var i,f,m,g,y,b;return iF(this,function(v){switch(v.label){case 0:var x;if(v.trys.push([0,4,,5]),!(null!==(x=g=null==(i=null==r?void 0:r.condition)?void 0:i.call(r,e,{getState:l,extra:u}))&&"object"==typeof x&&"function"==typeof x.then))return[3/*break*/,2];return[4/*yield*/,g];case 1:g=v.sent(),v.label=2;case 2:if(!1===g||p.signal.aborted)throw{name:"ConditionError",message:"Aborted due to condition callback returning false."};return y=new Promise(function(e,t){return p.signal.addEventListener("abort",function(){return t({name:"AbortError",message:c||"Aborted"})})}),o(a(d,e,null==(f=null==r?void 0:r.getPendingMeta)?void 0:f.call(r,{requestId:d,arg:e},{getState:l,extra:u}))),[4/*yield*/,Promise.race([y,Promise.resolve(t(e,{dispatch:o,getState:l,extra:u,requestId:d,signal:p.signal,abort:h,rejectWithValue:function(e,t){return new i3(e,t)},fulfillWithValue:function(e,t){return new i8(e,t)}})).then(function(t){if(t instanceof i3)throw t;return t instanceof i8?n(t.payload,d,e,t.meta):n(t,d,e)})])];case 3:return m=v.sent(),[3/*break*/,5];case 4:return m=(b=v.sent())instanceof i3?s(null,d,e,b.payload,b.meta):s(b,d,e),[3/*break*/,5];case 5:return r&&!r.dispatchConditionRejection&&s.match(m)&&m.meta.condition||o(m),[2/*return*/,m]}})},new Promise(function(e,t){var r=function(e){try{a(f.next(e))}catch(e){t(e)}},n=function(e){try{a(f.throw(e))}catch(e){t(e)}},a=function(t){return t.done?e(t.value):Promise.resolve(t.value).then(r,n)};a((f=f.apply(i,null)).next())})}();return Object.assign(f,{abort:h,requestId:d,arg:e,unwrap:function(){return f.then(i5)}})}},{pending:a,rejected:s,fulfilled:n,typePrefix:e})}e.withTypes=function(){return e}}();var i7="listenerMiddleware";iX(i7+"/add"),iX(i7+"/removeAll"),iX(i7+"/remove"),"function"==typeof queueMicrotask&&queueMicrotask.bind("undefined"!=typeof window?window:void 0!==T?T:globalThis),"undefined"!=typeof window&&window.requestAnimationFrame&&window.requestAnimationFrame,function(){function e(e,t){var r=a[e];return r?r.enumerable=t:a[e]=r={configurable:!0,enumerable:t,get:function(){var t=this[ih];return iv.get(t,e)},set:function(t){var r=this[ih];iv.set(r,e,t)}},r}function t(e){for(var t=e.length-1;t>=0;t--){var a=e[t][ih];if(!a.P)switch(a.i){case 5:n(a)&&s4(a);break;case 4:r(a)&&s4(a)}}}function r(e){for(var t=e.t,r=e.k,n=ig(r),a=n.length-1;a>=0;a--){var s=n[a];if(s!==ih){var i=t[s];if(void 0===i&&!sD(t,s))return!0;var o=r[s],l=o&&o[ih];if(l?l.t!==i:!sF(o,i))return!0}}var u=!!t[ih];return n.length!==ig(t).length+(u?0:1)}function n(e){var t=e.k;if(t.length!==e.t.length)return!0;var r=Object.getOwnPropertyDescriptor(t,t.length-1);if(r&&!r.get)return!0;for(var n=0;n<t.length;n++)if(!t.hasOwnProperty(n))return!0;return!1}var a={};ib.ES5||(ib.ES5={J:function(t,r){var n=Array.isArray(t),a=function(t,r){if(t){for(var n=Array(r.length),a=0;a<r.length;a++)Object.defineProperty(n,""+a,e(a,!0));return n}var s=iy(r);delete s[ih];for(var i=ig(s),o=0;o<i.length;o++){var l=i[o];s[l]=e(l,t||!!s[l].enumerable)}return Object.create(Object.getPrototypeOf(r),s)}(n,t),s={i:n?5:4,A:r?r.A:ii,P:!1,I:!1,R:{},l:r,t:t,k:a,o:null,g:!1,C:!1};return Object.defineProperty(a,ih,{value:s,writable:!0}),a},S:function(e,r,a){a?s_(r)&&r[ih].A===e&&t(e.p):(e.u&&function e(t){if(t&&"object"==typeof t){var r=t[ih];if(r){var a=r.t,s=r.k,i=r.R,o=r.i;if(4===o)sP(s,function(t){t!==ih&&(void 0!==a[t]||sD(a,t)?i[t]||e(s[t]):(i[t]=!0,s4(r)))}),sP(a,function(e){void 0!==s[e]||sD(s,e)||(i[e]=!1,s4(r))});else if(5===o){if(n(r)&&(s4(r),i.length=!0),s.length<a.length)for(var l=s.length;l<a.length;l++)i[l]=!1;else for(var u=a.length;u<s.length;u++)i[u]=!0;for(var c=Math.min(s.length,a.length),d=0;d<c;d++)s.hasOwnProperty(d)||(i[d]=!0),void 0===i[d]&&e(s[d])}}}}(e.p[0]),t(e.p))},K:function(e){return 4===e.i?r(e):n(e)}})}();const i9=(0,sA.createSlice)({name:"userResponse",initialState:{item:[]},reducers:{addResponse:(e,t)=>{e.item.push(t.payload)}}}),{addResponse:oe}=i9.actions;var ot=i9.reducer;const or=(0,sA.createSlice)({name:"User",initialState:null,reducers:{addUser:(e,t)=>t.payload,removeUser:(e,t)=>null}}),{addUser:on,removeUser:oa}=or.actions;var os=or.reducer;const oi=(0,sA.configureStore)({reducer:{userResponse:ot,User:os}});var _=A("ayMG0"),O=A("acw62"),oo={};oo=function(e){function t(n){if(r[n])return r[n].exports;var a=r[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,t),a.l=!0,a.exports}var r={};return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=8)}([function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n="swal-button";t.CLASS_NAMES={MODAL:"swal-modal",OVERLAY:"swal-overlay",SHOW_MODAL:"swal-overlay--show-modal",MODAL_TITLE:"swal-title",MODAL_TEXT:"swal-text",ICON:"swal-icon",ICON_CUSTOM:"swal-icon--custom",CONTENT:"swal-content",FOOTER:"swal-footer",BUTTON_CONTAINER:"swal-button-container",BUTTON:n,CONFIRM_BUTTON:n+"--confirm",CANCEL_BUTTON:n+"--cancel",DANGER_BUTTON:n+"--danger",BUTTON_LOADING:n+"--loading",BUTTON_LOADER:n+"__loader"},t.default=t.CLASS_NAMES},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0}),t.getNode=function(e){return document.querySelector("."+e)},t.stringToNode=function(e){var t=document.createElement("div");return t.innerHTML=e.trim(),t.firstChild},t.insertAfter=function(e,t){var r=t.nextSibling;t.parentNode.insertBefore(e,r)},t.removeNode=function(e){e.parentElement.removeChild(e)},t.throwErr=function(e){throw"SweetAlert: "+(e=(e=e.replace(/ +(?= )/g,"")).trim())},t.isPlainObject=function(e){if("[object Object]"!==Object.prototype.toString.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype},t.ordinalSuffixOf=function(e){var t=e%10,r=e%100;return 1===t&&11!==r?e+"st":2===t&&12!==r?e+"nd":3===t&&13!==r?e+"rd":e+"th"}},function(e,t,r){function n(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}Object.defineProperty(t,"__esModule",{value:!0}),n(r(25));var a=r(26);t.overlayMarkup=a.default,n(r(27)),n(r(28)),n(r(29));var s=r(0),i=s.default.MODAL_TITLE,o=s.default.MODAL_TEXT,l=s.default.ICON,u=s.default.FOOTER;t.iconMarkup='\n  <div class="'+l+'"></div>',t.titleMarkup='\n  <div class="'+i+'"></div>\n',t.textMarkup='\n  <div class="'+o+'"></div>',t.footerMarkup='\n  <div class="'+u+'"></div>\n'},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(1);t.CONFIRM_KEY="confirm",t.CANCEL_KEY="cancel";var a={visible:!0,text:null,value:null,className:"",closeModal:!0},s=Object.assign({},a,{visible:!1,text:"Cancel",value:null}),i=Object.assign({},a,{text:"OK",value:!0});t.defaultButtonList={cancel:s,confirm:i};var o=function(e){switch(e){case t.CONFIRM_KEY:return i;case t.CANCEL_KEY:return s;default:return Object.assign({},a,{text:e.charAt(0).toUpperCase()+e.slice(1),value:e})}},l=function(e,t){var r=o(e);return!0===t?Object.assign({},r,{visible:!0}):"string"==typeof t?Object.assign({},r,{visible:!0,text:t}):n.isPlainObject(t)?Object.assign({visible:!0},r,t):Object.assign({},r,{visible:!1})},u=function(e){for(var t={},r=0,n=Object.keys(e);r<n.length;r++){var a=n[r],i=e[a],o=l(a,i);t[a]=o}return t.cancel||(t.cancel=s),t},c=function(e){var r={};switch(e.length){case 1:r[t.CANCEL_KEY]=Object.assign({},s,{visible:!1});break;case 2:r[t.CANCEL_KEY]=l(t.CANCEL_KEY,e[0]),r[t.CONFIRM_KEY]=l(t.CONFIRM_KEY,e[1]);break;default:n.throwErr("Invalid number of 'buttons' in array ("+e.length+").\n      If you want more than 2 buttons, you need to use an object!")}return r};t.getButtonListOpts=function(e){var r=t.defaultButtonList;return"string"==typeof e?r[t.CONFIRM_KEY]=l(t.CONFIRM_KEY,e):Array.isArray(e)?r=c(e):n.isPlainObject(e)?r=u(e):!0===e?r=c([!0,!0]):!1===e?r=c([!1,!1]):void 0===e&&(r=t.defaultButtonList),r}},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),a=r(2),s=r(0),i=s.default.MODAL,o=s.default.OVERLAY,l=r(30),u=r(31),c=r(32),d=r(33);t.injectElIntoModal=function(e){var t=n.getNode(i),r=n.stringToNode(e);return t.appendChild(r),r};var p=function(e){e.className=i,e.textContent=""},h=function(e,t){p(e);var r=t.className;r&&e.classList.add(r)};t.initModalContent=function(e){h(n.getNode(i),e),l.default(e.icon),u.initTitle(e.title),u.initText(e.text),d.default(e.content),c.default(e.buttons,e.dangerMode)},t.default=function(){var e=n.getNode(o),t=n.stringToNode(a.modalMarkup);e.appendChild(t)}},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),a={isOpen:!1,promise:null,actions:{},timer:null},s=Object.assign({},a);t.resetState=function(){s=Object.assign({},a)},t.setActionValue=function(e){if("string"==typeof e)return i(n.CONFIRM_KEY,e);for(var t in e)i(t,e[t])};var i=function(e,t){s.actions[e]||(s.actions[e]={}),Object.assign(s.actions[e],{value:t})};t.setActionOptionsFor=function(e,t){var r=(void 0===t?{}:t).closeModal;Object.assign(s.actions[e],{closeModal:void 0===r||r})},t.default=s},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),a=r(3),s=r(0),i=s.default.OVERLAY,o=s.default.SHOW_MODAL,l=s.default.BUTTON,u=s.default.BUTTON_LOADING,c=r(5);t.openModal=function(){n.getNode(i).classList.add(o),c.default.isOpen=!0};var d=function(){n.getNode(i).classList.remove(o),c.default.isOpen=!1};t.onAction=function(e){void 0===e&&(e=a.CANCEL_KEY);var t=c.default.actions[e],r=t.value;if(!1===t.closeModal){var s=l+"--"+e;n.getNode(s).classList.add(u)}else d();c.default.promise.resolve(r)},t.getState=function(){var e=Object.assign({},c.default);return delete e.promise,delete e.timer,e},t.stopLoading=function(){for(var e=document.querySelectorAll("."+l),t=0;t<e.length;t++)e[t].classList.remove(u)}},function(e,t){var r;r=function(){return this}();try{r=r||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(r=window)}e.exports=r},function(e,t,r){(function(t){e.exports=t.sweetAlert=r(9)}).call(t,r(7))},function(e,t,r){(function(t){e.exports=t.swal=r(10)}).call(t,r(7))},function(e,t,r){"undefined"!=typeof window&&r(11),r(16);var n=r(23).default;e.exports=n},function(e,t,r){var n=r(12);"string"==typeof n&&(n=[[e.i,n,""]]);var a={insertAt:"top"};a.transform=void 0,r(14)(n,a),n.locals&&(e.exports=n.locals)},function(e,t,r){(e.exports=r(13)(void 0)).push([e.i,'.swal-icon--error{border-color:#f27474;-webkit-animation:animateErrorIcon .5s;animation:animateErrorIcon .5s}.swal-icon--error__x-mark{position:relative;display:block;-webkit-animation:animateXMark .5s;animation:animateXMark .5s}.swal-icon--error__line{position:absolute;height:5px;width:47px;background-color:#f27474;display:block;top:37px;border-radius:2px}.swal-icon--error__line--left{-webkit-transform:rotate(45deg);transform:rotate(45deg);left:17px}.swal-icon--error__line--right{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);right:16px}@-webkit-keyframes animateErrorIcon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg);opacity:1}}@keyframes animateErrorIcon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg);opacity:1}}@-webkit-keyframes animateXMark{0%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}50%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}80%{-webkit-transform:scale(1.15);transform:scale(1.15);margin-top:-6px}to{-webkit-transform:scale(1);transform:scale(1);margin-top:0;opacity:1}}@keyframes animateXMark{0%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}50%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}80%{-webkit-transform:scale(1.15);transform:scale(1.15);margin-top:-6px}to{-webkit-transform:scale(1);transform:scale(1);margin-top:0;opacity:1}}.swal-icon--warning{border-color:#f8bb86;-webkit-animation:pulseWarning .75s infinite alternate;animation:pulseWarning .75s infinite alternate}.swal-icon--warning__body{width:5px;height:47px;top:10px;border-radius:2px;margin-left:-2px}.swal-icon--warning__body,.swal-icon--warning__dot{position:absolute;left:50%;background-color:#f8bb86}.swal-icon--warning__dot{width:7px;height:7px;border-radius:50%;margin-left:-4px;bottom:-11px}@-webkit-keyframes pulseWarning{0%{border-color:#f8d486}to{border-color:#f8bb86}}@keyframes pulseWarning{0%{border-color:#f8d486}to{border-color:#f8bb86}}.swal-icon--success{border-color:#a5dc86}.swal-icon--success:after,.swal-icon--success:before{content:"";border-radius:50%;position:absolute;width:60px;height:120px;background:#fff;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.swal-icon--success:before{border-radius:120px 0 0 120px;top:-7px;left:-33px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:60px 60px;transform-origin:60px 60px}.swal-icon--success:after{border-radius:0 120px 120px 0;top:-11px;left:30px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:0 60px;transform-origin:0 60px;-webkit-animation:rotatePlaceholder 4.25s ease-in;animation:rotatePlaceholder 4.25s ease-in}.swal-icon--success__ring{width:80px;height:80px;border:4px solid hsla(98,55%,69%,.2);border-radius:50%;box-sizing:content-box;position:absolute;left:-4px;top:-4px;z-index:2}.swal-icon--success__hide-corners{width:5px;height:90px;background-color:#fff;padding:1px;position:absolute;left:28px;top:8px;z-index:1;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal-icon--success__line{height:5px;background-color:#a5dc86;display:block;border-radius:2px;position:absolute;z-index:2}.swal-icon--success__line--tip{width:25px;left:14px;top:46px;-webkit-transform:rotate(45deg);transform:rotate(45deg);-webkit-animation:animateSuccessTip .75s;animation:animateSuccessTip .75s}.swal-icon--success__line--long{width:47px;right:8px;top:38px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-animation:animateSuccessLong .75s;animation:animateSuccessLong .75s}@-webkit-keyframes rotatePlaceholder{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}to{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@keyframes rotatePlaceholder{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}to{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@-webkit-keyframes animateSuccessTip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@keyframes animateSuccessTip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@-webkit-keyframes animateSuccessLong{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0;top:35px}to{width:47px;right:8px;top:38px}}@keyframes animateSuccessLong{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0;top:35px}to{width:47px;right:8px;top:38px}}.swal-icon--info{border-color:#c9dae1}.swal-icon--info:before{width:5px;height:29px;bottom:17px;border-radius:2px;margin-left:-2px}.swal-icon--info:after,.swal-icon--info:before{content:"";position:absolute;left:50%;background-color:#c9dae1}.swal-icon--info:after{width:7px;height:7px;border-radius:50%;margin-left:-3px;top:19px}.swal-icon{width:80px;height:80px;border-width:4px;border-style:solid;border-radius:50%;padding:0;position:relative;box-sizing:content-box;margin:20px auto}.swal-icon:first-child{margin-top:32px}.swal-icon--custom{width:auto;height:auto;max-width:100%;border:none;border-radius:0}.swal-icon img{max-width:100%;max-height:100%}.swal-title{color:rgba(0,0,0,.65);font-weight:600;text-transform:none;position:relative;display:block;padding:13px 16px;font-size:27px;line-height:normal;text-align:center;margin-bottom:0}.swal-title:first-child{margin-top:26px}.swal-title:not(:first-child){padding-bottom:0}.swal-title:not(:last-child){margin-bottom:13px}.swal-text{font-size:16px;position:relative;float:none;line-height:normal;vertical-align:top;text-align:left;display:inline-block;margin:0;padding:0 10px;font-weight:400;color:rgba(0,0,0,.64);max-width:calc(100% - 20px);overflow-wrap:break-word;box-sizing:border-box}.swal-text:first-child{margin-top:45px}.swal-text:last-child{margin-bottom:45px}.swal-footer{text-align:right;padding-top:13px;margin-top:13px;padding:13px 16px;border-radius:inherit;border-top-left-radius:0;border-top-right-radius:0}.swal-button-container{margin:5px;display:inline-block;position:relative}.swal-button{background-color:#7cd1f9;color:#fff;border:none;box-shadow:none;border-radius:5px;font-weight:600;font-size:14px;padding:10px 24px;margin:0;cursor:pointer}.swal-button:not([disabled]):hover{background-color:#78cbf2}.swal-button:active{background-color:#70bce0}.swal-button:focus{outline:none;box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(43,114,165,.29)}.swal-button[disabled]{opacity:.5;cursor:default}.swal-button::-moz-focus-inner{border:0}.swal-button--cancel{color:#555;background-color:#efefef}.swal-button--cancel:not([disabled]):hover{background-color:#e8e8e8}.swal-button--cancel:active{background-color:#d7d7d7}.swal-button--cancel:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(116,136,150,.29)}.swal-button--danger{background-color:#e64942}.swal-button--danger:not([disabled]):hover{background-color:#df4740}.swal-button--danger:active{background-color:#cf423b}.swal-button--danger:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(165,43,43,.29)}.swal-content{padding:0 20px;margin-top:20px;font-size:medium}.swal-content:last-child{margin-bottom:20px}.swal-content__input,.swal-content__textarea{-webkit-appearance:none;background-color:#fff;border:none;font-size:14px;display:block;box-sizing:border-box;width:100%;border:1px solid rgba(0,0,0,.14);padding:10px 13px;border-radius:2px;transition:border-color .2s}.swal-content__input:focus,.swal-content__textarea:focus{outline:none;border-color:#6db8ff}.swal-content__textarea{resize:vertical}.swal-button--loading{color:transparent}.swal-button--loading~.swal-button__loader{opacity:1}.swal-button__loader{position:absolute;height:auto;width:43px;z-index:2;left:50%;top:50%;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);text-align:center;pointer-events:none;opacity:0}.swal-button__loader div{display:inline-block;float:none;vertical-align:baseline;width:9px;height:9px;padding:0;border:none;margin:2px;opacity:.4;border-radius:7px;background-color:hsla(0,0%,100%,.9);transition:background .2s;-webkit-animation:swal-loading-anim 1s infinite;animation:swal-loading-anim 1s infinite}.swal-button__loader div:nth-child(3n+2){-webkit-animation-delay:.15s;animation-delay:.15s}.swal-button__loader div:nth-child(3n+3){-webkit-animation-delay:.3s;animation-delay:.3s}@-webkit-keyframes swal-loading-anim{0%{opacity:.4}20%{opacity:.4}50%{opacity:1}to{opacity:.4}}@keyframes swal-loading-anim{0%{opacity:.4}20%{opacity:.4}50%{opacity:1}to{opacity:.4}}.swal-overlay{position:fixed;top:0;bottom:0;left:0;right:0;text-align:center;font-size:0;overflow-y:auto;background-color:rgba(0,0,0,.4);z-index:10000;pointer-events:none;opacity:0;transition:opacity .3s}.swal-overlay:before{content:" ";display:inline-block;vertical-align:middle;height:100%}.swal-overlay--show-modal{opacity:1;pointer-events:auto}.swal-overlay--show-modal .swal-modal{opacity:1;pointer-events:auto;box-sizing:border-box;-webkit-animation:showSweetAlert .3s;animation:showSweetAlert .3s;will-change:transform}.swal-modal{width:478px;opacity:0;pointer-events:none;background-color:#fff;text-align:center;border-radius:5px;position:static;margin:20px auto;display:inline-block;vertical-align:middle;-webkit-transform:scale(1);transform:scale(1);-webkit-transform-origin:50% 50%;transform-origin:50% 50%;z-index:10001;transition:opacity .2s,-webkit-transform .3s;transition:transform .3s,opacity .2s;transition:transform .3s,opacity .2s,-webkit-transform .3s}@media (max-width:500px){.swal-modal{width:calc(100% - 20px)}}@-webkit-keyframes showSweetAlert{0%{-webkit-transform:scale(1);transform:scale(1)}1%{-webkit-transform:scale(.5);transform:scale(.5)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes showSweetAlert{0%{-webkit-transform:scale(1);transform:scale(1)}1%{-webkit-transform:scale(.5);transform:scale(.5)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}to{-webkit-transform:scale(1);transform:scale(1)}}',""])},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var r=function(e,t){var r=e[1]||"",n=e[3];if(!n)return r;if(t&&"function"==typeof btoa){var a="/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */";return[r].concat(n.sources.map(function(e){return"/*# sourceURL="+n.sourceRoot+e+" */"})).concat([a]).join("\n")}return[r].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+r+"}":r}).join("")},t.i=function(e,r){"string"==typeof e&&(e=[[null,e,""]]);for(var n={},a=0;a<this.length;a++){var s=this[a][0];"number"==typeof s&&(n[s]=!0)}for(a=0;a<e.length;a++){var i=e[a];"number"==typeof i[0]&&n[i[0]]||(r&&!i[2]?i[2]=r:r&&(i[2]="("+i[2]+") and ("+r+")"),t.push(i))}},t}},function(e,t,r){function n(e,t){for(var r=0;r<e.length;r++){var n=e[r],a=b[n.id];if(a){a.refs++;for(var s=0;s<a.parts.length;s++)a.parts[s](n.parts[s]);for(;s<n.parts.length;s++)a.parts.push(u(n.parts[s],t))}else{for(var i=[],s=0;s<n.parts.length;s++)i.push(u(n.parts[s],t));b[n.id]={id:n.id,refs:1,parts:i}}}}function a(e,t){for(var r=[],n={},a=0;a<e.length;a++){var s=e[a],i=t.base?s[0]+t.base:s[0],o={css:s[1],media:s[2],sourceMap:s[3]};n[i]?n[i].parts.push(o):r.push(n[i]={id:i,parts:[o]})}return r}function s(e,t){var r=x(e.insertInto);if(!r)throw Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var n=S[S.length-1];if("top"===e.insertAt)n?n.nextSibling?r.insertBefore(t,n.nextSibling):r.appendChild(t):r.insertBefore(t,r.firstChild),S.push(t);else{if("bottom"!==e.insertAt)throw Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");r.appendChild(t)}}function i(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=S.indexOf(e);t>=0&&S.splice(t,1)}function o(e){var t=document.createElement("style");return e.attrs.type="text/css",l(t,e.attrs),s(e,t),t}function l(e,t){Object.keys(t).forEach(function(r){e.setAttribute(r,t[r])})}function u(e,t){if(t.transform&&e.css){if(!(u=t.transform(e.css)))return function(){};e.css=u}if(t.singleton){var r,n,a,u,h,f=k++;n=c.bind(null,r=w||(w=o(t)),f,!1),a=c.bind(null,r,f,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(h=document.createElement("link"),t.attrs.type="text/css",t.attrs.rel="stylesheet",l(h,t.attrs),s(t,h),n=p.bind(null,r=h,t),a=function(){i(r),r.href&&URL.revokeObjectURL(r.href)}):(n=d.bind(null,r=o(t)),a=function(){i(r)});return n(e),function(t){t?(t.css!==e.css||t.media!==e.media||t.sourceMap!==e.sourceMap)&&n(e=t):a()}}function c(e,t,r,n){var a=r?"":n.css;if(e.styleSheet)e.styleSheet.cssText=T(t,a);else{var s=document.createTextNode(a),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(s,i[t]):e.appendChild(s)}}function d(e,t){var r=t.css,n=t.media;if(n&&e.setAttribute("media",n),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}function p(e,t,r){var n=r.css,a=r.sourceMap,s=void 0===t.convertToAbsoluteUrls&&a;(t.convertToAbsoluteUrls||s)&&(n=N(n)),a&&(n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */");var i=new Blob([n],{type:"text/css"}),o=e.href;e.href=URL.createObjectURL(i),o&&URL.revokeObjectURL(o)}var h,f,m,g,y,b={},v=(h=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===f&&(f=h.apply(this,arguments)),f}),x=(m=function(e){return document.querySelector(e)},g={},function(e){return void 0===g[e]&&(g[e]=m.call(this,e)),g[e]}),w=null,k=0,S=[],N=r(15);e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||(t.singleton=v()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var r=a(e,t);return n(r,t),function(e){for(var s=[],i=0;i<r.length;i++){var o=b[r[i].id];o.refs--,s.push(o)}e&&n(a(e,t),t);for(var i=0;i<s.length;i++){var o=s[i];if(0===o.refs){for(var l=0;l<o.parts.length;l++)o.parts[l]();delete b[o.id]}}}};var T=(y=[],function(e,t){return y[e]=t,y.filter(Boolean).join("\n")})},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var r=t.protocol+"//"+t.host,n=r+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var a=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(a)?e:"url("+JSON.stringify(0===a.indexOf("//")?a:0===a.indexOf("/")?r+a:n+a.replace(/^\.\//,""))+")"})}},function(e,t,r){var n=r(17);"undefined"==typeof window||window.Promise||(window.Promise=n),r(21),String.prototype.includes||(String.prototype.includes=function(e,t){return"number"!=typeof t&&(t=0),!(t+e.length>this.length)&&-1!==this.indexOf(e,t)}),Array.prototype.includes||Object.defineProperty(Array.prototype,"includes",{value:function(e,t){if(null==this)throw TypeError('"this" is null or not defined');var r,n=Object(this),a=n.length>>>0;if(0===a)return!1;for(var s=0|t,i=Math.max(s>=0?s:a-Math.abs(s),0);i<a;){if((r=n[i])===e||"number"==typeof r&&"number"==typeof e&&isNaN(r)&&isNaN(e))return!0;i++}return!1}}),"undefined"!=typeof window&&function(e){e.forEach(function(e){e.hasOwnProperty("remove")||Object.defineProperty(e,"remove",{configurable:!0,enumerable:!0,writable:!0,value:function(){this.parentNode.removeChild(this)}})})}([Element.prototype,CharacterData.prototype,DocumentType.prototype])},function(e,t,r){(function(t){!function(r){function n(){}function a(e){if("object"!=typeof this)throw TypeError("Promises must be constructed via new");if("function"!=typeof e)throw TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],c(e,this)}function s(e,t){for(;3===e._state;)e=e._value;if(0===e._state)return void e._deferreds.push(t);e._handled=!0,a._immediateFn(function(){var r,n=1===e._state?t.onFulfilled:t.onRejected;if(null===n)return void(1===e._state?i:o)(t.promise,e._value);try{r=n(e._value)}catch(e){return void o(t.promise,e)}i(t.promise,r)})}function i(e,t){try{if(t===e)throw TypeError("A promise cannot be resolved with itself.");if(t&&("object"==typeof t||"function"==typeof t)){var r=t.then;if(t instanceof a)return e._state=3,e._value=t,void l(e);if("function"==typeof r)return void c(function(){r.apply(t,arguments)},e)}e._state=1,e._value=t,l(e)}catch(t){o(e,t)}}function o(e,t){e._state=2,e._value=t,l(e)}function l(e){2===e._state&&0===e._deferreds.length&&a._immediateFn(function(){e._handled||a._unhandledRejectionFn(e._value)});for(var t=0,r=e._deferreds.length;t<r;t++)s(e,e._deferreds[t]);e._deferreds=null}function u(e,t,r){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof t?t:null,this.promise=r}function c(e,t){var r=!1;try{e(function(e){r||(r=!0,i(t,e))},function(e){r||(r=!0,o(t,e))})}catch(e){if(r)return;r=!0,o(t,e)}}var d=setTimeout;a.prototype.catch=function(e){return this.then(null,e)},a.prototype.then=function(e,t){var r=new this.constructor(n);return s(this,new u(e,t,r)),r},a.all=function(e){var t=Array.prototype.slice.call(e);return new a(function(e,r){if(0===t.length)return e([]);for(var n=t.length,a=0;a<t.length;a++)(function a(s,i){try{if(i&&("object"==typeof i||"function"==typeof i)){var o=i.then;if("function"==typeof o)return void o.call(i,function(e){a(s,e)},r)}t[s]=i,0==--n&&e(t)}catch(e){r(e)}})(a,t[a])})},a.resolve=function(e){return e&&"object"==typeof e&&e.constructor===a?e:new a(function(t){t(e)})},a.reject=function(e){return new a(function(t,r){r(e)})},a.race=function(e){return new a(function(t,r){for(var n=0,a=e.length;n<a;n++)e[n].then(t,r)})},a._immediateFn="function"==typeof t&&function(e){t(e)}||function(e){d(e,0)},a._unhandledRejectionFn=function(e){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",e)},a._setImmediateFn=function(e){a._immediateFn=e},a._setUnhandledRejectionFn=function(e){a._unhandledRejectionFn=e},void 0!==e&&e.exports?e.exports=a:r.Promise||(r.Promise=a)}(this)}).call(t,r(18).setImmediate)},function(e,t,r){function n(e,t){this._id=e,this._clearFn=t}var a=Function.prototype.apply;t.setTimeout=function(){return new n(a.call(setTimeout,window,arguments),clearTimeout)},t.setInterval=function(){return new n(a.call(setInterval,window,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},n.prototype.unref=n.prototype.ref=function(){},n.prototype.close=function(){this._clearFn.call(window,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout(function(){e._onTimeout&&e._onTimeout()},t))},r(19),t.setImmediate=setImmediate,t.clearImmediate=clearImmediate},function(e,t,r){(function(e,t){!function(e,r){function n(e){delete d[e]}function a(e){if(p)setTimeout(a,0,e);else{var t=d[e];if(t){p=!0;try{!function(e){var t=e.callback,r=e.args;switch(r.length){case 0:t();break;case 1:t(r[0]);break;case 2:t(r[0],r[1]);break;case 3:t(r[0],r[1],r[2]);break;default:t.apply(void 0,r)}}(t)}finally{n(e),p=!1}}}}if(!e.setImmediate){var s,i,o,l,u,c=1,d={},p=!1,h=e.document,f=Object.getPrototypeOf&&Object.getPrototypeOf(e);f=f&&f.setTimeout?f:e,"[object process]"===({}).toString.call(e.process)?u=function(e){t.nextTick(function(){a(e)})}:function(){if(e.postMessage&&!e.importScripts){var t=!0,r=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=r,t}}()?(s="setImmediate$"+Math.random()+"$",i=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(s)&&a(+t.data.slice(s.length))},e.addEventListener?e.addEventListener("message",i,!1):e.attachEvent("onmessage",i),u=function(t){e.postMessage(s+t,"*")}):e.MessageChannel?((o=new MessageChannel).port1.onmessage=function(e){a(e.data)},u=function(e){o.port2.postMessage(e)}):h&&"onreadystatechange"in h.createElement("script")?(l=h.documentElement,u=function(e){var t=h.createElement("script");t.onreadystatechange=function(){a(e),t.onreadystatechange=null,l.removeChild(t),t=null},l.appendChild(t)}):u=function(e){setTimeout(a,0,e)},f.setImmediate=function(e){"function"!=typeof e&&(e=Function(""+e));for(var t=Array(arguments.length-1),r=0;r<t.length;r++)t[r]=arguments[r+1];var n={callback:e,args:t};return d[c]=n,u(c),c++},f.clearImmediate=n}}("undefined"==typeof self?void 0===e?this:e:self)}).call(t,r(7),r(20))},function(e,t){function r(){throw Error("setTimeout has not been defined")}function n(){throw Error("clearTimeout has not been defined")}function a(e){if(u===setTimeout)return setTimeout(e,0);if((u===r||!u)&&setTimeout)return u=setTimeout,setTimeout(e,0);try{return u(e,0)}catch(t){try{return u.call(null,e,0)}catch(t){return u.call(this,e,0)}}}function s(){f&&p&&(f=!1,p.length?h=p.concat(h):m=-1,h.length&&i())}function i(){if(!f){var e=a(s);f=!0;for(var t=h.length;t;){for(p=h,h=[];++m<t;)p&&p[m].run();m=-1,t=h.length}p=null,f=!1,function(e){if(c===clearTimeout)return clearTimeout(e);if((c===n||!c)&&clearTimeout)return c=clearTimeout,clearTimeout(e);try{c(e)}catch(t){try{return c.call(null,e)}catch(t){return c.call(this,e)}}}(e)}}function o(e,t){this.fun=e,this.array=t}function l(){}var u,c,d=e.exports={};!function(){try{u="function"==typeof setTimeout?setTimeout:r}catch(e){u=r}try{c="function"==typeof clearTimeout?clearTimeout:n}catch(e){c=n}}();var p,h=[],f=!1,m=-1;d.nextTick=function(e){var t=Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];h.push(new o(e,t)),1!==h.length||f||a(i)},o.prototype.run=function(){this.fun.apply(null,this.array)},d.title="browser",d.browser=!0,d.env={},d.argv=[],d.version="",d.versions={},d.on=l,d.addListener=l,d.once=l,d.off=l,d.removeListener=l,d.removeAllListeners=l,d.emit=l,d.prependListener=l,d.prependOnceListener=l,d.listeners=function(e){return[]},d.binding=function(e){throw Error("process.binding is not supported")},d.cwd=function(){return"/"},d.chdir=function(e){throw Error("process.chdir is not supported")},d.umask=function(){return 0}},function(e,t,r){r(22).polyfill()},function(e,t,r){function n(e,t){if(null==e)throw TypeError("Cannot convert first argument to object");for(var r=Object(e),n=1;n<arguments.length;n++){var a=arguments[n];if(null!=a)for(var s=Object.keys(Object(a)),i=0,o=s.length;i<o;i++){var l=s[i],u=Object.getOwnPropertyDescriptor(a,l);void 0!==u&&u.enumerable&&(r[l]=a[l])}}return r}e.exports={assign:n,polyfill:function(){Object.assign||Object.defineProperty(Object,"assign",{enumerable:!1,configurable:!0,writable:!0,value:n})}}},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(24),a=r(6),s=r(5),i=r(36),o=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if("undefined"!=typeof window){var r=i.getOpts.apply(void 0,e);return new Promise(function(e,t){s.default.promise={resolve:e,reject:t},n.default(r),setTimeout(function(){a.openModal()})})}};o.close=a.onAction,o.getState=a.getState,o.setActionValue=s.setActionValue,o.stopLoading=a.stopLoading,o.setDefaults=i.setDefaults,t.default=o},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),a=r(0).default.MODAL,s=r(4),i=r(34),o=r(35),l=r(1);t.init=function(e){n.getNode(a)||(document.body||l.throwErr("You can only use SweetAlert AFTER the DOM has loaded!"),i.default(),s.default()),s.initModalContent(e),o.default(e)},t.default=t.init},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(0).default.MODAL;t.modalMarkup='\n  <div class="'+n+'" role="dialog" aria-modal="true"></div>',t.default=t.modalMarkup},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(0).default.OVERLAY;t.default='<div \n    class="'+n+'"\n    tabIndex="-1">\n  </div>'},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(0).default.ICON;t.errorIconMarkup=function(){var e=n+"--error",t=e+"__line";return'\n    <div class="'+e+'__x-mark">\n      <span class="'+t+" "+t+'--left"></span>\n      <span class="'+t+" "+t+'--right"></span>\n    </div>\n  '},t.warningIconMarkup=function(){var e=n+"--warning";return'\n    <span class="'+e+'__body">\n      <span class="'+e+'__dot"></span>\n    </span>\n  '},t.successIconMarkup=function(){var e=n+"--success";return'\n    <span class="'+e+"__line "+e+'__line--long"></span>\n    <span class="'+e+"__line "+e+'__line--tip"></span>\n\n    <div class="'+e+'__ring"></div>\n    <div class="'+e+'__hide-corners"></div>\n  '}},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(0).default.CONTENT;t.contentMarkup='\n  <div class="'+n+'">\n\n  </div>\n'},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),a=n.default.BUTTON_CONTAINER,s=n.default.BUTTON,i=n.default.BUTTON_LOADER;t.buttonMarkup='\n  <div class="'+a+'">\n\n    <button\n      class="'+s+'"\n    ></button>\n\n    <div class="'+i+'">\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n\n  </div>\n'},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(4),a=r(2),s=r(0),i=s.default.ICON,o=s.default.ICON_CUSTOM,l=["error","warning","success","info"],u={error:a.errorIconMarkup(),warning:a.warningIconMarkup(),success:a.successIconMarkup()},c=function(e,t){t.classList.add(i+"--"+e);var r=u[e];r&&(t.innerHTML=r)},d=function(e,t){t.classList.add(o);var r=document.createElement("img");r.src=e,t.appendChild(r)};t.default=function(e){if(e){var t=n.injectElIntoModal(a.iconMarkup);l.includes(e)?c(e,t):d(e,t)}}},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(2),a=r(4),s=function(e){navigator.userAgent.includes("AppleWebKit")&&(e.style.display="none",e.offsetHeight,e.style.display="")};t.initTitle=function(e){if(e){var t=a.injectElIntoModal(n.titleMarkup);t.textContent=e,s(t)}},t.initText=function(e){if(e){var t=document.createDocumentFragment();e.split("\n").forEach(function(e,r,n){t.appendChild(document.createTextNode(e)),r<n.length-1&&t.appendChild(document.createElement("br"))});var r=a.injectElIntoModal(n.textMarkup);r.appendChild(t),s(r)}}},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),a=r(4),s=r(0),i=s.default.BUTTON,o=s.default.DANGER_BUTTON,l=r(3),u=r(2),c=r(6),d=r(5),p=function(e,t,r){var a=t.text,s=t.value,p=t.className,h=t.closeModal,f=n.stringToNode(u.buttonMarkup),m=f.querySelector("."+i),g=i+"--"+e;m.classList.add(g),p&&(Array.isArray(p)?p:p.split(" ")).filter(function(e){return e.length>0}).forEach(function(e){m.classList.add(e)}),r&&e===l.CONFIRM_KEY&&m.classList.add(o),m.textContent=a;var y={};return y[e]=s,d.setActionValue(y),d.setActionOptionsFor(e,{closeModal:h}),m.addEventListener("click",function(){return c.onAction(e)}),f};t.default=function(e,t){var r=a.injectElIntoModal(u.footerMarkup);for(var n in e){var s=e[n],i=p(n,s,t);s.visible&&r.appendChild(i)}0===r.children.length&&r.remove()}},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(3),a=r(4),s=r(2),i=r(5),o=r(6),l=r(0).default.CONTENT,u=function(e){e.addEventListener("input",function(e){var t=e.target.value;i.setActionValue(t)}),e.addEventListener("keyup",function(e){if("Enter"===e.key)return o.onAction(n.CONFIRM_KEY)}),setTimeout(function(){e.focus(),i.setActionValue("")},0)},c=function(e,t,r){var n=document.createElement(t),a=l+"__"+t;for(var s in n.classList.add(a),r){var i=r[s];n[s]=i}"input"===t&&u(n),e.appendChild(n)};t.default=function(e){if(e){var t=a.injectElIntoModal(s.contentMarkup),r=e.element,n=e.attributes;"string"==typeof r?c(t,r,n):t.appendChild(r)}}},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),a=r(2);t.default=function(){var e=n.stringToNode(a.overlayMarkup);document.body.appendChild(e)}},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(5),a=r(6),s=r(1),i=r(3),o=r(0),l=o.default.MODAL,u=o.default.BUTTON,c=o.default.OVERLAY,d=function(e){e.preventDefault(),g()},p=function(e){e.preventDefault(),y()},h=function(e){if(n.default.isOpen&&"Escape"===e.key)return a.onAction(i.CANCEL_KEY)},f=function(e){if(n.default.isOpen&&"Tab"===e.key)return d(e)},m=function(e){if(n.default.isOpen)return"Tab"===e.key&&e.shiftKey?p(e):void 0},g=function(){var e=s.getNode(u);e&&(e.tabIndex=0,e.focus())},y=function(){var e=s.getNode(l).querySelectorAll("."+u),t=e.length-1,r=e[t];r&&r.focus()},b=function(e){e[e.length-1].addEventListener("keydown",f)},v=function(e){e[0].addEventListener("keydown",m)},x=function(){var e=s.getNode(l).querySelectorAll("."+u);e.length&&(b(e),v(e))},w=function(e){if(s.getNode(c)===e.target)return a.onAction(i.CANCEL_KEY)},k=function(e){var t=s.getNode(c);t.removeEventListener("click",w),e&&t.addEventListener("click",w)},S=function(e){n.default.timer&&clearTimeout(n.default.timer),e&&(n.default.timer=window.setTimeout(function(){return a.onAction(i.CANCEL_KEY)},e))};t.default=function(e){e.closeOnEsc?document.addEventListener("keyup",h):document.removeEventListener("keyup",h),e.dangerMode?g():y(),x(),k(e.closeOnClickOutside),S(e.timer)}},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),a=r(3),s=r(37),i=r(38),o={title:null,text:null,icon:null,buttons:a.defaultButtonList,content:null,className:null,closeOnClickOutside:!0,closeOnEsc:!0,dangerMode:!1,timer:null},l=Object.assign({},o);t.setDefaults=function(e){l=Object.assign({},o,e)};var u=function(e){var t=e&&e.button,r=e&&e.buttons;return void 0!==t&&void 0!==r&&n.throwErr("Cannot set both 'button' and 'buttons' options!"),void 0!==t?{confirm:t}:r},c=function(e){return n.ordinalSuffixOf(e+1)},d=function(e,t){n.throwErr(c(t)+" argument ('"+e+"') is invalid")},p=function(e,t){var r=e+1,a=t[r];n.isPlainObject(a)||void 0===a||n.throwErr("Expected "+c(r)+" argument ('"+a+"') to be a plain object")},h=function(e,t){var r=e+1,a=t[r];void 0!==a&&n.throwErr("Unexpected "+c(r)+" argument ("+a+")")},f=function(e,t,r,a){var s=typeof t,i=t instanceof Element;if("string"===s){if(0===r)return{text:t};if(1===r)return{text:t,title:a[0]};if(2===r)return p(r,a),{icon:t};d(t,r)}else{if(i&&0===r)return p(r,a),{content:t};if(n.isPlainObject(t))return h(r,a),t;d(t,r)}};t.getOpts=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r={};e.forEach(function(t,n){Object.assign(r,f(0,t,n,e))});var n=u(r);r.buttons=a.getButtonListOpts(n),delete r.button,r.content=s.getContentOpts(r.content);var c=Object.assign({},o,l,r);return Object.keys(c).forEach(function(e){i.DEPRECATED_OPTS[e]&&i.logDeprecation(e)}),c}},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0});var n=r(1),a={element:"input",attributes:{placeholder:""}};t.getContentOpts=function(e){return n.isPlainObject(e)?Object.assign({},e):e instanceof Element?{element:e}:"input"===e?a:null}},function(e,t,r){Object.defineProperty(t,"__esModule",{value:!0}),t.logDeprecation=function(e){var r=t.DEPRECATED_OPTS[e],n=r.onlyRename,a=r.replacement,s=r.subOption,i=r.link,o='SweetAlert warning: "'+e+'" option has been '+(n?"renamed":"deprecated")+".";a&&(o+=" Please use"+(s?' "'+s+'" in ':" ")+'"'+a+'" instead.');var l="https://sweetalert.js.org";console.warn(o+=i?" More details: "+l+i:" More details: "+l+"/guides/#upgrading-from-1x")},t.DEPRECATED_OPTS={type:{replacement:"icon",link:"/docs/#icon"},imageUrl:{replacement:"icon",link:"/docs/#icon"},customClass:{replacement:"className",onlyRename:!0,link:"/docs/#classname"},imageSize:{},showCancelButton:{replacement:"buttons",link:"/docs/#buttons"},showConfirmButton:{replacement:"button",link:"/docs/#button"},confirmButtonText:{replacement:"button",link:"/docs/#button"},confirmButtonColor:{},cancelButtonText:{replacement:"buttons",link:"/docs/#buttons"},closeOnConfirm:{replacement:"button",subOption:"closeModal",link:"/docs/#button"},closeOnCancel:{replacement:"buttons",subOption:"closeModal",link:"/docs/#buttons"},showLoaderOnConfirm:{replacement:"buttons"},animation:{},inputType:{replacement:"content",link:"/docs/#content"},inputValue:{replacement:"content",link:"/docs/#content"},inputPlaceholder:{replacement:"content",link:"/docs/#content"},html:{replacement:"content",link:"/docs/#content"},allowEscapeKey:{replacement:"closeOnEsc",onlyRename:!0,link:"/docs/#closeonesc"},allowClickOutside:{replacement:"closeOnClickOutside",onlyRename:!0,link:"/docs/#closeonclickoutside"}}}]);var ol={};(function(e,t,r){let n={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class a{constructor(e,t){this.modelPath=t||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(e)}/model.json`}getPrefix(e){return"lite_mobilenet_v2"===e?`ssd${e}`:`ssd_${e}`}async load(){this.model=await t.loadGraphModel(this.modelPath);let e=r.zeros([1,300,300,3],"int32"),n=await this.model.executeAsync(e);await Promise.all(n.map(e=>e.data())),n.map(e=>e.dispose()),e.dispose()}async infer(e,t,n){let a=r.tidy(()=>(e instanceof r.Tensor||(e=r.browser.fromPixels(e)),r.expandDims(e))),s=a.shape[1],i=a.shape[2],o=await this.model.executeAsync(a),l=o[0].dataSync(),u=o[1].dataSync();a.dispose(),r.dispose(o);let[c,d]=this.calculateMaxScores(l,o[0].shape[1],o[0].shape[2]),p=r.getBackend();"webgl"===r.getBackend()&&r.setBackend("cpu");let h=r.tidy(()=>{let e=r.tensor2d(u,[o[1].shape[1],o[1].shape[3]]);return r.image.nonMaxSuppression(e,c,t,n,n)}),f=h.dataSync();return h.dispose(),p!==r.getBackend()&&r.setBackend(p),this.buildDetectedObjects(i,s,u,c,f,d)}buildDetectedObjects(e,t,r,a,s,i){let o=s.length,l=[];for(let u=0;u<o;u++){let o=[];for(let e=0;e<4;e++)o[e]=r[4*s[u]+e];let c=o[0]*t,d=o[1]*e,p=o[2]*t,h=o[3]*e;o[0]=d,o[1]=c,o[2]=h-d,o[3]=p-c,l.push({bbox:o,class:n[i[s[u]]+1].displayName,score:a[s[u]]})}return l}calculateMaxScores(e,t,r){let n=[],a=[];for(let s=0;s<t;s++){let t=Number.MIN_VALUE,i=-1;for(let n=0;n<r;n++)e[s*r+n]>t&&(t=e[s*r+n],i=n);n[s]=t,a[s]=i}return[n,a]}async detect(e,t=20,r=.5){return this.infer(e,t,r)}dispose(){null!=this.model&&this.model.dispose()}}e.ObjectDetection=a,e.load=async function(e={}){if(null==r)throw Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");let t=e.base||"lite_mobilenet_v2",n=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw Error(`ObjectDetection constructed with invalid base model ${t}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);let s=new a(t,n);return await s.load(),s},e.version="2.2.3",Object.defineProperty(e,"__esModule",{value:!0})})(ol,A("40l72"),A("i64bB")),/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var ou=A("kWDmn"),oc=A("hl418"),od=A("inFmq"),op=A("jZc0w"),oh=A("lWdx1");const of={kernelName:oc.Abs,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,op.mul)(e,(0,oh.step)((0,od.cast)(r,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),om=A("1QPqB"),og=A("15cGp"),oy=A("3xp7o"),ob=A("iAb3z"),ov=A("iDd8d"),ox=A("7kouu");const ow={kernelName:oc.Acos,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let t=(0,ov.square)((0,od.cast)(r,"float32")),n=(0,ob.sqrt)((0,ox.sub)((0,oy.scalar)(1),t));return(0,og.neg)((0,om.div)(e,n))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),om=A("1QPqB"),ob=A("iAb3z"),ov=A("iDd8d"),ox=A("7kouu");const ok={kernelName:oc.Acosh,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let t=(0,ob.sqrt)((0,ox.sub)((0,ov.square)((0,od.cast)(r,"float32")),1));return(0,om.div)(e,t)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oS=A("8BaGO"),oN=A("4sqA7"),oT=A("9NgTx");const oI={kernelName:oc.Add,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=oS.assertAndGetBroadcastShape(r.shape,n.shape);return{a:()=>{let t=e,n=oS.getReductionAxes(r.shape,a);return n.length>0&&(t=(0,oT.sum)(t,n)),(0,oN.reshape)(t,r.shape)},b:()=>{let t=e,r=oS.getReductionAxes(n.shape,a);return r.length>0&&(t=(0,oT.sum)(t,r)),(0,oN.reshape)(t,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418");const oC={kernelName:oc.AddN,saveAllInputs:!0,gradFunc:(e,t)=>{let r={};return t.forEach((t,n)=>{r[n]=()=>e.clone()}),r}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oE=A("8EjnK");const oA={kernelName:oc.ArgMax,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,oE.zerosLike)(r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oE=A("8EjnK");const oR={kernelName:oc.ArgMin,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,oE.zerosLike)(r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),om=A("1QPqB"),oy=A("3xp7o"),ob=A("iAb3z"),ov=A("iDd8d"),ox=A("7kouu");const o_={kernelName:oc.Asin,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,om.div)(e,(0,ob.sqrt)((0,ox.sub)((0,oy.scalar)(1),(0,ov.square)((0,od.cast)(r,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oO=A("hgacW"),od=A("inFmq"),om=A("1QPqB"),oy=A("3xp7o"),ob=A("iAb3z"),ov=A("iDd8d");const oP={kernelName:oc.Asinh,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let t=(0,ob.sqrt)((0,oO.add)((0,oy.scalar)(1),(0,ov.square)((0,od.cast)(r,"float32"))));return(0,om.div)(e,t)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oO=A("hgacW"),oS=A("8BaGO"),om=A("1QPqB"),op=A("jZc0w"),og=A("15cGp"),oN=A("4sqA7"),ov=A("iDd8d"),oT=A("9NgTx");const o$={kernelName:oc.Atan2,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=(0,oS.assertAndGetBroadcastShape)(r.shape,n.shape);return{a:()=>{let t=(0,oO.add)((0,ov.square)(r),(0,ov.square)(n)),s=(0,op.mul)(e,(0,om.div)(n,t)),i=(0,oS.getReductionAxes)(r.shape,a);return i.length>0&&(s=(0,oT.sum)(s,i)),(0,oN.reshape)(s,r.shape)},b:()=>{let t=(0,oO.add)((0,ov.square)(r),(0,ov.square)(n)),s=(0,og.neg)((0,op.mul)(e,(0,om.div)(r,t))),i=(0,oS.getReductionAxes)(n.shape,a);return i.length>0&&(s=(0,oT.sum)(s,i)),(0,oN.reshape)(s,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oO=A("hgacW"),od=A("inFmq"),om=A("1QPqB"),ov=A("iDd8d");const oD={kernelName:oc.Atan,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,om.div)(e,(0,oO.add)((0,ov.square)((0,od.cast)(r,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),om=A("1QPqB"),ov=A("iDd8d"),ox=A("7kouu"),oy=A("3xp7o");const oM={kernelName:oc.Atanh,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,om.div)(e,(0,ox.sub)((0,oy.scalar)(1),(0,ov.square)((0,od.cast)(r,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oF=A("38WwN"),oc=A("hl418"),oL=A("5xBLk"),oj=A("8cCb2"),oB=A("frznq"),oz=A("jqSCG"),oN=A("4sqA7");const oV=/* @__PURE__ */(0,oz.op)({avgPool3dGrad_:/**
 * Computes the backprop of a 3d avg pool.
 *
 * @param dy The dy error, of rank 5 of shape
 *     [batchSize, depth, height, width, channels].
 * assumed.
 * @param input The original input image, of rank 5 or rank4 of shape
 *     [batchSize, depth, height, width, channels].
 * @param filterSize The filter size:
 *     `[filterDepth, filterHeight, filterWidth]`.
 *     `filterSize` is a single number,
 *     then `filterDepth == filterHeight == filterWidth`.
 * @param strides The strides of the pooling:
 *     `[strideDepth, strideHeight, strideWidth]`. If
 *     `strides` is a single number, then `strideHeight == strideWidth`.
 * @param pad A string from: 'same', 'valid'. The type of padding algorithm
 *     used in the forward prop of the op.
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 */function(e,t,r,n,a,s){let i=(0,oL.convertToTensor)(e,"dy","avgPool3dGrad"),o=(0,oL.convertToTensor)(t,"input","avgPool3dGrad"),l=i,u=o,c=!1;4===o.rank&&(c=!0,l=(0,oN.reshape)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=(0,oN.reshape)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),oj.assert(5===l.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),oj.assert(5===u.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),(0,oB.checkPadOnDimRoundingMode)("avgPool3dGrad",a,s);let d={dy:l,input:u},p=(0,oF.ENGINE).runKernel(oc.AvgPool3DGrad,d,{filterSize:r,strides:n,pad:a,dimRoundingMode:s});return c?(0,oN.reshape)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),oG={kernelName:oc.AvgPool3D,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=r;return{x:()=>oV(e,n,a,s,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oF=A("38WwN"),oc=A("hl418"),oL=A("5xBLk"),oj=A("8cCb2"),oz=A("jqSCG"),oN=A("4sqA7");const oU=/* @__PURE__ */(0,oz.op)({avgPoolGrad_:/**
 * Computes the backprop of an 2D avg pool.
 *
 * @param dy The dy error, of rank 4 or rank 3 of shape
 *     [batchSize, height, width, channels]. If rank 3, batch of 1 is
 * assumed.
 * @param input The input image, of rank 4 or rank 3 of shape
 *     [batchSize, height, width, channels]. If rank 3, batch of 1 is
 * assumed.
 * @param filterSize The filter size: `[filterHeight, filterWidth]`. If
 *     `filterSize` is a single number, then `filterHeight == filterWidth`.
 * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If
 *     `strides` is a single number, then `strideHeight == strideWidth`.
 * @param pad The type of padding algorithm used in the forward prop of the op.
 *     'same', 'valid', for more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *         https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 */function(e,t,r,n,a){let s=(0,oL.convertToTensor)(e,"dy","avgPoolGrad"),i=(0,oL.convertToTensor)(t,"input","avgPoolGrad");oj.assert(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=(0,oN.reshape)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=(0,oN.reshape)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),oj.assert(4===l.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),oj.assert(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let c={dy:l,input:o},d=(0,oF.ENGINE).runKernel(oc.AvgPoolGrad,c,{filterSize:r,strides:n,pad:a});return u?(0,oN.reshape)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),oW={kernelName:oc.AvgPool,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{filterSize:a,strides:s,pad:i}=r;return{x:()=>oU(e,n,a,s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oq=A("aUFou");const oH={kernelName:oc.BatchMatMul,inputsToSave:["a","b"],gradFunc:(e,t,r)=>{let[n,a]=t,{transposeA:s,transposeB:i}=r;return s||i?!s&&i?{a:()=>(0,oq.matMul)(e,a,!1,!1),b:()=>(0,oq.matMul)(e,n,!0,!1)}:s&&!i?{a:()=>(0,oq.matMul)(a,e,!1,!0),b:()=>(0,oq.matMul)(n,e,!1,!1)}:{a:()=>(0,oq.matMul)(a,e,!0,!0),b:()=>(0,oq.matMul)(e,n,!0,!0)}:{a:()=>(0,oq.matMul)(e,a,!1,!0),b:()=>(0,oq.matMul)(n,e,!0,!1)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oK=A("ePI8Y");const oX={kernelName:oc.BatchToSpaceND,gradFunc:(e,t,r)=>{let{blockShape:n,crops:a}=r;return{x:()=>(0,oK.spaceToBatchND)(e,n,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oT=A("9NgTx");const oZ={kernelName:oc.BroadcastTo,gradFunc:(e,t,r)=>{let n=r.inputShape,a=r.shape,s=Array.from(a);for(let e=n.length-1;e>=0;e--)if(n[e]===a[e])s[e]=1;else if(1!==n[e])throw Error(`broadcastTo(): [${n}] cannot be broadcast to [${a}].`);let i=[];for(let e=0;e<s.length;e++)s[e]>1&&i.push(e);return{x:()=>(0,oT.sum)(e,i,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418");const oQ={kernelName:oc.Cast,gradFunc:e=>({x:()=>e.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oE=A("8EjnK");const oY={kernelName:oc.Ceil,gradFunc:e=>({x:()=>(0,oE.zerosLike)(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oJ=A("l0Zxl"),o0=A("7LQ38"),o1=A("kg1Wp"),o2=A("l2P14"),oE=A("8EjnK");const o4={kernelName:oc.ClipByValue,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{clipValueMin:a,clipValueMax:s}=r;return{x:()=>(0,o2.where)((0,o1.logicalAnd)((0,oJ.greaterEqual)(n,a),(0,o0.lessEqual)(n,s)),e,(0,oE.zerosLike)(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418");const o3={kernelName:oc.ComplexAbs,inputsToSave:["x"],gradFunc:of.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),o8=A("9fmAX"),oj=A("8cCb2");const o6={kernelName:oc.Concat,saveAllInputs:!0,gradFunc:(e,t,r)=>{let n=t.map(e=>e.shape),{axis:a}=r,s=(0,oj.parseAxisParam)(a,t[0].shape)[0],i=n.map(e=>e[s]),o=(0,o8.split)(e,i,s);return o.map(e=>()=>e)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),o5=A("4Tgmn"),o7=A("6eptr"),oB=A("frznq"),oj=A("8cCb2");const o9={kernelName:oc.Conv2D,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let[n,a]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=r;return oj.assert(oB.tupleValuesAreOne(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>(0,o7.conv2DBackpropInput)(n.shape,e,a,i,o,l),filter:()=>(0,o5.conv2DBackpropFilter)(n,e,a.shape,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),le=A("5Nkm1"),o5=A("4Tgmn");const lt={kernelName:oc.Conv2DBackpropInput,inputsToSave:["dy","filter"],gradFunc:(e,t,r)=>{let[n,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=r;return{dy:()=>(0,le.conv2d)(e,a,s,i,o,1/* dilations */,l),filter:()=>(0,o5.conv2DBackpropFilter)(e,n,a.shape,s,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oF=A("38WwN"),oc=A("hl418"),oj=A("8cCb2"),oz=A("jqSCG"),oN=A("4sqA7");const lr=/* @__PURE__ */(0,oz.op)({conv3DBackpropFilter_:/**
 * Computes the derivative of the filter of a 3D convolution.
 *
 * @param x The input tensor, of rank 5 or rank 4 of shape
 *     [batch, depth, height, width, inChannels]. If rank 4, batch of 1 is
 *     assumed.
 * @param dy The dy image, of rank 5 or rank 4, of shape
 *     [batch, depth, height, width, outDepth]. If rank 4, batch of 1 is
 *     assumed.
 * @param filterShape The shape of the filter, length 5,
 *     [filterDepth, filterHeight, filterWidth, inDepth, outDepth].
 * @param strides The strides of the convolution: [strideDepth, strideHeight,
 * strideWidth].
 * @param pad A string from: 'same', 'valid'. The type of padding algorithm
 *     used in the forward prop of the op.
 */function(e,t,r,n,a){let s=e;4===e.rank&&(s=(0,oN.reshape)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=(0,oN.reshape)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),oj.assert(5===s.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),oj.assert(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),oj.assert(5===r.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${r}.`),oj.assert(s.shape[4]===r[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${r[3]}.`),oj.assert(i.shape[4]===r[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${r[4]}).`);let o={x:s,dy:i};// tslint:disable-next-line: no-unnecessary-type-assertion
return(0,oF.ENGINE).runKernel(oc.Conv3DBackpropFilterV2,o,{strides:n,pad:a,filterShape:r})}});var ln=A("AHZ4U"),oB=A("frznq"),oj=A("8cCb2");const la={kernelName:oc.Conv3D,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let{dilations:n,strides:a,pad:s}=r;oj.assert((0,oB.tupleValuesAreOne)(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[i,o]=t;return{x:()=>(0,ln.conv3DBackpropInput)(i.shape,e,o,a,s),filter:()=>lr(i,e,o.shape,a,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),op=A("jZc0w"),og=A("15cGp"),ls=A("4xqM7");const li={kernelName:oc.Cos,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,op.mul)((0,og.neg)((0,ls.sin)((0,od.cast)(r,"float32"))),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),op=A("jZc0w"),lo=A("fAOzm");const ll={kernelName:oc.Cosh,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,op.mul)((0,lo.sinh)((0,od.cast)(r,"float32")),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),lu=A("kTunp"),lc=A("7lqwF"),ld=A("aDHKy");const lp={kernelName:oc.Cumsum,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{axis:a,exclusive:s,reverse:i}=r;return{x:()=>{let t=(0,lu.getAxesPermutation)([a],n.rank),r=(0,lc.cumsum)(e,a,s,!i);return null!=t&&(r=(0,ld.transpose)(r,t)),r}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oB=A("frznq"),lh=A("j2Gyr"),lf=A("1C2e1"),oj=A("8cCb2");const lm={kernelName:oc.DepthwiseConv2dNative,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let{dilations:n,strides:a,pad:s,dimRoundingMode:i}=r,o=null==n?[1,1]:n;oj.assert(oB.tupleValuesAreOne(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[l,u]=t;return oj.assert(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),oj.assert(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),oj.assert(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),oj.assert(oB.eitherStridesOrDilationsAreOne(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),oB.checkPadOnDimRoundingMode("depthwiseConv2d",s,i),{x:()=>(0,lf.depthwiseConv2dNativeBackpropInput)(l.shape,e,u,a,s,o,i),filter:()=>(0,lh.depthwiseConv2dNativeBackpropFilter)(l,e,u.shape,a,s,o,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oF=A("38WwN"),oc=A("hl418");const lg={kernelName:oc.Dilation2D,inputsToSave:["x","filter"],gradFunc:(e,t,r)=>{let[n,a]=t,s={x:n,filter:a,dy:e},i={x:n,filter:a,dy:e};return{x:()=>(0,oF.ENGINE).runKernel(oc.Dilation2DBackpropInput,s,r),filter:()=>(0,oF.ENGINE).runKernel(oc.Dilation2DBackpropFilter,i,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oF=A("38WwN"),oc=A("hl418");const ly={kernelName:oc.Elu,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t,n={dy:e,y:r};return{x:()=>(0,oF.ENGINE).runKernel(oc.EluGrad,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),lb=A("2PcQK"),op=A("jZc0w"),og=A("15cGp"),ov=A("iDd8d");const lv={kernelName:oc.Erf,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t,n=(0,op.mul)((0,lb.exp)((0,og.neg)((0,ov.square)(r))),2/Math.sqrt(Math.PI));return{x:()=>(0,op.mul)(e,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),op=A("jZc0w");const lx={kernelName:oc.Exp,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,op.mul)(e,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oN=A("4sqA7");const lw={kernelName:oc.ExpandDims,inputsToSave:["input"],gradFunc:(e,t)=>{let[r]=t;return{input:()=>(0,oN.reshape)(e,r.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),lb=A("2PcQK"),op=A("jZc0w");const lk={kernelName:oc.Expm1,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,op.mul)(e,(0,lb.exp)(r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oE=A("8EjnK");const lS={kernelName:oc.Floor,gradFunc:e=>({x:()=>(0,oE.zerosLike)(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oS=A("8BaGO"),od=A("inFmq"),om=A("1QPqB"),op=A("jZc0w"),og=A("15cGp"),oN=A("4sqA7"),ov=A("iDd8d"),oT=A("9NgTx");const lN={kernelName:oc.FloorDiv,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=(0,oS.assertAndGetBroadcastShape)(r.shape,n.shape);return{a:()=>{let t=(0,om.div)(e,(0,od.cast)(n,"float32")),s=(0,oS.getReductionAxes)(r.shape,a);return s.length>0?(0,oN.reshape)((0,oT.sum)(t,s),r.shape):t},b:()=>{let t=(0,op.mul)(e,(0,od.cast)(r,"float32")),s=(0,oS.getReductionAxes)(n.shape,a);s.length>0&&(t=(0,oN.reshape)((0,oT.sum)(t,s),n.shape));let i=(0,ov.square)(n);return(0,og.neg)((0,om.div)(t,(0,od.cast)(i,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oO=A("hgacW"),oS=A("8BaGO"),op=A("jZc0w"),oN=A("4sqA7"),lT=A("5pj7R"),oy=A("3xp7o"),ox=A("7kouu"),oT=A("9NgTx"),lI=A("61ay4");const lC={kernelName:oc.FusedBatchNorm,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,r)=>{let{varianceEpsilon:n}=r,[a,s,i,o]=t,l=null==o?(0,oy.scalar)(1):o,u=(0,oS.getReductionAxes)(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}let d=(0,ox.sub)(a,s),p=(0,op.mul)(e,l),h=(0,lT.rsqrt)((0,oO.add)(i,(0,oy.scalar)(n))),f=(0,op.mul)((0,op.mul)((0,op.mul)(h,h),h),(0,oy.scalar)(-.5));return{x:()=>1===s.rank?(0,oN.reshape)((0,op.mul)((0,op.mul)(e,(0,lI.tile)((0,oN.reshape)(h,[1,1,1,s.shape[0]]),c)),l),a.shape):(0,oN.reshape)((0,op.mul)((0,op.mul)(e,h),l),a.shape),mean:()=>{let e=(0,op.mul)((0,op.mul)(h,(0,oy.scalar)(-1)),p);return 1===s.rank&&(e=(0,oT.sum)(e,u)),(0,oN.reshape)(e,s.shape)},variance:()=>{let e=(0,op.mul)((0,op.mul)(f,d),p);return 1===s.rank&&(e=(0,oT.sum)(e,u)),(0,oN.reshape)(e,s.shape)},scale:()=>{let t=(0,op.mul)(d,h),r=(0,op.mul)(e,t);return 1===s.rank&&(r=(0,oT.sum)(r,u)),(0,oN.reshape)(r,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=(0,oT.sum)(t,u)),(0,oN.reshape)(t,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),lu=A("kTunp"),oN=A("4sqA7"),lE=A("8BrLX"),ld=A("aDHKy"),lA=A("djGEF"),oj=A("8cCb2");const lR={kernelName:oc.GatherV2,inputsToSave:["x","indices"],gradFunc:(e,t,r)=>{let[n,a]=t,{axis:s,batchDims:i}=r,o=(0,oj.parseAxisParam)(s,n.shape)[0],l=(e,t,r)=>()=>{let n=e.shape,a=t.size,i=n.slice(0,o),l=i.length,u=n.slice(s,n.length).slice(1),c=u.length,d=l_(0,l),p=l_(l+1,l+1+c),h=lO([i,[a],u]),f=(0,oN.reshape)(r,h),m=(0,oN.reshape)(t,[a]),g=lO([[l],d,p]),y=(0,ld.transpose)(f,g),b=(0,lA.unsortedSegmentSum)(y,m,e.shape[o]),v=(0,lu.getUndoAxesPermutation)(g);return(0,ld.transpose)(b,v)};if(1!==i)return{x:l(n,a,e),indices:()=>a};{let t=n.shape[0],r=n.split(t,0);return{x:()=>{let t=(0,lE.stack)(r.map((t,r)=>l(t,a.slice(r,1),e.slice(r,1))()));return t.reshape(n.shape)},indices:()=>a}}}};function l_(e,t){let r=[];for(let n=e;n<t;++n)r.push(n);return r}function lO(e){let t=[];for(let r=0;r<e.length;++r)for(let n=0;n<e[r].length;++n)t.push(e[r][n]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oE=A("8EjnK");const lP={kernelName:oc.GreaterEqual,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t;return{a:()=>(0,oE.zerosLike)(r),b:()=>(0,oE.zerosLike)(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq");const l$={kernelName:oc.Identity,gradFunc:e=>({x:()=>(0,od.cast)(e,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oE=A("8EjnK");const lD={kernelName:oc.IsFinite,gradFunc:e=>({x:()=>(0,oE.zerosLike)(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oE=A("8EjnK");const lM={kernelName:oc.IsInf,gradFunc:e=>({x:()=>(0,oE.zerosLike)(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oE=A("8EjnK");const lF={kernelName:oc.IsNan,gradFunc:e=>({x:()=>(0,oE.zerosLike)(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),lL=A("bRRKf"),op=A("jZc0w"),o2=A("l2P14");const lj={kernelName:oc.LeakyRelu,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{alpha:a}=r,s=(0,lL.greater)(n,0);// Returns `gradients * (features > 0) + alpha * gradients * (features <=
// 0)`.
return{x:()=>(0,o2.where)(s,e,(0,op.mul)(e,a))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oO=A("hgacW"),om=A("1QPqB");const lB={kernelName:oc.Log1p,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,om.div)(e,(0,oO.add)(r,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),om=A("1QPqB");const lz={kernelName:oc.Log,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,om.div)(e,(0,od.cast)(r,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),lb=A("2PcQK"),op=A("jZc0w"),ox=A("7kouu"),oT=A("9NgTx");const lV={kernelName:oc.LogSoftmax,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n]=t,{axis:a}=r;return{logits:()=>{let t=(0,lb.exp)(n);return(0,ox.sub)(e,(0,op.mul)((0,oT.sum)(e,a,!0),t))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oF=A("38WwN"),oc=A("hl418"),oz=A("jqSCG");const lG=(0,oz.op)({localResponseNormalizationBackprop_:function(e,t,r,n=5,a=1,s=1,i=.5){return(0,oF.ENGINE).runKernel(oc.LRNGrad,{x:e,y:t,dy:r},{depthRadius:n,bias:a,alpha:s,beta:i})}}),lU={kernelName:oc.LRN,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n,a]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=r;return{x:()=>lG(n,a,e,s,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oj=A("8cCb2"),lu=A("kTunp"),od=A("inFmq"),lW=A("7R9HC"),op=A("jZc0w"),oN=A("4sqA7");function lq(e,t,r,n){return t.rank<r.rank&&(t=(0,oN.reshape)(t,lu.expandShapeToKeepDim(t.shape,n))),e.rank<r.rank&&(e=(0,oN.reshape)(e,lu.expandShapeToKeepDim(e.shape,n))),{x:()=>{let n=(0,op.mul)(e,(0,od.cast)((0,lW.equal)(r,t),e.dtype));return n}}}const lH={kernelName:oc.Max,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let{reductionIndices:n}=r,a=t[0],s=t[1],i=oj.parseAxisParam(n,a.shape),o=lq(e,s,a,i);return{x:()=>o.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),oJ=A("l0Zxl"),lK=A("jTDVJ"),op=A("jZc0w");const lX={kernelName:oc.Maximum,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t;return{a:()=>(0,op.mul)(e,(0,od.cast)((0,oJ.greaterEqual)(r,n),"float32")),b:()=>(0,op.mul)(e,(0,od.cast)((0,lK.less)(r,n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oF=A("38WwN"),oc=A("hl418"),oL=A("5xBLk"),oj=A("8cCb2"),oB=A("frznq"),oz=A("jqSCG"),oN=A("4sqA7");const lZ=/* @__PURE__ */(0,oz.op)({maxPool3dGrad_:/**
 * Computes the backprop of a 3d max pool.
 *
 * @param dy The dy error, of rank 5 of shape
 *     [batchSize, depth, height, width, channels].
 * assumed.
 * @param input The original input image, of rank 5 or rank 4 of shape
 *     [batchSize, depth, height, width, channels].
 * @param output The original output image, of rank 5 of shape
 *     [batchSize, outDepth, outHeight, outWidth, channels].
 * @param filterSize The filter size:
 *     `[filterDepth, filterHeight, filterWidth]`.
 *     `filterSize` is a single number,
 *     then `filterDepth == filterHeight == filterWidth`.
 * @param strides The strides of the pooling:
 *     `[strideDepth, strideHeight, strideWidth]`. If
 *     `strides` is a single number, then `strideHeight == strideWidth`.
 * @param pad A string from: 'same', 'valid'. The type of padding algorithm
 *     used in the forward prop of the op.
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 */function(e,t,r,n,a,s,i){let o=(0,oL.convertToTensor)(e,"dy","maxPool3dGrad"),l=(0,oL.convertToTensor)(t,"input","maxPool3dGrad"),u=(0,oL.convertToTensor)(r,"output","maxPool3dGrad"),c=o,d=l,p=u,h=!1;4===l.rank&&(h=!0,c=(0,oN.reshape)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=(0,oN.reshape)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=(0,oN.reshape)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),oj.assert(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),oj.assert(5===d.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),oj.assert(5===p.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),(0,oB.checkPadOnDimRoundingMode)("maxPool3dGrad",s,i);let f={dy:c,input:d,output:p},m=(0,oF.ENGINE).runKernel(oc.MaxPool3DGrad,f,{filterSize:n,strides:a,pad:s,dimRoundingMode:i});return h?(0,oN.reshape)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),lQ={kernelName:oc.MaxPool3D,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=r;return{x:()=>lZ(e,n,a,s,i,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oF=A("38WwN"),oc=A("hl418"),oL=A("5xBLk"),oj=A("8cCb2"),oB=A("frznq"),oz=A("jqSCG");const lY=/* @__PURE__ */(0,oz.op)({maxPoolGrad_:/**
 * Computes the backprop of a 2D max pool.
 *
 * @param dy The dy error, of rank 4 or rank 3 of shape
 *     [batchSize, height, width, channels]. If rank 3, batch of 1 is
 * assumed.
 * @param input The original input image, of rank 4, of shape
 *     [batchSize, height, width, channels].
 * @param output The original output image, of rank 4, of shape
 *     [batchSize, outHeight, outWidth, channels].
 * @param filterSize The filter size: `[filterHeight, filterWidth]`. If
 *     `filterSize` is a single number, then `filterHeight == filterWidth`.
 * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If
 *     `strides` is a single number, then `strideHeight == strideWidth`.
 * @param pad The type of padding algorithm used in the forward prop of the op.
 *     'same', 'valid', for more info, see this guide:
 *     [https://www.tensorflow.org/api_docs/python/tf/nn/convolution](
 *          https://www.tensorflow.org/api_docs/python/tf/nn/convolution)
 * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is
 *     provided, it will default to truncate.
 */function(e,t,r,n,a,s,i){let o=(0,oL.convertToTensor)(e,"dy","maxPoolGrad"),l=(0,oL.convertToTensor)(t,"input","maxPoolGrad"),u=(0,oL.convertToTensor)(r,"output","maxPoolGrad");return oj.assert(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),oj.assert(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),oj.assert(4===l.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),oB.checkPadOnDimRoundingMode("maxPoolGrad",s,i),(0,oF.ENGINE).runKernel(oc.MaxPoolGrad,{dy:o,input:l,output:u},{filterSize:n,strides:a,pad:s,dimRoundingMode:i})}}),lJ={kernelName:oc.MaxPool,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n,a]=t,{filterSize:s,strides:i,pad:o}=r;return{x:()=>lY(e,n,a,s,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),lu=A("kTunp"),om=A("1QPqB"),op=A("jZc0w"),l0=A("fOBRA"),oN=A("4sqA7"),oj=A("8cCb2");const l1={kernelName:oc.Mean,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{axis:a}=r,s=oj.parseAxisParam(a,n.shape),i=(0,lu.computeOutAndReduceShapes)(n.shape,s),o=i[1],l=oj.sizeFromShape(o);return{x:()=>{let t=n.shape.slice();s.forEach(e=>{t[e]=1});let r=(0,oN.reshape)(e,t),a=(0,om.div)((0,op.mul)(r,(0,l0.ones)(n.shape,"float32")),l);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oj=A("8cCb2");const l2={kernelName:oc.Min,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,r)=>{let{axis:n}=r,[a,s]=t,i=oj.parseAxisParam(n,a.shape),o=lq(e,s,a,i);return{x:()=>o.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),lL=A("bRRKf"),o0=A("7LQ38"),op=A("jZc0w");const l4={kernelName:oc.Minimum,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t;return{a:()=>(0,op.mul)(e,(0,od.cast)((0,o0.lessEqual)(r,n),"float32")),b:()=>(0,op.mul)(e,(0,od.cast)((0,lL.greater)(r,n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),l3=A("79KOG");const l8={kernelName:oc.MirrorPad,inputsToSave:["x"],gradFunc:(e,t,r)=>{// Pad introduces values around the original tensor, so the gradient
// slices the original shape out of the gradient.
let n=t[0],{paddings:a}=r,s=a.map(e=>e[0]);return{x:()=>(0,l3.slice)(e,s,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oS=A("8BaGO"),om=A("1QPqB"),l6=A("4ZUCz"),op=A("jZc0w"),og=A("15cGp"),oN=A("4sqA7"),oT=A("9NgTx");const l5={kernelName:oc.Mod,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=(0,oS.assertAndGetBroadcastShape)(r.shape,n.shape);return{a:()=>{let t=(0,oS.getReductionAxes)(r.shape,a);return t.length>0?(0,oN.reshape)((0,oT.sum)(e,t),r.shape):e},b:()=>{let t=(0,op.mul)(e,(0,og.neg)((0,l6.floor)((0,om.div)(r,n)))),s=(0,oS.getReductionAxes)(n.shape,a);return s.length>0?(0,oN.reshape)((0,oT.sum)(t,s),n.shape):t}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oS=A("8BaGO"),od=A("inFmq"),op=A("jZc0w"),oN=A("4sqA7"),oT=A("9NgTx");const l7={kernelName:oc.Multiply,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=(0,oS.assertAndGetBroadcastShape)(r.shape,n.shape);return{a:()=>{let t=(0,op.mul)(e,(0,od.cast)(n,"float32")),s=(0,oS.getReductionAxes)(r.shape,a);return s.length>0?(0,oN.reshape)((0,oT.sum)(t,s),r.shape):t},b:()=>{let t=(0,op.mul)(e,(0,od.cast)(r,"float32")),s=(0,oS.getReductionAxes)(n.shape,a);return s.length>0?(0,oN.reshape)((0,oT.sum)(t,s),n.shape):t}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),og=A("15cGp");const l9={kernelName:oc.Neg,gradFunc:e=>({x:()=>(0,og.neg)(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),ue=A("hxi4c");const ut={kernelName:oc.OneHot,inputsToSave:["indices"],gradFunc:(e,t)=>{let r=t[0];return{indices:()=>(0,ue.zeros)(r.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oE=A("8EjnK");const ur={kernelName:oc.OnesLike,gradFunc:e=>({x:()=>(0,oE.zerosLike)(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),un=A("gBOC6");const ua={kernelName:oc.Pack,saveAllInputs:!0,gradFunc:(e,t,r)=>{let{axis:n}=r,a=(0,un.unstack)(e,n);return a.map(e=>()=>e)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),l3=A("79KOG");const us={kernelName:oc.PadV2,inputsToSave:["x"],gradFunc:(e,t,r)=>{// Pad introduces values around the original tensor, so the gradient
// slices the original shape out of the gradient.
let n=t[0],{paddings:a}=r,s=a.map(e=>e[0]);return{x:()=>(0,l3.slice)(e,s,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oS=A("8BaGO"),od=A("inFmq"),lL=A("bRRKf"),ui=A("dcoCo"),op=A("jZc0w"),uo=A("ad1of"),oN=A("4sqA7"),oy=A("3xp7o"),ox=A("7kouu"),oT=A("9NgTx"),o2=A("l2P14"),oE=A("8EjnK");const ul={kernelName:oc.Pow,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[r,n,a]=t,s=oS.assertAndGetBroadcastShape(r.shape,n.shape);return{a:()=>{let t=(0,od.cast)(n,"float32"),a=(0,op.mul)(e,(0,op.mul)(t,(0,uo.pow)(r,(0,ox.sub)(t,(0,oy.scalar)(1))))),i=oS.getReductionAxes(r.shape,s);return i.length>0&&(a=(0,oT.sum)(a,i)),(0,oN.reshape)(a,r.shape)},b:()=>{let t=(0,lL.greater)(r,0),i=(0,o2.where)(t,(0,ui.log)(r),(0,oE.zerosLike)(r)),o=(0,op.mul)(e,(0,op.mul)(a,i)),l=oS.getReductionAxes(n.shape,s);return l.length>0&&(o=(0,oT.sum)(o,l)),(0,oN.reshape)(o,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oS=A("8BaGO"),lL=A("bRRKf"),op=A("jZc0w"),oN=A("4sqA7"),oT=A("9NgTx"),o2=A("l2P14"),oE=A("8EjnK");const uu={kernelName:oc.Prelu,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[r,n]=t,a=(0,lL.greater)(r,0);return{x:()=>(0,o2.where)(a,e,(0,op.mul)(e,n)),alpha:()=>{let t=(0,o2.where)(a,(0,oE.zerosLike)(e),(0,op.mul)(e,r)),s=(0,oS.getReductionAxes)(n.shape,e.shape);return s.length>0&&(t=(0,oT.sum)(t,s)),(0,oN.reshape)(t,n.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var uc=A("7MaPk"),oc=A("hl418"),ud=A("bhhSS"),op=A("jZc0w"),oN=A("4sqA7"),ld=A("aDHKy");const up={kernelName:oc.Prod,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{axis:a}=r,s=[];return s=null==a?n.shape.map((e,t)=>t):"number"==typeof a?[a]:a,{x:()=>// Support gradients when the product is done on many axes at once.
    // This done py pushing all the axes on which the product is applied into a
    // single axis.
    (function(e,t,r){// Move all axes for doing prod over to the end of the tensor.
    let n=e.shape.length,a=n-r.length,s=uc.getAxesPermutation(r,n),i=e;null!=s&&(i=(0,ld.transpose)(e,s));// Reshape all the prod dimensions into a single one, and do compute prod
    // gradients on that.
    let o=i.shape.slice(),l=o.splice(n-r.length,r.length),u=l.reduce((e,t)=>e*t,1);o.push(u);let c=i.reshape(o),d=// Gradient for product operation on a single axis.
    function(e,t,r){// The gradient tensor (dy) has a set of axes removed, so we create re-shaped
    // versions (of size 1) for the removed axis; this supports broadcasting over
    // those dimensions.
    let n=e.shape.slice();n[r]=1;// The actual gradient computation.
    let a=(0,oN.reshape)(t,n),s=(0,ud.cumprod)(e,r,!0,!1),i=(0,ud.cumprod)(e,r,!0,!0),o=(0,op.mul)(s,i);return(0,op.mul)(a,o)}(c,t,a);if(// Undo the re-shaping now we have the dx vector, and permute back to
    // original axes order.
    d=d.reshape(i.shape),null!=s){let e=uc.getUndoAxesPermutation(s);d=(0,ld.transpose)(d,e)}return d})(n,e,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oS=A("8BaGO"),od=A("inFmq"),om=A("1QPqB"),op=A("jZc0w"),og=A("15cGp"),oN=A("4sqA7"),ov=A("iDd8d"),oT=A("9NgTx");const uh={kernelName:oc.RealDiv,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=oS.assertAndGetBroadcastShape(r.shape,n.shape);return{a:()=>{let t=(0,om.div)(e,(0,od.cast)(n,"float32")),s=oS.getReductionAxes(r.shape,a);return s.length>0?(0,oN.reshape)((0,oT.sum)(t,s),r.shape):t},b:()=>{let t=(0,op.mul)(e,(0,od.cast)(r,"float32")),s=oS.getReductionAxes(n.shape,a);s.length>0&&(t=(0,oN.reshape)((0,oT.sum)(t,s),n.shape));let i=(0,ov.square)(n);return(0,og.neg)((0,om.div)(t,(0,od.cast)(i,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),om=A("1QPqB"),og=A("15cGp"),ov=A("iDd8d");const uf={kernelName:oc.Reciprocal,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,om.div)(e,(0,og.neg)((0,ov.square)(r)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),o0=A("7LQ38"),op=A("jZc0w"),oh=A("lWdx1");const um={kernelName:oc.Relu6,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t,n=(0,op.mul)((0,o0.lessEqual)(r,6),(0,oh.step)(r));return{x:()=>(0,op.mul)(e,(0,od.cast)(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),op=A("jZc0w"),oh=A("lWdx1");const ug={kernelName:oc.Relu,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,op.mul)(e,(0,od.cast)((0,oh.step)(r),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oN=A("4sqA7");const uy={kernelName:oc.Reshape,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,oN.reshape)(e,r.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oF=A("38WwN"),oc=A("hl418");const ub={kernelName:oc.ResizeBilinear,inputsToSave:["images"],gradFunc:(e,t,r)=>{let[n]=t,a={dy:e,images:n};return{images:()=>(0,oF.ENGINE).runKernel(oc.ResizeBilinearGrad,a,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oF=A("38WwN"),oc=A("hl418");const uv={kernelName:oc.ResizeNearestNeighbor,inputsToSave:["images"],gradFunc:(e,t,r)=>{let[n]=t,a={dy:e,images:n};return{images:()=>(0,oF.ENGINE).runKernel(oc.ResizeNearestNeighborGrad,a,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),ux=A("6act6"),oj=A("8cCb2");const uw={kernelName:oc.Reverse,gradFunc:(e,t,r)=>{let{dims:n}=r,a=(0,oj.parseAxisParam)(n,e.shape);return{x:()=>(0,ux.reverse)(e,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oE=A("8EjnK");const uk={kernelName:oc.Round,gradFunc:e=>({x:()=>(0,oE.zerosLike)(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),om=A("1QPqB"),op=A("jZc0w"),og=A("15cGp"),uo=A("ad1of");const uS={kernelName:oc.Rsqrt,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,og.neg)((0,om.div)(e,(0,op.mul)((0,uo.pow)(r,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),uN=A("7NVSX"),op=A("jZc0w"),oE=A("8EjnK");const uT={kernelName:oc.Select,inputsToSave:["condition"],gradFunc:(e,t)=>{let[r]=t;return{// TODO(julianoks): Return null for condition gradient
// when backprop supports it.
condition:()=>(0,od.cast)((0,oE.zerosLike)(r),"float32"),t:()=>(0,op.mul)(e,(0,od.cast)(r,e.dtype)),e:()=>(0,op.mul)(e,(0,od.cast)((0,uN.logicalNot)(r),e.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),lb=A("2PcQK"),lL=A("bRRKf"),op=A("jZc0w"),oy=A("3xp7o"),uI=A("eowEY"),o2=A("l2P14");const uC={kernelName:oc.Selu,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>{let t=(0,lL.greater)(r,(0,oy.scalar)(0)),n=(0,oy.scalar)(uI.SELU_SCALEALPHA),a=(0,oy.scalar)(uI.SELU_SCALE),s=(0,op.mul)(e,a),i=(0,op.mul)((0,op.mul)(e,n),(0,lb.exp)((0,od.cast)(r,"float32")));return(0,o2.where)(t,s,i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),op=A("jZc0w"),oy=A("3xp7o"),ox=A("7kouu");const uE={kernelName:oc.Sigmoid,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,op.mul)(e,(0,op.mul)(r,(0,ox.sub)((0,oy.scalar)(1),r)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oE=A("8EjnK");const uA={kernelName:oc.Sign,gradFunc:e=>({x:()=>(0,oE.zerosLike)(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),uR=A("3BU7G"),op=A("jZc0w");const u_={kernelName:oc.Sin,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,op.mul)((0,uR.cos)((0,od.cast)(r,"float32")),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),uO=A("bTdqT"),op=A("jZc0w");const uP={kernelName:oc.Sinh,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,op.mul)((0,uO.cosh)((0,od.cast)(r,"float32")),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),u$=A("fSZF6"),uD=A("bszZn");const uM={kernelName:oc.Slice,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{begin:a,size:s}=r,i=n.shape,[o,l]=(0,uD.parseSliceParams)(n,a,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>(0,u$.pad)(e,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),op=A("jZc0w"),ox=A("7kouu"),oT=A("9NgTx");const uF={kernelName:oc.Softmax,outputsToSave:[!0],gradFunc:(e,t,r)=>{let[n]=t,{dim:a}=r,s=(0,op.mul)(e,n);return{logits:()=>(0,ox.sub)(s,(0,op.mul)((0,oT.sum)(s,[a],!0),n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),op=A("jZc0w"),uL=A("jvtSq");const uj={kernelName:oc.Softplus,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,op.mul)(e,(0,uL.sigmoid)(r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),uB=A("31sZ7");const uz={kernelName:oc.SpaceToBatchND,gradFunc:(e,t,r)=>{let{blockShape:n,paddings:a}=r;return{x:()=>(0,uB.batchToSpaceND)(e,n,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),uV=A("iTu6j");const uG={kernelName:oc.SplitV,gradFunc:(e,t,r)=>{let{axis:n}=r;return{x:()=>(0,uV.concat)(e,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),om=A("1QPqB"),op=A("jZc0w"),ob=A("iAb3z");const uU={kernelName:oc.Sqrt,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,om.div)(e,(0,op.mul)((0,ob.sqrt)((0,od.cast)(r,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),od=A("inFmq"),op=A("jZc0w");const uW={kernelName:oc.Square,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,op.mul)(e,(0,op.mul)((0,od.cast)(r,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),op=A("jZc0w"),oy=A("3xp7o"),ox=A("7kouu");const uq={kernelName:oc.SquaredDifference,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=(0,oy.scalar)(2);return{a:()=>(0,op.mul)(e,(0,op.mul)(a,(0,ox.sub)(r,n))),b:()=>(0,op.mul)(e,(0,op.mul)(a,(0,ox.sub)(n,r)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oE=A("8EjnK");const uH={kernelName:oc.Step,gradFunc:e=>({x:()=>(0,oE.zerosLike)(e)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oS=A("8BaGO"),og=A("15cGp"),oN=A("4sqA7"),oT=A("9NgTx");const uK={kernelName:oc.Sub,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[r,n]=t,a=oS.assertAndGetBroadcastShape(r.shape,n.shape);return{a:()=>{let t=e,n=oS.getReductionAxes(r.shape,a);return n.length>0&&(t=(0,oT.sum)(t,n)),(0,oN.reshape)(t,r.shape)},b:()=>{let t=e,r=oS.getReductionAxes(n.shape,a);return r.length>0&&(t=(0,oT.sum)(t,r)),(0,oN.reshape)((0,og.neg)(t),n.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),op=A("jZc0w"),l0=A("fOBRA"),oN=A("4sqA7"),oj=A("8cCb2");const uX={kernelName:oc.Sum,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,a=n.shape.slice(),{axis:s}=r,i=(0,oj.parseAxisParam)(s,n.shape);i.forEach(e=>{a[e]=1});let o=(0,oN.reshape)(e,a),l=(0,op.mul)(o,(0,l0.ones)(n.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),uR=A("3BU7G"),om=A("1QPqB"),ov=A("iDd8d");const uZ={kernelName:oc.Tan,inputsToSave:["x"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,om.div)(e,(0,ov.square)((0,uR.cos)(r)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),op=A("jZc0w"),oy=A("3xp7o"),ov=A("iDd8d"),ox=A("7kouu");const uQ={kernelName:oc.Tanh,outputsToSave:[!0],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(0,op.mul)((0,ox.sub)((0,oy.scalar)(1),(0,ov.square)(r)),e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oO=A("hgacW"),l3=A("79KOG"),oE=A("8EjnK");const uY={kernelName:oc.Tile,inputsToSave:["x"],gradFunc:(e,t,r)=>{let[n]=t,{reps:a}=r;return{x:()=>{let t=(0,oE.zerosLike)(n);// TODO(cais): Maybe reduce memory footprint by avoiding repeated
// slicing.
if(1===n.rank)for(let r=0;r<a[0];++r)t=(0,oO.add)(t,(0,l3.slice)(e,[r*n.shape[0]],[n.shape[0]]));else if(2===n.rank)for(let r=0;r<a[0];++r)for(let s=0;s<a[1];++s)t=(0,oO.add)(t,(0,l3.slice)(e,[r*n.shape[0],s*n.shape[1]],[n.shape[0],n.shape[1]]));else if(3===n.rank)for(let r=0;r<a[0];++r)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=(0,oO.add)(t,(0,l3.slice)(e,[r*n.shape[0],s*n.shape[1],i*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(4===n.rank)for(let r=0;r<a[0];++r)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=(0,oO.add)(t,(0,l3.slice)(e,[r*n.shape[0],s*n.shape[1],i*n.shape[2],o*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return t}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),lu=A("kTunp"),ld=A("aDHKy");const uJ={kernelName:oc.Transpose,gradFunc:(e,t,r)=>{let{perm:n}=r,a=lu.getUndoAxesPermutation(n);return{x:()=>(0,ld.transpose)(e,a)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),lE=A("8BrLX");const u0={kernelName:oc.Unpack,gradFunc:(e,t,r)=>{let{axis:n}=r;return{value:()=>(0,lE.stack)(e,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),u1=A("iPDWZ"),u2=A("3qUjU"),oJ=A("l0Zxl"),o1=A("kg1Wp"),u4=A("g5Jt1"),l0=A("fOBRA"),oy=A("3xp7o"),o2=A("l2P14"),oE=A("8EjnK");const u3={kernelName:oc.UnsortedSegmentSum,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[r]=t;return{x:()=>(function(e,t){// Helper function for unsorted segment ops. Gathers params for
    // positive segment ids and gathers 0 for inputs with negative segment id.
    // Mirrors _GatherDropNegatives from tensorflow/python/ops/math_grad.py
    let r=(0,u4.maximum)(t,(0,oE.zerosLike)(t)),n=(0,u2.gather)(e,r),a=(0,oJ.greaterEqual)(t,(0,oy.scalar)(0,"int32")),s=n.rank-a.rank;for(let e=0;e<s;++e)a=(0,u1.expandDims)(a,e+1);a=(0,o1.logicalAnd)(a,(0,l0.ones)(n.shape,"bool"));let i=(0,oE.zerosLike)(n);return(0,o2.where)(a,n,i)})(e,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oc=A("hl418"),oE=A("8EjnK");const u8={kernelName:oc.ZerosLike,gradFunc:e=>({x:()=>(0,oE.zerosLike)(e)})};var u6=A("eky5o");for(const e of[of,ow,ok,oI,oC,oA,oR,o_,oP,o$,oD,oM,oG,oW,oH,oX,oZ,oQ,oY,o4,o3,o6,lt,o9,la,li,ll,lp,lm,lg,uh,ly,lv,lx,lw,lk,lN,lS,lC,lR,lP,l$,lD,lM,lF,lj,lB,lz,lV,lU,lH,lH,lX,lQ,lJ,l1,l2,l4,l8,l5,l7,l9,ut,ur,ua,us,us,ul,uu,up,uf,um,ug,uy,ub,uv,uw,uk,uS,uT,uC,uE,uA,u_,uP,uM,uF,uj,uz,uz,uG,uG,uU,uq,uW,uH,uK,uX,uZ,uQ,uY,uJ,u0,u3,u8])(0,u6.registerGradient)(e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var u5=A("7j49I"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.abs=function(){return this.throwIfDisposed(),(0,u5.abs)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var u9=A("lhgWX"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.acos=function(){return this.throwIfDisposed(),(0,u9.acos)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var ce=A("c0yr6"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.acosh=function(){return this.throwIfDisposed(),(0,ce.acosh)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oO=A("hgacW"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.add=function(e){return this.throwIfDisposed(),(0,oO.add)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ct=A("baxp3"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,ct.all)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cr=A("3cXYO"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,cr.any)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cn=A("jctS7"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,cn.argMax)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ca=A("hNrdr"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,ca.argMin)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oN=A("4sqA7"),u7=A("9jCh7"),oj=A("8cCb2");/**
 * Converts a size-1 `tf.Tensor` to a `tf.Scalar`.
 * @doc {heading: 'Tensors', subheading: 'Classes'}
 */(0,u7.getGlobalTensorClass)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,oj.assert)(1===this.size,()=>"The array must have only 1 element."),(0,oN.reshape)(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var od=A("inFmq"),u7=A("9jCh7");/**
 * Casts a `tf.Tensor` to a specified dtype.
 *
 * @param dtype Data-type to cast the tensor to.
 *
 * @doc {heading: 'Tensors', subheading: 'Classes'}
 */(0,u7.getGlobalTensorClass)().prototype.asType=function(e){return this.throwIfDisposed(),(0,od.cast)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oN=A("4sqA7"),u7=A("9jCh7");/**
 * Converts a `tf.Tensor` to a `tf.Tensor1D`.
 * @doc {heading: 'Tensors', subheading: 'Classes'}
 */(0,u7.getGlobalTensorClass)().prototype.as1D=function(){return this.throwIfDisposed(),(0,oN.reshape)(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oN=A("4sqA7"),u7=A("9jCh7");/**
 * Converts a `tf.Tensor` to a `tf.Tensor2D`.
 *
 * @param rows Number of rows in `tf.Tensor2D`.
 * @param columns Number of columns in `tf.Tensor2D`.
 * @doc {heading: 'Tensors', subheading: 'Classes'}
 */(0,u7.getGlobalTensorClass)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,oN.reshape)(this,[e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oN=A("4sqA7"),u7=A("9jCh7");/**
 * Converts a `tf.Tensor` to a `tf.Tensor3D`.
 *
 * @param rows Number of rows in `tf.Tensor3D`.
 * @param columns Number of columns in `tf.Tensor3D`.
 * @param depth Depth of `tf.Tensor3D`.
 * @doc {heading: 'Tensors', subheading: 'Classes'}
 */(0,u7.getGlobalTensorClass)().prototype.as3D=function(e,t,r){return this.throwIfDisposed(),(0,oN.reshape)(this,[e,t,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oN=A("4sqA7"),u7=A("9jCh7");/**
 * Converts a `tf.Tensor` to a `tf.Tensor4D`.
 *
 * @param rows Number of rows in `tf.Tensor4D`.
 * @param columns Number of columns in `tf.Tensor4D`.
 * @param depth Depth of `tf.Tensor4D`.
 * @param depth2 4th dimension of `tf.Tensor4D`.
 * @doc {heading: 'Tensors', subheading: 'Classes'}
 */(0,u7.getGlobalTensorClass)().prototype.as4D=function(e,t,r,n){return this.throwIfDisposed(),(0,oN.reshape)(this,[e,t,r,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oN=A("4sqA7"),u7=A("9jCh7");/**
 * Converts a `tf.Tensor` to a `tf.Tensor5D`.
 *
 * @param rows Number of rows in `tf.Tensor5D`.
 * @param columns Number of columns in `tf.Tensor5D`.
 * @param depth Depth of `tf.Tensor5D`.
 * @param depth2 4th dimension of `tf.Tensor5D`.
 * @param depth3 5th dimension of 'tf.Tensor5D'
 *
 * @doc {heading: 'Tensors', subheading: 'Classes'}
 */(0,u7.getGlobalTensorClass)().prototype.as5D=function(e,t,r,n,a){return this.throwIfDisposed(),(0,oN.reshape)(this,[e,t,r,n,a])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var cs=A("8ZwsA"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.asin=function(){return this.throwIfDisposed(),(0,cs.asin)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var ci=A("9a9km"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.asinh=function(){return this.throwIfDisposed(),(0,ci.asinh)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var co=A("PYQvk"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.atan=function(){return this.throwIfDisposed(),(0,co.atan)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cl=A("8ikBQ"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,cl.atan2)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var cu=A("5vfVv"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.atanh=function(){return this.throwIfDisposed(),(0,cu.atanh)(this)};var cc=A("j4oHC"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.avgPool=function(e,t,r,n){return this.throwIfDisposed(),(0,cc.avgPool)(this,e,t,r,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var uB=A("31sZ7"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,uB.batchToSpaceND)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cd=A("5ULLz"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.batchNorm=function(e,t,r,n,a){return this.throwIfDisposed(),(0,cd.batchNorm)(this,e,t,r,n,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cp=A("aeB3Z"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,cp.broadcastTo)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var od=A("inFmq"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.cast=function(e){return this.throwIfDisposed(),(0,od.cast)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var ch=A("jDrkY"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.ceil=function(){return this.throwIfDisposed(),(0,ch.ceil)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var cf=A("cOWuO"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,cf.clipByValue)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var uV=A("iTu6j"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof u7.Tensor&&(e=[e]),(0,uV.concat)([this,...e],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cm=A("ebPOp"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.conv1d=function(e,t,r,n,a,s){return this.throwIfDisposed(),(0,cm.conv1d)(this,e,t,r,n,a,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cg=A("5rn1J"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.conv2dTranspose=function(e,t,r,n,a){return this.throwIfDisposed(),(0,cg.conv2dTranspose)(this,e,t,r,n,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var le=A("5Nkm1"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.conv2d=function(e,t,r,n,a,s){return this.throwIfDisposed(),(0,le.conv2d)(this,e,t,r,n,a,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var uR=A("3BU7G"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.cos=function(){return this.throwIfDisposed(),(0,uR.cos)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var uO=A("bTdqT"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.cosh=function(){return this.throwIfDisposed(),(0,uO.cosh)(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ud=A("bhhSS"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.cumprod=function(e,t,r){return this.throwIfDisposed(),(0,ud.cumprod)(this,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var lc=A("7lqwF"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.cumsum=function(e,t,r){return this.throwIfDisposed(),(0,lc.cumsum)(this,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cy=A("lIVEL"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,cy.depthToSpace)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cb=A("182Rc"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.depthwiseConv2d=function(e,t,r,n,a,s){return this.throwIfDisposed(),(0,cb.depthwiseConv2d)(this,e,t,r,n,a,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cv=A("leKzP"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.dilation2d=function(e,t,r,n,a){return this.throwIfDisposed(),(0,cv.dilation2d)(this,e,t,r,n,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cx=A("3pBq5"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,cx.divNoNan)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var om=A("1QPqB"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.div=function(e){return this.throwIfDisposed(),(0,om.div)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cw=A("67T3W"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.dot=function(e){return this.throwIfDisposed(),(0,cw.dot)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ck=A("7UQTl"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.elu=function(){return this.throwIfDisposed(),(0,ck.elu)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var lW=A("7R9HC"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.equal=function(e){return this.throwIfDisposed(),(0,lW.equal)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var cS=A("3q8h0"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.erf=function(){return this.throwIfDisposed(),(0,cS.erf)(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cN=A("4PmMp"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,cN.euclideanNorm)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var lb=A("2PcQK"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.exp=function(){return this.throwIfDisposed(),(0,lb.exp)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var u1=A("iPDWZ"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,u1.expandDims)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var cT=A("cUuFo"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.expm1=function(){return this.throwIfDisposed(),(0,cT.expm1)(this)},/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
A("aosGd");var cI=A("1Lg9u"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.fft=function(){return this.throwIfDisposed(),(0,cI.fft)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oN=A("4sqA7"),u7=A("9jCh7");/**
 * Flatten a Tensor to a 1D array.
 * @doc {heading: 'Tensors', subheading: 'Classes'}
 */(0,u7.getGlobalTensorClass)().prototype.flatten=function(){return this.throwIfDisposed(),(0,oN.reshape)(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var l6=A("4ZUCz"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.floor=function(){return this.throwIfDisposed(),(0,l6.floor)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cC=A("6a2Ft"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,cC.floorDiv)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var u2=A("3qUjU"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.gather=function(e,t,r){return this.throwIfDisposed(),(0,u2.gather)(this,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oJ=A("l0Zxl"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,oJ.greaterEqual)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var lL=A("bRRKf"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.greater=function(e){return this.throwIfDisposed(),(0,lL.greater)(this,e)},/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
A("aosGd");var cE=A("3l9Cr"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.ifft=function(){return this.throwIfDisposed(),(0,cE.ifft)(this)},/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
A("aosGd");var cA=A("hrsi6"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.irfft=function(){return this.throwIfDisposed(),(0,cA.irfft)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var cR=A("eaZNC"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,cR.isFinite)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var c_=A("ahjR1"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.isInf=function(){return this.throwIfDisposed(),(0,c_.isInf)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var cO=A("5FmUe"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,cO.isNaN)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cP=A("3XskU"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,cP.leakyRelu)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var o0=A("7LQ38"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,o0.lessEqual)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var lK=A("jTDVJ"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.less=function(e){return this.throwIfDisposed(),(0,lK.less)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var c$=A("k8D3u"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.localResponseNormalization=function(e,t,r,n){return this.throwIfDisposed(),(0,c$.localResponseNormalization)(this,e,t,r,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var cD=A("7hYeW"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,cD.logSigmoid)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var cM=A("2NPdY"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,cM.logSoftmax)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cF=A("9dGIC"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,cF.logSumExp)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var ui=A("dcoCo"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.log=function(){return this.throwIfDisposed(),(0,ui.log)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var cL=A("5QUXI"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.log1p=function(){return this.throwIfDisposed(),(0,cL.log1p)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var o1=A("kg1Wp"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,o1.logicalAnd)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var uN=A("7NVSX"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,uN.logicalNot)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cj=A("iok2K"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,cj.logicalOr)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cB=A("iIobM"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,cB.logicalXor)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oq=A("aUFou"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.matMul=function(e,t,r){return this.throwIfDisposed(),(0,oq.matMul)(this,e,t,r)};var cz=A("gscJF"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.maxPool=function(e,t,r,n){return this.throwIfDisposed(),(0,cz.maxPool)(this,e,t,r,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cV=A("05cMR"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,cV.max)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var u4=A("g5Jt1"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,u4.maximum)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cG=A("67GCc"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,cG.mean)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cU=A("fySTI"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,cU.min)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cW=A("6V8xR"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,cW.minimum)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cq=A("ejlRR"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,cq.mirrorPad)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cH=A("jR4my"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.mod=function(e){return this.throwIfDisposed(),(0,cH.mod)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var op=A("jZc0w"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.mul=function(e){return this.throwIfDisposed(),(0,op.mul)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var og=A("15cGp"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.neg=function(){return this.throwIfDisposed(),(0,og.neg)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var cK=A("7k6dx"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.norm=function(e,t,r){return this.throwIfDisposed(),(0,cK.norm)(this,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cX=A("8WSnu"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,cX.notEqual)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cZ=A("i3U4j"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.oneHot=function(e,t=1,r=0){return this.throwIfDisposed(),(0,cZ.oneHot)(this,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var cQ=A("67iid"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,cQ.onesLike)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var u$=A("fSZF6"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,u$.pad)(this,e,t)};var cY=A("9PaVS"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.pool=function(e,t,r,n,a,s){return this.throwIfDisposed(),(0,cY.pool)(this,e,t,r,n,a,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var uo=A("ad1of"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.pow=function(e){return this.throwIfDisposed(),(0,uo.pow)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cJ=A("a3pvF"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,cJ.prelu)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var c0=A("bWQC3"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,c0.prod)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var c1=A("3aqJ6"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,c1.reciprocal)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var c2=A("8wbQq"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.relu=function(){return this.throwIfDisposed(),(0,c2.relu)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var c4=A("fvNYr"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.relu6=function(){return this.throwIfDisposed(),(0,c4.relu6)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oN=A("4sqA7"),u7=A("9jCh7");/**
 * Reshapes the tensor into the shape of the provided tensor.
 *
 * @param x The tensor of required shape.
 *
 * @doc {heading: 'Tensors', subheading: 'Classes'}
 */(0,u7.getGlobalTensorClass)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,oN.reshape)(this,e.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oN=A("4sqA7"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,oN.reshape)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var c3=A("6zgXB"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.resizeBilinear=function(e,t,r){return this.throwIfDisposed(),(0,c3.resizeBilinear)(this,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var c8=A("ek5OW"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.resizeNearestNeighbor=function(e,t,r){return this.throwIfDisposed(),(0,c8.resizeNearestNeighbor)(this,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ux=A("6act6"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,ux.reverse)(this,e)},/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
A("aosGd");var c6=A("cafDa"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.rfft=function(){return this.throwIfDisposed(),(0,c6.rfft)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var c5=A("9YKoa"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.round=function(){return this.throwIfDisposed(),(0,c5.round)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var lT=A("5pj7R"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,lT.rsqrt)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var c7=A("b636r"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.selu=function(){return this.throwIfDisposed(),(0,c7.selu)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var c9=A("8uLn4"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.separableConv2d=function(e,t,r,n,a,s){return this.throwIfDisposed(),(0,c9.separableConv2d)(this,e,t,r,n,a,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var uL=A("jvtSq"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,uL.sigmoid)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var de=A("3zBCT"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.sign=function(){return this.throwIfDisposed(),(0,de.sign)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var ls=A("4xqM7"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.sin=function(){return this.throwIfDisposed(),(0,ls.sin)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var lo=A("fAOzm"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.sinh=function(){return this.throwIfDisposed(),(0,lo.sinh)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var l3=A("79KOG"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,l3.slice)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var dt=A("dnEu5"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,dt.softmax)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var dr=A("4Udpd"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.softplus=function(){return this.throwIfDisposed(),(0,dr.softplus)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oK=A("ePI8Y"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,oK.spaceToBatchND)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var o8=A("9fmAX"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,o8.split)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var ob=A("iAb3z"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,ob.sqrt)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var ov=A("iDd8d"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.square=function(){return this.throwIfDisposed(),(0,ov.square)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var dn=A("ay2Nw"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,dn.squaredDifference)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var da=A("kX8Hd"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,da.squeeze)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var lE=A("8BrLX"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.stack=function(e,t){this.throwIfDisposed();let r=e instanceof u7.Tensor?[this,e]:[this,...e];return(0,lE.stack)(r,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var oh=A("lWdx1"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.step=function(e){return this.throwIfDisposed(),(0,oh.step)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var ds=A("dqRnt"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.stridedSlice=function(e,t,r,n,a,s,i,o){return this.throwIfDisposed(),(0,ds.stridedSlice)(this,e,t,r,n,a,s,i,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ox=A("7kouu"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.sub=function(e){return this.throwIfDisposed(),(0,ox.sub)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var oT=A("9NgTx"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,oT.sum)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var di=A("l8Hok"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.tan=function(){return this.throwIfDisposed(),(0,di.tan)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var dl=A("etcYL"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.tanh=function(){return this.throwIfDisposed(),(0,dl.tanh)(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var lI=A("61ay4"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.tile=function(e){return this.throwIfDisposed(),(0,lI.tile)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var od=A("inFmq"),u7=A("9jCh7");/**
 * Casts the array to type `bool`
 *
 * @doc {heading: 'Tensors', subheading: 'Classes'}
 */(0,u7.getGlobalTensorClass)().prototype.toBool=function(){return this.throwIfDisposed(),(0,od.cast)(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var od=A("inFmq"),u7=A("9jCh7");/**
 * Casts the array to type `float32`
 *
 * @doc {heading: 'Tensors', subheading: 'Classes'}
 */(0,u7.getGlobalTensorClass)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,od.cast)(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var od=A("inFmq"),u7=A("9jCh7");/**
 * Casts the array to type `int32`
 *
 * @doc {heading: 'Tensors', subheading: 'Classes'}
 */(0,u7.getGlobalTensorClass)().prototype.toInt=function(){return this.throwIfDisposed(),(0,od.cast)(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var du=A("cRAvI"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,du.topk)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ld=A("aDHKy"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,ld.transpose)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var dc=A("aEpp6"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.unique=function(e){return this.throwIfDisposed(),(0,dc.unique)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var lA=A("djGEF"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,lA.unsortedSegmentSum)(this,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var un=A("gBOC6"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,un.unstack)(this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var o2=A("l2P14"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,o2.where)(e,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// TODO update import path once op is modularized.
var oE=A("8EjnK"),u7=A("9jCh7");(0,u7.getGlobalTensorClass)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,oE.zerosLike)(this)},/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * Executor: Evaluates SymbolicTensor based on feeds.
 */A("i64bB");var od=A("inFmq"),dp=A("c2DT1"),dh=A("jjNRA");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * Explicit error types.
 *
 * See the following link for more information about why the code includes
 * calls to setPrototypeOf:
 *
 * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
 */// tslint:enable
/**
 * Equivalent of Python's AttributeError.
 */class df extends Error{constructor(e){super(e),// Set the prototype explicitly.
Object.setPrototypeOf(this,df.prototype)}}class dm extends Error{constructor(e){super(e),// Set the prototype explicitly.
Object.setPrototypeOf(this,dm.prototype)}}class dg extends Error{constructor(e){super(e),// Set the prototype explicitly.
Object.setPrototypeOf(this,dg.prototype)}}class dy extends Error{constructor(e){super(e),// Set the prototype explicitly.
Object.setPrototypeOf(this,dy.prototype)}}class db extends Error{constructor(e){super(e),// Set the prototype explicitly.
Object.setPrototypeOf(this,db.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * LruCache: A mapping from the String to T. If the number of the entries is
 * exceeding the `maxEntries`, the LruCache will delete the least recently
 * used entry.
 */class dv{constructor(e){this.maxEntries=e||100,this.cache=new Map}/**
     * Get the entry for the key and mark it as used recently.
     */get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}/**
     * Put the entry into the cache. If the key already existed, mark the key as
     * used recently.
     */put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}/**
     * Get the MaxEntries of the cache.
     */getMaxEntries(){return this.maxEntries}/**
     * Set the MaxEntries of the cache. If the maxEntries is decreased, reduce
     * entries in the cache.
     */setMaxEntries(e){if(e<0)throw Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//* Original source: utils/generic_utils.py */A("i64bB");var dh=A("jjNRA");function dx(e,t){if(Array.isArray(e)){// tslint:disable-next-line:no-any
let r=[];for(let n=0;n<t;n++)r=r.concat(e);return r}{let r=Array(t);return r.fill(e),r}}function dw(e,t){if(!e)throw new db(t)}function dk(e,t){let r=0;for(let n of e)n===t&&r++;return r}function dS(e){return 1===e.length?e[0]:e}function dN(e){return Array.isArray(e)?e:[e]}function dT(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2"),r=t.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return(/*
     If the class is private the name starts with "_" which is not secure
     for creating scopes. We prefix the name with "private" in this case.
     */"_"!==r[0]?r:"private"+r)}function dI(e){return(// quick return for empty string or single character strings
e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase()))}// tslint:disable-next-line:no-any
let dC={};function dE(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function dA(e,t={},r={},n="object",a=!1){// tslint:enable
if("string"==typeof e){let a;if(e in r)a=r[e];else if(e in dC)a=dC[e];else if(null==(a=t[e]))throw new dg(`Unknown ${n}: ${e}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{let s,i;if(null==e.className||null==e.config)throw new dg(`${n}: Improper config format: ${JSON.stringify(e)}.
'className' and 'config' must set.`);let o=e.className;if(o in r?[s,i]=r[o]:o in dC?[s,i]=dC.className:o in t&&([s,i]=t[o]),null==s)throw new dg(`Unknown ${n}: ${o}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=i){// Porting notes: Instead of checking to see whether fromConfig accepts
// customObjects, we create a customObjects dictionary and tack it on to
// config['config'] as config['config'].customObjects. Objects can use it,
// if they want.
// tslint:disable-next-line:no-any
let t={};for(let e of Object.keys(dC))t[e]=dC[e];for(let e of Object.keys(r))t[e]=r[e];// Add the customObjects to config
let n=e.config;n.customObjects=t;let o=Object.assign({},dC);for(let e of Object.keys(r))dC[e]=r[e];!/**
 * Replace ndarray-style scalar objects in serialization objects with numbers.
 *
 * Background: In some versions of tf.keras, certain scalar values in the HDF5
 * model save file can be serialized as: `{'type': 'ndarray', 'value': num}`,
 * where in `num` is a plain number. This method converts such serialization
 * to a `number`.
 *
 * @param config The keras-format serialization object to be processed
 *   (in place).
 */function e(t){if(null!=t&&"object"==typeof t){if(Array.isArray(t))t.forEach(t=>e(t));else{let r=Object.keys(t);for(let n of r){let r=t[n];null!=r&&"object"==typeof r&&(Array.isArray(r)||"ndarray"!==r.type||"number"!=typeof r.value?e(r):t[n]=r.value)}}}}(e.config);let l=i(s,e.config,r,a);return dC=Object.assign({},o),l}{// Then `cls` may be a function returning a class.
// In this case by convention `config` holds
// the kwargs of the function.
let t=Object.assign({},dC);for(let e of Object.keys(r))dC[e]=r[e];// In python this is **config['config'], for tfjs-layers we require
// classes that use this fall-through construction method to take
// a config interface that mimics the expansion of named parameters.
let n=new s(e.config);return dC=Object.assign({},t),n}}}function dR(e,t){return -1*(e<t?-1:e>t?1:0)}function d_(e){if(null==e)return e;let t=[];// TODO(cais): Maybe improve performance by sorting.
for(let r of e)-1===t.indexOf(r)&&t.push(r);return t}function dO(e,t,r){if(null!=r&&0>e.indexOf(r))throw new dg(`${r} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function dP(e,t,r=0,n=1/0){return dw(r>=0),dw(n>=r),Array.isArray(e)&&e.length>=r&&e.length<=n&&e.every(e=>typeof e===t)}function d$(e,t){Array.isArray(e)?(dh.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((e,r)=>d$(e,`element ${r+1} of ${t}`))):dh.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${function e(t){return null===t?"null":Array.isArray(t)?"["+t.map(t=>e(t)).join(",")+"]":"string"==typeof t?`"${t}"`:`${t}`}(e)}.`)}function dD(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */A("i64bB");var dM=A("5IZxH");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * Utilities related to persistent state in the backend.
 *//**
 * An ID to track `tf.SymbolicTensor`s and derived classes.
 * Required in different places in engine/topology.ts to identify unique
 * tensors.
 */let dF=0;const dL={};function dj(e=""){return e in dL||(dL[e]=0),dL[e]+=1,e+dL[e].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//* Original source: keras/engine/topology.py */A("i64bB");var dp=A("c2DT1"),dh=A("jjNRA"),dM=A("5IZxH");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * Common functions for TensorFlow.js Layers.
 *//**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const dB=["channelsFirst","channelsLast"],dz=["nearest","bilinear"],dV=["valid","same","causal"],dG=["max","avg"],dU=["sum","mul","concat","ave"],dW=new Map;function dq(e){dO(dB,"DataFormat",e)}function dH(e){dO(dV,"PaddingMode",e)}function dK(e){dO(dG,"PoolMode",e)}const dX=[];function dZ(e,t){dX.push(e);try{let e=t();return dX.pop(),e}catch(e){throw dX.pop(),e}}function dQ(e){if(!d0(e))throw Error("Not a valid tensor name: '"+e+"'");return(0===dX.length?"":dX.join("/")+"/")+e}function dY(e){if(!d0(e))throw Error("Not a valid tensor name: '"+e+"'");dW.has(e)||dW.set(e,0);let t=dW.get(e);if(dW.set(e,dW.get(e)+1),!(t>0))return e;{let r=`${e}_${t}`;return(// Mark the composed name as used in case someone wants
// to call getUniqueTensorName("name_1").
dW.set(r,1),r)}}const dJ=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function d0(e){return!!e.match(dJ)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */A("i64bB");var dM=A("5IZxH"),ue=A("hxi4c"),l0=A("fOBRA"),dp=A("c2DT1"),op=A("jZc0w"),oy=A("3xp7o"),d1=A("j8sic"),d2=A("dE1HO"),d4=A("9gIZb"),dh=A("jjNRA"),d3=A("aosGd");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * deeplearn.js backend.
 */A("i64bB");var dp=A("c2DT1"),od=A("inFmq"),oN=A("4sqA7"),d8=A("5vfHb"),d6=A("gKBEV"),d5=A("22oMq"),d7=A("8hEpb"),l3=A("79KOG"),uV=A("iTu6j"),d9=A("4TU82"),pe=A("7PZdE"),pt=A("ljqPW"),pr=A("9Grxx"),lI=A("61ay4"),pn=A("h2Vnz"),pa=A("jDZRN"),ld=A("aDHKy"),oE=A("8EjnK"),cQ=A("67iid"),o2=A("l2P14"),lW=A("7R9HC"),lL=A("bRRKf"),op=A("jZc0w"),cZ=A("i3U4j"),ps=A("lalFM"),u2=A("3qUjU"),oy=A("3xp7o"),uo=A("ad1of"),oO=A("hgacW"),ck=A("7UQTl"),om=A("1QPqB"),u5=A("7j49I"),pi=A("5kLyC"),cf=A("cOWuO");function po(e,t,r){null==t&&(t=0),null==r&&(r=e.length);let n=1;for(let a=t;a<r;++a)n*=e[a];return n}function pl(e){// same behavior as tf.min()
if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let r=0;r<e.length;r++){let n=e[r];n<t&&(t=n)}return t}function pu(e){// same behavior as tf.max()
if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let r=0;r<e.length;r++){let n=e[r];n>t&&(t=n)}return t}function pc(e,t){if(t<e)throw new dg(`end (${t}) < begin (${e}) is forbidden.`);let r=[];for(let n=e;n<t;++n)r.push(n);return r}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */A("i64bB");var dp=A("c2DT1");function pd(){return null==i&&(i=(0,dp.backend)().epsilon()),i}function pp(){return"channelsLast"}function ph(e,t){return od.cast(e,t)}function pf(e,t=-1){let r=e.shape.slice();return t<0&&(t=r.length+t+1),r.splice(t,0,1),oN.reshape(e,r)}function pm(e,t,r){return(0,dp.tidy)(()=>{switch(e.rank){case 1:return d8.slice1d(e,t,r);case 2:return d6.slice2d(e,[t,0],[r,e.shape[1]]);case 3:return d5.slice3d(e,[t,0,0],[r,e.shape[1],e.shape[2]]);case 4:return d7.slice4d(e,[t,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3]]);case 5:return l3.slice(e,[t,0,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return l3.slice(e,[t,0,0,0,0,0],[r,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new dg(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function pg(e,t,r){return(0,dp.tidy)(()=>{switch(e.rank){case 1:return d8.slice1d(e,t,r);case 2:return d6.slice2d(e,[0,t],[e.shape[0],r]);case 3:return d5.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],r]);case 4:return d7.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],r]);default:throw new dg(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function py(e,t,r,n){return(0,dp.tidy)(()=>{switch(e.rank){case 1:return d8.slice1d(e,t,r);case 2:switch(n){case 1:return pm(e,t,r);case 2:return pg(e,t,r);default:throw new dg(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return pm(e,t,r);case 2:return d5.slice3d(e,[0,t,0],[e.shape[0],r,e.shape[2]]);case 3:return pg(e,t,r);default:throw new dg(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return pm(e,t,r);case 2:return d7.slice4d(e,[0,t,0,0],[e.shape[0],r,e.shape[2],e.shape[3]]);case 3:return d7.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],r,e.shape[3]]);case 4:return pg(e,t,r);default:throw new dg(`The axis is not within the rank of the tensor ${n}`)}default:throw new dg(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function pb(e,t=-1){let r;// Porting Note: Sparse concat is not supported yet.
return t<0&&(t=0!==(r=e[0].rank)?r:0),t===e[0].rank&&//   in the interval [-rank, rank).
(t=-1),uV.concat(e,t)}function pv(e,t){switch(e.rank){case 1:return d9.concat1d([e,t]);case 2:return pe.concat2d([e,t],0);case 3:return pt.concat3d([e,t],0);case 4:return pr.concat4d([e,t],0);default:throw new dg(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function px(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new dg(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return lI.tile(e,t)}function pw(e,t=0,r=1,n,a){return pn.randomNormal(e,t,r,n,a)}function pk(e,t,r,n){if(e.rank<2||t.rank<2)throw new dy(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],n=t.shape.slice(-2)[0];if(r!==n)throw new dy(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}// Handle basic 2D x 2D case.
if(2===e.rank&&2===t.rank)// tfc.fused.matMul only fuses certain activation functions. Unsupported
// activation functions are treated as 'linear' activations, which is
// equivalent to a no-op.
return pa.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:n?pT(e.rank,n,pp()):null,activation:r});{// Reshape x into the analogous 2D Tensor.
let a=e.shape.slice(),s=a.pop();// Holds all but the last dim of x.
e=oN.reshape(e,[-1,s]);// Reshape y into the analogous 2D Tensor, and keep track of the
// required dimensions to reproduce the output shape.
let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},(e,r)=>0===r?t.rank-2:r<=t.rank-2?r-1:r);t=oN.reshape(ld.transpose(t,c),[l,-1]);// Multiply x and y as 2D Tensors, and then reshape back to original.
let d=[...a,...u];return oN.reshape(pa.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:n?pT(e.rank,n,pp()):null,activation:r}),d)}}function pS(e,t,r){return(0,dp.tidy)(()=>(t=Array.isArray(t)?(0,ps.tensor1d)(t,"int32"):od.cast(t,"int32"),u2.gather(e,t,r)))}function pN(e){return op.mul(e,e)}/**
 * Reshapes bias tensor according to rank of x.
 */function pT(e,t,r){let n=t.shape;if(1!==t.rank&&t.rank!==e)throw new dg(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===r)return 1===n.length?oN.reshape(t,[1,n[0],1,1,1]):oN.reshape(t,[1,n[3],n[0],n[1],n[2]]);if("channelsLast"===r)return 1===n.length?oN.reshape(t,[1,1,1,1,n[0]]):oN.reshape(t,[1].concat(n))}else if(4===e){if("channelsFirst"===r)return 1===n.length?oN.reshape(t,[1,n[0],1,1]):oN.reshape(t,[1,n[2],n[0],n[1]]);if("channelsLast"===r)return 1===n.length?oN.reshape(t,[1,1,1,n[0]]):oN.reshape(t,[1].concat(n))}else if(3===e){if("channelsFirst"===r)return 1===n.length?oN.reshape(t,[1,n[0],1]):oN.reshape(t,[1,n[1],n[0]]);if("channelsLast"===r)return 1===n.length?oN.reshape(t,[1,1,n[0]]):oN.reshape(t,[1].concat(n))}else if(e<3)return t;throw new dg(`Unsupported input rank by biasAdd: ${t.rank}`)}function pI(e,t,r){return(0,dp.tidy)(()=>(null==r&&(r=pp()),dq(r),oO.add(e,pT(e.rank,t,r))))}function pC(e,t,r,n){return(0,dp.tidy)(()=>pi.dropout(e,t,r,n))}function pE(e,t,r=!1){return r?e():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const pA=["fanIn","fanOut","fanAvg"],pR=["normal","uniform","truncatedNormal"];class p_ extends dM.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class pO extends p_{apply(e,t){return(0,ue.zeros)(e,t)}}/** @nocollapse */pO.className="Zeros",dM.registerClass(pO);class pP extends p_{apply(e,t){return(0,l0.ones)(e,t)}}/** @nocollapse */pP.className="Ones",dM.registerClass(pP);class p$ extends p_{constructor(e){if(super(),"object"!=typeof e)throw new dg(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new dg(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,dp.tidy)(()=>(0,op.mul)((0,oy.scalar)(this.value),(0,l0.ones)(e,t)))}getConfig(){return{value:this.value}}}/** @nocollapse */p$.className="Constant",dM.registerClass(p$);class pD extends p_{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,d1.randomUniform)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}/** @nocollapse */pD.className="RandomUniform",dM.registerClass(pD);class pM extends p_{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new dy(`randomNormal does not support dType ${t}.`);return pw(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}/** @nocollapse */pM.className="RandomNormal",dM.registerClass(pM);class pF extends p_{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new dy(`truncatedNormal does not support dType ${t}.`);return(0,d2.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}/** @nocollapse */pF.className="TruncatedNormal",dM.registerClass(pF);class pL extends p_{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,dp.tidy)(()=>{if(2===e.length&&e[0]===e[1])return(0,op.mul)(this.gain,(0,d4.eye)(e[0]));throw new dg("Identity matrix initializer can only be used for 2D square matrices.")})}getConfig(){return{gain:this.gain}}}/** @nocollapse */pL.className="Identity",dM.registerClass(pL);class pj extends p_{/**
     * Constructor of VarianceScaling.
     * @throws ValueError for invalid value in scale.
     */constructor(e){if(super(),e.scale<0)throw new dg(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,dO(pA,"FanMode",this.mode),this.distribution=null==e.distribution?"normal":e.distribution,dO(pR,"Distribution",this.distribution),this.seed=e.seed}apply(e,t){let r=/**
 * Computes the number of input and output units for a weight shape.
 * @param shape Shape of weight.
 * @param dataFormat data format to use for convolution kernels.
 *   Note that all kernels in Keras are standardized on the
 *   CHANNEL_LAST ordering (even when inputs are set to CHANNEL_FIRST).
 * @return An length-2 array: fanIn, fanOut.
 */function(e,t="channelsLast"){let r,n;if(dq(t),2===e.length)r=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=po(e,2);r=e[1]*t,n=e[0]*t}else if("channelsLast"===t){let t=po(e,0,e.length-2);r=e[e.length-2]*t,n=e[e.length-1]*t}}else{let t=po(e);r=Math.sqrt(t),n=Math.sqrt(t)}return[r,n]}(e),n=r[0],a=r[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,n):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(n+a)/2),"normal"===this.distribution){let r=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new dy(`${this.getClassName()} does not support dType ${t}.`);return(0,d2.truncatedNormal)(e,0,r,t,this.seed)}{let r=Math.sqrt(3*s);return(0,d1.randomUniform)(e,-r,r,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}/** @nocollapse */pj.className="VarianceScaling",dM.registerClass(pj);class pB extends pj{/**
     * Constructor of GlorotUniform
     * @param scale
     * @param mode
     * @param distribution
     * @param seed
     */constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){// In Python Keras, GlorotUniform is not a class, but a helper method
// that creates a VarianceScaling object. Use 'VarianceScaling' as
// class name to be compatible with that.
return pj.className}}/** @nocollapse */pB.className="GlorotUniform",dM.registerClass(pB);class pz extends pj{/**
     * Constructor of GlorotNormal.
     * @param scale
     * @param mode
     * @param distribution
     * @param seed
     */constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){// In Python Keras, GlorotNormal is not a class, but a helper method
// that creates a VarianceScaling object. Use 'VarianceScaling' as
// class name to be compatible with that.
return pj.className}}/** @nocollapse */pz.className="GlorotNormal",dM.registerClass(pz);class pV extends pj{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){// In Python Keras, HeNormal is not a class, but a helper method
// that creates a VarianceScaling object. Use 'VarianceScaling' as
// class name to be compatible with that.
return pj.className}}/** @nocollapse */pV.className="HeNormal",dM.registerClass(pV);class pG extends pj{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){// In Python Keras, HeUniform is not a class, but a helper method
// that creates a VarianceScaling object. Use 'VarianceScaling' as
// class name to be compatible with that.
return pj.className}}/** @nocollapse */pG.className="HeUniform",dM.registerClass(pG);class pU extends pj{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){// In Python Keras, LeCunNormal is not a class, but a helper method
// that creates a VarianceScaling object. Use 'VarianceScaling' as
// class name to be compatible with that.
return pj.className}}/** @nocollapse */pU.className="LeCunNormal",dM.registerClass(pU);class pW extends pj{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){// In Python Keras, LeCunUniform is not a class, but a helper method
// that creates a VarianceScaling object. Use 'VarianceScaling' as
// class name to be compatible with that.
return pj.className}}/** @nocollapse */pW.className="LeCunUniform",dM.registerClass(pW);class pq extends p_{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,dp.tidy)(()=>{if(e.length<2)throw new dy("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw TypeError(`Unsupported data type ${t}.`);// flatten the input shape with the last dimension remaining its
// original shape so it works for conv2d
let r=dh.sizeFromShape(e.slice(0,-1)),n=e[e.length-1],a=r*n;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);let s=[Math.max(n,r),Math.min(n,r)],i=pw(s,0,1,t,this.seed),o=(0,d3.linalg).qr(i,!1),l=o[0],u=o[1],c=u.flatten().stridedSlice([0],[Math.min(n,r)*Math.min(n,r)],[Math.min(n,r)+1]);return l=(0,op.mul)(l,c.sign()),r<n&&(l=l.transpose()),(0,op.mul)((0,oy.scalar)(this.gain),l.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}/** @nocollapse */pq.className="Orthogonal",dM.registerClass(pq);const pH={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function pK(e,t={}){return dA(e,dM.SerializationMap.getMap().classNameMap,t,"initializer")}function pX(e){if("string"==typeof e){let t=e in pH?pH[e]:e;/* We have four 'helper' classes for common initializers that
        all get serialized as 'VarianceScaling' and shouldn't go through
        the deserializeInitializer pathway. */if("GlorotNormal"===t)return new pz;{if("GlorotUniform"===t)return new pB;if("HeNormal"===t)return new pV;if("HeUniform"===t)return new pG;if("LeCunNormal"===t)return new pU;if("LeCunUniform"===t)return new pW;let e={};return e.className=t,e.config={},pK(e)}}return e instanceof p_?e:pK(e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function pZ(e){return Array.isArray(e)&&Array.isArray(e[0])}function pQ(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function pY(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new dg(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function pJ(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))return e;if(1===e.length)return e[0];throw new dg(`Expected exactly 1 Shape; got ${e.length}`)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * Count the elements in an Array of LayerVariables.
 *
 * @param weights: The LayerVariables of which the constituent numbers are to
 *   be counted.
 * @returns A count of the elements in all the LayerVariables
 */function p0(e){let t=0;for(let r of e)0===r.shape.length?t+=1:t+=r.shape.reduce((e,t)=>e*t);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */A("i64bB");var p1=A("eoViB"),ue=A("hxi4c"),oE=A("8EjnK"),l0=A("fOBRA"),cQ=A("67iid"),d4=A("9gIZb"),d1=A("j8sic"),d2=A("dE1HO"),pn=A("h2Vnz"),oO=A("hgacW"),ox=A("7kouu");A("92fpA");const p2="Variable";class p4{/**
     * Construct Variable from a `tf.Tensor`.
     *
     * If not explicitly named, the Variable will be given a name with the
     * prefix 'Variable'. Variable names are unique. In the case of name
     * collision, suffixies '_<num>' will be added to the name.
     *
     * @param val Initial value of the Variable.
     * @param name Name of the variable. If `null` or `undefined` is provided, it
     *   will default a name with the prefix 'Variable'.
     * @param constraint Optional, projection function to be applied to the
     * variable after optimize updates
     * @throws ValueError if `name` is `null` or `undefined`.
     */constructor(e,t="float32",r=p2,n=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=dF++,r=null==r?p2:r,this.originalName=dQ(r),this.name=dY(this.originalName),this.trainable_=n,this.constraint=a,this.val=p1.variable(e,this.trainable_,this.name,this.dtype)}/**
     * Get a snapshot of the Variable's value.
     *
     * The returned value is a snapshot of the Variable's value at the time of
     * the invocation. Future mutations in the value of the tensor will only
     * be reflected by future calls to this method.
     */read(){return this.assertNotDisposed(),this.val}/**
     * Update the value of the Variable.
     *
     * @param newVal: The new value to update to. Must be consistent with the
     *   dtype and shape of the Variable.
     * @return This Variable.
     */write(e){return(// TODO(cais): Once  TF.js Core supports Tensor.dtype, check dtype match.
this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this)}/**
     * Dispose this LayersVariable instance from memory.
     */dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function p3(e){return e.map(e=>e.read())}function p8(e){e.forEach(e=>{let t=e[0];t.write(e[1])})}class p6{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class p5{/**
     *
     * @param dtype
     * @param shape
     * @param sourceLayer The Layer that produced this symbolic tensor.
     * @param inputs The inputs passed to sourceLayer's __call__() method.
     * @param nodeIndex
     * @param tensorIndex
     * @param callArgs The keyword arguments passed to the __call__() method.
     * @param name
     * @param outputTensorIndex The index of this tensor in the list of outputs
     *   returned by apply().
     */constructor(e,t,r,n,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=r,this.inputs=n,this.callArgs=a,this.outputTensorIndex=i,this.id=dF++,null!=s&&(this.originalName=dQ(s),this.name=dY(this.originalName)),this.rank=t.length}}let p7=0;class p9{constructor(e,t){// Add nodes to all layers involved.
for(let r of(this.callArgs=t,this.id=p7++,/*
          Layer instance (NOT a list).
          this is the layer that takes a list of input tensors
          and turns them into a list of output tensors.
          the current node will be added to
          the inboundNodes of outboundLayer.
        */this.outboundLayer=e.outboundLayer,/*
            The following 3 properties describe where
            the input tensors come from: which layers,
            and for each layer, which node and which
            tensor output of each node.
        */// List of layer instances.
this.inboundLayers=e.inboundLayers,// List of integers, 1:1 mapping with inboundLayers.
this.nodeIndices=e.nodeIndices,// List of integers, 1:1 mapping with inboundLayers.
this.tensorIndices=e.tensorIndices,/*
            Following 2 properties:
            tensor inputs and outputs of outboundLayer.
        */// List of tensors. 1:1 mapping with inboundLayers.
this.inputTensors=e.inputTensors,// List of tensors, created by outboundLayer.call().
this.outputTensors=e.outputTensors,/*
            Following 2 properties: input and output masks.
            List of tensors, 1:1 mapping with inputTensor.
        */this.inputMasks=e.inputMasks,// List of tensors, created by outboundLayer.computeMask().
this.outputMasks=e.outputMasks,// Following 2 properties: input and output shapes.
// List of shape tuples, shapes of inputTensors.
this.inputShapes=e.inputShapes,// List of shape tuples, shapes of outputTensors.
this.outputShapes=e.outputShapes,e.inboundLayers))null!=r&&r.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let he=0;class ht extends dM.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],// Porting Notes: PyKeras does not have this property in this base Layer
//   class. Instead lets Layer subclass set it dynamically and checks the
//   value with `hasattr`. In tfjs-layers, we let this be a member of this
//   base class.
this._stateful=!1,this.id=he++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,// These properties will be set upon call of this.build()
this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,/*
          These lists will be filled via successive calls
          to this.addInboundNode().
         */this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=dT(e)+"_"+dj(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let r=null;null!=e.batchSize&&(r=e.batchSize),t=[r].concat(e.inputShape)}this.batchInputShape=t;// Set dtype.
let r=e.dtype;null==r&&(r=e.inputDType),null==r&&(r="float32"),this.dtype=r}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,// The value of `_refCount` is initialized to null. When the layer is used
// in a symbolic way for the first time, it will be set to 1.
this._refCount=null,this.fastWeightInitDuringBuild=!1}/**
     * Converts a layer and its index to a unique (immutable type) name.
     * This function is used internally with `this.containerNodes`.
     * @param layer The layer.
     * @param nodeIndex The layer's position (e.g. via enumerate) in a list of
     *   nodes.
     *
     * @returns The unique name.
     */static nodeKey(e,t){return e.name+"_ib-"+t.toString()}/**
     * Returns this.inboundNode at index nodeIndex.
     *
     * Porting note: This is a replacement for _get_node_attribute_at_index()
     * @param nodeIndex
     * @param attrName The name of the attribute related to request for this node.
     */getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new dm(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new dg(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}/**
     * Retrieves the input tensor(s) of a layer at a given node.
     *
     * @param nodeIndex Integer, index of the node from which to retrieve the
     *   attribute. E.g. `nodeIndex=0` will correspond to the first time the layer
     *   was called.
     *
     * @return A tensor (or list of tensors if the layer has multiple inputs).
     */getInputAt(e){return dS(this.getNodeAtIndex(e,"input").inputTensors)}/**
     * Retrieves the output tensor(s) of a layer at a given node.
     *
     * @param nodeIndex Integer, index of the node from which to retrieve the
     *   attribute. E.g. `nodeIndex=0` will correspond to the first time the layer
     *   was called.
     *
     * @return A tensor (or list of tensors if the layer has multiple outputs).
     */getOutputAt(e){return dS(this.getNodeAtIndex(e,"output").outputTensors)}// Properties
/**
     * Retrieves the input tensor(s) of a layer.
     *
     * Only applicable if the layer has exactly one inbound node,
     * i.e. if it is connected to one incoming layer.
     *
     * @return Input tensor or list of input tensors.
     *
     * @exception AttributeError if the layer is connected to more than one
     *   incoming layers.
     */get input(){if(this.inboundNodes.length>1)throw new df(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new df(`Layer ${this.name} is not connected, no input to return.`);return dS(this.getNodeAtIndex(0,"input").inputTensors)}/**
     * Retrieves the output tensor(s) of a layer.
     *
     * Only applicable if the layer has exactly one inbound node,
     * i.e. if it is connected to one incoming layer.
     *
     * @return Output tensor or list of output tensors.
     *
     * @exception AttributeError if the layer is connected to more than one
     *   incoming layers.
     */get output(){if(0===this.inboundNodes.length)throw new df(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new df(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return dS(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}/**
     * Retrieves the Layer's current loss values.
     *
     * Used for regularizers during training.
     */calculateLosses(){// Porting Node: This is an augmentation to Layer.loss in PyKeras.
//   In PyKeras, Layer.loss returns symbolic tensors. Here a concrete
//   Tensor (specifically Scalar) values are returned. This is due to the
//   imperative backend.
return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}/**
     * The concatenation of the lists trainableWeights and nonTrainableWeights
     * (in this order).
     */get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}/**
     * Reset the states of the layer.
     *
     * This method of the base Layer class is essentially a no-op.
     * Subclasses that are stateful (e.g., stateful RNNs) should override this
     * method.
     */resetStates(){if(!this.stateful)throw Error("Cannot call the resetStates() method of a non-stateful Layer object.")}/**
     * Checks compatibility between the layer and provided inputs.
     *
     * This checks that the tensor(s) `input`
     * verify the input assumptions of the layer
     * (if any). If not, exceptions are raised.
     *
     * @param inputs Input tensor or list of input tensors.
     *
     * @exception ValueError in case of mismatch between
     *   the provided inputs and the expectations of the layer.
     */assertInputCompatibility(e){let t=dN(e);if(null==this.inputSpec||0===this.inputSpec.length)return;let r=dN(this.inputSpec);if(t.length!==r.length)throw new dg(`Layer ${this.name} expects ${r.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){let n=t[e],a=r[e];if(null==a)continue;// Check ndim.
let s=n.rank;if(null!=a.ndim&&s!==a.ndim)throw new dg(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new dg(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new dg(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);// Check dtype.
if(null!=a.dtype&&n.dtype!==a.dtype)throw new dg(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${n.dtype}.`);// Check specific shape axes.
if(a.axes){let t=n.shape;for(let r in a.axes){let n=Number(r),s=a.axes[r],i=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(i))throw new dg(`Input ${e} is incompatible with layer ${this.name}: expected axis ${n} of input shape to have value ${s} but got shape ${t}.`)}}// Check shape.
if(null!=a.shape)for(let t=0;t<a.shape.length;++t){let r=a.shape[t],s=n.shape[t];if(null!=r&&null!=s&&r!==s)throw new dg(`Input ${e} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${n.shape}.`)}}}/**
     * This is where the layer's logic lives.
     *
     * @param inputs Input tensor, or list/tuple of input tensors.
     * @param kwargs Additional keyword arguments.
     *
     * @return A tensor or list/tuple of tensors.
     */call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}/**
     * Set call hook.
     * This is currently used for testing only.
     * @param callHook
     */setCallHook(e){this._callHook=e}/**
     * Clear call hook.
     * This is currently used for testing only.
     */clearCallHook(){this._callHook=null}/**
     * Builds or executes a `Layer`'s logic.
     *
     * When called with `tf.Tensor`(s), execute the `Layer`'s computation and
     * return Tensor(s). For example:
     *
     * ```js
     * const denseLayer = tf.layers.dense({
     *   units: 1,
     *   kernelInitializer: 'zeros',
     *   useBias: false
     * });
     *
     * // Invoke the layer's apply() method with a `tf.Tensor` (with concrete
     * // numeric values).
     * const input = tf.ones([2, 2]);
     * const output = denseLayer.apply(input);
     *
     * // The output's value is expected to be [[0], [0]], due to the fact that
     * // the dense layer has a kernel initialized to all-zeros and does not have
     * // a bias.
     * output.print();
     * ```
     *
     * When called with `tf.SymbolicTensor`(s), this will prepare the layer for
     * future execution.  This entails internal book-keeping on shapes of
     * expected Tensors, wiring layers together, and initializing weights.
     *
     * Calling `apply` with `tf.SymbolicTensor`s are typically used during the
     * building of non-`tf.Sequential` models. For example:
     *
     * ```js
     * const flattenLayer = tf.layers.flatten();
     * const denseLayer = tf.layers.dense({units: 1});
     *
     * // Use tf.layers.input() to obtain a SymbolicTensor as input to apply().
     * const input = tf.input({shape: [2, 2]});
     * const output1 = flattenLayer.apply(input);
     *
     * // output1.shape is [null, 4]. The first dimension is the undetermined
     * // batch size. The second dimension comes from flattening the [2, 2]
     * // shape.
     * console.log(JSON.stringify(output1.shape));
     *
     * // The output SymbolicTensor of the flatten layer can be used to call
     * // the apply() of the dense layer:
     * const output2 = denseLayer.apply(output1);
     *
     * // output2.shape is [null, 1]. The first dimension is the undetermined
     * // batch size. The second dimension matches the number of units of the
     * // dense layer.
     * console.log(JSON.stringify(output2.shape));
     *
     * // The input and output can be used to construct a model that consists
     * // of the flatten and dense layers.
     * const model = tf.model({inputs: input, outputs: output2});
     * ```
     *
     * @param inputs a `tf.Tensor` or `tf.SymbolicTensor` or an Array of them.
     * @param kwargs Additional keyword arguments to be passed to `call()`.
     *
     * @return Output of the layer's `call` method.
     *
     * @exception ValueError error in case the layer is missing shape information
     *   for its `build` call.
     *
     * @doc {heading: 'Models', 'subheading': 'Classes'}
     */// Porting Note: This is a replacement for __call__() in Python.
apply(e,t){t=t||{},this.assertNotDisposed();// Ensure inputs are all the same type.
let r=dN(e),n=function(e){let t=!0;for(let r of dN(e))if(!(r instanceof p5)){t=!1;break}return t}(e),a=function(e){let t=!0;for(let r of dN(e))if(r instanceof p5){t=!1;break}return t}(e);if(n===a)throw new dg("Arguments to apply() must be all SymbolicTensors or all Tensors");// TODO(michaelterry): nameScope() may not be necessary.
return dZ(this.name,()=>{// Handle laying building (weight creating, input spec locking).
if(!this.built){/*
                  Throw exceptions in case the input is not compatible
                  with the inputSpec specified in the layer constructor.
                 */this.assertInputCompatibility(e);// Collect input shapes to build layer.
let t=[];for(let r of dN(e))t.push(r.shape);this.build(dS(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&// to 1 so the Layer can be properly disposed if its dispose() method
// is called.
(this._refCount=1)}// Handle mask propagation.
// TODO(michaelterry): Mask propagation not currently implemented.
// Actually call the layer, collecting output(s), mask(s), and shape(s).
if(/*
              Throw exceptions in case the input is not compatible
              with the inputSpec set at build time.
            */this.assertInputCompatibility(e),a){let n=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,n);// If the layer returns tensors from its inputs, unmodified,
// we copy them to avoid loss of tensor metadata.
let a=dN(n),s=[];// TODO(michaelterry): This copying may not be necessary given our eager
// backend.
for(let e of a)-1!==r.indexOf(e)&&(e=e.clone()),s.push(e);if(n=dS(s),null!=this.activityRegularizer)throw new dy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");// TODO(michaelterry): Call addInboundNode()?
return n}{let r;let n=/**
 * Collects the input shape(s) of a list of `tf.Tensor`s or
 * `tf.SymbolicTensor`s.
 *
 * TODO(michaelterry): Update PyKeras docs (backport).
 *
 * @param inputTensors List of input tensors (or single input tensor).
 *
 * @return List of shape tuples (or single tuple), one tuple per input.
 */function(e){e=dN(e);let t=[];for(let r of e)t.push(r.shape);return dS(t)}(e),a=this.computeOutputShape(n),s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map((r,n)=>new p5(s,r,this,dN(e),t,this.name,n)):new p5(s,a,this,dN(e),t,this.name),/*
                  Add an inbound node to the layer, so that it keeps track
                  of the call and of all new variables created during the call.
                  This also updates the layer history of the output tensor(s).
                  If the input tensor(s) had no previous history,
                  this does nothing.
                */this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new dy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}})}/**
     * Check compatibility between input shape and this layer's batchInputShape.
     *
     * Print warning if any incompatibility is found.
     *
     * @param inputShape Input shape to be checked.
     */warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape){if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((r,n)=>{null!=r&&null!=e[n]&&e[n]!==r&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}}/**
     * Retrieves the output shape(s) of a layer.
     *
     * Only applicable if the layer has only one inbound node, or if all inbound
     * nodes have the same output shape.
     *
     * @returns Output shape or shapes.
     * @throws AttributeError: if the layer is connected to more than one incoming
     *   nodes.
     *
     * @doc {heading: 'Models', 'subheading': 'Classes'}
     */get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new df(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let r=JSON.stringify(t.outputShapes);-1===e.indexOf(r)&&e.push(r)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new df(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}/**
     * Counts the total number of numbers (e.g., float32, int32) in the
     * weights.
     *
     * @returns An integer count.
     * @throws RuntimeError: If the layer is not built yet (in which case its
     *   weights are not defined yet.)
     *
     * @doc {heading: 'Models', 'subheading': 'Classes'}
     */countParams(){if(!this.built)throw new dm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return p0(this.weights)}/**
     * Creates the layer weights.
     *
     * Must be implemented on all layers that have weights.
     *
     * Called when apply() is called to construct the weights.
     *
     * @param inputShape A `Shape` or array of `Shape` (unused).
     *
     * @doc {heading: 'Models', 'subheading': 'Classes'}
     */build(e){this.built=!0}/**
     * Returns the current values of the weights of the layer.
     *
     * @param trainableOnly Whether to get the values of only trainable weights.
     * @returns Weight values as an `Array` of `tf.Tensor`s.
     *
     * @doc {heading: 'Models', 'subheading': 'Classes'}
     */getWeights(e=!1){return p3(e?this.trainableWeights:this.weights)}/**
     * Sets the weights of the layer, from Tensors.
     *
     * @param weights a list of Tensors. The number of arrays and their shape
     *   must match number of the dimensions of the weights of the layer (i.e.
     *   it should match the output of `getWeights`).
     *
     * @exception ValueError If the provided weights list does not match the
     *   layer's specifications.
     *
     * @doc {heading: 'Models', 'subheading': 'Classes'}
     */setWeights(e){(0,dp.tidy)(()=>{let t=this.weights;if(t.length!==e.length)// of `weights` in the error message, once the deeplearn.js bug is
// fixed: https://github.com/PAIR-code/deeplearnjs/issues/498 const
// providedWeights = JSON.stringify(weights).slice(0, 50);
throw new dg(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let r=[],n=p3(t);for(let a=0;a<n.length;++a){let s=n[a],i=t[a],o=e[a];if(!dh.arraysEqual(s.shape,o.shape))throw new dg(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);r.push([i,o])}p8(r)})}/**
     * Adds a weight variable to the layer.
     *
     * @param name Name of the new weight variable.
     * @param shape The shape of the weight.
     * @param dtype The dtype of the weight.
     * @param initializer An initializer instance.
     * @param regularizer A regularizer instance.
     * @param trainable Whether the weight should be trained via backprop or not
     *   (assuming that the layer itself is also trainable).
     * @param constraint An optional trainable.
     * @return The created weight variable.
     *
     * @doc {heading: 'Models', 'subheading': 'Classes'}
     */addWeight(e,t,r,n,a,s,i,o){// Reject duplicate weight names.
if(-1!==this._addedWeightNames.indexOf(e))throw new dg(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==r&&(r="float32"),this.fastWeightInitDuringBuild&&(n=null!=o?o():pX("zeros"));let l=n.apply(t,r),u=new p4(l,r,e,s,i);return l.dispose(),null!=a&&this.addLoss(()=>a.apply(u.read())),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}/**
     * Set the fast-weight-initialization flag.
     *
     * In cases where the initialized weight values will be immediately
     * overwritten by loaded weight values during model loading, setting
     * the flag to `true` saves unnecessary calls to potentially expensive
     * initializers and speeds up the loading process.
     *
     * @param value Target value of the flag.
     */setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}/**
     * Add losses to the layer.
     *
     * The loss may potentially be conditional on some inputs tensors,
     * for instance activity losses are conditional on the layer's inputs.
     *
     * @doc {heading: 'Models', 'subheading': 'Classes'}
     */addLoss(e){null==e||Array.isArray(e)&&0===e.length||(// Update this.losses
e=dN(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}/**
     * Computes the output shape of the layer.
     *
     * Assumes that the layer will be built to match that input shape provided.
     *
     * @param inputShape A shape (tuple of integers) or a list of shape tuples
     *   (one per output tensor of the layer). Shape tuples can include null for
     *   free dimensions, instead of an integer.
     *
     * @doc {heading: 'Models', 'subheading': 'Classes'}
     */computeOutputShape(e){return e}/**
     * Computes an output mask tensor.
     *
     * @param inputs Tensor or list of tensors.
     * @param mask Tensor or list of tensors.
     *
     * @return null or a tensor (or list of tensors, one per output tensor of the
     * layer).
     */computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(Array.isArray(t))t.forEach(e=>{if(null!=e)throw TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}// masking not explicitly supported: return null as mask
return null}// if masking is explictly supported, by default
// carry over the input mask
return t}setMaskMetadata(e,t,r){if(!this.supportsMasking)return;let n=this.computeMask(e,r),a=dN(t),s=dN(n);if(a.length!==s.length)throw Error(`${this.name} outputs ${a.length} tensors but ${a.length} masks for those tensors`);for(let e=0;e<a.length;e++)a[e].kerasMask=s[e]}/**
     * Internal method to create an inbound node for the layer.
     *
     * @param inputTensors List of input tensors.
     * @param outputTensors List of output tensors.
     * @param inputMasks List of input masks (a mask can be a tensor, or null).
     * @param outputMasks List of output masks (a mask can be a tensor, or null).
     * @param inputShapes List of input shape tuples.
     * @param outputShapes List of output shape tuples.
     * @param kwargs Dictionary of keyword arguments that were passed to the
     *   `call` method of the layer at the call that created the node.
     */addInboundNode(e,t,r,n,a,s,i=null){let o=dN(e);t=dN(t),r=dN(r),n=dN(n),a=pQ(a),s=pQ(s);// Collect input tensor(s) coordinates.
let l=[],u=[],c=[];for(let e of o)/*
             * TODO(michaelterry): Keras adds this value to tensors; it's not
             * clear whether we'll use this or not.
             */l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);// Create node, add it to inbound nodes.
// (This call has side effects.)
// tslint:disable-next-line:no-unused-expression
new p9({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:r,outputMasks:n,inputShapes:a,outputShapes:s},i);// Update tensor history
for(let e=0;e<t.length;e++)// TODO(michaelterry: _uses_learning_phase not tracked.
t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}/**
     * Returns the config of the layer.
     *
     * A layer config is a TS dictionary (serializable)
     * containing the configuration of a layer.
     * The same layer can be reinstantiated later
     * (without its trained weights) from this configuration.
     *
     * The config of a layer does not include connectivity
     * information, nor the layer class name.  These are handled
     * by 'Container' (one layer of abstraction above).
     *
     * Porting Note: The TS dictionary follows TS naming standards for
     * keys, and uses tfjs-layers type-safe Enums.  Serialization methods
     * should use a helper function to convert to the pythonic storage
     * standard. (see serialization_utils.convertTsToPythonic)
     *
     * @returns TS dictionary of configuration.
     *
     * @doc {heading: 'Models', 'subheading': 'Classes'}
     */getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}/**
     * Dispose the weight variables that this Layer instance holds.
     *
     * @returns {number} Number of disposed variables.
     */disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw Error(`Layer '${this.name}' is already disposed.`)}/**
     * Attempt to dispose layer's weights.
     *
     * This method decreases the reference count of the Layer object by 1.
     *
     * A Layer is reference-counted. Its reference count is incremented by 1
     * the first item its `apply()` method is called and when it becomes a part
     * of a new `Node` (through calling the `apply()` method on a
     * `tf.SymbolicTensor`).
     *
     * If the reference count of a Layer becomes 0, all the weights will be
     * disposed and the underlying memory (e.g., the textures allocated in WebGL)
     * will be freed.
     *
     * Note: If the reference count is greater than 0 after the decrement, the
     * weights of the Layer will *not* be disposed.
     *
     * After a Layer is disposed, it cannot be used in calls such as `apply()`,
     * `getWeights()` or `setWeights()` anymore.
     *
     * @returns A DisposeResult Object with the following fields:
     *   - refCountAfterDispose: The reference count of the Container after this
     *     `dispose()` call.
     *   - numDisposedVariables: Number of `tf.Variable`s (i.e., weights) disposed
     *     during this `dispose()` call.
     * @throws {Error} If the layer is not built yet, or if the layer has already
     *   been disposed.
     *
     * @doc {heading: 'Models', 'subheading': 'Classes'}
     */dispose(){if(!this.built)throw Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}class hr extends ht{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:dj("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new dg("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new dg("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else // TODO(michaelterry): Backport to PyKeras
if(null!=e.batchSize)throw new dg("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let r=e.dtype||"float32";this.batchInputShape=t,this.dtype=r,// TODO(michaelterry): Backport this to PyKeras?
this.inputSpec=[{shape:t}];let n=new p5(this.dtype,this.batchInputShape,this,[],{},this.name);n.nodeIndex=0,n.tensorIndex=0,// Create an input node to add to this.outboundNode.
// (This call has side effects.)
// tslint:disable-next-line:no-unused-expression
new p9({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[n],outputTensors:[n],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new dg(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){// dispose() for InputLayer is overridden as no-op.
return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}/** @nocollapse */hr.className="InputLayer",dM.registerClass(hr);class hn{/**
     * Constructor, optionally does copy-construction.
     * @param feeds An Array of `Feed`s, or another `FeedDict`, in which case
     *   copy-construction will be performed.
     */constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof hn)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}/**
     * Add a key-value pair to the FeedDict.
     *
     * @param key The key of the feed.
     * @param value The value of the tensor feed.
     * @param mask The value of the mask feed (optional).
     * @returns This `FeedDict`.
     * @throws ValueError: If the key `SymbolicTensor` already exists in the
     *   `FeedDict`.
     */add(e,t,r){if(null==this.id2Value[e.id])this.id2Value[e.id]=/**
 * Helper function to check the dtype and shape compatibility of a feed value.
 */function(e,t){// Check dtype compatibility.
if(null==e.dtype||e.dtype===t.dtype)return t;try{//  b. Attempt to convert to expected type.
return(0,od.cast)(t,e.dtype)}catch(r){//  c. If conversion fails, return helpful error.
throw new dg(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=r&&(this.id2Mask[e.id]=r);else throw new dg(`Duplicate key: name=${e.name}, id=${e.id}`);return this}/**
     * Add a Feed to the FeedDict.
     * @param feed The new `Feed` to add.
     * @returns This `FeedDict`.
     */addFeed(e){this.add(e.key,e.value)}/**
     * Probe whether a key already exists in the FeedDict.
     * @param key
     */hasKey(e){return null!=this.id2Value[e.id]}/**
     * Get all the SymbolicTensor available in this FeedDict.
     */names(){return Object.keys(this.name2Id)}/**
     * Get the feed value for given key.
     * @param key The SymbolicTensor, or its name (as a string), of which the
     *     value is sought.
     * @returns If `key` exists, the corresponding feed value.
     * @throws ValueError: If `key` does not exist in this `FeedDict`.
     */getValue(e){if(e instanceof p5){if(null!=this.id2Value[e.id])return this.id2Value[e.id];throw new dg(`Nonexistent key: ${e.name}`)}{let t=this.name2Id[e];if(null==t)throw new dg(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}/**
     * Get the feed mask for given key.
     * @param key The SymbolicTensor, or its name (as a string), of which the
     *     value is sought.
     * @returns If `key` exists, the corresponding feed mask.
     * @throws ValueError: If `key` does not exist in this `FeedDict`.
     */getMask(e){if(e instanceof p5){if(null!=this.id2Value[e.id])return this.id2Mask[e.id];throw new dg(`Nonexistent key: ${e.name}`)}{let t=this.name2Id[e];if(null==t)throw new dg(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}/** Dispose all mask Tensors held by this object. */disposeMasks(){null!=this.id2Mask&&(0,dp.dispose)(this.id2Mask)}}const ha=new dv,hs=new dv;function hi(e,t,r,n){let a;let s=null!=r&&r.training,i=Array.isArray(e),o=i?e:[e],l=o.map(e=>e.name),u=[],c=t.names();for(let e of l)-1!==c.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=n&&(// For optional probing of memory footprint during execution.
n.maxNumTensors=-1/0,n.minNumTensors=1/0);// Check cache.
let d=l.join(",")+"|"+t.names().sort().join(","),p=ha.get(d);if(null==p){// Cache doesn't contain the desired combination of fetches. Compute
// topological sort for the combination for the first time.
let e=/**
 * Sort the `SymbolicTensor`s topologically, for an array of fetches.
 *
 * This function calls getTopologicalSortAndRecipientCountsForOneFetch and
 * merges their results.
 *
 * @param fetch The array of fetches requested. Must be a non-empty array.
 * @param feedDict The dictionary of fed values.
 * @returns sorted: Topologically-sorted array of SymbolicTensors.
 *   recipientCounts: Recipient counts for all SymbolicTensors in `sorted`.
 */function(e,t){dh.assert(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let r=[],n={};if(1===e.length){// Special-casing 1 fetch for efficiency.
let a=ho(e[0],t);r=a.sorted,n=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:e,recipientMap:i}=ho(s,t);// Merge sorted SymbolicTensor Arrays.
for(let t of e)a.has(t.name)||(r.push(t),a.add(t.name));// Merge recipient maps.
for(let e in i)null==n[e]&&(n[e]=new Set),i[e].forEach(t=>n[e].add(t))}}return{sorted:r,recipientCounts:function(e){let t={};for(let r in e)t[r]=e[r].size;return t}(n)}}(o,t);p=e.sorted,a=e.recipientCounts,// Store results in cache for future use.
ha.put(d,p),hs.put(d,a)}a={},s||Object.assign(a,hs.get(d));let h=new hn(t);// Start iterative execution on the topologically-sorted SymbolicTensors.
for(let e=0;e<p.length;++e){if(null!=n){// For optional probing of memory usage during execution.
let e=(0,dp.memory)().numTensors;e>n.maxNumTensors&&(n.maxNumTensors=e),e<n.minNumTensors&&(n.minNumTensors=e)}let i=p[e],o=i.sourceLayer;if(o instanceof hr)continue;let c=[],d=[],f=[],m=!1;for(let e of i.inputs){let r=h.getValue(e),n=h.getMask(e);c.push(r),d.push(n),null!=n&&(m=!0),s||(a[e.name]--,0!==a[e.name]||t.hasKey(e)||-1!==l.indexOf(e.name)||r.isDisposed||!0===e.sourceLayer.stateful||f.push(r))}m&&((r=r||{}).mask=d[0]);let g=dN(o.apply(c,r)),y=null;o.supportsMasking&&(y=o.computeMask(c,d));let b=/**
 * Get the symbolic output tensors of the node to which a given fetch belongs.
 * @param fetch The fetched symbolic tensor.
 * @returns The Array of symbolic tensors output by the node to which `fetch`
 *   belongs.
 */function(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let r=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let n of e.sourceLayer.inboundNodes[t].outputTensors)if(n.id===e.id){r=t;break}t=e.sourceLayer.getOutputAt(r)}return t}(i),v=Array.isArray(b)?b:[b];for(let e=0;e<v.length;++e){h.hasKey(v[e])||h.add(v[e],g[e],Array.isArray(y)?y[0]:y);let t=l.indexOf(v[e].name);-1!==t&&(u[t]=g[e])}s||(0,dp.dispose)(f)}return(// NOTE(cais): Unlike intermediate tensors, we don't discard mask
// tensors as we go, because these tensors are sometimes passed over a
// series of mutliple layers, i.e., not obeying the immediate input
// relations in the graph. If this becomes a memory-usage concern,
// we can improve this in the future.
h.disposeMasks(),i?u:u[0])}function ho(e,t){let r=new Set,n=[],a={};// Put keys of the feedDict into visited first, so they don't have to be
// walked. This is needed in case where there are feeds for intermediate
// SymbolicTensors of the graph.
for(let e of t.names())r.add(e);let s=[],i=[];for(// Initial population of stack and marks.
s.push(e);s.length>0;){let e=s[s.length-1];if(r.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)// Input SymbolicTensor or all children have been visited.
s.pop(),n.push(e),r.add(e.name),t&&i.pop();else for(let t of(// A non-input SymbolicTensor whose upstream SymbolicTensors haven't
// been visited yet. Push them onto the stack.
i.push(s.length-1),e.inputs))null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),r.has(t.name)||s.push(t)}return{sorted:n,recipientMap:a}}const hl=(0,dd.env)();/** The max number of entries for the caches of layers' topological sort. */hl.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function(e){null!=ha&&ha.setMaxEntries(e),null!=hs&&hs.setMaxEntries(e)}),A("i64bB"),/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */// tslint:disable-next-line:max-line-length
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//* Original source: keras/contraints.py */A("i64bB");var dp=A("c2DT1"),ob=A("iAb3z"),oT=A("9NgTx"),op=A("jZc0w"),dM=A("5IZxH"),cf=A("cOWuO"),om=A("1QPqB"),oO=A("hgacW"),c2=A("8wbQq");/**
 * Helper function used by many of the Constraints to find the L2Norms.
 */function hu(e,t){return(0,dp.tidy)(()=>ob.sqrt(oT.sum(op.mul(e,e),t,!0)))}class hc extends dM.Serializable{getConfig(){return{}}}class hd extends hc{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,dp.tidy)(()=>{let t=hu(e,this.axis),r=cf.clipByValue(t,0,this.maxValue);return op.mul(e,om.div(r,oO.add(pd(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}/** @nocollapse */hd.className="MaxNorm",dM.registerClass(hd);class hp extends hc{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,dp.tidy)(()=>om.div(e,oO.add(pd(),hu(e,this.axis))))}getConfig(){return{axis:this.axis}}}/** @nocollapse */hp.className="UnitNorm",dM.registerClass(hp);class hh extends hc{apply(e){return c2.relu(e)}}/** @nocollapse */hh.className="NonNeg",dM.registerClass(hh);class hf extends hc{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,dp.tidy)(()=>{let t=hu(e,this.axis),r=oO.add(op.mul(this.rate,cf.clipByValue(t,this.minValue,this.maxValue)),op.mul(1-this.rate,t));return op.mul(e,om.div(r,oO.add(pd(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}/** @nocollapse */hf.className="MinMaxNorm",dM.registerClass(hf);const hm={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function hg(e,t={}){return dA(e,dM.SerializationMap.getMap().classNameMap,t,"constraint")}function hy(e){if(null==e)return null;if("string"==typeof e){let t=e in hm?hm[e]:e;return hg({className:t,config:{}})}return e instanceof hc?e:hg(e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * Exported functions.
 *//**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//* Original source: keras/callbacks.py */A("i64bB");var dp=A("c2DT1"),oO=A("hgacW"),op=A("jZc0w"),om=A("1QPqB"),hb=A("9LtVT"),dh=A("jjNRA");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */A("i64bB");var dp=A("c2DT1");async function hv(e){if(null==e)return;let t=[],r=[],n=[];for(let a in e){let s=e[a];"number"!=typeof s&&(t.push(s.data()),r.push(a),n.push(s))}if(t.length>0){let a=await Promise.all(t);for(let t=0;t<a.length;++t)e[r[t]]=a[t][0];// Dispose the original scalar tensors.
(0,dp.dispose)(n)}}function hx(e){if(null!=e)for(let t in e){let r=e[t];"number"!=typeof r&&r.dispose()}}(h=v||(v={}))[h.SILENT=0]="SILENT",h[h.VERBOSE=1]="VERBOSE";class hw{constructor(){// TODO(michaelterry): This type is a best guess.
this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}// LayersModel needs to call Callback.setModel(), but cannot actually depend
// on Callback because that creates a cyclic dependency.  Providing this no-op
// method on BaseCallback breaks the cycle: this way LayersModel can depend on
// BaseCallback but not on Callback.  The argument is typed as `Container`
// (the superclass of LayersModel) to avoid recapitulating the cycle. Callback
// overrides this method and enforces that the argument is really a
// LayersModel.
setModel(e){// Do nothing. Use Callback instead of BaseCallback to track the model.
}}class hk{// TODO(cais): When the need arises, uncomment the following lines and
// implement the queue for time values.
// private deltaTBatch: number;
// private deltaTsBatchBegin: Array<number>;
// private deltaTsBatchEnd: Array<number>;
/**
     * Constructor of CallbackList.
     * @param callbacks Array of `Callback` instances.
     * @param queueLength Queue length for keeping running statistics over
     *   callback execution time.
     */constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}/**
     * Called at the start of an epoch.
     * @param epoch Index of epoch.
     * @param logs Dictionary of logs.
     */async onEpochBegin(e,t){for(let r of(null==t&&(t={}),this.callbacks))await r.onEpochBegin(e,t)}/**
     * Called at the end of an epoch.
     * @param epoch Index of epoch.
     * @param logs Dictionary of logs.
     */async onEpochEnd(e,t){for(let r of(null==t&&(t={}),this.callbacks))await r.onEpochEnd(e,t)}/**
     * Called  right before processing a batch.
     * @param batch Index of batch within the current epoch.
     * @param logs Dictionary of logs.
     */async onBatchBegin(e,t){for(let r of(null==t&&(t={}),this.callbacks))await r.onBatchBegin(e,t)}/**
     * Called at the end of a batch.
     * @param batch Index of batch within the current epoch.
     * @param logs Dictionary of logs.
     */async onBatchEnd(e,t){for(let r of(null==t&&(t={}),this.callbacks))await r.onBatchEnd(e,t)}/**
     * Called at the beginning of training.
     * @param logs Dictionary of logs.
     */async onTrainBegin(e){for(let t of(null==e&&(e={}),this.callbacks))await t.onTrainBegin(e)}/**
     * Called at the end of training.
     * @param logs Dictionary of logs.
     */async onTrainEnd(e){for(let t of(null==e&&(e={}),this.callbacks))await t.onTrainEnd(e)}}class hS extends hw{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let r=null==t.size?0:t.size;for(let e in this.seen+=r,t){let n=t[e];if("number"==typeof n)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+n*r;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let a=(0,dp.tidy)(()=>(0,oO.add)(this.totals[e],(0,op.mul)(n,r)));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:(0,dp.tidy)(()=>{let r=(0,op.mul)((0,om.div)(1,this.seen),this.totals[e]);t[e]=r,this.totals[e].dispose(),(0,dp.keep)(t[e])}))}}class hN extends hw{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){for(let r in null==t&&(t={}),this.epoch.push(e),t)null==this.history[r]&&(this.history[r]=[]),this.history[r].push(t[r])}/**
     * Await the values of all losses and metrics.
     */async syncData(){let e=[],t=[],r=[];for(let n in this.history){let a=this.history[n];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){let i=a[s];e.push(i.data()),t.push(n),r.push(s)}}let n=await Promise.all(e);for(let e=0;e<n.length;++e){let a=this.history[t[e]][r[e]];a.dispose(),this.history[t[e]][r[e]]=n[e][0]}}}class hT extends hw{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||hb.nextFrame,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");if(dh.isNumber(this.yieldEvery))// `yieldEvery` ms.
{var r,n,a;let e,t;this.maybeWait=(r=this.maybeWait.bind(this),n=this.yieldEvery,t=null!=(a=this.nowFunc)?a():dh.now(),(...s)=>{let i=null!=a?a():dh.now();return i-t<n?e:(t=i,e=r(...s))})}this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,r){let n=[];null!=this.yield&&(await hv(r),n.push(this.yield(e,t,r))),n.push(this.nextFrameFunc()),await Promise.all(n)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await hv(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let r=[];null!=this.epochEnd&&(await hv(t),r.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&r.push(this.nextFrameFunc()),await Promise.all(r)}async onBatchBegin(e,t){null!=this.batchBegin&&(await hv(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let r=[];null!=this.batchEnd&&(await hv(t),r.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?r.push(this.nextFrameFunc()):dh.isNumber(this.yieldEvery)&&r.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(r)}async onTrainBegin(e){null!=this.trainBegin&&(await hv(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await hv(e),await this.trainEnd(e))}}function hI(e,t){if(null==e&&(e={}),e instanceof hw)return[e];if(Array.isArray(e)&&e[0]instanceof hw)return e;// Convert custom callback configs to custom callback objects.
let r=dN(e);return r.map(e=>new hT(e,t))}/**
 * A global registry for callback constructors to be used during
 * LayersModel.fit().
 */class hC{/**
     * Blocks public access to constructor.
     */constructor(){}/**
     * Register a tf.LayersModel.fit() callback constructor.
     *
     * The registered callback constructor will be used to instantiate
     * callbacks for every tf.LayersModel.fit() call afterwards.
     *
     * @param verbosityLevel Level of verbosity at which the `callbackConstructor`
     *   is to be reigstered.
     * @param callbackConstructor A no-arg constructor for `tf.Callback`.
     * @throws Error, if the same callbackConstructor has been registered before,
     *   either at the same or a different `verbosityLevel`.
     */static registerCallbackConstructor(e,t){dh.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),hC.checkForDuplicate(t),null==hC.constructors[e]&&(hC.constructors[e]=[]),hC.constructors[e].push(t)}static checkForDuplicate(e){for(let t in hC.constructors){let r=hC.constructors[+t];r.forEach(t=>{if(t===e)throw new dg("Duplicate callback constructor.")})}}/**
     * Clear all registered callback constructors.
     */static clear(){hC.constructors={}}/**
     * Create callbacks using the registered callback constructors.
     *
     * Given `verbosityLevel`, all constructors registered at that level or above
     * will be called and the instantiated callbacks will be used.
     *
     * @param verbosityLevel: Level of verbosity.
     */static createCallbacks(e){let t=[];for(let r in hC.constructors){let n=+r;e>=n&&t.push(...hC.constructors[n])}return t.map(e=>new e)}}function hE(e,t,r,n,a,s,i,o,l){let u=new hN,c=[new hS,...hC.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);let d=new hk(c);return(// TODO(cais): Figure out when this LayersModel instance can have a
// dynamically
//   set property called 'callback_model' as in PyKeras.
d.setParams({epochs:r,initialEpoch:n,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:d,history:u})}hC.constructors={},/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//* Original Source: engine/training.py */A("i64bB");var u7=A("9jCh7"),dh=A("jjNRA"),hA=A("kULIJ"),dp=A("c2DT1"),uV=A("iTu6j"),ps=A("lalFM"),oy=A("3xp7o"),oO=A("hgacW"),op=A("jZc0w"),om=A("1QPqB"),cG=A("67GCc"),hR=A("9ELKf"),dM=A("5IZxH");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//* Original Source layers/__init__.py */A("i64bB");var dM=A("5IZxH");function h_(e,t={},r=!1){return dA(e,dM.SerializationMap.getMap().classNameMap,t,"layer",r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//* Original Source: losses.py */A("i64bB");var dp=A("c2DT1"),od=A("inFmq"),oT=A("9NgTx"),hO=A("gYive"),ob=A("iAb3z"),u4=A("g5Jt1"),om=A("1QPqB"),cG=A("67GCc"),ox=A("7kouu"),u5=A("7j49I"),cf=A("cOWuO"),op=A("jZc0w"),ui=A("dcoCo"),oO=A("hgacW"),cV=A("05cMR"),dr=A("4Udpd"),dt=A("dnEu5"),og=A("15cGp"),l6=A("4ZUCz"),oN=A("4sqA7"),cZ=A("i3U4j"),dh=A("jjNRA"),c2=A("8wbQq"),cL=A("5QUXI"),lb=A("2PcQK");function hP(e,t){return(0,dp.tidy)(()=>{"float32"!==e.dtype&&(e=od.cast(e,"float32"));let r=oT.sum(pN(e),t,!0),n=hO.fill(r.shape,pd()),a=ob.sqrt(u4.maximum(r,n));return om.div(e,a)})}function h$(e,t){return(0,dp.tidy)(()=>cG.mean(pN(ox.sub(t,e)),-1))}function hD(e,t){return(0,dp.tidy)(()=>cG.mean(u5.abs(ox.sub(t,e)),-1))}function hM(e,t){return(0,dp.tidy)(()=>{let r=ox.sub(e,t),n=cf.clipByValue(u5.abs(e),pd(),Number.MAX_VALUE),a=u5.abs(om.div(r,n));return op.mul(100,cG.mean(a,-1))})}function hF(e,t,r=!1){return(0,dp.tidy)(()=>{if(r)t=dt.softmax(t);else{// scale preds so that the class probabilities of each sample sum to 1.
let e=oT.sum(t,t.shape.length-1,!0);t=om.div(t,e)}return t=cf.clipByValue(t,pd(),1-pd()),og.neg(oT.sum(op.mul(od.cast(e,"float32"),ui.log(t)),t.shape.length-1))})}function hL(e,t,r=!1){return(0,dp.tidy)(()=>{let n=od.cast(l6.floor(function(e){let t=[po(e.shape)];return oN.reshape(e,t)}(e)),"int32");t=cf.clipByValue(t,pd(),1-pd());let a=t.shape,s=oN.reshape(cZ.oneHot(n,a[a.length-1]),a);return hF(s,t,r)})}function hj(e,t){return(0,dp.tidy)(()=>{let r;return r=cf.clipByValue(t,pd(),1-pd()),r=ui.log(om.div(r,ox.sub(1,r))),cG.mean(function(e,t){if(!dh.arraysEqual(e.shape,t.shape))throw new dg(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,dp.tidy)(()=>{// The logistic loss formula from above is
//   x - x * z + log(1 + exp(-x))
// For x < 0, a more numerically stable formula is
//   -x * z + log(1 + exp(x))
// Note that these two expressions can be combined into the following:
//   max(x, 0) - x * z + log(1 + exp(-abs(x)))
let r=c2.relu(t),n=og.neg(u5.abs(t));return oO.add(ox.sub(r,op.mul(t,e)),cL.log1p(lb.exp(n)))})}(e,r),-1)})}function hB(e,t){return(0,dp.tidy)(()=>{let r=hP(e,-1),n=hP(t,-1),a=op.mul(r,n);return og.neg(oT.sum(a,-1))})}const hz={meanSquaredError:h$,meanAbsoluteError:hD,meanAbsolutePercentageError:hM,meanSquaredLogarithmicError:function(e,t){return(0,dp.tidy)(()=>{let r=cf.clipByValue(t,pd(),Number.MAX_VALUE),n=ui.log(oO.add(1,r)),a=cf.clipByValue(e,pd(),Number.MAX_VALUE),s=ui.log(oO.add(1,a));return cG.mean(pN(ox.sub(n,s)),-1)})},squaredHinge:function(e,t){return(0,dp.tidy)(()=>{let r=u4.maximum(0,ox.sub(1,op.mul(e,t)));return cG.mean(pN(r),-1)})},hinge:function(e,t){return(0,dp.tidy)(()=>{let r=u4.maximum(0,ox.sub(1,op.mul(e,t)));return cG.mean(r,-1)})},categoricalHinge:function(e,t){return(0,dp.tidy)(()=>{let r=oT.sum(op.mul(e,t),-1),n=cV.max(op.mul(ox.sub(1,e),t),-1);return u4.maximum(0,oO.add(1,ox.sub(n,r)))})},logcosh:function(e,t){return(0,dp.tidy)(()=>{let r=Math.log(2),n=ox.sub(t,e),a=ox.sub(oO.add(n,dr.softplus(op.mul(-2,n))),r);return cG.mean(a,-1)})},categoricalCrossentropy:hF,sparseCategoricalCrossentropy:hL,binaryCrossentropy:hj,kullbackLeiblerDivergence:function(e,t){return(0,dp.tidy)(()=>{let r=cf.clipByValue(e,pd(),1),n=cf.clipByValue(t,pd(),1);return oT.sum(op.mul(e,ui.log(om.div(r,n))),-1)})},poisson:function(e,t){return(0,dp.tidy)(()=>{let r=ui.log(oO.add(pd(),t));return cG.mean(ox.sub(t,op.mul(e,r)),-1)})},cosineProximity:hB};function hV(e){if("string"!=typeof e)return e;{if(e in hz)return hz[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new dg(t)}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * Built-in metrics.
 */A("i64bB");var dp=A("c2DT1"),op=A("jZc0w"),cQ=A("67iid"),lL=A("bRRKf"),cG=A("67GCc"),lW=A("7R9HC"),cn=A("jctS7"),od=A("inFmq"),oT=A("9NgTx"),o1=A("kg1Wp"),oO=A("hgacW"),o2=A("l2P14"),om=A("1QPqB"),da=A("kX8Hd");function hG(e,t){return(0,dp.tidy)(()=>{let r=op.mul(.5,cQ.onesLike(t)),n=ph(lL.greater(t,r),e.dtype);return cG.mean(lW.equal(e,n),-1)})}function hU(e,t){return(0,dp.tidy)(()=>ph(lW.equal(cn.argMax(e,-1),cn.argMax(t,-1)),"float32"))}function hW(e,t){return hj(e,t)}function hq(e,t){return e.rank===t.rank&&(e=da.squeeze(e,[e.rank-1])),(t=cn.argMax(t,-1)).dtype!==e.dtype&&(t=od.cast(t,e.dtype)),od.cast(lW.equal(e,t),"float32")}const hH={binaryAccuracy:hG,categoricalAccuracy:hU,precision:function(e,t){return(0,dp.tidy)(()=>{let r=(0,dp.tidy)(()=>od.cast(oT.sum(o1.logicalAnd(lW.equal(e,1),lW.equal(t,1))),"float32")),n=(0,dp.tidy)(()=>od.cast(oT.sum(o1.logicalAnd(lW.equal(e,0),lW.equal(t,1))),"float32")),a=oO.add(r,n);return od.cast(o2.where(lL.greater(a,0),om.div(r,a),0),"float32")})},categoricalCrossentropy:hF,sparseCategoricalCrossentropy:hL,mse:h$,MSE:h$,mae:hD,MAE:hD,mape:hM,MAPE:hM,cosine:hB};function hK(e){if(dw(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let r of Object.keys(hz))if(hz[r]===e){t=r;break}if(void 0!==t)return t;for(let r of Object.keys(hH))if(hH[r]===e){t=r;break}return void 0!==t?t:e.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * Optimizers.
 */A("i64bB");var hX=A("dXS8M");function hZ(e,t,r=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!function e(t){if(null===t)return!0;if("object"==typeof t){if(Object.getPrototypeOf(t)===Object.prototype){// `x` is a JavaScript object and its prototype is Object.
let r=Object.keys(t);for(let n of r)if("string"!=typeof n||!e(t[n]))return!1;return!0}// `x` is a JavaScript object but its prototype is not Object.
if(!Array.isArray(t))// and it's not an Array. I.e., it's a complex object such as
// `Error` and `Date`.
return!1;// `x` is a JavaScript array.
for(let r of t)if(!e(r))return!1;return!0}{// `x` is not a JavaScript object or `null`.
let e=typeof t;return"string"===e||"number"===e||"boolean"===e}}(e))throw Error("User-defined metadata is expected to be a JSON object, but is not.");if(r){let r=JSON.stringify(e);r.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function hQ(e,t,r=console.log){let n="";for(let r=0;r<e.length;++r)r>0&&(n=n.slice(0,n.length-1)+" "),n+=e[r],n=n.slice(0,t[r]),n+=" ".repeat(t[r]-n.length);r(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */// tslint:enable
/**
 * Test whether a value in an array is the name of a LayersModel or Layer.
 * @param key The key name that the value is found under. Note that the key
 *   may not be at the level immediately above the value, if the value is in a
 *   nested array.
 * @param index Index of the value in the Array that it is found in.
 * @param value The value object.
 * @returns A boolean indicating whether value is a name.
 */function hY(e,t,r){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof r}/** @license See the LICENSE file. */// This code is auto-generated, do not modify this file!
const hJ="4.13.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//* Original source: keras/engine/topology.py */A("i64bB");var dp=A("c2DT1");// get weights key from tensor map in order to check if it is from keras v3.
// e.g. dense/0
const h0=e=>{let t=Object.keys(e);if(0===t.length)return!1;let r=t[0].split("/");return!isNaN(parseInt(r[r.length-1],10))};class h1 extends ht{constructor(e){if(// No args passed to super's constructor.
super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=dj(e)}// Check for redundancy in inputs.
if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],d_(this.inputs).length!==this.inputs.length)throw new dg(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(e=>e.name)}`);// TODO(michaelterry): Determine if caching still needed with eager
// backend.
/*
          This is for performance optimization when calling the Container on new
          inputs. Every time the Container is called on a set on input tensors,
          we compute the output tensors, output masks and output shapes in one pass,
          then cache them here. When one of these outputs is queried later,
          we retrieve it from there instead of recomputing it.
        */// this.outputTensorCache = {};
// this.outputShapeCache = {};
// Build this.outputLayers:
for(let e of(d_(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(e=>e.name)}`),/*
          List of initial layers (1 to 1 mapping with this.inputs, hence the same
          layer might appear twice)
        */this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],/*
          List of layers (1 to 1 mapping with this.outputs, hence the same layer
          might appear twice)
        */this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],/*
          All layers in order of horizontal graph traversal. Entries are unique.
          Includes input and output layers.
        */this.layers=[],/*
          References to container layers that were constructed internally. We need
          these to properly dispose of tensors from nested containers.
        */this.internalContainerRefs=[],this.outputs)){let t=e.sourceLayer,r=e.nodeIndex,n=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(r),this.outputLayersTensorIndices.push(n)}// TODO(michaelterry): Add output mask cache code.
// Build this.inputLayers:
for(let e of this.inputs){let t=e.sourceLayer,r=e.nodeIndex,n=e.tensorIndex;/*
              It's supposed to be an input layer, so only one node
              and one tensor output.
            */dw(0===r,"input layer has >1 nodes"),dw(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(r),this.inputLayersTensorIndices.push(n)}// Build this.inputNames and this.outputNames.
this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let r=this.inputLayers[t];// Check that layer is an InputLayer.
if(!(r instanceof hr))throw TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${r.getClassName()}.`);this.inputNames.push(r.name),this.feedInputShapes.push(r.batchInputShape),this.feedInputNames.push(r.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);/*
          Container_nodes: set of nodes included in the graph (not all nodes
          included in the layers are relevant to the current graph).
        */// ids of all nodes relevant to the Container:
let t={},r={},n={},a={},s={},i=[],o=(e,t,r,n,a,l)=>{(null==n||null==a||null==l)&&(n=e.sourceLayer,a=e.nodeIndex,l=e.tensorIndex);let u=n.inboundNodes[a];// Prevent cycles.
if(-1!==r.indexOf(u))throw new dm(`The tensor ${e.name} at layer "${n.name}" is part of a cycle.`);// Don't repeat work for shared subgraphs
if(-1!==t.indexOf(u))return;// Update containerNodes.
this.containerNodes.add(h1.nodeKey(n,a)),n.id in s||(s[n.id]=Object.keys(s).length),-1===r.indexOf(u)&&r.push(u);// Propagate to all previous tensors connected to this node.
let c=u.inboundLayers.length;for(let e=0;e<c;e++){let n=u.inputTensors[e],a=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(n,t,r,a,s,i)}for(t.push(u);r.indexOf(u)>=0;)r.splice(r.indexOf(u),1);i.push(u)},l=[],u=[];for(let e of this.outputs)o(e,l,u);let c=i.slice().reverse();for(let e of c){r[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id],i=null==n[e.outboundLayer.id]?0:n[e.outboundLayer.id];/*
              If we've seen this layer before at a higher depth, we should use that
              depth instead of the node depth.  This is necessary for shared layers
              that have inputs at different depth levels in the graph.
            */s=Math.max(s,i),n[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;// Update the depth of inbound nodes.
for(let n=0;n<e.inboundLayers.length;n++){let a=e.inboundLayers[n],i=e.nodeIndices[n],o=a.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),r[o.id]=o}}// Build a dict {depth: list of nodes with this depth}
let d={};for(let e in t){let n=t[e];n in d||(d[n]=[]),d[n].push(r[e])}// Build a dict {depth: list of layers with this depth}
let p={};for(let e in n){let t=n[e];t in p||(p[t]=[]),p[t].push(a[e])}// Get sorted list of layer depths.
let h=Object.keys(p).map(e=>parseInt(e,10)).sort(dR);for(let e of(// Set this.layers and this.layersByDepth.
this.layers=[],h)){let t=p[e];for(let e of(// Container.layers needs to have a deterministic order:
// here we order them by traversal order.
t.sort((e,t)=>{let r=s[e.id],n=s[t.id];return r<n?-1:r>n?1:0}),t))e instanceof h1&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,// Get sorted list of node depths;
h=Object.keys(d).map(e=>parseInt(e,10)).sort(dR);// Check that all tensors required are computable.
// computable_tensors: all tensors in the graph
// that can be computed from the inputs provided.
let f=this.inputs.slice(),m=[];for(let e of h)for(let t of d[e]){let e=t.outboundLayer;if(null!=e){for(let r of t.inputTensors)if(-1===f.indexOf(r))throw new dm(`Graph disconnected: cannot obtain value for tensor ${r} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(let e of t.outputTensors)f.push(e);m.push(e.name)}}// Set this.containerNodes and this.nodesByDepth.
this.nodesByDepth=d;// Ensure name unicity, which will be crucial for serialization
// (since serialized nodes refer to layers by their name).
let g=this.layers.map(e=>e.name);for(let e of g){let t=g.filter(t=>t===e).length;if(1!==t)throw new dm(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}// Layer parameters.
// The new container starts with a single inbound node
// for its inputs, and no outbound nodes.
// Will be appended to by future calls to apply().
this.outboundNodes=[],// Will be appended to below, and by future calls to apply().
this.inboundNodes=[],// Create the node linking internal inputs to internal outputs.
// (This call has side effects.)
// tslint:disable-next-line:no-unused-expression
new p9({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw Error(`Container '${this.name}' is already disposed.`)}/**
     * Attempt to dispose a LayersModel's weights.
     *
     * This method decrease the reference count of the LayersModel object by 1.
     *
     * A LayersModel is reference-counted. Its reference count is incremented by 1
     * when it is first constructed and when it is used as a Layer of another
     * LayersModel.
     *
     * If the reference count of a LayersModel becomes 0, the `dispose` method of
     * all its constituent `Layer`s will be called.
     *
     * Note: If the reference count is greater than 0 after the decrement, the
     * `dispose` method of its constituent `Layer`s will *not* be called.
     *
     * After a LayersModel is disposed, it cannot be used in calls such as
     * 'predict`, `evaluate` or `fit` anymore.
     *
     * @returns A DisposeResult Object with the following fields:
     *   - refCountAfterDispose: The reference count of the LayersModel after this
     *     `dispose()` call.
     *   - numDisposedVariables: Number of `tf.Variable`s (i.e., weights) disposed
     *     during this `dispose()` call.
     * @throws {Error} If the layer is not built yet, or if the LayersModel has
     *   already been disposed.
     */dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;// Call dispose on each internally created container layer again to ensure
// their refCounts hit zero and their tensors are subsequently deleted.
for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{// tslint:disable-next-line:no-any
t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){// Porting Note: This check below is to prevent errors where the
//   _trainableWeights inherited from the parent class (Layer) gets
//   inadvertently used.
if(this._trainableWeights.length>0)throw new dg("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}/**
     * Loads all layer weights from a JSON object.
     *
     * Porting Note: HDF5 weight files cannot be directly loaded in JavaScript /
     *   TypeScript. The utility script at `scripts/pykeras.py` offers means
     *   to convert them into JSON strings compatible with this method.
     * Porting Note: TensorFlow.js Layers supports only loading by name currently.
     *
     * @param weights A JSON mapping weight names to weight values as nested
     *   arrays of numbers, or a `NamedTensorMap`, i.e., a JSON mapping weight
     *   names to `tf.Tensor` objects.
     * @param strict Require that the provided weights exactly match those
     *   required by the container.  Default: `true`.  Passing `false` means that
     *   extra weights and missing weights will be silently ignored.
     */loadWeights(e,t=!0){let r={},n=0,a=h0(e);// Check if weights from keras v3.
for(let t of(a&&this.parseWeights(e),this.layers))for(let[e,s]of t.weights.entries()){// Parse the name to layerName/index.
// e.g. dense/0, dense/1, dense_1/0, dense_1/1
let t=a?`${s.name.split("/").slice(0,-1).join("/")+"/"}${e}`:s.originalName;if(null!=r[t])throw new dg(`Duplicate weight name: ${t}`);r[t]=s,n++}let s=[];for(let n in e){// TF 2.2.0 added cell name to the weight name in the format of
// layer_name/cell_name/weight_name, we need to remove
// the inner cell name.
let a=n;if(null==r[n]){let e=n.split("/"),t=e.slice(0,-2).concat([e[e.length-1]]);a=t.join("/")}if(null!=r[a])s.push([r[a],e[n]]);else if(t)throw new dg(`Provided weight data has no target variable: ${n}`);delete r[a]}if(t){// Check that all weights are set.
let e=[];for(let t in r)e.push(t);if(e.length>0)throw new dg(`${e.length} of ${n} weights are not set: ${e}`)}p8(s)}parseWeights(e){for(let t in Object.keys(e)){let r=t.split("/"),n=["vars","layer_checkpoint_dependencies"],a=r.map(e=>e.startsWith("_")?e.slice(1):e).filter(e=>!n.includes(e)).join("/");a!==t&&(e[a]=e[t],delete e[t])}}/**
     * Util shared between different serialization methods.
     * @returns LayersModel config with Keras version information added.
     */updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${hJ}`,// TODO(nielsene): Replace something like K.backend() once
// possible.
t.backend="TensorFlow.js",t}/**
     * Returns a JSON string containing the network configuration.
     *
     * To load a network from a JSON save file, use
     * models.modelFromJSON(jsonString);
     * @param extraJsonArgs Unused in tfjs-layers, maintained for PyKeras
     * @param returnString Whether the return value should be stringified
     *    (default: `true`).
     * @returns a JSON string if `returnString` (default), or a JSON object if
     *   `!returnString`.
     */// tslint:disable-next-line:no-any
toJSON(e,t=!0){let r=function e(t,r){if(null==t)return null;if("string"==typeof t)return dT(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){let n=[],a=t.length;for(let s=0;s<a;++s){let a=t[s];hY(r,s,a)?n.push(a):n.push(e(a,r))}return n}{let r={};for(let n of Object.keys(t)){let a=t[n],s=dT(n);("name"===n||"className"===n)&&"string"==typeof a?// the names of LayersModel and Layer instances, should not undergo the
// snake-case conversion.
r[s]=a:r[s]=e(a,n)}return r}}(this.updatedConfig());return t?JSON.stringify(r):r}/**
     * Call the model on new inputs.
     *
     * In this case `call` just reapplies all ops in the graph to the new inputs
     * (e.g. build a new computational graph from the provided inputs).
     *
     * @param inputs A tensor or list of tensors.
     * @param mask A mask or list of masks. A mask can be either a tensor or null
     *   (no mask).
     *
     * @return A tensor if there is a single output, or a list of tensors if there
     *   are more than one outputs.
     */call(e,t){return(0,dp.tidy)(()=>{e=dN(e);let r=new hn;for(let t=0;t<this.inputs.length;++t)r.add(this.inputs[t],e[t]);return hi(this.outputs,r,t)})}/**
     * Computes an output mask tensor.
     *
     * @param inputs Tensor or list of tensors.
     * @param mask Tensor or list of tensors.
     *
     * @return null or a tensor (or list of tensors, one per output tensor of the
     * layer).
     */computeMask(e,t){return(0,dp.tidy)(()=>{let r;// TODO(michaelterry): Add support for mask caching.
return e=dN(e),r=null==t?dx(null,e.length):dN(t),this.runInternalGraph(e,r)[1]})}/**
     * Computes the output shape of the layer.
     *
     * Assumes that the layer will be built to match that input shape provided.
     *
     * @param inputShape A shape (tuple of integers) or a list of shape tuples
     *   (one per output tensor of the layer). Shape tuples can include null for
     *   free dimensions, instead of an integer.
     */computeOutputShape(e){let t=pQ(e);if(t.length!==this.inputLayers.length)throw new dg(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);// TODO(michaelterry): Add caching
let r={};for(let e=0;e<t.length;e++){let n=this.inputLayers[e],a=t[e],s=n.name+"_0_0";r[s]=a}let n=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(dR);// Iterate over nodes, by depth level.
if(n.length>1)for(let e of n){let t=this.nodesByDepth[e];for(let e of t){// This is always a single layer, never a list.
let t=e.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(t.id))continue;// Potentially redundant list, same size of node.inputTensors.
let n=[];for(let t=0;t<e.inboundLayers.length;t++){let a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=`${a.name}_${s}_${i}`,l=r[o];n.push(l)}let a=t.computeOutputShape(dS(n)),s=pQ(a),i=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++){let n=`${t.name}_${i}_${e}`;r[n]=s[e]}}}// Read final output shapes from layersToOutputShapes.
let a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],r=this.outputLayersNodeIndices[e],n=this.outputLayersTensorIndices[e],a=`${t.name}_${r}_${n}`;s.push(a)}for(let e=0;e<s.length;e++){let t=s[e];dw(t in r),a.push(r[t])}// TODO(michaelterry): Update cache
return dS(a)}/**
     * Computes output tensors for new inputs.
     *
     * Note:
     *   - Expects `inputs` to be a list (potentially with 1 element).
     *
     * @param inputs List of tensors
     * @param masks List of masks (tensors or null).
     * @return Three lists: outputTensors, outputMasks, outputShapes
     */runInternalGraph(e,t){null==t&&(t=dx(null,e.length));// Dictionary mapping reference tensors to tuples
// (computed tensor, compute mask)
// we assume a 1:1 mapping from tensor to mask
// TODO: raise exception when a `.computeMask()` call
// does not return a list the same size as `call`
let r={};for(let n=0;n<this.inputs.length;++n){let a=this.inputs[n],s=e[n],i=t[n];r[a.id]=[s,i]}let n=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(dR);for(let e of n){let t=this.nodesByDepth[e];for(let e of t){// This is always a single layer, never a list.
let t=e.outboundLayer,n=e.inputTensors,a=e.outputTensors,s=[];for(let e of n)e.id in r&&s.push(r[e.id]);if(s.length===n.length){// TODO(michaelterry): Add K.name_scope here, if we need it.
let n,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){let[e,r]=s[0];null==u.mask&&(u.mask=r),o=dN(t.call(e,u)),l=dN(t.computeMask(e,r)),n=[e],i=[r]}else n=s.map(e=>e[0]),i=s.map(e=>e[1]),null==u.mask&&(u.mask=i),o=dN(t.call(n,u)),l=dN(t.computeMask(n,i));if(t.activityRegularizer)throw new dy("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");// TODO(michaelterry): Add model updates and losses
// Update tensor map.
for(let e=0;e<a.length;++e){let t=a[e],n=o[e],s=l[e];r[t.id]=[n,s]}}}}let a=[],s=[],i=[];for(let e of this.outputs){dw(e.id in r,`Could not compute output ${e.name} : ${e.id}`);let[t,n]=r[e.id];i.push(t.shape),a.push(t),s.push(n)}// TODO(michaelterry): Add support for caches.
return[a,s,i]}/**
     * Builds a map of internal node keys to node ordering.
     * Used in serializaion a node orderings may change as unused nodes are
     * dropped. Porting Note:  This helper method was pulled out of getConfig to
     * improve readability.
     * @param layers An array of Layers in the model.
     * @returns Map of Node Keys to index order within the layer.
     */buildNodeConversionMap(e){let t;let r={};for(let e of this.layers){t=e instanceof h1?1:0;for(let n=0;n<e.inboundNodes.length;n++){let a=h1.nodeKey(e,n);this.containerNodes.has(a)&&(// i.e. we mark it to be saved
r[a]=t,t+=1)}}return r}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new dg("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(let t of this.layers)if(t.name===e)return t;throw new dg(`No such layer: ${e}`)}findLayer(e){if(!(this.layers.length<=e))return this.layers[e];throw new dg(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`)}/**
     * Retrieves the Container's current loss values.
     *
     * Used for regularizers during training.
     */calculateLosses(){// Porting Node: This is an augmentation to Container.loss in PyKeras.
//   In PyKeras, Container.loss returns symbolic tensors. Here a concrete
//   Tensor (specifically Scalar) values are returned. This is due to the
//   imperative backend.
return(0,dp.tidy)(()=>{let e=[];for(let t of this.layers)for(let r=0;r<t.inboundNodes.length;++r){let n=h1.nodeKey(t,r);this.containerNodes.has(n)&&e.push(...t.calculateLosses())}// TODO(cais): Add any unconditional model-level losses?
return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),r=[];for(let e of this.layers){let n=e.getClassName(),a=e.getConfig(),s=[];for(let r=0;r<e.inboundNodes.length;r++){let n=e.inboundNodes[r],a=h1.nodeKey(e,r),i={};if(this.containerNodes.has(a)){// The node is relevant to the model:
// add to filteredInboundNodes.
if(n.callArgs)try{JSON.stringify(n.callArgs),i=n.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${n.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(n.inboundLayers.length>0){let e=[];for(let r=0;r<n.inboundLayers.length;r++){let a=n.inboundLayers[r],s=n.nodeIndices[r],o=n.tensorIndices[r],l=h1.nodeKey(a,s),u=t[l];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}let i={};i.name=e.name,i.className=n,i.config=a,i.inboundNodes=s,r.push(i)}e.layers=r;// Gather info about inputs and outputs
let n=[];for(let e=0;e<this.inputLayers.length;e++){let r=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=h1.nodeKey(r,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.inputLayersTensorIndices[e];n.push([r.name,i,o])}e.inputLayers=n;let a=[];for(let e=0;e<this.outputLayers.length;e++){let r=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=h1.nodeKey(r,n);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.outputLayersTensorIndices[e];a.push([r.name,i,o])}return e.outputLayers=a,e}/**
     * Instantiates a LayersModel from its config (output of `get_config()`).
     * @param cls the class to create
     * @param config LayersModel config dictionary.
     * @param customObjects An optional dictionary of custom objects.
     * @param fastWeightInit Optional flag to use fast weight initialization
     *   during deserialization. This is applicable to cases in which
     *   the initialization will be immediately overwritten by loaded weight
     *   values. Default: `false`.
     * @returns A LayersModel instance.
     * @throws ValueError: In case of improperly formatted config dict.
     *//** @nocollapse */static fromConfig(e,t,r={},n=!1){// Layer instances created during
// the graph reconstruction process
let a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}// First, we create all layers and enqueue nodes to be processed.
let o=t.name,l=t.layers;for(let e of l)!/**
         * Deserialize a layer, then call it on appropriate inputs.
         * @param layerData: layer config dict.
         * @throws ValueError: In case of improperly formatted `layer_data`
         * dict.
         */function(e){let r=e.name,s=h_(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(n),a[r]=s;// Gather layer inputs.
let o=e.inboundNodes;o.forEach(e=>{if(!(e instanceof Array))throw new dg(`Corrupted configuration, expected array for nodeData: ${e}`);// We don't process nodes (i.e. make layer calls)
// on the fly because the inbound node may not yet exist,
// in case of layer shared at different topological depths
// (e.g.a model such as A(B(A(B(x)))))
i(s,e)})}(e);// Then we process nodes in order of layer depth.
// Nodes that cannot yet be processed(if the inbound node
// does not yet exist) are re - enqueued, and the process
// is repeated until all nodes are processed.
for(;!function(e){if(null==e)throw new dg(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}(s);)for(let e of l){let t=a[e.name];if(t.name in s){let e=s[t.name];for(let r of(delete s[t.name],e))!function(e,t){let r;let n=[];for(let s of t){let o=s[0],l=s[1],u=s[2];if(r=null==s[3]?{}:s[3],!(o in a)){i(e,t);return}let c=a[o];if(c.inboundNodes.length<=l){i(e,t);return}let d=c.inboundNodes[l];n.push(d.outputTensors[u])}// Call layer on its inputs, thus creating the node
// and building the layer if needed.
// Note: This has Eager vs Graph Implications.
n.length>0&&e.apply(dS(n),r);// was ** kwargs
}(t,r)}}let u=[],c=[],d=t.inputLayers;for(let e of d){let t=e[0],r=e[1],n=e[2];dw(t in a);let s=a[t],i=s.inboundNodes[r].outputTensors;u.push(i[n])}let p=t.outputLayers;for(let e of p){let t=e[0],r=e[1],n=e[2];dw(t in a);let s=a[t],i=s.inboundNodes[r].outputTensors;c.push(i[n])}return new e({inputs:u,outputs:c,name:o})}/**
     * Determine whether the container is stateful.
     *
     * Porting Note: this is the equivalent of the stateful @property of
     *   the Container class in PyKeras.
     */get stateful(){// Porting Note: This check is to prevent inadvertent setting of the
//   _stateful property of the Container instance.
if(this._stateful)throw new dg("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}/**
     * Reset the state of all stateful constituent layers (if any).
     *
     * Examples of stateful layers include RNN layers whose `stateful` property
     * is set as `true`.
     */resetStates(){(0,dp.tidy)(()=>{this.layers.forEach(e=>{// tslint:disable:no-any
e.stateful&&e.resetStates();// tslint:enable:no-any
})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * Interfaces and methods for training models using TensorFlow.js datasets.
 */A("i64bB");var dh=A("jjNRA"),u7=A("9jCh7"),dp=A("c2DT1"),oy=A("3xp7o"),oO=A("hgacW"),op=A("jZc0w"),om=A("1QPqB");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */A("i64bB");var dp=A("c2DT1"),h2=A("5TuCW"),cn=A("jctS7"),oN=A("4sqA7"),ps=A("lalFM"),op=A("jZc0w");function h4(e,t){return function(e,t,r){let n=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===n)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==n)throw Error(`Provided ${r} is an array of ${e.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let r=[];return t.forEach(t=>{t in e?r.push(e[t]):r.push(null)}),r}throw Error(`The model has multiple (${n}) outputs, so ${r} must be either an array with ${n} elements or an object with ${t} keys. Provided ${r} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function h3(e,t,r,n){if(null!=t||null!=n)// string.
throw Error("Support sampleWeight is not implemented yet");if(null==r)return null;{// Apply class weights per sample.
let t=(0,dp.tidy)(()=>{if(1===e.shape.length)return(0,h2.clone)(e);if(2===e.shape.length){if(e.shape[1]>1)return(0,cn.argMax)(e,1);if(1===e.shape[1])return(0,oN.reshape)(e,[e.shape[0]]);throw Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),n=Array.from(await t.data());(0,dp.dispose)(t);let a=[];return n.forEach(e=>{if(null==r[e])throw Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(r[e])}),(0,ps.tensor1d)(a,"float32")}}/**
 * Standardize the output of a dataset iterator for use by
 * LayersModel.fitDataset().
 *
 * @param model: A `tf.LayersModel` object.
 * @param iteratorOut The output of a dataset iterator. It is required to be
 *   an object of the form `{xs: TensorOrArrayOrMap, ys:
 * TensorOrArrayOrMap}`, where `TensorOrArrayOrMap` is a single `tf.Tensor`,
 * a `tf.Tensor[]`, or a flat map from string names to `tf.Tensor`s.
 * @returns A flat array of `tf.Tensor` objects: the input `tf.Tensor`s
 *   followed by the target `tf.Tensor`s.  When `tf.Tensor`s are provided
 *   as a map, the order in the resulting array is taken from the `inputNames`
 *   and `outputNames` of the model.
 */function h8(// training.ts.
// tslint:disable-next-line:no-any
e,t){let r,n;r=t.xs,n=t.ys,dh.assert(null!=r&&null!=n,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=h6("input",e.inputNames,r),s=h6("output",e.outputNames,n),i=a[0].shape[0];dh.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),dh.assert(s.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${s.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let t=0;t<a.length;t++)dh.assert(a[t].shape[0]===i,()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);for(let t=0;t<s.length;t++)dh.assert(s[t].shape[0]===i,()=>`Batch size mismatch: output ${e.outputNames[t]} has ${s[t].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`);return{xs:a,ys:s}}function h6(e,t,r){if(r instanceof u7.Tensor)return[r];if(Array.isArray(r))return dh.assert(r.length===t.length,()=>`Received an array of ${r.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),r;{let n=[];// Check that all the required keys are available.
for(let a of t){if(null==r[a])throw new dg(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);n.push(r[a])}return n}}async function h5(// training.ts.
// tslint:disable-next-line:no-any
e,t,r){let n=null!=r.batchesPerEpoch;if(dh.assert(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),dh.assert(null!=r,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),dh.assert(null!=r.epochs&&r.epochs>0&&Number.isInteger(r.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${r.epochs}`),dh.assert(!n||r.batchesPerEpoch>0&&Number.isInteger(r.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${r.batchesPerEpoch}`),dh.assert(null==r.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a,s,i,o;let l=null!=r.validationData;if(l){if(h7(r.validationData))dh.assert(null==r.validationBatches||r.validationBatches>0&&Number.isInteger(r.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${r.validationBatches}`);else{let e=function(e){if(3===e.length)throw new dy("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(r.validationData);a=e.xs,s=e.ys}}let u=e.makeTrainFunction(),c=e.getDedupedMetricsNames();i=l?c.slice().concat(c.map(e=>"val_"+e)):c.slice();let d=hI(r.callbacks,r.yieldEvery),p=null==r.verbose?1:r.verbose,{callbackList:h,history:f}=hE(d,p,r.epochs,null,null,(o=null,null!=r.batchesPerEpoch?o=r.batchesPerEpoch:Number.isFinite(t.size)&&(o=t.size),o),null,l,i);h.setModel(e),e.history=f,await h.onTrainBegin(),e.stopTraining_=!1;let m=null==r.initialEpoch?0:r.initialEpoch,g=await t.iterator();for(;m<r.epochs;){let i={};await h.onEpochBegin(m);let o=0,d=0;for(n||(g=await t.iterator());!n||o<r.batchesPerEpoch;){let t=await g.next();// If `batchesPerEpoch` is specified, the dataset should not be
// exhausted until all epoches are done.
if(n&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${r.batchesPerEpoch}, but your dataset iterator ran out of data after ${o} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${r.batchesPerEpoch*r.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:n,ys:a}=h8(e,t.value),s={};s.batch=d,s.size=n[0].shape[0],await h.onBatchBegin(d,s);let i=[];if(null!=r.classWeight){let t=h4(r.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await h3(a[e],null,t[e]))}// Train on batch.
let l=n.concat(a).concat(i),p=u(l);dp.dispose(l);for(let e=0;e<c.length;++e){let t=c[e],r=p[e];s[t]=r,dp.keep(r)}await h.onBatchEnd(d,s),hx(s),d++,o++}if(n?o>=r.batchesPerEpoch:t.done){// Epoch finished. Perform validation.
if(l){let t;t=h7(r.validationData)?dN(await e.evaluateDataset(r.validationData,{batches:r.validationBatches})):dN(e.evaluate(a,s,{batchSize:null==r.validationBatchSize?32:r.validationBatchSize,verbose:0}));for(let r=0;r<e.metricsNames.length;++r)i[`val_${e.metricsNames[r]}`]=t[r]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(m,i),m++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}// Check if provided object is a Dataset object by checking its .iterator
// element.
function h7(e){return"function"==typeof e.iterator}async function h9(// training.ts.
// tslint:disable-next-line:no-any
e,t,r){r=r||{};let n=null!=r.batches,a=e.testFunction,s=[];if(r.verbose>0)throw new dy("Verbose mode is not implemented yet.");dh.assert(!n||r.batches>0&&Number.isInteger(r.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(r.batches)}`);let i="function"==typeof t.next?t:await t.iterator(),o=0,l=0;for(;!n||l<r.batches;){let t=await i.next();if(s=dp.tidy(()=>{if(t.value){// TODO(cais): Once real dataset is available, use
//   `map(x => standardizeDataIteratorOutput(model, x).map(f)`.
let{xs:r,ys:n}=h8(e,t.value),i=r.concat(n),u=dp.tidy(()=>a(i));if(dp.dispose(i),0===l)for(let e=0;e<u.length;++e)s.push((0,oy.scalar)(0));let c=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],r=s[e];s[e]=dp.tidy(()=>oO.add(s[e],op.mul(c,t))),l>0&&dp.dispose(r)}dp.dispose(u),o+=c,++l}return s}),t.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${r.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){let t=s[e];s[e]=om.div(s[e],o),dp.dispose(t)}return dS(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * Interfaces and methods for training models using tf.Tensor objects.
 */A("i64bB");var dh=A("jjNRA"),dp=A("c2DT1"),od=A("inFmq"),u7=A("9jCh7");function fe(e){dh.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function ft(e,t,r){return null==e?[null]:Array.isArray(e)?e.map(e=>pm(e,t,r-t)):pm(e,t,r-t)}function fr(e,t){return dp.tidy(()=>null==e?null:Array.isArray(e)?e.map(e=>fr(e,t)):pS(e,"int32"===t.dtype?t:od.cast(t,"int32")))}function fn(e,t){let r=[],n=0,a=null;for(;n<e;)(a=n+t)>=e&&(a=e),r.push([n,a]),n=a;return r}function fa(e){let t=[];e instanceof u7.Tensor&&(e=[e]);// Make Tensors at least 2D.
for(let r=0;r<e.length;++r){let n=e[r];if(1===n.rank)t.push(pf(n,1));else if(0===n.rank)throw Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");else t.push(n)}return t}function fs(e,t){if(null==e)return;let r=[];if(t instanceof u7.Tensor)r.push(t.id);else if(Array.isArray(t))t.forEach(e=>r.push(e.id));else if(null!=t)for(let e in t){let n=t[e];r.push(n.id)}let n=[];if(e instanceof u7.Tensor)-1===r.indexOf(e.id)&&n.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===r.indexOf(e.id)&&n.push(e)});else if(null!=e)for(let t in e){let a=e[t];-1===r.indexOf(a.id)&&n.push(a)}n.forEach(e=>{e.isDisposed||e.dispose()})}function fi(e){return Array.isArray(e)}function fo(e){return!(e instanceof u7.Tensor)&&!fi(e)}function fl(e,t,r,n=!0,a=""){let s;if(null==t||0===t.length){// Check for the case where the model expected no data, but some data got
// sent.
if(null!=e){let t=!1;if(fi(e)&&e.length>0)t=!0;else if(fo(e)){for(let r in e)if(e.hasOwnProperty(r)){t=!0;break}}else t=!0;if(t)throw new dg(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);if(fo(e))for(let r of(s=[],t)){if(null==e[r])throw new dg(`No data provided for "${r}". Need data for each key in: ${t}`);s.push(e[r])}else if(fi(e)){if(e.length!==t.length)throw new dg(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new dg(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}// Check shape compatibility.
if(s=fa(s),null!=r)for(let e=0;e<t.length;++e){if(null==r[e])continue;let i=s[e];if(i.shape.length!==r[e].length)throw new dg(`Error when checking ${a}: expected ${t[e]} to have ${r[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<r[e].length;++t){if(0===t&&!n)continue;let s=i.shape[t],o=r[e][t];if(null!=o&&o>=0&&s!==o)throw new dg(`${a} expected a batch of elements where each example has shape [${r[e].slice(1,r[e].length)}] (i.e.,tensor shape [*,${r[e].slice(1,r[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}/**
 * Check inputs provided by the user.
 *
 * Porting Note: This corresponds to _standardize_input_data() in Python
 *   Keras. Because of the strong typing in TF.js, we do not need to convert
 *   the data. Specifically:
 *   1) in PyKeras, `data` can be `DataFrame` instances from pandas, for
 *      example. We don't need to worry about that here because there is no
 *      widely popular javascript/typesdcript equivalent of pandas (so far).
 *      If one becomes available in the future, we can add support.
 *   2) in PyKeras, inputs can be Python dict. But here we are stipulating
 * that the data is either a single `tf.Tensor` or an Array of `tf.Tensor`s. We
 * may add support for `Object` data inputs in the future when the need
 * arises.
 *
 * Instead, we perform basic checks for number of parameters and shapes.
 *
 * @param data: The input data.
 * @param names: Name for the inputs, from the model.
 * @param shapes: Expected shapes for the input data, from the model.
 * @param checkBatchAxis: Whether the size along the batch axis (i.e., the
 *   first dimension) will be checked for matching.
 * @param exceptionPrefix: Execption prefix message, used in generating error
 *   messages.
 * @throws ValueError: on incorrect number of inputs or mismatches in shapes.
 */function fu(e,t,r,n=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new dg(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new dg(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=r)for(let e=0;e<t.length;++e){if(null==r[e])continue;let i=s[e];if(i.shape.length!==r[e].length)throw new dg(`Error when checking ${a}: expected ${t[e]} to have ${r[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<r[e].length;++s){if(0===s&&!n)continue;let o=i.shape[s],l=r[e][s];if(null!=l&&l!==o)throw new dg(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(r[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}/**
 * A `tf.LayersModel` is a directed, acyclic graph of `tf.Layer`s plus methods
 * for training, evaluation, prediction and saving.
 *
 * `tf.LayersModel` is the basic unit of training, inference and evaluation in
 * TensorFlow.js. To create a `tf.LayersModel`, use `tf.LayersModel`.
 *
 * See also:
 *   `tf.Sequential`, `tf.loadLayersModel`.
 *
 * @doc {heading: 'Models', subheading: 'Classes'}
 */class fc extends h1{constructor(e){super(e),this.isTraining=!1}/**
     * Print a text summary of the model's layers.
     *
     * The summary includes
     * - Name and type of all layers that comprise the model.
     * - Output shape(s) of the layers
     * - Number of weight parameters of each layer
     * - If the model has non-sequential-like topology, the inputs each layer
     *   receives
     * - The total number of trainable and non-trainable parameters of the model.
     *
     * ```js
     * const input1 = tf.input({shape: [10]});
     * const input2 = tf.input({shape: [20]});
     * const dense1 = tf.layers.dense({units: 4}).apply(input1);
     * const dense2 = tf.layers.dense({units: 8}).apply(input2);
     * const concat = tf.layers.concatenate().apply([dense1, dense2]);
     * const output =
     *     tf.layers.dense({units: 3, activation: 'softmax'}).apply(concat);
     *
     * const model = tf.model({inputs: [input1, input2], outputs: output});
     * model.summary();
     * ```
     *
     * @param lineLength Custom line length, in number of characters.
     * @param positions Custom widths of each of the columns, as either
     *   fractions of `lineLength` (e.g., `[0.5, 0.75, 1]`) or absolute number
     *   of characters (e.g., `[30, 50, 65]`). Each number corresponds to
     *   right-most (i.e., ending) position of a column.
     * @param printFn Custom print function. Can be used to replace the default
     *   `console.log`. For example, you can use `x => {}` to mute the printed
     *   messages in the console.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */summary(e,t,r=console.log){if(!this.built)throw new dg("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function(e,t,r,n=console.log){let a;let s=function(e){let t=!0,r=[],n=[];for(let t in e.nodesByDepth)r.push(e.nodesByDepth[t]);for(let e of r){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}n.push(...e)}if(t)for(let r of e.layers){let e=!1;for(let a of r.inboundNodes)if(-1!==n.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,r=r||[.32,.61,.89,1]):(t=t||115,r=r||[.24,.48,.7,.8,1]),r[r.length-1]<=1&&(r=r.map(e=>Math.floor(t*e))),!s)for(let t in i.push("Receives inputs"),a=[],e.nodesByDepth)a.push(...e.nodesByDepth[t]);n("_".repeat(t)),hQ(i,r,n),n("=".repeat(t));let o=e.layers;for(let e=0;e<o.length;++e)s?/**
 * Prints a summary for a single Layer, without connectivity information.
 *
 * @param layer: Layer instance to print.
 */function(e,t,r){let n,a;try{a=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){a="multiple"}try{n=JSON.stringify(e.outputShape)}catch(e){n="multiple"}let s=e.name,i=e.getClassName(),o=[`${s} (${i})`,a,n,e.countParams().toString()];hQ(o,t,r)}(o[e],r,n):/**
 * Prints a summary for a single Layer, with connectivity information.
 */function(e,t,r,n){let a,s;try{s=e.inboundNodes.map(e=>JSON.stringify(e.inputShapes)).join(",")}catch(e){s="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}let i=[];for(let t of e.inboundNodes)if(null==r||!(r.length>0)||-1!==r.indexOf(t))for(let e=0;e<t.inboundLayers.length;++e){let r=t.inboundLayers[e].name,n=t.nodeIndices[e],a=t.tensorIndices[e];i.push(`${r}[${n}][${a}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0],c=[`${o} (${l})`,s,a,e.countParams().toString(),u];hQ(c,t,n);for(let e=1;e<i.length;++e)hQ(["","","","",i[e]],t,n)}(o[e],r,a,n),n((e===o.length-1?"=":"_").repeat(t));// tslint:disable-next-line:no-any
e.checkTrainableWeightsConsistency();let l=null!=e.collectedTrainableWeights?p0(e.collectedTrainableWeights):p0(e.trainableWeights),u=p0(e.nonTrainableWeights);n(`Total params: ${l+u}`),n(`Trainable params: ${l}`),n(`Non-trainable params: ${u}`),n("_".repeat(t))}(this,e,t,r)}/**
     * Configures and prepares the model for training and evaluation.  Compiling
     * outfits the model with an optimizer, loss, and/or metrics.  Calling `fit`
     * or `evaluate` on an un-compiled model will throw an error.
     *
     * @param args a `ModelCompileArgs` specifying the loss, optimizer, and
     * metrics to be used for fitting and evaluating this model.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){let t={Adagrad:()=>(0,hX.train).adagrad(.01),Adadelta:()=>(0,hX.train).adadelta(1,.95,pd()),Adam:()=>(0,hX.train).adam(.001,.9,.999,pd()),Adamax:()=>(0,hX.train).adamax(.002,.9,.999,pd(),0),RMSProp:()=>(0,hX.train).rmsprop(.001,.9,0,pd()),SGD:()=>(0,hX.train).sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new dg(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof hA.Optimizer))throw new dg("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}// TODO(cais): Add lossWeights.
// TODO(cais): Add sampleWeightMode.
// Prepare loss functions.
let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss){if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new dg(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);let r=e.loss;t=r.map(e=>hV(e))}else{let r=hV(e.loss);this.outputs.forEach(e=>{t.push(r)})}}else{for(let t in e.loss=e.loss,e.loss)if(-1===this.outputNames.indexOf(t))throw new dg(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let r of this.outputNames)null==e.loss[r]&&console.warn(`Output "${r}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${r} during training`),t.push(hV(e.loss[r]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){// TODO(cais): Logic for skipping target(s).
let t=this.internalOutputShapes[e],r=this.outputNames[e];this.feedOutputNames.push(r),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}// TODO(cais): Add logic for output masks.
// TODO(cais): Add logic for sample weights.
let r=[];// Prepare metrics.
this.metrics=e.metrics,// TODO(cais): Add weightedMetrics.
this.metricsNames=["loss"],this.metricsTensors=[],dZ("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==r.indexOf(e))continue;// TODO(cais): Add weightedLoss, sampleWeight and mask.
//   The following line should be weightedLoss
let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}// Porting Note: Due to the imperative nature of the backend, we calculate
//   the regularizer penalties in the totalLossFunction, instead of here.
});let n=function(e,t){let r;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);if("string"==typeof e||"function"==typeof e)r=[e];else if(Array.isArray(e)||"object"==typeof e)r=e;else throw TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(r))return t.map(e=>r);{// In this case, metrics is a dict.
let e=[];for(let n of t){let t=r.hasOwnProperty(n)?r[n]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,r)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([r,e])};dZ("metric",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==r.indexOf(e))continue;let t=n[e],s=t=>{let r,n,s;//  TODO(cais): Use 'weights_' for weighted metrics.
for(let i of t){let t;if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t;let a=this.internalOutputShapes[e];1===a[a.length-1]||this.lossFunctions[e]===hj?-1!==["accuracy","acc"].indexOf(i)?n=hG:-1!==["crossentropy","ce"].indexOf(i)&&(n=hW):this.lossFunctions[e]===hL?-1!==["accuracy","acc"].indexOf(i)?n=hq:-1!==["crossentropy","ce"].indexOf(i)&&(n=hL):-1!==["accuracy","acc"].indexOf(i)?n=hU:-1!==["crossentropy","ce"].indexOf(i)&&(n=hF),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),// TODO(cais): Add weighting actually.
s=n,r=""+t}else{let e=function(e){if("string"==typeof e&&e in hH)return hH[e];if("string"!=typeof e&&null!=e)return e;throw new dg(`Unknown metric ${e}`)}(i);// TODO(cais): Add weighting actually.
s=e,r=""+hK(i)}dZ(r,()=>{t=s}),a(e,r,t)}};s(t);// TODO(cais): Call handleMetrics with weights.
}}),// Porting Notes: Given the imperative backend of tfjs-core,
//   there is no need for constructing the symbolic graph and placeholders.
this.collectedTrainableWeights=this.trainableWeights}/**
     * Check trainable weights count consistency.
     *
     * This will raise a warning if `this.trainableWeights` and
     * `this.collectedTrainableWeights` are inconsistent (i.e., have different
     * numbers of parameters).
     * Inconsistency will typically arise when one modifies `model.trainable`
     * without calling `model.compile()` again.
     */checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}/**
     * Returns the loss value & metrics values for the model in test mode.
     *
     * Loss and metrics are specified during `compile()`, which needs to happen
     * before calls to `evaluate()`.
     *
     * Computation is done in batches.
     *
     * ```js
     * const model = tf.sequential({
     *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]
     * });
     * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});
     * const result = model.evaluate(
     *     tf.ones([8, 10]), tf.ones([8, 1]), {batchSize: 4});
     * result.print();
     * ```
     *
     * @param x `tf.Tensor` of test data, or an `Array` of `tf.Tensor`s if the
     * model has multiple inputs.
     * @param y `tf.Tensor` of target data, or an `Array` of `tf.Tensor`s if the
     * model has multiple outputs.
     * @param args A `ModelEvaluateArgs`, containing optional fields.
     *
     * @return `Scalar` test loss (if the model has a single output and no
     *   metrics) or `Array` of `Scalar`s (if the model has multiple outputs
     *   and/or metrics). The attribute `model.metricsNames`
     *   will give you the display labels for the scalar outputs.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */evaluate(e,t,r={}){let n=null==r.batchSize?32:r.batchSize;fe(n);let a=this.standardizeUserDataXY(e,t,!0,n);try{// TODO(cais): If uses `useLearningPhase`, set the corresponding element
// of the input to 0.
let e=a[0].concat(a[1]);this.makeTestFunction();let t=this.testFunction,s=this.testLoop(t,e,n,r.verbose,r.steps);return dS(s)}finally{fs(a[0],e),fs(a[1],t)}}// TODO(cais): Add code snippet below once real dataset objects are
//   available.
/**
     * Evaluate model using a dataset object.
     *
     * Note: Unlike `evaluate()`, this method is asynchronous (`async`).
     *
     * @param dataset A dataset object. Its `iterator()` method is expected
     *   to generate a dataset iterator object, the `next()` method of which
     *   is expected to produce data batches for evaluation. The return value
     *   of the `next()` call ought to contain a boolean `done` field and a
     *   `value` field. The `value` field is expected to be an array of two
     *   `tf.Tensor`s or an array of two nested `tf.Tensor` structures. The former
     *   case is for models with exactly one input and one output (e.g.
     *   a sequential model). The latter case is for models with multiple
     *   inputs and/or multiple outputs. Of the two items in the array, the
     *   first is the input feature(s) and the second is the output target(s).
     * @param args A configuration object for the dataset-based evaluation.
     * @returns Loss and metric values as an Array of `Scalar` objects.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */async evaluateDataset(e,t){return this.makeTestFunction(),h9(this,e,t)}/**
     * Get number of samples provided for training, evaluation or prediction.
     *
     * @param ins Input `tf.Tensor`.
     * @param batchSize Integer batch size, optional.
     * @param steps Total number of steps (batches of samples) before
     * declaring loop finished. Optional.
     * @param stepsName The public API's parameter name for `steps`.
     * @returns Number of samples provided.
     */checkNumSamples(e,t,r,n="steps"){let a;if(null!=r){if(a=null,null!=t)throw new dg(`If ${n} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(null!=e)a=Array.isArray(e)?e[0].shape[0]:e.shape[0];else throw new dg(`Either the input data should have a defined shape, or ${n} shoud be specified.`);return a}/**
     * Execute internal tensors of the model with input data feed.
     * @param inputs Input data feed. Must match the inputs of the model.
     * @param outputs Names of the output tensors to be fetched. Must match
     *   names of the SymbolicTensors that belong to the graph.
     * @returns Fetched values for `outputs`.
     */execute(e,t){if(Array.isArray(t)&&0===t.length)throw new dg("`outputs` is an empty Array, which is not allowed.");let r=Array.isArray(t),n=r?t:[t],a=this.retrieveSymbolicTensors(n),s=new hn;if(e instanceof u7.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new dg(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let t of this.inputs){let r=e[t.name];if(null==r)throw new dg(`No value is provided for the model's input ${t.name}`);s.add(t,r)}// Run execution.
let i=hi(a,s);return r?i:i[0]}/**
     * Retrieve the model's internal symbolic tensors from symbolic-tensor names.
     */retrieveSymbolicTensors(e){let t=dx(null,e.length),r=e.length;for(let n of this.layers){let a=Array.isArray(n.output)?n.output:[n.output],s=a.map(e=>e.name);for(let n=0;n<e.length;++n){let i=s.indexOf(e[n]);if(-1!==i&&(t[n]=a[i],r--),0===r)break}if(0===r)break}if(r>0){let r=[];throw t.forEach((t,n)=>{null==t&&r.push(e[n])}),new dg(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}/**
     * Helper method to loop over some data in batches.
     *
     * Porting Note: Not using the functional approach in the Python equivalent
     *   due to the imperative backend.
     * Porting Note: Does not support step mode currently.
     *
     * @param ins: input data
     * @param batchSize: integer batch size.
     * @param verbose: verbosity model
     * @returns: Predictions as `tf.Tensor` (if a single output) or an `Array` of
     *   `tf.Tensor` (if multipe outputs).
     */predictLoop(e,t=32,r=!1){return dp.tidy(()=>{let n=this.checkNumSamples(e);if(r)throw new dy("Verbose predictLoop() is not implemented yet.");// Sample-based predictions.
// Porting Note: Tensor currently does not support sliced assignments as
//   in numpy, e.g., x[1:3] = y. Therefore we use concatenation while
//   iterating over the batches.
let a=fn(n,t),s=this.outputs.map(e=>[]);// TODO(cais): Can the scope() be pushed down inside the for loop?
for(let t=0;t<a.length;++t){let r=dp.tidy(()=>{let r=a[t][0],n=a[t][1],s=ft(e,r,n),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new hn(i);return hi(this.outputs,o)});r.forEach((e,t)=>s[t].push(e))}return dS(s.map(e=>uV.concat(e,0)))})}/**
     * Generates output predictions for the input samples.
     *
     * Computation is done in batches.
     *
     * Note: the "step" mode of predict() is currently not supported.
     *   This is because the TensorFlow.js core backend is imperative only.
     *
     * ```js
     * const model = tf.sequential({
     *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]
     * });
     * model.predict(tf.ones([8, 10]), {batchSize: 4}).print();
     * ```
     *
     * @param x The input data, as a Tensor, or an `Array` of `tf.Tensor`s if
     *   the model has multiple inputs.
     * @param args A `ModelPredictArgs` object containing optional fields.
     *
     * @return Prediction results as a `tf.Tensor`(s).
     *
     * @exception ValueError In case of mismatch between the provided input data
     *   and the model's expectations, or in case a stateful model receives a
     *   number of samples that is not a multiple of the batch size.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */predict(e,t={}){let r=fa(e);fu(r,this.inputNames,this.feedInputShapes,!1);try{// TODO(cais): Take care of stateful models.
//   if (this.stateful) ...
// TODO(cais): Take care of the learning_phase boolean flag.
//   if (this.useLearningPhase) ...
let e=null==t.batchSize?32:t.batchSize;return fe(e),this.predictLoop(r,e)}finally{fs(r,e)}}/**
     * Returns predictions for a single batch of samples.
     *
     * ```js
     * const model = tf.sequential({
     *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]
     * });
     * model.predictOnBatch(tf.ones([8, 10])).print();
     * ```
     * @param x: Input samples, as a Tensor (for models with exactly one
     *   input) or an array of Tensors (for models with more than one input).
     * @return Tensor(s) of predictions
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */predictOnBatch(e){fu(e,this.inputNames,this.feedInputShapes,!0);// TODO(cais): Take care of the learning_phase boolean flag.
//   if (this.useLearningPhase) ...
let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,r=!0,n){// TODO(cais): Add sampleWeight, classWeight
if(null==this.optimizer_)throw new dm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e],r=this.feedLossFns[e];r===hL?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(e=fl(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=fl(t,this.feedOutputNames,a,!1,"target"),!// TODO(cais): Standardize sampleWeights & classWeights.
function(e,t,r){let n=d_(e.map(e=>e.shape[0]));n.sort();let a=d_(t.map(e=>e.shape[0]));// TODO(cais): Check `weights` as well.
if(a.sort(),n.length>1)throw new dg(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(e=>e.shape))}`);if(a.length>1)throw new dg(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(e=>e.shape))}`);if(n.length>0&&a.length>0&&!dh.arraysEqual(n,a))throw new dg(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${a[0]} target sample(s).`)}(e,t,0),!// TODO(cais): Check sampleWeights as well.
/**
 * Validation on the compatibility of targes and loss functions.
 *
 * This helps prevent users from using loss functions incorrectly.
 *
 * @param targets `Array` of `tf.Tensor`s of targets.
 * @param lossFns `Array` of loss functions.
 * @param outputShapes `Array` of shapes of model outputs.
 */function(e,t,r){// TODO(cais): Dedicated test coverage?
let n=[h$,hj,hF];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=r[a];if(null!=i){if(i===hF&&1===s.shape[s.shape.length-1])throw new dg(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==n.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let r=0;r<e.length;++r){let n=e[r],a=t[r];if(null!=a&&n!==a)throw new dg(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!=0)throw new dg(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${n}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,r,n,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);// TODO(cais): Handle sampleWeights.
if(null!=r)throw Error("sample weight is not supported yet.");let l=null;if(null!=n){let e=h4(n,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await h3(o[t],null,e[t]))}// TODO(cais): Deal with the case of model.stateful == true.
return[i,o,l]}/**
     * Loop over some test data in batches.
     * @param f A Function returning a list of tensors.
     * @param ins Array of tensors to be fed to `f`.
     * @param batchSize Integer batch size or `null` / `undefined`.
     * @param verbose verbosity mode.
     * @param steps Total number of steps (batches of samples) before
     * declaring test finished. Ignored with the default value of `null` /
     * `undefined`.
     * @returns Array of Scalars.
     */testLoop(e,t,r,n=0,a){return dp.tidy(()=>{let s=this.checkNumSamples(t,r,a,"steps"),i=[];if(n>0)throw new dy("Verbose mode is not implemented yet.");// TODO(cais): Use `indicesForConversionToDense' to prevent slow down.
if(null!=a)throw new dy("steps mode in testLoop() is not implemented yet");{let n=fn(s,r),a=(0,ps.tensor1d)(pc(0,s));for(let r=0;r<n.length;++r){let s=n[r][0],o=n[r][1],l=pm(a,s,o-s),u=fr(t,l),c=e(u);if(0===r)for(let e=0;e<c.length;++e)i.push((0,oy.scalar)(0));for(let e=0;e<c.length;++e){let t=c[e];i[e]=oO.add(i[e],op.mul(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=om.div(i[e],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let r=0;r<e.length;++r){let n=e[r],a=n;if(dk(e,n)>1){let t=dk(e.slice(0,r),n);a+=`_${t}`}t.push(a)}return t}/**
     * Creates a function that performs the following actions:
     *
     * 1. computes the losses
     * 2. sums them to get the total loss
     * 3. call the optimizer computes the gradients of the LayersModel's
     *    trainable weights w.r.t. the total loss and update the variables
     * 4. calculates the metrics
     * 5. returns the values of the losses and metrics.
     */makeTrainFunction(){return e=>{let t=[],r=e.slice(0,this.inputs.length),n=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map(e=>e.read()),o=this.optimizer_.minimize(()=>{let e;let i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});let o=new hn(i),l=hi(this.outputs,o,{training:!0});for(let r=0;r<this.lossFunctions.length;++r){let s=this.lossFunctions[r],i=s(n[r],l[r]);if(null!=a[r]){var u,c;u=i,c=a[r],i=(0,op.mul)(u,c)}// TODO(cais): push Scalar instead.
let o=cG.mean(i);// TODO(cais): Use a scope() instead, to avoid ownership.
t.push(o),e=0===r?i:oO.add(e,i)}// Compute the metrics.
// TODO(cais): These should probably be calculated outside
//   totalLossFunction to benefit speed?
for(let e=0;e<this.metricsTensors.length;++e){let r;if(this.outputs.length>1&&e<this.outputs.length)r=t[e];else{let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];r=cG.mean(t(n[a],l[a]))}dp.keep(r),// TODO(cais): Use a scope() instead, to avoid ownership.
s.push(r)}return e=cG.mean(e),// Add regularizer penalties.
this.calculateLosses().forEach(t=>{e=oO.add(e,t)}),e},!0,i);return[o].concat(s)}}/**
     * Create a function which, when invoked with an array of `tf.Tensor`s as a
     * batch of inputs, returns the prespecified loss and metrics of the model
     * under the batch of input data.
     */makeTestFunction(){this.testFunction=e=>dp.tidy(()=>{let t;let r=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:n[e]});let i=new hn(s),o=hi(this.outputs,i);// Compute total loss.
    for(let e=0;e<this.lossFunctions.length;++e){let n=this.lossFunctions[e],s=cG.mean(n(a[e],o[e]));t=0===e?s:oO.add(t,s),r.push(t)}// Compute the metrics.
    for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],n=this.metricsTensors[e][1],s=cG.mean(t(a[n],o[n]));r.push(s)}return r})}/**
     * Trains the model for a fixed number of epochs (iterations on a
     * dataset).
     *
     * ```js
     * const model = tf.sequential({
     *     layers: [tf.layers.dense({units: 1, inputShape: [10]})]
     * });
     * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});
     * for (let i = 1; i < 5 ; ++i) {
     *   const h = await model.fit(tf.ones([8, 10]), tf.ones([8, 1]), {
     *       batchSize: 4,
     *       epochs: 3
     *   });
     *   console.log("Loss after Epoch " + i + " : " + h.history.loss[0]);
     * }
     * ```
     *
     * @param x `tf.Tensor` of training data, or an array of `tf.Tensor`s if the
     * model has multiple inputs. If all inputs in the model are named, you
     * can also pass a dictionary mapping input names to `tf.Tensor`s.
     * @param y `tf.Tensor` of target (label) data, or an array of `tf.Tensor`s if
     * the model has multiple outputs. If all outputs in the model are named,
     * you can also pass a dictionary mapping output names to `tf.Tensor`s.
     * @param args A `ModelFitArgs`, containing optional fields.
     *
     * @return A `History` instance. Its `history` attribute contains all
     *   information collected during training.
     *
     * @exception ValueError In case of mismatch between the provided input
     * data and what the model expects.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */async fit(e,t,r={}){let n,a,s,i,o,l,u,c,d;if(this.isTraining)throw Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{let p,h,f;let m=null==r.batchSize?32:r.batchSize;fe(m);let g=await this.standardizeUserData(e,t,r.sampleWeight,r.classWeight,!1,m);n=g[0],a=g[1],d=g[2];// Prepare validation data.
let y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2===r.validationData.length)// config.validationData consists of valX and valY.
o=r.validationData[0],l=r.validationData[1];else if(3===r.validationData.length)throw new dy("validationData including sample weights is not supported yet.");else throw new dg(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);let e=await this.standardizeUserData(o,l,null,/** Unused sample weights. */null,!0,m);u=e[0],c=e[1],p=u.concat(c);// TODO(cais): Add useLearningPhase data properly.
}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;// Porting Note: In tfjs-layers, inputs[0] is always a Tensor.
let e=Math.floor(n[0].shape[0]*(1-r.validationSplit)),t=n[0].shape[0];u=ft(n,e,t),s=n,n=ft(n,0,e),c=ft(a,e,t),i=a,a=ft(a,0,e),// TODO(cais): Once sampleWeights becomes available, slice it to get
//   valSampleWeights.
p=u.concat(c);// TODO(cais): Add useLearningPhase data properly.
}else null!=r.validationSteps&&(y=!0);let b=n.concat(a).concat(d);this.checkTrainableWeightsConsistency();// TODO(cais): Handle use_learning_phase and learning_phase?
// Porting Note: Here we see a key deviation of tfjs-layers from
// Keras.
//  Due to the imperative nature of tfjs-layers' backend (tfjs-core),
//  we do not construct symbolic computation graphs to embody the
//  training process. Instead, we define a function that performs the
//  training action. In PyKeras, the data (inputs and targets) are fed
//  through graph placeholders. In tfjs-layers, the data are fed as
//  function arguments. Since the function are defined below in the
//  scope, we don't have equivalents of PyKeras's
//  `_make_train_funciton`.
let v=this.makeTrainFunction(),x=this.getDedupedMetricsNames();y?(this.makeTestFunction(),h=this.testFunction,f=x.slice().concat(x.map(e=>"val_"+e))):(h=null,p=[],f=x.slice());let w=hI(r.callbacks,r.yieldEvery),k=await this.fitLoop(v,b,x,m,r.epochs,r.verbose,w,h,p,r.shuffle,f,r.initialEpoch,null,null);return k}finally{this.isTraining=!1,fs(n,e),fs(a,t),fs(s,e),fs(i,t),fs(u,o),fs(c,l),null!=d&&dp.dispose(d)}// TODO(cais): Add value to outLabels.
}/**
     * Abstract fit function for `f(ins)`.
     * @param f A Function returning a list of tensors. For training, this
     *   function is expected to perform the updates to the variables.
     * @param ins List of tensors to be fed to `f`.
     * @param outLabels List of strings, display names of the outputs of `f`.
     * @param batchSize Integer batch size or `== null` if unknown. Default : 32.
     * @param epochs Number of times to iterate over the data. Default : 1.
     * @param verbose Verbosity mode: 0, 1, or 2. Default: 1.
     * @param callbacks List of callbacks to be called during training.
     * @param valF Function to call for validation.
     * @param valIns List of tensors to be fed to `valF`.
     * @param shuffle Whether to shuffle the data at the beginning of every
     * epoch. Default : true.
     * @param callbackMetrics List of strings, the display names of the metrics
     *   passed to the callbacks. They should be the concatenation of the
     *   display names of the outputs of `f` and the list of display names
     *   of the outputs of `valF`.
     * @param initialEpoch Epoch at which to start training (useful for
     *   resuming a previous training run). Default : 0.
     * @param stepsPerEpoch Total number of steps (batches on samples) before
     *   declaring one epoch finished and starting the next epoch. Ignored with
     *   the default value of `undefined` or `null`.
     * @param validationSteps Number of steps to run validation for (only if
     *   doing validation from data tensors). Not applicable for tfjs-layers.
     * @returns A `History` object.
     */async fitLoop(e,t,r,n,a,s,i,o,l,u,c,d,p,h){let f;null==n&&(n=32),null==a&&(a=1),null==u&&(u=!0),null==d&&(d=0);// TODO(cais): Change const to let below when implementing validation.
let m=!1;if(null!=o&&null!=l&&(m=!0),null!=h&&(m=!0,null==p))throw new dg("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=this.checkNumSamples(t,n,p,"steps_per_epoch");null!=g&&(f=pc(0,g)),null==s&&(s=1);let{callbackList:y,history:b}=hE(i,s,a,d,g,p,n,m,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;// TODO(cais): Take care of callbacks.validation_data as in PyKeras.
// TODO(cais): Pre-convert feeds for performance as in PyKeras.
for(let s=d;s<a;++s){await y.onEpochBegin(s);let a={};if(null!=p)throw new dy("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new dy("batch shuffling is not implemneted yet");u&&dh.shuffle(f);// Convert the potentially shuffled indices to Tensor1D, to avoid the
// cost of repeated creation of Array1Ds later on.
let s=(0,ps.tensor1d)(f),i=fn(g,n);for(let u=0;u<i.length;++u){let c={};if(await y.onBatchBegin(u,c),dp.tidy(()=>{let d=i[u][0],p=i[u][1],h=pm(s,d,p-d);c.batch=u,c.size=p-d;// TODO(cais): In ins, train flag can be a number, instead of an
//   Tensor? Do we need to handle this in tfjs-layers?
let f=fr(t,h),g=e(f);for(let e=0;e<r.length;++e){let t=r[e],n=g[e];c[t]=n,dp.keep(n);// TODO(cais): Use scope() to avoid ownership.
}if(u===i.length-1&&m){let e=this.testLoop(o,l,n);// Porting Notes: In tfjs-layers, valOuts is always an Array.
for(let t=0;t<r.length;++t){let n=r[t],s=e[t];dp.keep(s),// TODO(cais): Use scope() to avoid ownership.
a["val_"+n]=s}}}),await y.onBatchEnd(u,c),hx(c),this.stopTraining_)break;// TODO(cais): return outs as list of Tensor.
}s.dispose()}if(// TODO(cais): Run validation at the end of the epoch.
await y.onEpochEnd(s,a),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}// TODO(cais): Add code snippet below when it's possible to instantiate
//   actual dataset objects.
/**
     * Trains the model using a dataset object.
     *
     * @param dataset A dataset object. Its `iterator()` method is expected
     *   to generate a dataset iterator object, the `next()` method of which
     *   is expected to produce data batches for training. The return value
     *   of the `next()` call ought to contain a boolean `done` field and a
     *   `value` field. The `value` field is expected to be an array of two
     *   `tf.Tensor`s or an array of two nested `tf.Tensor` structures. The former
     *   case is for models with exactly one input and one output (e.g.
     *   a sequential model). The latter case is for models with multiple
     *   inputs and/or multiple outputs.
     *   Of the two items in the array, the first is the input feature(s) and
     *   the second is the output target(s).
     * @param args A `ModelFitDatasetArgs`, containing optional fields.
     *
     * @return A `History` instance. Its `history` attribute contains all
     *   information collected during training.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */async fitDataset(e,t){return h5(this,e,t)}/**
     * Runs a single gradient update on a single batch of data.
     *
     * This method differs from `fit()` and `fitDataset()` in the following
     * regards:
     *   - It operates on exactly one batch of data.
     *   - It returns only the loss and metric values, instead of
     *     returning the batch-by-batch loss and metric values.
     *   - It doesn't support fine-grained options such as verbosity and
     *     callbacks.
     *
     * @param x Input data. It could be one of the following:
     *   - A `tf.Tensor`, or an Array of `tf.Tensor`s (in case the model has
     *     multiple inputs).
     *   - An Object mapping input names to corresponding `tf.Tensor` (if the
     *     model has named inputs).
     * @param y Target data. It could be either a `tf.Tensor` or multiple
     *   `tf.Tensor`s. It should be consistent with `x`.
     * @returns Training loss or losses (in case the model has
     *   multiple outputs), along with metrics (if any), as numbers.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */async trainOnBatch(e,t){// TODO(cais): Support sampleWeight and classWeight.
// TODO(cais): Support Dataset objects.
let r=await this.standardizeUserData(e,t),n=r[0],a=r[1],s=this.makeTrainFunction(),i=s(n.concat(a)),o=[];for(let e of i){let t=await e.data();o.push(t[0])}return dp.dispose(i),fs(r[0],e),fs(r[1],t),dS(o)}/**
     * Extract weight values of the model.
     *
     * @param config: An instance of `io.SaveConfig`, which specifies
     * model-saving options such as whether only trainable weights are to be
     * saved.
     * @returns A `NamedTensorMap` mapping original weight names (i.e.,
     *   non-uniqueified weight names) to their values.
     */getNamedWeights(e){let t=[],r=null!=e&&e.trainableOnly,n=r?this.trainableWeights:this.weights,a=this.getWeights(r);for(let e=0;e<n.length;++e)(!r||n[e].trainable)&&t.push({name:n[e].originalName,tensor:a[e]});return t}/**
     * Setter used for force stopping of LayersModel.fit() (i.e., training).
     *
     * Example:
     *
     * ```js
     * const input = tf.input({shape: [10]});
     * const output = tf.layers.dense({units: 1}).apply(input);
     * const model = tf.model({inputs: [input], outputs: [output]});
     * model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});
     * const xs = tf.ones([8, 10]);
     * const ys = tf.zeros([8, 1]);
     *
     * const history = await model.fit(xs, ys, {
     *   epochs: 10,
     *   callbacks: {
     *     onEpochEnd: async (epoch, logs) => {
     *       if (epoch === 2) {
     *         model.stopTraining = true;
     *       }
     *     }
     *   }
     * });
     *
     * // There should be only 3 values in the loss array, instead of 10
     * values,
     * // due to the stopping after 3 epochs.
     * console.log(history.history.loss);
     * ```
     */set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=dp.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-dp.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=dT(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>dT(e))}else{let t=Object.keys(this.loss);e={};let r=this.loss;for(let n of t)if("string"==typeof r[n])e[n]=dT(r[n]);else throw Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[dT(hK(this.metrics))];{if(Array.isArray(this.metrics))return this.metrics.map(e=>dT(hK(e)));let e={};for(let t in this.metrics)e[t]=dT(hK(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}};// TODO(cais): Add weight_metrics when they are supported.
// TODO(cais): Add sample_weight_mode when it's supported.
// TODO(cais): Add loss_weights when it's supported.
}loadTrainingConfig(e){let t,r;if(null!=e.weighted_metrics)throw Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw Error("Loading sample_weight_mode is not supported yet.");let n=function e(t,r){if(null===t)return null;if("string"==typeof t)return dI(t);if("number"==typeof t||"boolean"==typeof t)return t;if(t instanceof Array){let n=[],a=t.length;for(let s=0;s<a;++s){let a=t[s];hY(r,s,a)?n.push(a):n.push(e(a,r))}return n}{let r={};for(let n of Object.keys(t)){let a=t[n];if("name"===n&&"string"==typeof a)// the names of LayersModel and Layer instances, should not undergo the
// camel-case conversion.
r[n]=a;else{let t=dI(n);r[t]=e(a,t)}}return r}}(e.optimizer_config),a=h_(n);if("string"==typeof e.loss)t=dI(e.loss);else if(Array.isArray(e.loss))t=e.loss.map(e=>dI(e));else if(null!=e.loss)for(let r in t={},e.loss)t[r]=dI(e.loss[r]);if(Array.isArray(e.metrics))r=e.metrics.map(e=>dI(e));else if(null!=e.metrics)for(let t in r={},e.metrics)r[t]=dI(e.metrics[t]);this.compile({loss:t,metrics:r,optimizer:a})}/**
     * Save the configuration and/or weights of the LayersModel.
     *
     * An `IOHandler` is an object that has a `save` method of the proper
     * signature defined. The `save` method manages the storing or
     * transmission of serialized data ("artifacts") that represent the
     * model's topology and weights onto or via a specific medium, such as
     * file downloads, local storage, IndexedDB in the web browser and HTTP
     * requests to a server. TensorFlow.js provides `IOHandler`
     * implementations for a number of frequently used saving mediums, such as
     * `tf.io.browserDownloads` and `tf.io.browserLocalStorage`. See `tf.io`
     * for more details.
     *
     * This method also allows you to refer to certain types of `IOHandler`s
     * as URL-like string shortcuts, such as 'localstorage://' and
     * 'indexeddb://'.
     *
     * Example 1: Save `model`'s topology and weights to browser [local
     * storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage);
     * then load it back.
     *
     * ```js
     * const model = tf.sequential(
     *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});
     * console.log('Prediction from original model:');
     * model.predict(tf.ones([1, 3])).print();
     *
     * const saveResults = await model.save('localstorage://my-model-1');
     *
     * const loadedModel = await tf.loadLayersModel('localstorage://my-model-1');
     * console.log('Prediction from loaded model:');
     * loadedModel.predict(tf.ones([1, 3])).print();
     * ```
     *
     * Example 2. Saving `model`'s topology and weights to browser
     * [IndexedDB](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API);
     * then load it back.
     *
     * ```js
     * const model = tf.sequential(
     *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});
     * console.log('Prediction from original model:');
     * model.predict(tf.ones([1, 3])).print();
     *
     * const saveResults = await model.save('indexeddb://my-model-1');
     *
     * const loadedModel = await tf.loadLayersModel('indexeddb://my-model-1');
     * console.log('Prediction from loaded model:');
     * loadedModel.predict(tf.ones([1, 3])).print();
     * ```
     *
     * Example 3. Saving `model`'s topology and weights as two files
     * (`my-model-1.json` and `my-model-1.weights.bin`) downloaded from
     * browser.
     *
     * ```js
     * const model = tf.sequential(
     *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});
     * const saveResults = await model.save('downloads://my-model-1');
     * ```
     *
     * Example 4. Send  `model`'s topology and weights to an HTTP server.
     * See the documentation of `tf.io.http` for more details
     * including specifying request parameters and implementation of the
     * server.
     *
     * ```js
     * const model = tf.sequential(
     *     {layers: [tf.layers.dense({units: 1, inputShape: [3]})]});
     * const saveResults = await model.save('http://my-server/model/upload');
     * ```
     *
     * @param handlerOrURL An instance of `IOHandler` or a URL-like,
     * scheme-based string shortcut for `IOHandler`.
     * @param config Options for saving the model.
     * @returns A `Promise` of `SaveResult`, which summarizes the result of
     * the saving, such as byte sizes of the saved artifacts for the model's
     *   topology and weight values.
     *
     * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}
     */async save(e,t){if("string"==typeof e){let t=hR.getSaveHandlers(e);if(0===t.length)throw new dg(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new dg(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new dg("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let r=await hR.encodeWeights(this.getNamedWeights(t)),n=this.toJSON(null,!1),a={modelTopology:n,format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${hJ}`,convertedBy:null},s=null!=t&&t.includeOptimizer;if(s&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();let{data:e,specs:t}=await hR.encodeWeights(await this.optimizer.getWeights(),"optimizer");r.specs.push(...t),r.data=hR.concatenateArrayBuffers([r.data,e])}return null!=this.userDefinedMetadata&&(hZ(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=r.data,a.weightSpecs=r.specs,e.save(a)}/**
     * Set user-defined metadata.
     *
     * The set metadata will be serialized together with the topology
     * and weights of the model during `save()` calls.
     *
     * @param setUserDefinedMetadata
     */setUserDefinedMetadata(e){hZ(e,this.name),this.userDefinedMetadata=e}/**
     * Get user-defined metadata.
     *
     * The metadata is supplied via one of the two routes:
     *   1. By calling `setUserDefinedMetadata()`.
     *   2. Loaded during model loading (if the model is constructed
     *      via `tf.loadLayersModel()`.)
     *
     * If no user-defined metadata is available from either of the
     * two routes, this function will return `undefined`.
     */getUserDefinedMetadata(){return this.userDefinedMetadata}}// The class name is 'Model' rather than 'LayersModel' for backwards
// compatibility since this class name shows up in the serialization format.
/** @nocollapse */fc.className="Model",dM.registerClass(fc);/**
 * A `tf.Functional` is an alias to `tf.LayersModel`.
 *
 * See also:
 *   `tf.LayersModel`, `tf.Sequential`, `tf.loadLayersModel`.
 *//** @doc {heading: 'Models', subheading: 'Classes'} */class fd extends fc{}fd.className="Functional",dM.registerClass(fd),/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//* Original source keras/models.py */A("i64bB");var hR=A("9ELKf"),dp=A("c2DT1"),dh=A("jjNRA"),dM=A("5IZxH");/**
 * A model with a stack of layers, feeding linearly from one to the next.
 *
 * `tf.sequential` is a factory function that creates an instance of
 * `tf.Sequential`.
 *
 * ```js
 *  // Define a model for linear regression.
 *  const model = tf.sequential();
 *  model.add(tf.layers.dense({units: 1, inputShape: [1]}));
 *
 *  // Prepare the model for training: Specify the loss and the optimizer.
 *  model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});
 *
 *  // Generate some synthetic data for training.
 *  const xs = tf.tensor2d([1, 2, 3, 4], [4, 1]);
 *  const ys = tf.tensor2d([1, 3, 5, 7], [4, 1]);
 *
 *  // Train the model using the data then do inference on a data point the
 *  // model hasn't seen:
 *  await model.fit(xs, ys);
 *  model.predict(tf.tensor2d([5], [1, 1])).print();
 * ```
 *
 * @doc {heading: 'Models', subheading: 'Classes'}
 */class fp extends fc{constructor(e){// Add to the model any layers passed to the constructor.
if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,// Set model name.
this.name=null!=e.name?e.name:dj("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}// Helper function to Sequential.add  Throws if the new output shape will be
// invalid.
checkShape(e){let t=e.inboundNodes[0].outputTensors[0].shape;if(t.some(e=>e<0))throw new dg(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}/**
     * Adds a layer instance on top of the layer stack.
     *
     * ```js
     *  const model = tf.sequential();
     *  model.add(tf.layers.dense({units: 8, inputShape: [1]}));
     *  model.add(tf.layers.dense({units: 4, activation: 'relu6'}));
     *  model.add(tf.layers.dense({units: 1, activation: 'relu6'}));
     *  // Note that the untrained model is random at this point.
     *  model.predict(tf.randomNormal([10, 1])).print();
     * ```
     * @param layer Layer instance.
     *
     * @exception ValueError In case the `layer` argument does not know its
     * input shape.
     * @exception ValueError In case the `layer` argument has multiple output
     *   tensors, or is already connected somewhere else (forbidden in
     *   `Sequential` models).
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */add(e){let t;let r=e instanceof fp||e instanceof fc;if(r){if(1!==(t=e).outputs.length)throw new dg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new dg("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){// first layer in model: check that it is an input layer
if(0===e.inboundNodes.length){// create an input layer
if(null==e.batchInputShape)throw new dg("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");// Instantiate the input layer.
let t=function(e){if(null==e.batchShape&&null==e.shape)throw Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new dg("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let r=e.dtype;null==r&&(r="float32");let n=new hr({batchInputShape:t,name:e.name,dtype:r,sparse:e.sparse}),a=n.inboundNodes[0].outputTensors;return a[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});// This will build the current layer and create the node connecting
// the current layer to the input layer we just created.
e.apply(t)}if(r)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new dg(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new dg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=function e(t,r,n){if((null==r||null!=n&&n>0)&&(r=t.sourceLayer,n=t.nodeIndex),0===r.inboundNodes.length)return[t];{let t=r.inboundNodes[n];if(0===t.inboundLayers.length)return t.inputTensors;{let r=[];for(let n=0;n<t.inboundLayers.length;n++){let a=t.inputTensors[n],s=t.inboundLayers[n],i=t.nodeIndices[n],o=e(a,s,i);// Avoid input redundancy.
for(let e of o)-1===r.indexOf(e)&&r.push(e)}return r}}}(this.outputs[0])}this.inboundNodes=[],// We create an input node, which we will keep updated
// as we add more layers.
// (This call has side effects.)
// tslint:disable-next-line:no-unused-expression
new p9({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,// no model-level masking for now
inputMasks:dx(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],// update self.inbound_nodes
this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}/**
     * Removes the last layer in the model.
     *
     * @exception TypeError if there are no layers in the model.
     */pop(){if(0===this.layers.length)throw TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],// update self.inbound_nodes
this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(pJ(e),0===this.inputs.length||0===this.outputs.length)throw TypeError("Sequential model cannot be built: model is empty. Add some layers first.");// actually create the model
this.model=new fc({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,// mirror model attributes
this.supportsMasking=this.model.supportsMasking,// TODO(michaelterry): Add caches
this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,// TODO(michaelterry): Add feedInputNames, feedInputs, if needed.
// TODO(michaelterry): Add callbackModel if needed.
this.built=!0}countParams(){return this.built||this.build(),super.countParams()}/**
     * Print a text summary of the Sequential model's layers.
     *
     * The summary includes
     * - Name and type of all layers that comprise the model.
     * - Output shape(s) of the layers
     * - Number of weight parameters of each layer
     * - The total number of trainable and non-trainable parameters of the
     * model.
     *
     * ```js
     * const model = tf.sequential();
     * model.add(
     *     tf.layers.dense({units: 100, inputShape: [10], activation: 'relu'}));
     * model.add(tf.layers.dense({units: 1, activation: 'sigmoid'}));
     *
     * model.summary();
     * ```
     *
     * @param lineLength Custom line length, in number of characters.
     * @param positions Custom widths of each of the columns, as either
     *   fractions of `lineLength` (e.g., `[0.5, 0.75, 1]`) or absolute number
     *   of characters (e.g., `[30, 50, 65]`). Each number corresponds to
     *   right-most (i.e., ending) position of a column.
     * @param printFn Custom print function. Can be used to replace the default
     *   `console.log`. For example, you can use `x => {}` to mute the printed
     *   messages in the console.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */summary(e,t,r=console.log){this.built||this.build(),super.summary(e,t,r)}/**
     * Sets the weights of the model.
     *
     * @param weights Should be a list of Tensors with shapes and types matching
     *   the output of `model.getWeights()`.
     */setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}/**
     * Returns the loss value & metrics values for the model in test mode.
     *
     * Loss and metrics are specified during `compile()`, which needs to happen
     * before calls to `evaluate()`.
     *
     * Computation is done in batches.
     *
     * ```js
     * const model = tf.sequential({
     *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]
     * });
     * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});
     * const result = model.evaluate(tf.ones([8, 10]), tf.ones([8, 1]), {
     *   batchSize: 4,
     * });
     * result.print();
     * ```
     *
     * @param x `tf.Tensor` of test data, or an `Array` of `tf.Tensor`s if the
     * model has multiple inputs.
     * @param y `tf.Tensor` of target data, or an `Array` of `tf.Tensor`s if the
     * model has multiple outputs.
     * @param args A `ModelEvaluateConfig`, containing optional fields.
     *
     * @return `Scalar` test loss (if the model has a single output and no
     *   metrics) or `Array` of `Scalar`s (if the model has multiple outputs
     *   and/or metrics). The attribute `model.metricsNames`
     *   will give you the display labels for the scalar outputs.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */evaluate(e,t,r={}){if(!this.built)throw new dm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,r)}// TODO(cais): Add code snippet below once real dataset objects are
//   available.
/**
     * Evaluate model using a dataset object.
     *
     * Note: Unlike `evaluate()`, this method is asynchronous (`async`).
     *
     * @param dataset A dataset object. Its `iterator()` method is expected
     *   to generate a dataset iterator object, the `next()` method of which
     *   is expected to produce data batches for evaluation. The return value
     *   of the `next()` call ought to contain a boolean `done` field and a
     *   `value` field. The `value` field is expected to be an array of two
     *   `tf.Tensor`s or an array of two nested `tf.Tensor` structures. The former
     *   case is for models with exactly one input and one output (e.g.
     *   a sequential model). The latter case is for models with multiple
     *   inputs and/or multiple outputs. Of the two items in the array, the
     *   first is the input feature(s) and the second is the output target(s).
     * @param args A configuration object for the dataset-based evaluation.
     * @returns Loss and metric values as an Array of `Scalar` objects.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */async evaluateDataset(e,t){if(!this.built)throw new dm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}/**
     * Generates output predictions for the input samples.
     *
     * Computation is done in batches.
     *
     * Note: the "step" mode of predict() is currently not supported.
     *   This is because the TensorFlow.js core backend is imperative only.
     *
     * ```js
     * const model = tf.sequential({
     *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]
     * });
     * model.predict(tf.ones([2, 10])).print();
     * ```
     *
     * @param x The input data, as a Tensor, or an `Array` of `tf.Tensor`s if
     *   the model has multiple inputs.
     * @param conifg A `ModelPredictConfig` object containing optional fields.
     *
     * @return `tf.Tensor`(s) of predictions.
     *
     * @exception ValueError In case of mismatch between the provided input data
     *   and the model's expectations, or in case a stateful model receives a
     *   number of samples that is not a multiple of the batch size.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}/**
     * Returns predictions for a single batch of samples.
     *
     * @param x: Input samples, as a Tensor, or list of Tensors (if the model
     *   has multiple inputs).
     * @return Tensor(s) of predictions
     */predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}/**
     * See `LayersModel.compile`.
     *
     * @param args
     */compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,// tslint:disable-next-line:no-any
this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,// TODO(cais): Add this.lossWeights, this.sampleWeightMode,
//   this.weightedMetrics, this.targets.
this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames;// TODO(cais): Add sampleWeights.
}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}/**
     * Trains the model for a fixed number of epochs (iterations on a dataset).
     *
     * ```js
     * const model = tf.sequential({
     *   layers: [tf.layers.dense({units: 1, inputShape: [10]})]
     * });
     * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});
     * const history = await model.fit(tf.ones([8, 10]), tf.ones([8, 1]), {
     *   batchSize: 4,
     *   epochs: 3
     * });
     * console.log(history.history.loss[0]);
     * ```
     *
     * @param x `tf.Tensor` of training data, or an array of `tf.Tensor`s if the
     * model has multiple inputs. If all inputs in the model are named, you can
     * also pass a dictionary mapping input names to `tf.Tensor`s.
     * @param y `tf.Tensor` of target (label) data, or an array of `tf.Tensor`s if
     * the model has multiple outputs. If all outputs in the model are named, you
     *  can also pass a dictionary mapping output names to `tf.Tensor`s.
     * @param args  A `ModelFitConfig`, containing optional fields.
     *
     * @return A `History` instance. Its `history` attribute contains all
     *   information collected during training.
     *
     * @exception ValueError In case of mismatch between the provided input data
     *   and what the model expects.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */async fit(e,t,r={}){if(!this.built)throw new dm("The model needs to be compiled before being used.");return this.model.fit(e,t,r)}/**
     * Trains the model using a dataset object.
     *
     * ```js
     * const xArray = [
     *   [1, 1, 1, 1, 1, 1, 1, 1, 1],
     *   [1, 1, 1, 1, 1, 1, 1, 1, 1],
     *   [1, 1, 1, 1, 1, 1, 1, 1, 1],
     *   [1, 1, 1, 1, 1, 1, 1, 1, 1],
     * ];
     * const yArray = [1, 1, 1, 1];
     * // Create a dataset from the JavaScript array.
     * const xDataset = tf.data.array(xArray);
     * const yDataset = tf.data.array(yArray);
     * // Zip combines the `x` and `y` Datasets into a single Dataset, the
     * // iterator of which will return an object containing of two tensors,
     * // corresponding to `x` and `y`.  The call to `batch(4)` will bundle
     * // four such samples into a single object, with the same keys now pointing
     * // to tensors that hold 4 examples, organized along the batch dimension.
     * // The call to `shuffle(4)` causes each iteration through the dataset to
     * // happen in a different order.  The size of the shuffle window is 4.
     * const xyDataset = tf.data.zip({xs: xDataset, ys: yDataset})
     *     .batch(4)
     *     .shuffle(4);
     * const model = tf.sequential({
     *   layers: [tf.layers.dense({units: 1, inputShape: [9]})]
     * });
     * model.compile({optimizer: 'sgd', loss: 'meanSquaredError'});
     * const history = await model.fitDataset(xyDataset, {
     *   epochs: 4,
     *   callbacks: {onEpochEnd: (epoch, logs) => console.log(logs.loss)}
     * });
     * ```
     *
     * @param dataset A dataset object. Its `iterator()` method is expected to
     *   generate a dataset iterator object, the `next()` method of which is
     *   expected to produce data batches for evaluation. The return value of the
     *   `next()` call ought to contain a boolean `done` field and a `value`
     *   field.
     *
     *   The `value` field is expected to be an object of with fields
     *   `xs` and `ys`, which point to the feature tensor and the target tensor,
     *   respectively. This case is for models with exactly one input and one
     *   output (e.g. a sequential model). For example:
     *   ```js
     *   {value: {xs: xsTensor, ys: ysTensor}, done: false}
     *   ```
     *
     *   If the model has multiple inputs, the `xs` field of `value` should
     *   be an object mapping input names to their respective feature tensors.
     *   For example:
     *   ```js
     *   {
     *     value: {
     *       xs: {
     *         input_1: xsTensor1,
     *         input_2: xsTensor2
     *       },
     *       ys: ysTensor
     *     },
     *     done: false
     *   }
     *   ```
     *   If the model has multiple outputs, the `ys` field of `value` should
     *   be an object mapping output names to their respective target tensors.
     *   For example:
     *   ```js
     *   {
     *     value: {
     *       xs: xsTensor,
     *       ys: {
     *         output_1: ysTensor1,
     *         output_2: ysTensor2
     *       },
     *     },
     *     done: false
     *   }
     *   ```
     * @param args A `ModelFitDatasetArgs`, containing optional fields.
     *
     * @return A `History` instance. Its `history` attribute contains all
     *   information collected during training.
     *
     * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}
     */async fitDataset(e,t){if(!this.built)throw new dm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}/**
     * Runs a single gradient update on a single batch of data.
     *
     * This method differs from `fit()` and `fitDataset()` in the following
     * regards:
     *   - It operates on exactly one batch of data.
     *   - It returns only the loss and metric values, instead of
     *     returning the batch-by-batch loss and metric values.
     *   - It doesn't support fine-grained options such as verbosity and
     *     callbacks.
     *
     * @param x Input data. It could be one of the following:
     *   - A `tf.Tensor`, or an Array of `tf.Tensor`s (in case the model has
     *     multiple inputs).
     *   - An Object mapping input names to corresponding `tf.Tensor` (if the
     *     model has named inputs).
     * @param y Target data. It could be either a `tf.Tensor` or multiple
     *   `tf.Tensor`s. It should be consistent with `x`.
     * @returns Training loss or losses (in case the model has
     *   multiple outputs), along with metrics (if any), as numbers.
     *
     * @doc {heading: 'Models', subheading: 'Classes'}
     */async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}/* See parent class for JsDoc *//** @nocollapse */static fromConfig(e,t,r={},n=!1){let a;let s={};if(t instanceof Array){if(!(null!=t[0].className)||"Merge"===t[0].className)throw new dg("Legacy serialization format not supported yet.");a=t}else dh.assert(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof fp))throw new dy(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let e of a){let t=void 0,r=h_(e,t,n);n&&r.setFastWeightInitDuringBuild(!0),i.add(r)}return i}/**
     * Setter used for force stopping of LayersModel.fit() (i.e., training).
     *
     * Example:
     *
     * ```js
     * const model = tf.sequential();
     * model.add(tf.layers.dense({units: 1, inputShape: [10]}));
     * model.compile({loss: 'meanSquaredError', optimizer: 'sgd'});
     * const xs = tf.ones([8, 10]);
     * const ys = tf.zeros([8, 1]);
     *
     * const history = await model.fit(xs, ys, {
     *   epochs: 10,
     *   callbacks: {
     *     onEpochEnd: async (epoch, logs) => {
     *       if (epoch === 2) {
     *         model.stopTraining = true;
     *       }
     *     }
     *   }
     * });
     *
     * // There should be only 3 values in the loss array, instead of 10 values,
     * // due to the stopping after 3 epochs.
     * console.log(history.history.loss);
     * ```
     */set stopTraining(e){// TODO(cais): When refactoring to remove the composition pattern happens,
// remove this method overriding.
if(null==this.model)throw new dg("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new dg("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}// TODO(cais): Override get trainableWeights() here
// tslint:disable-next-line:no-any
getConfig(){// NOTE(cais): We override the return type of getConfig() to `any` here,
//   because the `Sequential` class is a special case among `Container`
//   subtypes in that its getConfig() method returns an Array (not a
//   dict).
let e=[];for(let t of this.layers){let r={};r.className=t.getClassName(),r.config=t.getConfig(),e.push(r)}return{name:this.name,layers:e}}}/** @nocollapse */fp.className="Sequential",dM.registerClass(fp),/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 *  Advanced activation layers.
 */A("i64bB");var c2=A("8wbQq"),cf=A("cOWuO"),dM=A("5IZxH"),cP=A("3XskU"),cJ=A("a3pvF"),ck=A("7UQTl"),op=A("jZc0w"),od=A("inFmq"),lL=A("bRRKf"),dp=A("c2DT1"),ox=A("7kouu"),l0=A("fOBRA"),oy=A("3xp7o"),oO=A("hgacW"),lb=A("2PcQK"),cF=A("9dGIC");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */// Layer activation functions
A("i64bB");var dM=A("5IZxH"),c7=A("b636r"),c2=A("8wbQq"),dp=A("c2DT1"),cW=A("6V8xR"),uL=A("jvtSq"),dr=A("4Udpd"),dl=A("etcYL"),dt=A("dnEu5"),cM=A("2NPdY"),op=A("jZc0w");class fh extends dM.Serializable{getConfig(){return{}}}/**
 * Exponential linear unit (ELU).
 * Reference: https://arxiv.org/abs/1511.07289
 */class ff extends fh{/**
     * Calculate the activation function.
     *
     * @param x: Input.
     * @param alpha: Scaling factor the negative section.
     * @return Output of the ELU activation.
     */apply(e,t=1){return function(e,t=1){// TODO(cais): Add support for alpha values other than 1.
if(1!==t)throw new dy(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return ck.elu(e)}(e,t)}}/** @nocollapse */ff.className="elu",dM.registerClass(ff);/**
 * Scaled Exponential Linear Unit. (Klambauer et al., 2017).
 * Reference: Self-Normalizing Neural Networks, https://arxiv.org/abs/1706.02515
 * Notes:
 *   - To be used together with the initialization "lecunNormal".
 *   - To be used together with the dropout variant "AlphaDropout".
 */class fm extends fh{apply(e){return c7.selu(e)}}/** @nocollapse */fm.className="selu",dM.registerClass(fm);/**
 *  Rectified linear unit
 */class fg extends fh{apply(e){return c2.relu(e)}}/** @nocollapse */fg.className="relu",dM.registerClass(fg);/**
 * Rectified linear unit activation maxing out at 6.0.
 */class fy extends fh{apply(e){return(0,dp.tidy)(()=>cW.minimum(6,c2.relu(e)))}}/** @nocollapse */fy.className="relu6",dM.registerClass(fy);//* Linear activation (no-op) */
class fb extends fh{apply(e){return e}}/** @nocollapse */fb.className="linear",dM.registerClass(fb);/**
 * Sigmoid activation function.
 */class fv extends fh{apply(e){return uL.sigmoid(e)}}/** @nocollapse */fv.className="sigmoid",dM.registerClass(fv);/**
 * Segment-wise linear approximation of sigmoid.
 */class fx extends fh{apply(e){return(0,dp.tidy)(()=>{let t=oO.add(.5,op.mul(.2,e));return cf.clipByValue(t,0,1)})}}/** @nocollapse */fx.className="hardSigmoid",dM.registerClass(fx);/**
 * Softplus activation function.
 */class fw extends fh{apply(e){return dr.softplus(e)}}/** @nocollapse */fw.className="softplus",dM.registerClass(fw);/**
 * Softsign activation function.
 */class fk extends fh{apply(e){return(0,dp.tidy)(()=>om.div(e,oO.add(u5.abs(e),1)))}}/** @nocollapse */fk.className="softsign",dM.registerClass(fk);/**
 * Hyperbolic tangent function.
 */class fS extends fh{apply(e){return dl.tanh(e)}}/** @nocollapse */fS.className="tanh",dM.registerClass(fS);/**
 * Softmax activation function
 */class fN extends fh{/**
     * Calculate the activation function.
     *
     * @param x Tensor.
     * @param axis Integer, axis along which the softmax normalization is applied.
     * Invalid if < 2, as softmax across 1 (the batch dimension) is assumed to be
     * an error.
     *
     * @returns a Tensor of the same shape as x
     *
     * @throws ValueError: In case `dim(x) < 2`.
     */apply(e,t=-1){return dt.softmax(e,t)}}/** @nocollapse */fN.className="softmax",dM.registerClass(fN);/**
 * Log softmax activation function
 */class fT extends fh{/**
     * Calculate the activation function of log softmax:
     * log( exp(x_i) / sum(exp(x)) )
     *
     * @param x Tensor.
     * @param axis Integer, axis along which the softmax normalization is applied.
     * Invalid if < 2, as softmax across 1 (the batch dimension) is assumed to be
     * an error.
     *
     * @returns a Tensor of the same shape as x
     *
     * @throws ValueError: In case `dim(x) < 2`.
     */apply(e,t=-1){return cM.logSoftmax(e,t)}}/** @nocollapse */fT.className="logSoftmax",dM.registerClass(fT);/**
 * Swish activation function
 */class fI extends fh{/**
     * Calculate the activation function.
     *
     * @param x Tensor.
     * @param alpha Scaling factor for the sigmoid function.
     * @returns a Tensor of the same shape as x
     */apply(e,t=1){return(0,dp.tidy)(()=>op.mul(uL.sigmoid(op.mul(e,t)),e))}}/** @nocollapse */fI.className="swish",dM.registerClass(fI);/**
 * Mish activation function
 */class fC extends fh{/**
     * Calculate the activation function.
     *
     * @param x Tensor.
     * @returns a Tensor of the same shape as x
     */apply(e){return(0,dp.tidy)(()=>op.mul(e,dl.tanh(dr.softplus(e))))}}function fE(e){return e.getClassName()}function fA(e,t={}){return dA(e,dM.SerializationMap.getMap().classNameMap,t,"activation")}function fR(e){if(null==e){let e={};return e.className="linear",e.config={},fA(e)}if("string"==typeof e){let t={};return t.className=e,t.config={},fA(t)}return e instanceof fh?e:fA(e)}/** @nocollapse */fC.className="mish",dM.registerClass(fC),/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//* original source: keras/regularizers.py */A("i64bB");var dM=A("5IZxH"),dp=A("c2DT1"),ue=A("hxi4c"),oO=A("hgacW"),oT=A("9NgTx"),op=A("jZc0w"),u5=A("7j49I"),oN=A("4sqA7");class f_ extends dM.Serializable{}class fO extends f_{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}/**
     * Porting note: Renamed from __call__.
     * @param x Variable of which to calculate the regularization score.
     */apply(e){return(0,dp.tidy)(()=>{let t=(0,ue.zeros)([1]);return this.hasL1&&(t=(0,oO.add)(t,(0,oT.sum)(op.mul(this.l1,(0,u5.abs)(e))))),this.hasL2&&(t=(0,oO.add)(t,(0,oT.sum)(op.mul(this.l2,pN(e))))),oN.reshape(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}/** @nocollapse */static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}/** @nocollapse */fO.className="L1L2",dM.registerClass(fO);const fP={l1l2:"L1L2"};function f$(e,t={}){return dA(e,dM.SerializationMap.getMap().classNameMap,t,"regularizer")}function fD(e){if(null==e)return null;if("string"==typeof e){let t=e in fP?fP[e]:e;return f$({className:t,config:{}})}return e instanceof f_?e:f$(e)}class fM extends ht{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=pY(e);let r=(0,c2.relu)(e);return null!=this.maxValue&&(r=(0,cf.clipByValue)(r,0,this.maxValue)),r}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */fM.className="ReLU",dM.registerClass(fM);class fF extends ht{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let r=pY(e);return(0,cP.leakyRelu)(r,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */fF.className="LeakyReLU",dM.registerClass(fF);class fL extends ht{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=pX(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=fD(e.alphaRegularizer),this.alphaConstraint=hy(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if("number"==typeof e.sharedAxes)this.sharedAxes=[e.sharedAxes];else throw new dg(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=pJ(e);let t=e.slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);// Set input spec.
let r={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)r[t]=e[t];this.inputSpec=[new p6({ndim:e.length,axes:r})],this.built=!0}call(e,t){return e=pY(e),(0,cJ.prelu)(e,this.alpha.read())}getConfig(){let e={alphaInitializer:dE(this.alphaInitializer),alphaRegularizer:dE(this.alphaRegularizer),alphaConstraint:dE(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */fL.className="PReLU",dM.registerClass(fL);class fj extends ht{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new dy(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let r=pY(e);return(0,ck.elu)(r)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */fj.className="ELU",dM.registerClass(fj);class fB extends ht{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let r=pY(e);return(0,op.mul)(r,(0,od.cast)((0,lL.greater)(r,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */fB.className="ThresholdedReLU",dM.registerClass(fB);class fz extends ht{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=new fN().apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){// TODO(pforderique): Add tests for when `this.axis` is a number[].
return(0,dp.tidy)(()=>{let r=pY(e),n=t.mask;if(null!=n){// Since mask is 1.0 for positions we want to keep and 0.0 for masked
// positions, this operation will create a tensor which is 0.0 for
// positions we want to attend and -1e.9 for masked positions.
let e=(0,op.mul)((0,ox.sub)((0,l0.ones)(r.shape),(0,od.cast)(n,r.dtype)),(0,oy.scalar)(-1e9));// Since we are adding it to the raw scores before the softmax, this
// is effectively the same as removing these entirely.
r=(0,oO.add)(r,e)}return this.axis instanceof Array?this.axis.length>1?(0,lb.exp)((0,ox.sub)(r,(0,cF.logSumExp)(r,this.axis,!0))):this.softmax(r,this.axis[0]):this.softmax(r,this.axis)})}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */fz.className="Softmax",dM.registerClass(fz),/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * TensorFlow.js Layers: Convolutional Layers
 */A("i64bB");var dp=A("c2DT1"),ld=A("aDHKy"),cm=A("ebPOp"),pa=A("jDZRN"),fV=A("kj7tM"),dM=A("5IZxH"),cg=A("5rn1J"),fG=A("7Zgyq"),c9=A("8uLn4"),d3=A("aosGd");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fU(e,t,r){if("number"==typeof e)return dx(e,t);if(e.length!==t)throw new dg(`The ${r} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let n=0;n<t;++n){let a=e[n];if(a!==parseInt(a.toString(),10))throw new dg(`The ${r} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function fW(e,t,r,n,a=1){return null==e?e:Math.floor((("same"===r?e:e-(t+(t-1)*(a-1))+1)+n-1)/n)}function fq(e,t,r,n){if(null==e)return null;if("valid"===n)e=e*t+pu([r-t,0]);else if("same"===n)e*=t;else throw new dg(`Unsupport padding mode: ${n}.`);return e}function fH(e,t){// TODO(cais): Cast type to float32 if not.
return(0,dp.tidy)(()=>(dq(t),"channelsFirst"===t)?ld.transpose(e,[0,2,3,1]):e)}function fK(e,t){return(0,dp.tidy)(()=>(dq(t),"channelsFirst"===t)?ld.transpose(e,[0,2,3,4,1]):e)}function fX(e,t,r,n=[1,1],a="valid",s,i,o=null){return(0,dp.tidy)(()=>{if(null==s&&(s=pp()),dq(s),3!==e.rank&&4!==e.rank)throw new dg(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new dg(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=fH(e,s);if("causal"===a)throw new dy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=pa.conv2d({x:l,filter:t,strides:n,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:r,activation:o}),"channelsFirst"===s&&(l=ld.transpose(l,[0,3,1,2])),l})}class fZ extends ht{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",fZ.verifyArgs(t),this.rank=e,d$(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new dy(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=fU(t.kernelSize,e,"kernelSize"),this.strides=fU(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,dH(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,dq(this.dataFormat),this.activation=fR(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=pX(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=hy(t.biasConstraint),this.biasRegularizer=fD(t.biasRegularizer),this.activityRegularizer=fD(t.activityRegularizer),this.dilationRate=fU(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new dg(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new dg(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new dg(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(// Check config.kernelSize type and shape.
dw("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!dP(e.kernelSize,"number",1,3))throw new dg(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:fE(this.activation),useBias:this.useBias,biasInitializer:dE(this.biasInitializer),biasRegularizer:dE(this.biasRegularizer),activityRegularizer:dE(this.activityRegularizer),biasConstraint:dE(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class fQ extends fZ{constructor(e,t){super(e,t),this.kernel=null,fQ.verifyArgs(t),this.filters=t.filters,d$(this.filters,"filters"),this.kernelInitializer=pX(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=hy(t.kernelConstraint),this.kernelRegularizer=fD(t.kernelRegularizer)}build(e){e=pJ(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new dg(`The channel dimension of the input should be defined. Found ${e[t]}`);let r=e[t],n=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",n,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:r}}],this.built=!0}call(e,t){return(0,dp.tidy)(()=>{let t;e=pY(e);let r=null==this.bias?null:this.bias.read(),n=dD(this.activation.getClassName());if(null!=n&&2===this.rank)t=fX(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,n);else{if(1===this.rank)t=function(e,t,r,n=1,a="valid",s,i=1){return(0,dp.tidy)(()=>{// Check the ranks of x, kernel and bias.
if(null==s&&(s=pp()),dq(s),3!==e.shape.length)throw new dg(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new dg(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=r&&1!==r.shape.length)throw new dg(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=ld.transpose(e,[0,2,1])),"causal"===a)throw new dy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=cm.conv1d(e,t,n,"same"===a?"same":"valid","NWC",i);return null!=r&&(o=pI(o,r)),o})}(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=fX(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(3===this.rank)t=function(e,t,r,n=[1,1,1],a="valid",s,i){return(0,dp.tidy)(()=>{if(null==s&&(s=pp()),dq(s),4!==e.rank&&5!==e.rank)throw new dg(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new dg(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=fK(e,s);if("causal"===a)throw new dy("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=fV.conv3d(o,t,n,"same"===a?"same":"valid","NDHWC",i),null!=r&&(o=pI(o,r)),"channelsFirst"===s&&(o=ld.transpose(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new dy("convolutions greater than 3D are not implemented yet.");null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=pJ(e);let t=[],r="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<r.length;++e){let n=fW(r[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(n)}let n=[e[0]];return"channelsLast"===this.dataFormat?(n=n.concat(t)).push(this.filters):(n.push(this.filters),n=n.concat(t)),n}getConfig(){let e={filters:this.filters,kernelInitializer:dE(this.kernelInitializer),kernelRegularizer:dE(this.kernelRegularizer),kernelConstraint:dE(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){// Check config.filters type, shape, and value.
if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new dg(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class fY extends fQ{constructor(e){super(2,e),fY.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){// config.kernelSize must be a number or array of numbers.
if("number"!=typeof e.kernelSize&&!dP(e.kernelSize,"number",1,2))throw new dg(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}/** @nocollapse */fY.className="Conv2D",dM.registerClass(fY);class fJ extends fQ{constructor(e){super(3,e),fJ.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){// config.kernelSize must be a number or array of numbers.
if("number"!=typeof e.kernelSize&&!(Array.isArray(e.kernelSize)&&(1===e.kernelSize.length||3===e.kernelSize.length)))throw new dg(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}/** @nocollapse */fJ.className="Conv3D",dM.registerClass(fJ);class f0 extends fY{constructor(e){if(super(e),this.inputSpec=[new p6({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new dg(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=pJ(e)).length)throw new dg("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new dg("The channel dimension of the inputs should be defined. Found `None`.");let r=e[t],n=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),// Set input spec.
this.inputSpec=[new p6({ndim:4,axes:{[t]:r}})],this.built=!0}call(e,t){return dp.tidy(()=>{let t,r,n=pY(e);if(4!==n.shape.length)throw new dg(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let a=n.shape,s=a[0];"channelsFirst"===this.dataFormat?(t=2,r=3):(t=1,r=2);let i=a[t],o=a[r],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],d=this.strides[1],p=fq(i,c,l,this.padding),h=fq(o,d,u,this.padding),f=[s,p,h,this.filters];"channelsLast"!==this.dataFormat&&(n=ld.transpose(n,[0,2,3,1]));let m=cg.conv2dTranspose(n,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(m=ld.transpose(m,[0,3,1,2])),null!=this.bias&&(m=pI(m,this.bias.read(),this.dataFormat)),null!=this.activation&&(m=this.activation.apply(m)),m})}computeOutputShape(e){let t,r,n;e=pJ(e);let a=e.slice();"channelsFirst"===this.dataFormat?(t=1,r=2,n=3):(t=3,r=1,n=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return a[t]=this.filters,a[r]=fq(a[r],o,s,this.padding),a[n]=fq(a[n],l,i,this.padding),a}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}}/** @nocollapse */f0.className="Conv2DTranspose",dM.registerClass(f0);class f1 extends fJ{constructor(e){if(super(e),this.inputSpec=[new p6({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new dg(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=pJ(e)).length)throw new dg("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new dg("The channel dimension of the inputs should be defined. Found `None`.");let r=e[t],n=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",n,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),// Set input spec.
this.inputSpec=[new p6({ndim:5,axes:{[t]:r}})],this.built=!0}call(e,t){return dp.tidy(()=>{let t,r,n,a=pY(e);if(5!==a.shape.length)throw new dg(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${a.shape.length}`);let s=a.shape,i=s[0];"channelsFirst"===this.dataFormat?(n=2,t=3,r=4):(n=1,t=2,r=3);let o=s[n],l=s[t],u=s[r],c=this.kernelSize[0],d=this.kernelSize[1],p=this.kernelSize[2],h=this.strides[0],f=this.strides[1],m=this.strides[2],g=fq(o,h,c,this.padding),y=fq(l,f,d,this.padding),b=fq(u,m,p,this.padding),v=[i,g,y,b,this.filters];"channelsLast"!==this.dataFormat&&(a=ld.transpose(a,[0,2,3,4,1]));let x=fG.conv3dTranspose(a,this.kernel.read(),v,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(x=ld.transpose(x,[0,4,1,2,3])),null!==this.bias&&(x=pI(x,this.bias.read(),this.dataFormat)),null!==this.activation&&(x=this.activation.apply(x)),x})}computeOutputShape(e){let t,r,n,a;e=pJ(e);let s=e.slice();"channelsFirst"===this.dataFormat?(t=1,r=2,n=3,a=4):(t=4,r=1,n=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],d=this.strides[2];return s[t]=this.filters,s[r]=fq(s[r],u,i,this.padding),s[n]=fq(s[n],c,o,this.padding),s[a]=fq(s[a],d,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}}/** @nocollapse */f1.className="Conv3DTranspose",dM.registerClass(f1);class f2 extends fQ{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new dg("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new dg("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new dg(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=pX(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=fD(t.depthwiseRegularizer),this.depthwiseConstraint=hy(t.depthwiseConstraint),this.pointwiseInitializer=pX(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=fD(t.pointwiseRegularizer),this.pointwiseConstraint=hy(t.pointwiseConstraint)}build(e){if((e=pJ(e)).length<this.rank+2)throw new dg(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new dg(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let r=e[t],n=this.kernelSize.concat([r,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(r*this.depthMultiplier,this.filters),this.depthwiseKernel=this.addWeight("depthwise_kernel",n,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new p6({ndim:this.rank+2,axes:{[t]:r}})],this.built=!0}call(e,t){return(0,dp.tidy)(()=>{let t;if(e=pY(e),1===this.rank)throw new dy("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=ld.transpose(e,[0,2,3,1])),t=c9.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=pI(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=ld.transpose(t,[0,3,1,2])),t})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=dE(this.depthwiseInitializer),e.pointwiseInitializer=dE(this.pointwiseInitializer),e.depthwiseRegularizer=dE(this.depthwiseRegularizer),e.pointwiseRegularizer=dE(this.pointwiseRegularizer),e.depthwiseConstraint=dE(this.depthwiseConstraint),e.pointwiseConstraint=dE(this.pointwiseConstraint),e}}/** @nocollapse */f2.className="SeparableConv";class f4 extends f2{constructor(e){super(2,e)}}/** @nocollapse */f4.className="SeparableConv2D",dM.registerClass(f4);class f3 extends fQ{constructor(e){super(1,e),f3.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){// config.kernelSize must be a number or array of numbers.
if("number"!=typeof e.kernelSize&&!dP(e.kernelSize,"number",1,1))throw new dg(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}/** @nocollapse */f3.className="Conv1D",dM.registerClass(f3);class f8 extends ht{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,dp.tidy)(()=>{if(e=pY(e),"channelsLast"===this.dataFormat){let t=py(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return py(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=py(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return py(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */f8.className="Cropping2D",dM.registerClass(f8);class f6 extends ht{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,dq(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,dO(dz,"InterpolationFormat",this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],r=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,r]}{let t=null==e[1]?null:this.size[0]*e[1],r=null==e[2]?null:this.size[1]*e[2];return[e[0],t,r,e[3]]}}call(e,t){return dp.tidy(()=>{let t=pY(e),r=t.shape;if("channelsFirst"===this.dataFormat){t=ld.transpose(t,[0,2,3,1]);let e=this.size[0]*r[2],n=this.size[1]*r[3],a="nearest"===this.interpolation?d3.image.resizeNearestNeighbor(t,[e,n]):d3.image.resizeBilinear(t,[e,n]);return ld.transpose(a,[0,3,1,2])}{let e=this.size[0]*r[1],n=this.size[1]*r[2];return"nearest"===this.interpolation?d3.image.resizeNearestNeighbor(t,[e,n]):d3.image.resizeBilinear(t,[e,n])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */f6.className="UpSampling2D",dM.registerClass(f6),/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * TensorFlow.js Layers: Depthwise Convolutional Layers
 */A("i64bB");var dp=A("c2DT1"),cb=A("182Rc"),ld=A("aDHKy"),dM=A("5IZxH");class f5 extends fZ{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=pX(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=hy(e.depthwiseConstraint),this.depthwiseRegularizer=fD(e.depthwiseRegularizer)}build(e){if((e=pJ(e)).length<4)throw new dg(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new dg(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let r=e[t],n=[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",n,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,dp.tidy)(()=>{let t=function(e,t,r=[1,1],n="valid",a,s){return(0,dp.tidy)(()=>{null==a&&(a=pp()),dq(a);let s=fH(e,a);if(4!==e.rank)throw new dg(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new dg(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return s=cb.depthwiseConv2d(s,t,r,"same"===n?"same":"valid","NHWC",null),"channelsFirst"===a&&(s=ld.transpose(s,[0,3,1,2])),s})}(e=pY(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,0);return this.useBias&&(t=pI(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=pJ(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],r="channelsFirst"===this.dataFormat?e[3]:e[2],n="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=fW(t,this.kernelSize[0],this.padding,this.strides[0]),s=fW(r,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],n,a,s]:[e[0],a,s,n]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=dE(this.depthwiseInitializer),e.depthwiseRegularizer=dE(this.depthwiseRegularizer),e.depthwiseConstraint=dE(this.depthwiseRegularizer),e}}/** @nocollapse */f5.className="DepthwiseConv2D",dM.registerClass(f5);var f7={};c(f7,"ConvLSTM2DCell",()=>mh),c(f7,"ConvLSTM2D",()=>mf),/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */A("i64bB");var dp=A("c2DT1"),ue=A("hxi4c"),dh=A("jjNRA"),l0=A("fOBRA"),cQ=A("67iid"),op=A("jZc0w"),o8=A("9fmAX"),oO=A("hgacW"),le=A("5Nkm1"),dM=A("5IZxH");/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * TensorFlow.js Layers: Recurrent Neural Network Layers.
 */A("i64bB");var dp=A("c2DT1"),ld=A("aDHKy"),od=A("inFmq"),u1=A("iPDWZ"),ux=A("6act6"),un=A("gBOC6"),ox=A("7kouu"),cQ=A("67iid"),oO=A("hgacW"),op=A("jZc0w"),lE=A("8BrLX"),dh=A("jjNRA"),ue=A("hxi4c"),oT=A("9NgTx"),dM=A("5IZxH"),o8=A("9fmAX"),og=A("15cGp");function f9(e,t,r,n){if(Array.isArray(e)){if(null!=t||null!=r)throw new dg("When inputs is an array, neither initialState or constants should be provided");null!=n&&(r=e.slice(e.length-n,e.length),e=e.slice(0,e.length-n)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:r=a(r)}}function me(e,t,r,n=!1,a,s,i=!1,o=!1){return dp.tidy(()=>{let l,u,c;let d=t.shape.length;if(d<3)throw new dg(`Input should be at least 3D, but is ${d}D.`);// Transpose to time-major, i.e., from [batch, time, ...] to [time, batch,
// ...].
let p=[1,0].concat(pc(2,d));if(t=ld.transpose(t,p),null!=s)throw new dy("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=od.cast(od.cast(a,"bool"),"float32")).rank===d-1&&(a=u1.expandDims(a,-1)),a=ld.transpose(a,p)),n&&(t=ux.reverse(t,0),null!=a&&(a=ux.reverse(a,0)));// Porting Note: PyKeras with TensorFlow backend uses a symbolic loop
//   (tf.while_loop). But for the imperative deeplearn.js backend, we just
//   use the usual TypeScript control flow to iterate over the time steps in
//   the inputs.
// Porting Note: PyKeras patches a "_use_learning_phase" attribute to
// outputs.
//   This is not idiomatic in TypeScript. The info regarding whether we are
//   in a learning (i.e., training) phase for RNN is passed in a different
//   way.
let h=[],f=r,m=t.shape[0],g=un.unstack(t);null!=a&&(u=un.unstack(a));for(let t=0;t<m;++t){let r=g[t],n=dp.tidy(()=>e(r,f));if(null==a)l=n[0],f=n[1];else{let e=dp.tidy(()=>{let e=u[t],r=ox.sub(cQ.onesLike(e),e),a=oO.add(op.mul(n[0],e),op.mul(f[0],r)),s=f.map((t,a)=>oO.add(op.mul(n[1][a],e),op.mul(t,r)));return{output:a,newStates:s}});l=e.output,f=e.newStates}o&&h.push(l)}return o&&(c=lE.stack(h,1)),[l,c,f]})}class mt extends ht{constructor(e){let t;if(super(e),null==e.cell)throw new dg("cell property is missing for the constructor of RNN.");if(null==(t=Array.isArray(e.cell)?new mu({cells:e.cell}):e.cell).stateSize)throw new dg("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new p6({ndim:3})],this.stateSpec=null,this.states_=null,// TODO(cais): Add constantsSpec and numConstants.
this.numConstants=null,// TODO(cais): Look into the use of initial_state in the kwargs of the
//   constructor.
this.keptStates=[]}// Porting Note: This is the equivalent of `RNN.states` property getter in
//   PyKeras.
getStates(){if(null!=this.states_)return this.states_;{let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return pc(0,e).map(e=>null)}}// Porting Note: This is the equivalent of the `RNN.states` property setter in
//   PyKeras.
setStates(e){this.states_=e}computeOutputShape(e){let t;pZ(e)&&(e=e[0]);// TODO(cais): Remove the casting once stacked RNN cells become supported.
let r=this.cell.stateSize;Array.isArray(r)||(r=[r]);let n=r[0];if(t=this.returnSequences?[e[0],e[1],n]:[e[0],n],!this.returnState)return t;{let n=[];for(let t of r)n.push([e[0],t]);return[t].concat(n)}}computeMask(e,t){return dp.tidy(()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(!this.returnState)return e;{let t=this.states.map(e=>null);return[e].concat(t)}})}/**
     * Get the current state tensors of the RNN.
     *
     * If the state hasn't been set, return an array of `null`s of the correct
     * length.
     */get states(){if(null!=this.states_)return this.states_;{let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let r=0;r<e;++r)t.push(null);return t}}set states(e){this.states_=e}build(e){let t;if(null!=this.numConstants)throw new dy("Constants support is not implemented in RNN yet.");pZ(e)&&(e=e[0]);let r=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new p6({shape:[r,null,...n]});// Allow cell (if RNNCell Layer) to build before we set or validate
// stateSpec.
let a=[e[0]].concat(e.slice(2));if(this.cell.build(a),t=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!dh.arraysEqual(this.stateSpec.map(e=>e.shape[e.shape.length-1]),t))throw new dg(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=t.map(e=>new p6({shape:[null,e]}));this.stateful&&this.resetStates()}/**
     * Reset the state tensors of the RNN.
     *
     * If the `states` argument is `undefined` or `null`, will set the
     * state tensor(s) of the RNN to all-zero tensors of the appropriate
     * shape(s).
     *
     * If `states` is provided, will set the state tensors of the RNN to its
     * value.
     *
     * @param states Optional externally-provided initial states.
     * @param training Whether this call is done during training. For stateful
     *   RNNs, this affects whether the old states are kept or discarded. In
     *   particular, if `training` is `true`, the old states will be kept so
     *   that subsequent backpropgataion through time (BPTT) may work properly.
     *   Else, the old states will be discarded.
     */resetStates(e,t=!1){(0,dp.tidy)(()=>{if(!this.stateful)throw new df("Cannot call resetStates() on an RNN Layer that is not stateful.");let r=this.inputSpec[0].shape[0];if(null==r)throw new dg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");// Initialize state if null.
if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>ue.zeros([r,e])):this.states_=[ue.zeros([r,this.cell.stateSize])];else if(null==e)// Dispose old state tensors.
dp.dispose(this.states_),null!=this.keptStates&&(dp.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>ue.zeros([r,e])):this.states_[0]=ue.zeros([r,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new dg(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?// the next no-arg call to this method. We do not dispose the old
// states immediately because that BPTT (among other things) require
// them.
this.keptStates.push(this.states_.slice()):dp.dispose(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[r,a];if(!dh.arraysEqual(n.shape,s))throw new dg(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>dp.keep(e.clone()))})}apply(e,t){// TODO(cais): Figure out whether initialState is in kwargs or inputs.
let r=null==t?null:t.initialState,n=null==t?null:t.constants;null==t&&(t={});let a=f9(e,r,n,this.numConstants);e=a.inputs,r=a.initialState,n=a.constants;// If any of `initial_state` or `constants` are specified and are
// `tf.SymbolicTensor`s, then add them to the inputs and temporarily modify
// the input_spec to include them.
let s=[],i=[];if(null!=r){for(let e of(t.initialState=r,s=s.concat(r),this.stateSpec=[],r))this.stateSpec.push(new p6({shape:e.shape}));// TODO(cais): Use the following instead.
// this.stateSpec = initialState.map(state => new InputSpec({shape:
// state.shape}));
i=i.concat(this.stateSpec)}null!=n&&(t.constants=n,s=s.concat(n),// TODO(cais): Add this.constantsSpec.
this.numConstants=n.length);let o=s[0]instanceof p5;if(!o)return super.apply(e,t);{// Compute full input spec, including state and constants.
let r=[e].concat(s),n=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=n;let o=super.apply(r,t);return this.inputSpec=a,o}}// tslint:disable-next-line:no-any
call(e,t){// Input shape: `[samples, time (padded with zeros), input_dim]`.
// Note that the .build() method of subclasses **must** define
// this.inputSpec and this.stateSpec owith complete input shapes.
return(0,dp.tidy)(()=>{let r=null==t?null:t.mask,n=null==t?null:t.training,a=null==t?null:t.initialState;e=pY(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new dg(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:n},o=me((e,t)=>{// `inputs` and `states` are concatenated to form a single `Array` of
// `tf.Tensor`s as the input to `cell.call()`.
let r=this.cell.call([e].concat(t),i);// Marshall the return value into output and new states.
return[r[0],r.slice(1)]},e,a,this.goBackwards,r,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,n);let d=this.returnSequences?u:l;return(// TODO(cais): Porperty set learning phase flag.
this.returnState?[d].concat(c):d)})}getInitialState(e){return(0,dp.tidy)(()=>{// Build an all-zero tensor of shape [samples, outputDim].
// [Samples, timeSteps, inputDim].
let t=ue.zeros(e.shape);return(t=pf(// [Samples].
t=oT.sum(t,[1,2])),Array.isArray(this.cell.stateSize))?this.cell.stateSize.map(e=>e>1?px(t,[1,e]):t):this.cell.stateSize>1?[px(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return(// Porting Note: In TypeScript, `this` is always an instance of `Layer`.
this.trainable?this.cell.nonTrainableWeights:this.cell.weights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let r=this.cell.getConfig();// this order is necessary, to prevent cell name from replacing layer name
return this.getClassName()===mt.className&&(t.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),e),t)}/** @nocollapse */static fromConfig(e,t,r={}){let n=t.cell,a=h_(n,r);return new e(Object.assign(t,{cell:a}))}}/** @nocollapse */mt.className="RNN",dM.registerClass(mt);class mr extends ht{}class mn extends mr{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,d$(this.units,"units"),this.activation=fR(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=pX(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pX(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pX(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=fD(e.kernelRegularizer),this.recurrentRegularizer=fD(e.recurrentRegularizer),this.biasRegularizer=fD(e.biasRegularizer),this.kernelConstraint=hy(e.kernelConstraint),this.recurrentConstraint=hy(e.recurrentConstraint),this.biasConstraint=hy(e.biasConstraint),this.dropout=pl([1,pu([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=pl([1,pu([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=pJ(e),// TODO(cais): Use regularizer.
this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}// Porting Note: PyKeras' equivalent of this method takes two tensor inputs:
//   `inputs` and `states`. Here, the two tensors are combined into an
//   `Tensor[]` Array as the first input argument.
//   Similarly, PyKeras' equivalent of this method returns two values:
//    `output` and `[output]`. Here the two are combined into one length-2
//    `Tensor[]`, consisting of `output` repeated.
call(e,t){return(0,dp.tidy)(()=>{let r;if(2!==e.length)throw new dg(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let a=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=mc({ones:()=>cQ.onesLike(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=mc({ones:()=>cQ.onesLike(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask;r=null!=s?pk(op.mul(e,s),this.kernel.read()):pk(e,this.kernel.read()),null!=this.bias&&(r=pI(r,this.bias.read())),null!=i&&(n=op.mul(n,i));let o=oO.add(r,pk(n,this.recurrentKernel.read()));// TODO(cais): Properly set learning phase on output tensor?
return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:fE(this.activation),useBias:this.useBias,kernelInitializer:dE(this.kernelInitializer),recurrentInitializer:dE(this.recurrentInitializer),biasInitializer:dE(this.biasInitializer),kernelRegularizer:dE(this.kernelRegularizer),recurrentRegularizer:dE(this.recurrentRegularizer),biasRegularizer:dE(this.biasRegularizer),activityRegularizer:dE(this.activityRegularizer),kernelConstraint:dE(this.kernelConstraint),recurrentConstraint:dE(this.recurrentConstraint),biasConstraint:dE(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}/** @nocollapse */mn.className="SimpleRNNCell",dM.registerClass(mn);class ma extends mt{constructor(e){e.cell=new mn(e),super(e);// TODO(cais): Add activityRegularizer.
}call(e,t){return(0,dp.tidy)(()=>{null!=this.cell.dropoutMask&&(dp.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(dp.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=null==t?null:t.mask,n=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:r,training:n,initialState:a})})}/** @nocollapse */static fromConfig(e,t){return new e(t)}}/** @nocollapse */ma.className="SimpleRNN",dM.registerClass(ma);class ms extends mr{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new dg("GRUCell does not support reset_after parameter set to true.");this.units=e.units,d$(this.units,"units"),this.activation=fR(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=fR(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=pX(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pX(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pX(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=fD(e.kernelRegularizer),this.recurrentRegularizer=fD(e.recurrentRegularizer),this.biasRegularizer=fD(e.biasRegularizer),this.kernelConstraint=hy(e.kernelConstraint),this.recurrentConstraint=hy(e.recurrentConstraint),this.biasConstraint=hy(e.biasConstraint),this.dropout=pl([1,pu([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=pl([1,pu([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=pJ(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,// Porting Notes: Unlike the PyKeras implementation, we perform slicing
//   of the weights and bias in the call() method, at execution time.
this.built=!0}call(e,t){return(0,dp.tidy)(()=>{let r,n,a;if(2!==e.length)throw new dg(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let s=null!=t.training&&t.training,i=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=mc({ones:()=>cQ.onesLike(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=mc({ones:()=>cQ.onesLike(i),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=op.mul(e,o[0]));let u=pk(e,this.kernel.read());this.useBias&&(u=pI(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(i=op.mul(i,l[0]));let c=this.recurrentKernel.read(),[d,p]=o8.split(c,[2*this.units,this.units],c.rank-1),h=pk(i,d),[f,m,g]=o8.split(u,3,u.rank-1),[y,b]=o8.split(h,2,h.rank-1);r=this.recurrentActivation.apply(oO.add(f,y)),n=this.recurrentActivation.apply(oO.add(m,b));let v=pk(op.mul(n,i),p);a=this.activation.apply(oO.add(g,v));let x=oO.add(op.mul(r,i),op.mul(oO.add(1,og.neg(r)),a));// TODO(cais): Add use_learning_phase flag properly.
return[x,x]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:fE(this.activation),recurrentActivation:fE(this.recurrentActivation),useBias:this.useBias,kernelInitializer:dE(this.kernelInitializer),recurrentInitializer:dE(this.recurrentInitializer),biasInitializer:dE(this.biasInitializer),kernelRegularizer:dE(this.kernelRegularizer),recurrentRegularizer:dE(this.recurrentRegularizer),biasRegularizer:dE(this.biasRegularizer),activityRegularizer:dE(this.activityRegularizer),kernelConstraint:dE(this.kernelConstraint),recurrentConstraint:dE(this.recurrentConstraint),biasConstraint:dE(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}/** @nocollapse */ms.className="GRUCell",dM.registerClass(ms);class mi extends mt{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ms(e),super(e);// TODO(cais): Add activityRegularizer.
}call(e,t){return(0,dp.tidy)(()=>{null!=this.cell.dropoutMask&&(dp.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(dp.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=null==t?null:t.mask,n=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:r,training:n,initialState:a})})}/** @nocollapse */static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}/** @nocollapse */mi.className="GRU",dM.registerClass(mi);class mo extends mr{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,d$(this.units,"units"),this.activation=fR(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=fR(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=pX(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pX(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pX(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=fD(e.kernelRegularizer),this.recurrentRegularizer=fD(e.recurrentRegularizer),this.biasRegularizer=fD(e.biasRegularizer),this.kernelConstraint=hy(e.kernelConstraint),this.recurrentConstraint=hy(e.recurrentConstraint),this.biasConstraint=hy(e.biasConstraint),this.dropout=pl([1,pu([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=pl([1,pu([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let r;e=pJ(e);let n=e[e.length-1];if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,n=this.units;r=new(/** @nocollapse */(t=class extends p_{apply(t,r){// TODO(cais): More informative variable names?
let a=e.apply([n]),s=new pP().apply([n]),i=e.apply([2*n]);return pv(pv(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;// Porting Notes: Unlike the PyKeras implementation, we perform slicing
//   of the weights and bias in the call() method, at execution time.
this.built=!0}call(e,t){return(0,dp.tidy)(()=>{let r,n,a,s;let i=null!=t.training&&t.training;if(3!==e.length)throw new dg(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1],l=e[2];// Previous memory state.
e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=mc({ones:()=>cQ.onesLike(e),rate:this.dropout,training:i,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=mc({ones:()=>cQ.onesLike(o),rate:this.recurrentDropout,training:i,count:4,dropoutFunc:this.dropoutFunc}));let u=this.dropoutMask,c=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=op.mul(e,u[0]));let d=pk(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=op.mul(o,c[0])),d=oO.add(d,pk(o,this.recurrentKernel.read())),this.useBias&&(d=pI(d,this.bias.read()));let[p,h,f,m]=o8.split(d,4,d.rank-1);r=this.recurrentActivation.apply(p),n=this.recurrentActivation.apply(h),a=oO.add(op.mul(n,l),op.mul(r,this.activation.apply(f))),s=this.recurrentActivation.apply(m);let g=op.mul(s,this.activation.apply(a));// TODO(cais): Add use_learning_phase flag properly.
return[g,g,a]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:fE(this.activation),recurrentActivation:fE(this.recurrentActivation),useBias:this.useBias,kernelInitializer:dE(this.kernelInitializer),recurrentInitializer:dE(this.recurrentInitializer),biasInitializer:dE(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:dE(this.kernelRegularizer),recurrentRegularizer:dE(this.recurrentRegularizer),biasRegularizer:dE(this.biasRegularizer),activityRegularizer:dE(this.activityRegularizer),kernelConstraint:dE(this.kernelConstraint),recurrentConstraint:dE(this.recurrentConstraint),biasConstraint:dE(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}/** @nocollapse */mo.className="LSTMCell",dM.registerClass(mo);class ml extends mt{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new mo(e),super(e);// TODO(cais): Add activityRegularizer.
}call(e,t){return(0,dp.tidy)(()=>{null!=this.cell.dropoutMask&&(dp.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(dp.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let r=null==t?null:t.mask,n=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:r,training:n,initialState:a})})}/** @nocollapse */static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}/** @nocollapse */ml.className="LSTM",dM.registerClass(ml);class mu extends mr{constructor(e){super(e),this.cells=e.cells}get stateSize(){// States are a flat list in reverse order of the cell stack.
// This allows perserving the requirement `stack.statesize[0] ===
// outputDim`. E.g., states of a 2-layer LSTM would be `[h2, c2, h1, c1]`,
// assuming one LSTM has states `[h, c]`.
let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,dp.tidy)(()=>{let r;let n=e.slice(1),a=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();// Call the cells in order and store the returned states.
let s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=a[i],r=0===i?[e[0]].concat(n):[r[0]].concat(n),r=o.call(r,t),s.push(r.slice(1))}for(let e of(// Format the new states as a flat list in reverse cell order.
n=[],s.slice().reverse()))n.push(...e);return[r[0]].concat(n)})}build(e){let t;pZ(e)&&// const constantShape = inputShape.slice(1);
(e=e[0]),this.cells.forEach((r,n)=>{dZ(`RNNCell_${n}`,()=>{// TODO(cais): Take care of input constants.
r.build(e),t=Array.isArray(r.stateSize)?r.stateSize[0]:r.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}));return Object.assign(Object.assign({},e),{cells:t})}/** @nocollapse */static fromConfig(e,t,r={}){let n=[];for(let e of t.cells)n.push(h_(e,r));return new e({cells:n})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}/**
     * Retrieve the weights of a the model.
     *
     * @returns A flat `Array` of `tf.Tensor`s.
     */getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return p3(e)}/**
     * Set the weights of the model.
     *
     * @param weights An `Array` of `tf.Tensor`s with shapes and types matching
     *     the output of `getWeights()`.
     */setWeights(e){let t=[];for(let r of this.cells){let n=r.weights.length,a=e.splice(n);for(let e=0;e<r.weights.length;++e)t.push([r.weights[e],a[e]])}p8(t)}}function mc(e){let{ones:t,rate:r,training:n=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),r):pC(t(),r),o=()=>pE(i,t,n);// just in case count is provided with null or undefined
if(!a||a<=1)return dp.keep(o().clone());let l=Array(a).fill(void 0).map(o);return l.map(e=>dp.keep(e.clone()))}/** @nocollapse */mu.className="StackedRNNCells",dM.registerClass(mu);var md=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&0>t.indexOf(n)&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols)for(var a=0,n=Object.getOwnPropertySymbols(e);a<n.length;a++)0>t.indexOf(n[a])&&Object.prototype.propertyIsEnumerable.call(e,n[a])&&(r[n[a]]=e[n[a]]);return r};/**
 * Base class for convolutional-recurrent layers.
 */class mp extends mt{constructor(e){if(e.unroll)throw new dy("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new dy("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new p6({ndim:5})]}call(e,t){return dp.tidy(()=>{if(null!=this.cell.dropoutMask&&(dp.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(dp.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new dg("ConvRNN2D cell does not support constants");let r=null==t?null:t.mask,n=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:r,training:n,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...[,,].fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return dp.tidy(()=>{let{stateSize:t}=this.cell,r=e.shape,n=this.computeSingleOutputShape(r),a=[n[0],...n.slice(2)],s=ue.zeros(a);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){dp.tidy(()=>{if(!this.stateful)throw new df("Cannot call resetStates() on an RNN Layer that is not stateful.");let r=this.inputSpec[0].shape,n=this.computeSingleOutputShape(r),a=[n[0],...n.slice(2)],s=r[0];if(null==s)throw new dg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");// Initialize state if null.
if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ue.zeros(a)):this.states_=[ue.zeros(a)];else if(null==e)// Dispose old state tensors.
dp.dispose(this.states_),null!=this.keptStates&&(dp.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ue.zeros(a)):this.states_[0]=ue.zeros(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new dg(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?// the next no-arg call to this method. We do not dispose the old
// states immediately because that BPTT (among other things) require
// them.
this.keptStates.push(this.states_.slice()):dp.dispose(this.states_);for(let t=0;t<this.states_.length;++t){let r=e[t];if(!dh.arraysEqual(r.shape,a))throw new dg(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>dp.keep(e.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:r,kernelSize:n,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=fW(l,n[0],a,s[0],i[0]),d=fW(u,n[1],a,s[1],i[1]),p=[...e.slice(0,2),...o?[r,c,d]:[c,d,r]];return p}}/** @nocollapse */mp.className="ConvRNN2D";class mh extends mo{constructor(e){let{filters:t,kernelSize:r,strides:n,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,d$(this.filters,"filters"),this.kernelSize=fU(r,2,"kernelSize"),this.kernelSize.forEach(e=>d$(e,"kernelSize")),this.strides=fU(n||1,2,"strides"),this.strides.forEach(e=>d$(e,"strides")),this.padding=a||"valid",dH(this.padding),this.dataFormat=s||"channelsLast",dq(this.dataFormat),this.dilationRate=fU(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>d$(e,"dilationRate"))}build(e){var t;e=pJ(e);let r="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[r])throw new dg(`The channel dimension of the input should be defined. Found ${e[r]}`);let n=e[r],a=this.kernelSize.concat([n,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let r=this.biasInitializer,n=this.filters;e=new(/** @nocollapse */(t=class extends p_{apply(e,t){let a=r.apply([n]),s=l0.ones([n]),i=r.apply([2*n]);return pb([a,s,i])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return dp.tidy(()=>{if(3!==e.length)throw new dg(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=t.training||!1,n=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=mc({ones:()=>cQ.onesLike(n),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=(e,t,r)=>t&&t[r]?op.mul(t[r],e):e,l=o(n,i,0),u=o(n,i,1),c=o(n,i,2),d=o(n,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=mc({ones:()=>cQ.onesLike(a),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));let p=this.recurrentDropoutMask,h=o(a,p,0),f=o(a,p,1),m=o(a,p,2),g=o(a,p,3),[y,b,v,x]=o8.split(this.kernel.read(),4,3),[w,k,S,N]=this.useBias?o8.split(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,v,S,this.padding),d=this.inputConv(d,x,N,this.padding);let[T,I,C,E]=o8.split(this.recurrentKernel.read(),4,3);h=this.recurrentConv(h,T),f=this.recurrentConv(f,I),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E);let A=this.recurrentActivation.apply(oO.add(l,h)),R=this.recurrentActivation.apply(oO.add(u,f)),_=oO.add(op.mul(R,s),op.mul(A,this.activation.apply(oO.add(c,m)))),O=op.mul(this.recurrentActivation.apply(oO.add(d,g)),this.activation.apply(_));return[O,O,_]})}getConfig(){let e=super.getConfig(),{units:t}=e,r=md(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},r),n)}inputConv(e,t,r,n){let a=le.conv2d(e,t,this.strides,n||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return r?pI(a,r,this.dataFormat):a}recurrentConv(e,t){return le.conv2d(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}/** @nocollapse */mh.className="ConvLSTM2DCell",dM.registerClass(mh);class mf extends mp{constructor(e){let t=new mh(e);super(Object.assign(Object.assign({},e),{cell:t}))}/** @nocollapse */static fromConfig(e,t){return new e(t)}}/** @nocollapse */mf.className="ConvLSTM2D",dM.registerClass(mf),/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * TensorFlow.js Layers: Basic Layers.
 */A("i64bB");var dp=A("c2DT1"),dM=A("5IZxH"),ld=A("aDHKy"),oN=A("4sqA7"),dh=A("jjNRA"),cr=A("3cXYO"),cX=A("8WSnu"),op=A("jZc0w"),od=A("inFmq");class mm extends ht{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),// So that the scalar doesn't get tidied up between executions.
this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,r=[];for(let e=0;e<this.noiseShape.length;++e)r.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return r}call(e,t){return(0,dp.tidy)(()=>{this.invokeCallHook(e,t);let r=pY(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,n=this.getNoiseShape(r),a=pE(()=>pC(r,this.rate,n,this.seed),()=>r,e);return a}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}/** @nocollapse */mm.className="Dropout",dM.registerClass(mm);class mg extends mm{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}}/** @nocollapse */mg.className="SpatialDropout1D",dM.registerClass(mg);class my extends ht{constructor(e){if(super(e),// Default activation: Linear (none).
this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){// This logic is copied from Layer's constructor, since we can't
// do exactly what the Python constructor does for Dense().
let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,d$(this.units,"units"),this.activation=fR(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=pX(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=pX(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=hy(e.kernelConstraint),this.biasConstraint=hy(e.biasConstraint),this.kernelRegularizer=fD(e.kernelRegularizer),this.biasRegularizer=fD(e.biasRegularizer),this.activityRegularizer=fD(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=pJ(e);let t=e[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=pJ(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return(0,dp.tidy)(()=>{let r;this.invokeCallHook(e,t);// Dense layer accepts only a single input.
let n=pY(e),a=dD(this.activation.getClassName());return null!=a?r=pk(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=pk(n,this.kernel.read()),null!=this.bias&&(r=pI(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:fE(this.activation),useBias:this.useBias,kernelInitializer:dE(this.kernelInitializer),biasInitializer:dE(this.biasInitializer),kernelRegularizer:dE(this.kernelRegularizer),biasRegularizer:dE(this.biasRegularizer),activityRegularizer:dE(this.activityRegularizer),kernelConstraint:dE(this.kernelConstraint),biasConstraint:dE(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */my.className="Dense",dM.registerClass(my);class mb extends ht{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){for(let t of(e=pJ(e)).slice(1))if(null==t)throw new dg(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],po(e,1)]}call(e,t){return(0,dp.tidy)(()=>{this.invokeCallHook(e,t);let r=pY(e);if("channelsFirst"===this.dataFormat&&r.rank>1){let e=[0];for(let t=2;t<r.rank;++t)e.push(t);e.push(1),r=(0,ld.transpose)(r,e)}return function(e){if(e.rank<=1)throw new dg(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],po(e.shape,1)];return oN.reshape(e,t)}(r)})}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */mb.className="Flatten",dM.registerClass(mb);class mv extends ht{constructor(e){super(e),this.supportsMasking=!0,this.activation=fR(e.activation)}call(e,t){return(0,dp.tidy)(()=>{this.invokeCallHook(e,t);let r=pY(e);return this.activation.apply(r)})}getConfig(){let e={activation:fE(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */mv.className="Activation",dM.registerClass(mv);class mx extends ht{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,dp.tidy)(()=>{var t,r;return t=e=pY(e),r=this.n,(0,dp.tidy)(()=>{if(2!==t.shape.length)throw new dg(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);let e=pf(t,1);return px(e,[1,r,1])})})}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */mx.className="RepeatVector",dM.registerClass(mx);class mw extends ht{constructor(e){super(e),this.targetShape=e.targetShape;// Make sure that all unknown dimensions are represented as `null`.
for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}/**
     * Finds and replaces a missing dimension in output shape.
     *
     * This is a near direct port of the internal Numpy function
     * `_fix_unknown_dimension` in `numpy/core/src/multiarray/shape.c`.
     *
     * @param inputShape: Original shape of array begin reshape.
     * @param outputShape: Target shape of the array, with at most a single
     * `null` or negative number, which indicates an underdetermined dimension
     * that should be derived from `inputShape` and the known dimensions of
     *   `outputShape`.
     * @returns: The output shape with `null` replaced with its computed value.
     * @throws: ValueError: If `inputShape` and `outputShape` do not match.
     */fixUnknownDimension(e,t){let r="Total size of new array must be unchanged.",n=t.slice(),a=1,s=null;for(let e=0;e<n.length;++e){let t=n[e];if(this.isUnknown(t)){if(null===s)s=e;else throw new dg("Can only specifiy one unknown dimension.")}else a*=t}let i=po(e);if(null!==s){if(0===a||i%a!=0)throw new dg(r);n[s]=i/a}else if(i!==a)throw new dg(r);return n}computeOutputShape(e){let t=!1;for(let r=0;r<e.length;++r)if(this.isUnknown(e[r])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,dp.tidy)(()=>{this.invokeCallHook(e,t);let r=pY(e),n=r.shape,a=n.slice(0,1).concat(this.fixUnknownDimension(n.slice(1),this.targetShape));return(0,oN.reshape)(r,a)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */mw.className="Reshape",dM.registerClass(mw);class mk extends ht{constructor(e){if(super(e),null==e.dims)throw Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);// Check the validity of the permutation indices.
let t=pc(1,e.dims.length+1);if(!dh.arraysEqual(e.dims.slice().sort(),t))throw Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new p6({ndim:this.dims.length+1})]}computeOutputShape(e){e=pJ(e);let t=e.slice();return this.dims.forEach((r,n)=>{t[n+1]=e[r]}),t}call(e,t){return(0,ld.transpose)(pY(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */mk.className="Permute",dM.registerClass(mk);class mS extends ht{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e?this.maskValue=null==e.maskValue?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let r=pY(e);return(0,cr.any)((0,cX.notEqual)(r,this.maskValue),-1)}call(e,t){return(0,dp.tidy)(()=>{this.invokeCallHook(e,t);let r=pY(e),n=(0,cr.any)((0,cX.notEqual)(r,this.maskValue),-1,!0),a=(0,op.mul)(r,(0,od.cast)(n,r.dtype));return a})}}/** @nocollapse */mS.className="Masking",dM.registerClass(mS),/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * TensorFlow.js Layers: Embedding Layer.
 *
 * Original source: keras/constraints.py
 */A("i64bB");var dp=A("c2DT1"),cX=A("8WSnu"),oE=A("8EjnK"),oN=A("4sqA7"),dM=A("5IZxH");class mN extends ht{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){// Porting Note: This logic is copied from Layer's constructor, since we
// can't do exactly what the Python constructor does for Embedding().
// Specifically, the super constructor can not be called after the
// mutation of the `config` argument.
let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?// 'config.inputShape' were (None, )
this.batchInputShape=[t,null]:// 'config.inputShape' were (config.inputLength, )
this.batchInputShape=[t].concat(dN(e.inputLength))}this.inputDim=e.inputDim,d$(this.inputDim,"inputDim"),this.outputDim=e.outputDim,d$(this.outputDim,"outputDim"),this.embeddingsInitializer=pX(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=fD(e.embeddingsRegularizer),this.activityRegularizer=fD(e.activityRegularizer),this.embeddingsConstraint=hy(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}// Override warnOnIncompatibleInputShape because an embedding layer allows
// the input to have varying ranks.
warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,dp.tidy)(()=>this.maskZero?(e=pY(e),(0,cX.notEqual)(e,(0,oE.zerosLike)(e))):null)}computeOutputShape(e){if(e=pJ(e),null==this.inputLength)return[...e,this.outputDim];// inputLength can be an array if input is 3D or higher.
let t=dN(this.inputLength);if(t.length!==e.length-1)throw new dg(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let r=0;for(let n=0;n<t.length;++n){let a=t[n],s=e[n+1];if(null!=a&&null!=s&&a!==s)throw new dg(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[r]=s),r++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,dp.tidy)(()=>{this.invokeCallHook(e,t);// Embedding layer accepts only a single input.
let r=pY(e);"int32"!==r.dtype&&(r=ph(r,"int32"));let n=pS(this.embeddings.read(),(0,oN.reshape)(r,[r.size]));return(0,oN.reshape)(n,pJ(this.computeOutputShape(r.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:dE(this.embeddingsInitializer),embeddingsRegularizer:dE(this.embeddingsRegularizer),activityRegularizer:dE(this.activityRegularizer),embeddingsConstraint:dE(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */mN.className="Embedding",dM.registerClass(mN),/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * TensorFlow.js Layers: Merge Layers.
 */A("i64bB");var dp=A("c2DT1"),oN=A("4sqA7"),ld=A("aDHKy"),u1=A("iPDWZ"),o1=A("kg1Wp"),oO=A("hgacW"),dM=A("5IZxH"),op=A("jZc0w"),u4=A("g5Jt1"),cW=A("6V8xR"),dh=A("jjNRA"),od=A("inFmq"),cQ=A("67iid"),uV=A("iTu6j"),ct=A("baxp3"),oT=A("9NgTx"),oq=A("aUFou"),da=A("kX8Hd");class mT extends ht{constructor(e){super(e||{}),this.supportsMasking=!0}/**
     * Logic for merging multiple tensors, to be overridden by subclasses.
     * @param inputs
     */mergeFunction(e){throw new dy}/**
     * Computes the shape of the result of an elementwise operation.
     *
     * @param shape1: Shape of the first tensor.
     * @param shape2: Shape of the second tensor.
     * @returns Expected output shape when an elementwise operation is carried
     *   out on 2 tensors with shapes `shape1` and `shape2`.
     * @throws ValueError: If `shape1` and `shape2` are not compatible for
     *   element-wise operations.
     */computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let r=e.slice(0,e.length-t.length);for(let n=0;n<t.length;++n){let a=e[e.length-t.length+n],s=t[n];if(null==a||null==s||a<0||s<0)r.push(null);else if(1===a)r.push(s);else if(1===s)r.push(a);else{if(a!==s)throw new dg("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));r.push(a)}}return r}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[pJ(e)]),e.length<2)throw new dg(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);// Make sure that there is at most one unique batch size among the input
// shapes.
let t=[];for(let r of e)null!=r&&null!==r[0]&&t.push(r[0]);if((t=d_(t)).length>1)throw new dg(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let r=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let n=null==e[t]?null:e[t].slice(1);r=this.computeElementwiseOpOutputShape(r,n)}// If the inputs have different ranks, we have to reshape them to make them
// broadcastable.
let n=e.map(e=>e.length);-1===e.indexOf(null)&&1===d_(n).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,dp.tidy)(()=>{if(!this.reshapeRequired)return this.mergeFunction(e);{let t=[],r=e.map(e=>e.rank);if(-1===r.indexOf(null)){// If ranks of all inputs are available, we simply expand each of them
// at axis=1 until all of them have the same rank.
let n=pu(r);for(let r of e){let e=r.rank;for(let t=0;t<n-e;++t)r=pf(r,1);t.push(r)}return this.mergeFunction(t)}{// Transpose all inputs so that batch size is the last dimension.
// [batchSize, dim1, dim2, ...] -> [dim1, dim2, ..., batchSize]
let r=!1;for(let n of e){let e=n.rank;if(null==e){let e=n.shape,a=e[0],s=e.slice(1).concat([a]),i=oN.reshape(n,[a].concat(po(e.slice(1))));i=ld.transpose(i,[1,0]),i=oN.reshape(i,s),t.push(i),r=!0}else if(e>1){let a=pc(1,e).concat([0]);t.push(ld.transpose(n,a)),r=!0}else t.push(n)}let n=this.mergeFunction(t),a=n.rank;if(r){// If inputs have been transposed, we have to transpose the output
// too.
if(null==a){let e=n.shape,t=e.length,r=e[t-1],a=[r].concat(e.slice(0,e.length-1));n=oN.reshape(ld.transpose(oN.reshape(n,[-1,r]),[1,0]),a)}else if(a>1){let e=[a-1].concat(pc(0,a-1));n=ld.transpose(n,e)}}return n}}})}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){let n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let r=[];for(let t of e)null!=t&&null!==t[0]&&r.push(t[0]);return 1===(r=d_(r)).length?r.concat(t):[null].concat(t)}computeMask(e,t){return dp.tidy(()=>{if(null==t)return null;if(!Array.isArray(t))throw new dg("`mask` should be an Array");if(!Array.isArray(e))throw new dg("`inputs` should be an Array");if(t.length!==e.length)throw new dg(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let r=(t=t.map(e=>null==e?e:u1.expandDims(e,0)))[0];for(let e=1;e<t.length-1;++e)r=o1.logicalAnd(r,t[e]);return r})}}class mI extends mT{constructor(e){super(e)}mergeFunction(e){return(0,dp.tidy)(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=oO.add(t,e[r]);return t})}}/** @nocollapse */mI.className="Add",dM.registerClass(mI);class mC extends mT{constructor(e){super(e)}mergeFunction(e){return(0,dp.tidy)(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=op.mul(t,e[r]);return t})}}/** @nocollapse */mC.className="Multiply",dM.registerClass(mC);class mE extends mT{constructor(e){super(e)}mergeFunction(e){return(0,dp.tidy)(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=oO.add(t,e[r]);return op.mul(1/e.length,t)})}}/** @nocollapse */mE.className="Average",dM.registerClass(mE);class mA extends mT{constructor(e){super(e)}mergeFunction(e){return(0,dp.tidy)(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=u4.maximum(t,e[r]);return t})}}/** @nocollapse */mA.className="Maximum",dM.registerClass(mA);class mR extends mT{constructor(e){super(e)}mergeFunction(e){return(0,dp.tidy)(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=cW.minimum(t,e[r]);return t})}}/** @nocollapse */mR.className="Minimum",dM.registerClass(mR);class m_ extends mT{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){// Used purely for shape validation.]
if(!(Array.isArray(e)&&Array.isArray(e[0]))||1===e.length)throw new dg("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let r of e)if(null!=r){t=!1;break}if(t)return;let r=[];for(let t=0;t<e.length;++t){let n=e[t].slice();n.splice(this.axis,1);let a=!1;for(let e of r)if(dh.arraysEqual(e,n)){a=!0;break}a||r.push(n)}if(r.length>1)throw new dg("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,dp.tidy)(()=>pb(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new dg("A `Concatenate` layer should be called on a list of inputs.");let t=e[0].slice(),r=this.axis<0?t.length+this.axis:this.axis;// Porting Note: the line above is because TypeScript doesn't support
//   negative indices.
for(let n of e.slice(1)){if(null==t[r]||null==n[r]){t[r]=null;break}t[r]+=n[r]}return t}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new dg("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new dg("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new dg(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return dp.tidy(()=>{let r=!0;if(t.forEach(e=>{if(null!=e){r=!1;return}}),r)return null;let n=[];for(let r=0;r<e.length;++r)null==t[r]?n.push(od.cast(cQ.onesLike(e[r]),"bool")):t[r].rank<e[r].rank?n.push(u1.expandDims(t[r],-1)):n.push(t[r]);let a=uV.concat(n,this.axis);return ct.all(a,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}/**
 * Interpretable potentially negative axis index.
 *
 * For example, given axis = -1, and dim = 3, this function will return 2.
 *
 * @param axis The axis index, may be a positive, zero or negative integer.
 * @param dim Total number of dimensions, a positive integer.
 * @returns A non-negative axis index equivalent to the input `axis`.
 */function mO(e,t){for(;e<0;)e+=t;return e}/** @nocollapse */m_.className="Concatenate",dM.registerClass(m_);class mP extends mT{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){dh.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],r=e[1];if(t.length>3||r.length>3)throw new dy("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(t,r);if(t[n[0]]!==r[n[1]])throw new dg(`Dimension incompatibility: ${t[n[0]]} !== ${r[n[1]]}`)}mergeFunction(e){let t;if(2!==e.length)throw new dg(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let r=e[0],n=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,r)=>mO(t,e[r].shape.length)):[mO(this.axes,r.shape.length),mO(this.axes,n.shape.length)],this.normalize&&(r=hP(r,t[0]),n=hP(n,t[1])),function(e,t,r){if(e.shape.length>3||t.shape.length>3)throw new dy("batchDot is not implemented for tensors of 4D or higher rank yet");if(dh.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),dh.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof r&&(r=[r,r]),"complex64"===e.dtype||"complex64"===t.dtype)throw new dy("batchDot is not implemented for complex64-type Tensors yet.");let n=e.shape.length,a=t.shape.length;null==r&&(r=[n-1,a-2]);let s=r;return dp.tidy(()=>{let r,i;if(n>a){r=n-a;let e=[];for(let t=0;t<r;++t)e.push(1);t=oN.reshape(t,t.shape.concat(e))}else if(a>n){r=a-n;let t=[];for(let e=0;e<r;++e)t.push(1);e=oN.reshape(e,e.shape.concat(t))}else r=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?oT.sum(op.mul(e,t),s[0]):oT.sum(op.mul(ld.transpose(e,[1,0]),t),s[1]);else{let r=s[0]!==e.shape.length-1,n=s[1]===t.shape.length-1;i=oq.matMul(e,t,r,n)}if(r>0){let e;e=n>a?n+a-3:n-1;let t=[];for(let n=e;n<e+r;++n)t.push(n);i=da.squeeze(i,t)}return 1===i.shape.length&&(i=u1.expandDims(i,1)),i})}(r,n,t)}interpretAxes(e,t){return Array.isArray(this.axes)?this.axes:[mO(this.axes,e.length),mO(this.axes,t.length)]}computeOutputShape(e){dh.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),r=e[1].slice();if(t.length>3||r.length>3)throw new dy("Dot layer does not support tensors of 4D or higher rank yet.");let n=this.interpretAxes(t,r);t.splice(n[0],1),r.splice(n[1],1),r.splice(0,1);let a=t.concat(r);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */mP.className="Dot",dM.registerClass(mP),/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * TensorFlow.js Layers: Noise Layers.
 */A("i64bB");var dp=A("c2DT1"),oO=A("hgacW"),dM=A("5IZxH"),op=A("jZc0w"),oJ=A("l0Zxl"),d1=A("j8sic");class m$ extends ht{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,dp.tidy)(()=>{this.invokeCallHook(e,t);let r=pY(e),n=pE(()=>(0,oO.add)(pw(r.shape,0,this.stddev),r),()=>r,t.training||!1);return n})}}/** @nocollapse */m$.className="GaussianNoise",dM.registerClass(m$);class mD extends ht{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,dp.tidy)(()=>{this.invokeCallHook(e,t);let r=pY(e);return this.rate>0&&this.rate<1?pE(()=>{let e=Math.sqrt(this.rate/(1-this.rate));return(0,op.mul)(r,pw(r.shape,1,e))},()=>r,t.training||!1):r})}}/** @nocollapse */mD.className="GaussianDropout",dM.registerClass(mD);/**
 * Applies Alpha Dropout to the input.
 *
 * As it is a regularization layer, it is only active at training time.
 *
 * Alpha Dropout is a `Dropout` that keeps mean and variance of inputs
 * to their original values, in order to ensure the self-normalizing property
 * even after this dropout.
 * Alpha Dropout fits well to Scaled Exponential Linear Units
 * by randomly setting activations to the negative saturation value.
 *
 * Arguments:
 *   - `rate`: float, drop probability (as with `Dropout`).
 *     The multiplicative noise will have
 *     standard deviation `sqrt(rate / (1 - rate))`.
 *   - `noise_shape`: A 1-D `Tensor` of type `int32`, representing the
 *     shape for randomly generated keep/drop flags.
 *
 * Input shape:
 *   Arbitrary. Use the keyword argument `inputShape`
 *   (tuple of integers, does not include the samples axis)
 *   when using this layer as the first layer in a model.
 *
 * Output shape:
 *   Same shape as input.
 *
 * References:
 *   - [Self-Normalizing Neural Networks](https://arxiv.org/abs/1706.02515)
 */class mM extends ht{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||pY(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,dp.tidy)(()=>{if(this.rate<1&&this.rate>0){let r=this._getNoiseShape(e);return pE(()=>{let t=pY(e),n=(0,oJ.greaterEqual)((0,d1.randomUniform)(r),this.rate);n=ph(n,"float32");// get default dtype.
// Get affine transformation params.
let a=((1-this.rate)*(1+3.09091329228798*this.rate))**-.5,s=-(-1.7580993408473766*a)*this.rate,i=(0,oO.add)((0,op.mul)(t,n),(0,op.mul)((0,oO.add)(n,-1),-1.7580993408473766));return(0,oO.add)((0,op.mul)(i,a),s)},()=>pY(e),t.training||!1)}return e})}}/** @nocollapse */mM.className="AlphaDropout",dM.registerClass(mM),/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * Normalization layers.
 */A("i64bB");var mF=A("kKS8R"),mL=A("3KWPF"),mj=A("34sL5"),dp=A("c2DT1"),mB=A("jV1KY"),oN=A("4sqA7"),dh=A("jjNRA"),op=A("jZc0w"),ox=A("7kouu"),dM=A("5IZxH"),lI=A("61ay4");function mz(e,t,r,n,a,s=.001){let i;if(2===e.rank)i=mF.batchNorm2d(e,t,r,n,a,s);else if(3===e.rank)i=mL.batchNorm3d(e,t,r,n,a,s);else if(4===e.rank)i=mj.batchNorm4d(e,t,r,n,a,s);else throw new dy(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}class mV extends ht{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=pX(e.betaInitializer||"zeros"),this.gammaInitializer=pX(e.gammaInitializer||"ones"),this.movingMeanInitializer=pX(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=pX(e.movingVarianceInitializer||"ones"),this.betaConstraint=hy(e.betaConstraint),this.gammaConstraint=hy(e.gammaConstraint),this.betaRegularizer=fD(e.betaRegularizer),this.gammaRegularizer=fD(e.gammaRegularizer)}build(e){e=pJ(e);let t=this.axis>=0?this.axis:this.axis+e.length,r=e[t];if(null==r)throw new dg(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new p6({ndim:e.length,axes:{[t]:r}})];let n=[r];this.scale&&(this.gamma=this.addWeight("gamma",n,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",n,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",n,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",n,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,dp.tidy)(()=>{let r=null!=t.training&&t.training,n=pY(e),a=n.shape,s=a.length,i=pc(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=dx(1,s);l[o]=a[o];let u=i.slice();u.sort();let c=!dh.arraysEqual(u,pc(0,s).slice(0,s-1));if(!r)return(()=>{if(!c)return mz(n,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon);{let e=(0,oN.reshape)(this.movingMean.read(),l),t=(0,oN.reshape)(this.movingVariance.read(),l),r=this.center?(0,oN.reshape)(this.beta.read(),l):null,a=this.scale?(0,oN.reshape)(this.gamma.read(),l):null;return mz(n,e,t,r,a,this.epsilon)}})();let[d,p,h]=function(e,t,r,n,a=.001){return dh.arraysEqual(n.slice().sort(),pc(0,e.rank-1))?/**
 * Non-broadcasting batch normalization for use in training (not inference).
 *
 * The input is normalized to zero mean and unit variance along the
 * `reductionAxes`, followed by scaling with `gamma` and shifted by `beta`.
 * The result of that is returned as the first element
 * of the returned `Array`. The other two elements are the mean and variance,
 * respectively.
 *
 * @param x Input tensor to be normalized.
 * @param gamma Tensor by which to scale the input.
 * @param beta Tensor by which to center the input.
 * @param reductionAxes Axes over which to normalize.
 * @param epsilon Fuzz factor.
 * @returns An `Array` of three `Tensors`:
 *   [normalized tensor, mean of input, variance of input].
 */function(e,t,r,n,a=.001){return(0,dp.tidy)(()=>{let s=mB.moments(e,n),i=s.mean,o=s.variance,l=mz(e,i,o,r,t,a);return[l,i,o]})}(e,t,r,n,a):/**
 * Broadcasting batch normalization for use in training (not inference).
 *
 * The input is normalized to zero mean and unit variance along the
 * `reductionAxes`, followed by scaling with `gamma` and shifted by `beta`.
 * The result of that is returned as the first element
 * of the returned `Array`. The other two elements are the mean and variance,
 * respectively.
 *
 * @param x Input tensor to be normalized.
 * @param gamma Tensor by which to scale the input.
 * @param beta Tensor by which to center the input.
 * @param reductionAxes Axes over which to normalize.
 * @param epsilon Fuzz factor.
 * @returns An `Array` of three `Tensors`:
 *   [normalized tensor, mean of input, variance of input].
 */function(e,t,r,n,a=.001){return(0,dp.tidy)(()=>{let s=mB.moments(e,n),i=s.mean,o=s.variance,l=[];for(let t of pc(0,e.rank))-1!==n.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=(0,oN.reshape)(i,l),c=(0,oN.reshape)(o,l),d=null==t?null:(0,oN.reshape)(t,l),p=null==r?null:(0,oN.reshape)(r,l),h=mz(e,u,c,p,d,a);return[h,i,o]})}(e,t,r,n,a)}(n,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,r)=>{dp.tidy(()=>{let n=e.read(),a=op.mul(ox.sub(n,t),1-r);e.write(ox.sub(n,a))})};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,h,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:dE(this.betaInitializer),gammaInitializer:dE(this.gammaInitializer),movingMeanInitializer:dE(this.movingMeanInitializer),movingVarianceInitializer:dE(this.movingVarianceInitializer),betaRegularizer:dE(this.betaRegularizer),gammaRegularizer:dE(this.gammaRegularizer),betaConstraint:dE(this.betaConstraint),gammaConstraint:dE(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */mV.className="BatchNormalization",dM.registerClass(mV);class mG extends ht{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let e of this.axis)if(!Number.isInteger(e))throw Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=pX(e.betaInitializer||"zeros"),this.gammaInitializer=pX(e.gammaInitializer||"ones"),this.betaRegularizer=fD(e.betaRegularizer),this.gammaRegularizer=fD(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=pJ(e);let t=e.length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);// Further validate axes.
for(let e of this.axis)if(e<0||e>=t)throw Error(`Invalid axis: ${e}`);if(this.axis.length!==d_(this.axis).length)throw Error(`Found duplicate axes in: ${this.axis}`);let r=this.axis.map(t=>e[t]);this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){let r=pY(e),n=r.shape,a=n.length;return(0,dp.tidy)(()=>{let{mean:e,variance:t}=(0,mB.moments)(r,this.axis,!0),s=dx(1,a);for(let e of this.axis)s[e]=n[e];let i=e=>null!=e&&e.shape.length!==a?oN.reshape(e,s):e,o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null,u=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(u.push(n[e]),c.push(1)):(u.push(1),c.push(n[e]));return e=lI.tile(e,u),t=lI.tile(t,u),null!=o&&(o=lI.tile(o,c)),null!=l&&(l=lI.tile(l,c)),mz(r,e,t,l,o,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:dE(this.betaInitializer),gammaInitializer:dE(this.gammaInitializer),betaRegularizer:dE(this.betaRegularizer),gammaRegularizer:dE(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */mG.className="LayerNormalization",dM.registerClass(mG),/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * Padding Layers.
 */// Porting Note: In Python Keras, the padding layers are in convolutional.py,
//   but we decided to put them in a separate file (padding.ts) for clarity.
A("i64bB");var dp=A("c2DT1"),u$=A("fSZF6"),dM=A("5IZxH");class mU extends ht{constructor(e){// TODO(cais): Maybe refactor the following logic surrounding `padding`
//   into a helper method.
if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?pp():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{let t,r;if(e.padding=e.padding,2!==e.padding.length)throw new dg(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],r=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new dg(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new dg(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);r=e.padding[1]}this.padding=[t,r]}this.inputSpec=[new p6({ndim:4})]}computeOutputShape(e){let t,r;return(e=pJ(e),"channelsFirst"===this.dataFormat)?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,r]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,r=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,r,e[3]])}call(e,t){return(0,dp.tidy)(()=>{var t,r,n;return t=pY(e),r=this.padding,n=this.dataFormat,(0,dp.tidy)(()=>{let e;if(4!==t.rank)throw new dg(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==r&&(r=[[1,1],[1,1]]),2!==r.length||2!==r[0].length||2!==r[1].length)throw new dg("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=pp()),"channelsLast"!==n&&"channelsFirst"!==n)throw new dg(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);return e="channelsFirst"===n?[[0,0],[0,0],r[0],r[1]]:[[0,0],r[0],r[1],[0,0]],u$.pad(t,e)})})}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}/** @nocollapse */mU.className="ZeroPadding2D",dM.registerClass(mU),/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * TensorFlow.js Layers: Pooling Layers.
 */A("i64bB");var dp=A("c2DT1"),cz=A("gscJF"),cc=A("j4oHC"),ld=A("aDHKy"),mW=A("gF4tm"),mq=A("ku2lx"),da=A("kX8Hd"),dM=A("5IZxH"),cG=A("67GCc"),cV=A("05cMR");function mH(e,t,r,n,a,s){return(0,dp.tidy)(()=>{let i;dq(a),dK(s),dH(n),null==r&&(r=[1,1]),null==n&&(n="valid"),null==a&&(a=pp()),null==s&&(s="max"),// TODO(cais): Remove the preprocessing step once deeplearn.js supports
// dataFormat as an input argument.
e=fH(e,a);let o="same"===n?"same":"valid";return i="max"===s?cz.maxPool(e,t,r,o):cc.avgPool(e,t,r,o),"channelsFirst"===a&&(i=ld.transpose(i,[0,3,1,2])),i})}function mK(e,t,r,n,a,s){return(0,dp.tidy)(()=>{let i;dq(a),dK(s),dH(n),null==r&&(r=[1,1,1]),null==n&&(n="valid"),null==a&&(a=pp()),null==s&&(s="max"),// x is NDHWC after preprocessing.
e=fK(e,a);let o="same"===n?"same":"valid";return i="max"===s?mW.maxPool3d(e,t,r,o):mq.avgPool3d(e,t,r,o),"channelsFirst"===a&&(i=ld.transpose(i,[0,4,1,2,3])),i})}class mX extends ht{/**
     *
     * @param args Parameters for the Pooling layer.
     *
     * config.poolSize defaults to 2.
     */constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&1===e.poolSize.length&&"number"==typeof e.poolSize[0])this.poolSize=e.poolSize;else throw new dg(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(d$(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else if(Array.isArray(e.strides)&&1===e.strides.length&&"number"==typeof e.strides[0])this.strides=e.strides;else throw new dg(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);d$(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,dH(this.padding),this.inputSpec=[new p6({ndim:3})]}computeOutputShape(e){e=pJ(e);let t=fW(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,dp.tidy)(()=>{this.invokeCallHook(e,t),// Add dummy last dimension.
e=pf(pY(e),2);let r=this.poolingFunction(pY(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");// Remove dummy last dimension.
return da.squeeze(r,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class mZ extends mX{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return dq(a),dH(n),mH(e,t,r,n,a,"max")}}/** @nocollapse */mZ.className="MaxPooling1D",dM.registerClass(mZ);class mQ extends mX{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return dq(a),dH(n),mH(e,t,r,n,a,"avg")}}/** @nocollapse */mQ.className="AveragePooling1D",dM.registerClass(mQ);class mY extends ht{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new dg(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];d$(this.poolSize,"poolSize"),d$(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,dq(this.dataFormat),dH(this.padding),this.inputSpec=[new p6({ndim:4})]}computeOutputShape(e){e=pJ(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],r="channelsFirst"===this.dataFormat?e[3]:e[2];return(t=fW(t,this.poolSize[0],this.padding,this.strides[0]),r=fW(r,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat)?[e[0],e[1],t,r]:[e[0],t,r,e[3]]}call(e,t){return(0,dp.tidy)(()=>(this.invokeCallHook(e,t),this.poolingFunction(pY(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class mJ extends mY{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return dq(a),dH(n),mH(e,t,r,n,a,"max")}}/** @nocollapse */mJ.className="MaxPooling2D",dM.registerClass(mJ);class m0 extends mY{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return dq(a),dH(n),mH(e,t,r,n,a,"avg")}}/** @nocollapse */m0.className="AveragePooling2D",dM.registerClass(m0);class m1 extends ht{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new dg(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];d$(this.poolSize,"poolSize"),d$(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,dq(this.dataFormat),dH(this.padding),this.inputSpec=[new p6({ndim:5})]}computeOutputShape(e){e=pJ(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],r="channelsFirst"===this.dataFormat?e[3]:e[2],n="channelsFirst"===this.dataFormat?e[4]:e[3];return(t=fW(t,this.poolSize[0],this.padding,this.strides[0]),r=fW(r,this.poolSize[1],this.padding,this.strides[1]),n=fW(n,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat)?[e[0],e[1],t,r,n]:[e[0],t,r,n,e[4]]}call(e,t){return(0,dp.tidy)(()=>(this.invokeCallHook(e,t),this.poolingFunction(pY(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class m2 extends m1{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return dq(a),dH(n),mK(e,t,r,n,a,"max")}}/** @nocollapse */m2.className="MaxPooling3D",dM.registerClass(m2);class m4 extends m1{constructor(e){super(e)}poolingFunction(e,t,r,n,a){return dq(a),dH(n),mK(e,t,r,n,a,"avg")}}/** @nocollapse */m4.className="AveragePooling3D",dM.registerClass(m4);class m3 extends ht{constructor(e){super(e),this.inputSpec=[new p6({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new dy}}class m8 extends m3{constructor(e){super(e||{})}call(e,t){return(0,dp.tidy)(()=>{let t=pY(e);return cG.mean(t,1)})}}/** @nocollapse */m8.className="GlobalAveragePooling1D",dM.registerClass(m8);class m6 extends m3{constructor(e){super(e||{})}call(e,t){return(0,dp.tidy)(()=>{let t=pY(e);return cV.max(t,1)})}}/** @nocollapse */m6.className="GlobalMaxPooling1D",dM.registerClass(m6);class m5 extends ht{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,dq(this.dataFormat),this.inputSpec=[new p6({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new dy}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class m7 extends m5{call(e,t){return(0,dp.tidy)(()=>{let t=pY(e);return"channelsLast"===this.dataFormat?cG.mean(t,[1,2]):cG.mean(t,[2,3])})}}/** @nocollapse */m7.className="GlobalAveragePooling2D",dM.registerClass(m7);class m9 extends m5{call(e,t){return(0,dp.tidy)(()=>{let t=pY(e);return"channelsLast"===this.dataFormat?cV.max(t,[1,2]):cV.max(t,[2,3])})}}/** @nocollapse */m9.className="GlobalMaxPooling2D",dM.registerClass(m9),/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * Layers that augment the functionality of a base layer.
 */A("i64bB");var dp=A("c2DT1"),dM=A("5IZxH"),ux=A("6act6"),oO=A("hgacW"),op=A("jZc0w");class ge extends ht{constructor(e){// Porting Note: In PyKeras, `self.layer` is set prior to the calling
//   `super()`. But we can't do that here due to TypeScript's restriction.
//   See: https://github.com/Microsoft/TypeScript/issues/8277
//   As a result, we have to add checks in `get trainable()` and
//   `set trainable()` below in order to prevent using `this.layer` when
//   its value is `undefined`. The super constructor does use the getter
//   and the setter of `this.layer`.
super(e),this.layer=e.layer}build(e){this.built=!0}// TODO(cais): Implement activityRegularizer getter.
get trainable(){return(// Porting Note: the check of `this.layer` here is necessary due to the
//   way the `constructor` of this class is written (see Porting Note
//   above).
null!=this.layer&&this.layer.trainable)}set trainable(e){// Porting Note: the check of `this.layer` here is necessary due to the
//   way the `constructor` of this class is written (see Porting Note
//   above).
null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}// TODO(cais): Implement setter for trainableWeights.
get nonTrainableWeights(){return this.layer.nonTrainableWeights}// TODO(cais): Implement setter for nonTrainableWeights.
get updates(){// tslint:disable-next-line:no-any
return this.layer._updates}// TODO(cais): Implement getUpdatesFor().
get losses(){return this.layer.losses}// TODO(cais): Implement getLossesFor().
getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}/** @nocollapse */static fromConfig(e,t,r={}){let n=t.layer,a=h_(n,r);delete t.layer;let s={layer:a};return Object.assign(s,t),new e(s)}}class gt extends ge{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=pJ(e)).length<3)throw new dg(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=pJ(e);let t=[e[0]].concat(e.slice(2)),r=this.layer.computeOutputShape(t),n=e[1];return[r[0],n].concat(r.slice(1))}call(e,t){return(0,dp.tidy)(()=>{// TODO(cais): Add 'training' and 'useLearningPhase' to kwargs.
e=pY(e);let r=me((e,r)=>{// TODO(cais): Add useLearningPhase.
// NOTE(cais): `layer.call` may return a length-1 array of Tensor in
//   some cases (e.g., `layer` is a `Sequential` instance), which is
//   why `getExactlyOneTensor` is used below.
let n=pY(this.layer.call(e,t));return[n,[]]},e,[],!1,null,null,!1,!0),n=r[1];// TODO(cais): Add activity regularization.
// TODO(cais): Add useLearningPhase.
return n})}}/** @nocollapse */gt.className="TimeDistributed",dM.registerClass(gt);class gr extends ge{constructor(e){super(e);// Note: When creating `this.forwardLayer`, the original Layer object
//   (`config.layer`) ought to be cloned. This is why we call
//   `getConfig()` followed by `deserialize()`. Without this cloning,
//   the layer names saved during serialization will incorrectly contain
//   the 'forward_' prefix. In Python Keras, this is done using
//   `copy.copy` (shallow copy), which does not have a simple equivalent
//   in JavaScript. JavaScript's `Object.assign()` does not copy
//   methods.
let t=e.layer.getConfig(),r={};r.className=e.layer.getClassName(),r.config=t,this.forwardLayer=h_(r),t.goBackwards=!0!==t.goBackwards;let n={};if(n.className=e.layer.getClassName(),n.config=t,this.backwardLayer=h_(n),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,dO(dU,"BidirectionalMergeMode",this.mergeMode),e.weights)throw new dy("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){// Porting Note: the check of `this.layer` here is necessary due to the
//   way the `constructor` of this class is written (see Porting Note
//   above).
this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,r=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,r)),this.backwardLayer.setWeights(e.slice(r))}computeOutputShape(e){let t,r,n,a=this.forwardLayer.computeOutputShape(e);return(Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(n=a.slice(1)),t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,r=[t]):r=null==this.mergeMode?[t,t.slice()]:[t],this.returnState)?null==this.mergeMode?r.concat(n).concat(n.slice()):[t].concat(n).concat(n.slice()):dS(r)}apply(e,t){let r=null==t?null:t.initialState,n=null==t?null:t.constants;null==t&&(t={});let a=f9(e,r,n,this.numConstants);if(e=a.inputs,r=a.initialState,n=a.constants,Array.isArray(e)&&(r=e.slice(1),e=e[0]),(null==r||0===r.length)&&null==n)return super.apply(e,t);let s=[],i=[];if(null!=r){let e=r.length;if(e%2>0)throw new dg("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=r,s.push(...r);let n=r.map(e=>new p6({shape:e.shape}));this.forwardLayer.stateSpec=n.slice(0,e/2),this.backwardLayer.stateSpec=n.slice(e/2),i.push(...n)}if(null!=n)throw new dy("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof p5;for(let e of s)if(e instanceof p5!==o)throw new dg("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(!o)return super.apply(e,t);{// Compute the full input and specs, including the states.
let r=[e].concat(s),n=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=n;let o=super.apply(r,t);return this.inputSpec=a,o}}call(e,t){return(0,dp.tidy)(()=>{let r,n,a,s;let i=t.initialState;if(null==i)r=this.forwardLayer.call(e,t),n=this.backwardLayer.call(e,t);else{let a=i.slice(0,i.length/2),s=i.slice(i.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),n=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return(// TODO(cais): Properly set learning phase.
(this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(n.slice(1))),r=r[0],n=n[0]),this.returnSequences&&(n=ux.reverse(n,1)),"concat"===this.mergeMode?s=pb([r,n]):"sum"===this.mergeMode?s=oO.add(r,n):"ave"===this.mergeMode?s=op.mul(.5,oO.add(r,n)):"mul"===this.mergeMode?s=op.mul(r,n):null==this.mergeMode&&(s=[r,n]),this.returnState)?null==this.mergeMode?s.concat(a):[s].concat(a):s)})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){dZ(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),dZ(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let r;if(Array.isArray(t)&&(t=t[0]),r=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,!this.returnState)return r;{let e=this.forwardLayer.states,t=e.map(e=>null);return Array.isArray(r)?r.concat(t).concat(t):[r].concat(t).concat(t)}}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}// TODO(cais): Implement constraints().
setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}/** @nocollapse */static fromConfig(e,t){let r=h_(t.layer);// TODO(cais): Add logic for `numConstants` once the property is added.
if(delete t.layer,null!=t.numConstants)throw new dy("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");return t.layer=r,new e(t)}}/** @nocollapse */gr.className="Bidirectional",dM.registerClass(gr),/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */A("i64bB");var dp=A("c2DT1"),oO=A("hgacW"),op=A("jZc0w"),dM=A("5IZxH");/**
 * Preprocessing Rescaling Layer
 *
 * This rescales images by a scaling and offset factor
 */class gn extends ht{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,dp.tidy)(()=>("float32"!==(e=pY(e)).dtype&&(e=ph(e,"float32")),(0,oO.add)((0,op.mul)(e,this.scale),this.offset)))}}/** @nocollapse */gn.className="Rescaling",dM.registerClass(gn),/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */A("i64bB");var d3=A("aosGd"),dp=A("c2DT1"),lE=A("8BrLX"),ga=A("erbmM"),gs=A("80Ety"),un=A("gBOC6"),dM=A("5IZxH");const{resizeBilinear:gi,cropAndResize:go}=d3.image;class gl extends ht{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,r,n,a,s,i,o){return(0,dp.tidy)(()=>{let l;let u=!1,c=[t/s,r/i,(n+t)/s,(a+r)/i],d=[];3===e.rank?(u=!0,l=(0,lE.stack)([e])):l=e;for(let e=0;e<l.shape[0];e++)d.push(c);let p=(0,ga.tensor)(d,[d.length,4]),h=(0,gs.range)(0,d.length,1,"int32"),f=go(l,p,h,[n,a],"nearest");return u?ph(pY((0,un.unstack)(f)),o):ph(f,o)})}upsize(e,t,r,n){return(0,dp.tidy)(()=>{let a=gi(e,[t,r]);return ph(a,n)})}call(e,t){return(0,dp.tidy)(()=>{let t=pY(e),r=t.dtype,n=t.shape,a=n[n.length-3],s=n[n.length-2],i=0;a!==this.height&&(i=Math.floor((a-this.height)/2));let o=0;return(s!==this.width&&0===(o=Math.floor((s-this.width)/2))&&(o=1),i>=0&&o>=0)?this.centerCrop(t,i,o,this.height,this.width,a,s,r):this.upsize(e,this.height,this.width,r)})}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=pJ(e);let t=e.length-3,r=e.length-2;return e[t]=this.height,e[r]=this.width,e}}/** @nocollapse */gl.className="CenterCrop",dM.registerClass(gl),/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */A("i64bB");var dp=A("c2DT1"),cV=A("05cMR"),cU=A("fySTI"),lL=A("bRRKf"),oJ=A("l0Zxl"),dM=A("5IZxH");/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */A("i64bB");var u1=A("iPDWZ"),gu=A("8maH5"),op=A("jZc0w");class gc extends ht{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=pJ(e))?[this.numTokens]:("oneHot"===this.outputMode&&1!==e[e.length-1]?e.push(this.numTokens):e[e.length-1]=this.numTokens,e)}call(e,t){return(0,dp.tidy)(()=>{let r;if("int32"!==(e=pY(e)).dtype&&(e=ph(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new dg(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);r=pY(t.countWeights)}let n=(0,cV.max)(e),a=(0,cU.min)(e),s=(0,lL.greater)(this.numTokens,n).bufferSync().get(0),i=(0,oJ.greaterEqual)(a,0).bufferSync().get(0);if(!(s&&i))throw new dg(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,r,n){let a,s=pY(e);if("int32"!==s.dtype&&(s=ph(s,"int32")),"int"===t)return s;let i=s.shape;if(0===s.rank&&(s=(0,u1.expandDims)(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=(0,u1.expandDims)(s,-1)),s.rank>2)throw new dg(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${s.rank}.`);let o=["multiHot","oneHot"].includes(t),l=s;if(a=void 0!==n&&"count"===t?(0,gu.denseBincount)(l,n,r,o):(0,gu.denseBincount)(l,[],r,o),"tfIdf"!==t)return a;if(n)return(0,op.mul)(a,n);throw new dg("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,r)})}}/** @nocollapse */gc.className="CategoryEncoding",dM.registerClass(gc),/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */A("i64bB");var dp=A("c2DT1"),d3=A("aosGd"),dM=A("5IZxH");const gd=new Set(["bilinear","nearest"]);/**
 * Preprocessing Resizing Layer
 *
 * This resizes images by a scaling and offset factor
 */class gp extends ht{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(gd.has(e.interpolation))this.interpolation=e.interpolation;else throw new dg(`Invalid interpolation parameter: ${e.interpolation} is not implemented`)}else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=pJ(e);let t=e[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,dp.tidy)(()=>{let t=[this.height,this.width];if("bilinear"===this.interpolation)return(0,d3.image).resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return(0,d3.image).resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw Error(`Interpolation is ${this.interpolation} but only ${[...gd]} are supported`)})}}/** @nocollapse */gp.className="Resizing",dM.registerClass(gp),/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */A("i64bB");var dp=A("c2DT1"),d1=A("j8sic"),d3=A("aosGd"),dM=A("5IZxH");/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 *//**
 * Keeps track of seed and handles pseudorandomness
 * Instance created in BaseRandomLayer class
 * Utilized for random preprocessing layers
 */class gh{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}gh.className="RandomSeed";class gf extends ht{constructor(e){super(e),this.randomGenerator=new gh(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}// A layer handle the random number creation and savemodel behavior.
/** @nocollapse */gf.className="BaseRandomLayer";const gm=new Set(["bilinear","nearest"]);/**
 * Preprocessing Layer with randomly varies image during training
 *
 * This layer randomly adjusts the width of a batch of images of a
 * batch of images by a random factor.
 *
 * The input should be a 3D (unbatched) or
 * 4D (batched) tensor in the `"channels_last"` image data format. Input pixel
 * values can be of any range (e.g. `[0., 1.)` or `[0, 255]`) and of interger
 * or floating point dtype. By default, the layer will output floats.
 *
 * tf methods implemented in tfjs: 'bilinear', 'nearest',
 * tf methods unimplemented in tfjs: 'bicubic', 'area', 'lanczos3', 'lanczos5',
 *                                   'gaussian', 'mitchellcubic'
 *
 */class gg extends gf{constructor(e){super(e);let{factor:t,interpolation:r="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new dg(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new dg(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new dg(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(r){if(gm.has(r))this.interpolation=r;else throw new dg(`Invalid interpolation parameter: ${r} is not implemented`)}}getConfig(){let e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=pJ(e);let t=e[2];return[this.imgHeight,-1,t]}call(e,t){return(0,dp.tidy)(()=>{let t=pY(e);this.imgHeight=t.shape[t.shape.length-3];let r=t.shape[t.shape.length-2];this.widthFactor=(0,d1.randomUniform)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let n=this.widthFactor.dataSync()[0]*r;n=Math.round(n);let a=[this.imgHeight,n];switch(this.interpolation){case"bilinear":return(0,d3.image).resizeBilinear(e,a);case"nearest":return(0,d3.image).resizeNearestNeighbor(e,a);default:throw Error(`Interpolation is ${this.interpolation}
          but only ${[...gm]} are supported`)}})}}/** @nocollapse */gg.className="RandomWidth",dM.registerClass(gg),A("40l72");var gy=A("1SddR");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),dp=A("c2DT1"),u7=A("9jCh7"),lE=A("8BrLX"),ga=A("erbmM"),gb=A("3mnBW");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */A("i64bB");var dp=A("c2DT1"),gv=A("3w4Rg"),dh=A("jjNRA"),gb=A("3mnBW");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */A("i64bB");var u7=A("9jCh7");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),dd=A("ibsdL"),u7=A("9jCh7");function gx(e){return null===e?null:gw(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function gw(e){let t=!1;if(dd.env().get("IS_BROWSER"))t=e instanceof TextDecoder;else{// tslint:disable-next-line:no-require-imports
let{StringDecoder:r}=A("kjyEk");t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof u7.Tensor)&&!(e instanceof Promise)&&!t)}// tslint:disable-next-line: no-any
function gk(e){return e instanceof u7.Tensor?{value:e.clone(),recurse:!1}:gw(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 *//**
 * A ring buffer, providing O(1) FIFO, LIFO, and related operations.
 */class gS{/**
     * Constructs a `RingBuffer`.
     * @param capacity The number of items that the buffer can accomodate.
     */constructor(e){if(this.capacity=e,// Note we store the indices in the range 0 <= index < 2*capacity.
// This allows us to distinguish the full from the empty case.
// See https://www.snellman.net/blog/archive/2016-12-13-ring-buffers/
this.begin=0,this.end=0,null==e)throw RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw RangeError("Can't create ring buffer of capacity < 1.");this.data=Array(e),this.doubledCapacity=2*e}/**
     * Map any index into the range 0 <= index < 2*capacity.
     */wrap(e){// don't trust % on negative numbers
for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}/**
     * Returns the current number of items in the buffer.
     */length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}/**
     * Reports whether the buffer is full.
     * @returns true if the number of items in the buffer equals its capacity, and
     *   false otherwise.
     */isFull(){return this.length()===this.capacity}/**
     * Reports whether the buffer is empty.
     * @returns true if the number of items in the buffer equals zero, and
     *   false otherwise.
     */isEmpty(){return 0===this.length()}/**
     * Adds an item to the end of the buffer.
     */push(e){if(this.isFull())throw RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}/**
     * Adds many items to the end of the buffer, in order.
     */pushAll(e){for(let t of e)this.push(t)}/**
     * Removes and returns the last item in the buffer.
     */pop(){if(this.isEmpty())throw RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}/**
     * Adds an item to the beginning of the buffer.
     */unshift(e){if(this.isFull())throw RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}/**
     * Removes and returns the first item in the buffer.
     */shift(){if(this.isEmpty())throw RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}/**
     * Removes and returns a specific item in the buffer, and moves the last item
     * to the vacated slot.  This is useful for implementing a shuffling stream.
     * Note that this operation necessarily scrambles the original order.
     *
     * @param relativeIndex: the index of the item to remove, relative to the
     *   first item in the buffer (e.g., hiding the ring nature of the underlying
     *   storage).
     */shuffleExcise(e){if(this.isEmpty())throw RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),r=this.get(t);return this.set(t,this.pop()),r}}class gN extends gS{/**
     * Constructs a `GrowingRingBuffer`.
     */constructor(){super(gN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}/**
     * Doubles the capacity of the buffer.
     */expand(){let e=2*this.capacity,t=Array(e),r=this.length();// Rotate the buffer to start at index 0 again, since we can't just
// allocate more space at the end.
for(let e=0;e<r;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}}gN.INITIAL_CAPACITY=32;class gT{/**
     * Collect all remaining elements of a bounded stream into an array.
     * Obviously this will succeed only for small streams that fit in memory.
     * Useful for testing.
     *
     * @returns A Promise for an array of stream elements, which will resolve
     *   when the stream is exhausted.
     */async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}/**
     * Collect all elements of this dataset into an array with prefetching 100
     * elements. This is useful for testing, because the prefetch changes the
     * order in which the Promises are resolved along the processing pipeline.
     * This may help expose bugs where results are dependent on the order of
     * Promise resolution rather than on the logical order of the stream (i.e.,
     * due to hidden mutable state).
     *
     * @returns A Promise for an array of stream elements, which will resolve
     *   when the stream is exhausted.
     */async toArrayForTest(){let e=this.prefetch(100),t=[],r=await e.next();for(;!r.done;)t.push(r.value),r=await e.next();return t}/**
     * Draw items from the stream until it is exhausted.
     *
     * This can be useful when the stream has side effects but no output.  In
     * that case, calling this function guarantees that the stream will be
     * fully processed.
     */async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}/**
     * Draw items from the stream until it is exhausted, or a predicate fails.
     *
     * This can be useful when the stream has side effects but no output.  In
     * that case, calling this function guarantees that the stream will be
     * fully processed.
     */async resolveWhile(e){let t=await this.next(),r=e(t.value);for(;!t.done&&r;)r=e((t=await this.next()).value)}/**
     * Handles errors thrown on this stream using a provided handler function.
     *
     * @param handler A function that handles any `Error` thrown during a `next()`
     *   call and returns true if the stream should continue (dropping the failed
     *   call) or false if the stream should quietly terminate.  If the handler
     *   itself throws (or rethrows) an `Error`, that will be propagated.
     *
     * @returns A `LazyIterator` of elements passed through from upstream,
     *   possibly filtering or terminating on upstream `next()` calls that
     *   throw an `Error`.
     */handleErrors(e){return new g$(this,e)}// TODO(soergel): Implement reduce() etc.
/**
     * Filters this stream according to `predicate`.
     *
     * @param predicate A function mapping a stream element to a boolean or a
     * `Promise` for one.
     *
     * @returns A `LazyIterator` of elements for which the predicate was true.
     */filter(e){return new gO(this,e)}/**
     * Maps this stream through a 1-to-1 transform.
     *
     * @param transform A function mapping a stream element to a transformed
     *   element.
     *
     * @returns A `LazyIterator` of transformed elements.
     */map(e){return new gP(this,e)}/**
     * Maps this stream through an async 1-to-1 transform.
     *
     * @param transform A function mapping a stream element to a `Promise` for a
     *   transformed stream element.
     *
     * @returns A `LazyIterator` of transformed elements.
     */mapAsync(e){return new gD(this,e)}/**
     * Maps this stream through a 1-to-1 transform, forcing serial execution.
     *
     * @param transform A function mapping a stream element to a transformed
     *   element.
     *
     * @returns A `LazyIterator` of transformed elements.
     */serialMapAsync(e){return new gD(this,e).serial()}/**
     * Maps this stream through a 1-to-many transform.
     *
     * @param transform A function mapping a stream element to an array of
     *   transformed elements.
     *
     * @returns A `DataStream` of transformed elements.
     */flatmap(e){return new gF(this,e)}/**
     * Apply a function to every element of the stream.
     *
     * @param f A function to apply to each stream element.
     */async forEachAsync(e){return this.map(e).resolveFully()}/**
     * Apply a function to every element of the stream, forcing serial execution.
     *
     * @param f A function to apply to each stream element.  Should return 'true'
     *   to indicate that the stream should continue, or 'false' to cause it to
     *   terminate.
     */async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}/**
     * Groups elements into batches, represented as arrays of elements.
     *
     * We can think of the elements of this iterator as 'rows' (even if they are
     * nested structures).  By the same token, consecutive values for a given
     * key within the elements form a 'column'.  This matches the usual sense of
     * 'row' and 'column' when processing tabular data (e.g., parsing a CSV).
     *
     * Thus, "Row-major" means that the resulting batch is simply a collection of
     * rows: `[row1, row2, row3, ...]`.  This is contrast to the column-major
     * form, which is needed for vectorized computation.
     *
     * @param batchSize The number of elements desired per batch.
     * @param smallLastBatch Whether to emit the final batch when it has fewer
     *   than batchSize elements. Default true.
     * @returns A `LazyIterator` of batches of elements, represented as arrays
     *   of the original element type.
     */rowMajorBatch(e,t=!0){return new g_(this,e,t)}/**
     * Groups elements into batches, represented in column-major form.
     *
     * We can think of the elements of this iterator as 'rows' (even if they are
     * nested structures).  By the same token, consecutive values for a given
     * key within the elements form a 'column'.  This matches the usual sense of
     * 'row' and 'column' when processing tabular data (e.g., parsing a CSV).
     *
     * Thus, "column-major" means that the resulting batch is a (potentially
     * nested) structure representing the columns.  Each column entry, then,
     * contains a collection of the values found in that column for a range of
     * input elements.  This representation allows for vectorized computation, in
     * contrast to the row-major form.
     *
     * The inputs should all have the same nested structure (i.e., of arrays and
     * dicts).  The result is a single object with the same nested structure,
     * where the leaves are arrays collecting the values of the inputs at that
     * location (or, optionally, the result of a custom function applied to those
     * arrays).
     *
     * @param batchSize The number of elements desired per batch.
     * @param smallLastBatch Whether to emit the final batch when it has fewer
     *   than batchSize elements. Default true.
     * @param zipFn: (optional) A function that expects an array of elements at a
     *   single node of the object tree, and returns a `DeepMapResult`.  The
     *   `DeepMapResult` either provides a result value for that node (i.e.,
     *   representing the subtree), or indicates that the node should be processed
     *   recursively.  The default zipFn recurses as far as possible and places
     *   arrays at the leaves.
     * @returns A `LazyIterator` of batches of elements, represented as an object
     *   with collections at the leaves.
     */columnMajorBatch(e,t=!0,r=gx){// First collect the desired number of input elements as a row-major batch.
let n=this.rowMajorBatch(e,t);// Now 'rotate' or 'pivot' the data, collecting all values from each column
// in the batch (i.e., for each key within the elements) into an array.
return n.map(e=>(function(e,t=gx){return(/**
 * @param containedIn: An set containing objects on the reference path currently
 *   being processed (used to detect cycles).
 */function e(t,r,n=new Set){// The recursion follows the structure of input 0; it's assumed that all the
    // other inputs have the same structure.
    let a=t[0];if(n.has(a))throw Error("Circular references are not supported.");let s=r(t);if(s.recurse&&null!==s.value)throw Error("A deep zip function may not return both a value and recurse=true.");if(!s.recurse)return s.value;if(gw(a)){// tslint:disable-next-line:no-any
    let s=Array.isArray(a)?[]:{};for(let i in n.add(a),a){let a=t.map(e=>e[i]),o=e(a,r,n);s[i]=o}return n.delete(a),s}throw Error(`Can't recurse into non-iterable type: ${a}`)}(e,t))})(e,r))}/**
     * Concatenate this `LazyIterator` with another.
     *
     * @param iterator A `LazyIterator` to be concatenated onto this one.
     * @param baseErrorHandler An optional function that can intercept `Error`s
     *   raised during a `next()` call on the base stream.  This function can
     *   decide whether the error should be propagated, whether the error should
     *   be ignored, or whether the base stream should be terminated.
     * @returns A `LazyIterator`.
     */concatenate(e,t){var r;return new gL((r=[this,e],new gI(r)),t)}/**
     * Limits this stream to return at most `count` items.
     *
     * @param count The maximum number of items to provide from the stream. If
     * a negative or undefined value is given, the entire stream is returned
     *   unaltered.
     */take(e){return e<0||null==e?this:new gR(this,e)}/**
     * Skips the first `count` items in this stream.
     *
     * @param count The number of items to skip.  If a negative or undefined
     * value is given, the entire stream is returned unaltered.
     */skip(e){return e<0||null==e?this:new gA(this,e)}/**
     * Prefetch the first `bufferSize` items in this stream.
     *
     * Note this prefetches Promises, but makes no guarantees about when those
     * Promises resolve.
     *
     * @param bufferSize: An integer specifying the number of elements to be
     *   prefetched.
     */prefetch(e){return new gj(this,e)}// TODO(soergel): deep sharded shuffle, where supported
/**
     * Randomly shuffles the elements of this stream.
     *
     * @param bufferSize: An integer specifying the number of elements from
     * this stream from which the new stream will sample.
     * @param seed: (Optional.) An integer specifying the random seed that
     * will be used to create the distribution.
     */shuffle(e,t){return new gB(this,e,t)}/**
     * Force an iterator to execute serially: each next() call will await the
     * prior one, so that they cannot execute concurrently.
     */serial(){return new gE(this)}}// ============================================================================
// The following private classes serve to implement the chainable methods
// on LazyIterator.  Unfortunately they can't be placed in separate files,
// due to resulting trouble with circular imports.
// ============================================================================
// Iterators that just extend LazyIterator directly
// ============================================================================
class gI extends gT{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:/**
 * @param seen: A Map of known object mappings (i.e., memoized results of
 *   `mapFn()`)
 * @param containedIn: An set containing objects on the reference path currently
 *   being processed (used to detect cycles).
 */function e(t,r,n=new Map,a=new Set){if(null==t)return null;if("function"==typeof Blob&&t instanceof Blob)return t.slice();if(a.has(t))throw Error("Circular references are not supported.");if(n.has(t))return n.get(t);let s=r(t);if(s.recurse&&null!==s.value)throw Error("A deep map function may not return both a value and recurse=true.");if(!s.recurse)return n.set(t,s.value),s.value;if(gw(t)){// tslint:disable-next-line:no-any
let s=Array.isArray(t)?[]:{};for(let i in a.add(t),t){let o=t[i],l=e(o,r,n,a);s[i]=l}return a.delete(t),t.__proto__&&(s.__proto__=t.__proto__),s}throw Error(`Can't recurse into non-iterable type: ${t}`)}(e,gk),done:!1}}}class gC extends gT{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw(// Modify the error message but leave the stack trace intact
e.message=`Error thrown while iterating through a dataset: ${e.message}`,e)}}}class gE extends gT{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return(// This sets this.lastRead to a new Promise right away, as opposed to
// saying `await this.lastRead; this.lastRead = this.serialNext();` which
// would not work because this.nextRead would be updated only after the
// promise resolves.
this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead)}async serialNext(){return this.upstream.next()}}class gA extends gT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,// Local state that should not be clobbered by out-of-order execution.
this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return(// This sets this.lastRead to a new Promise right away, as opposed to
// saying `await this.lastRead; this.lastRead = this.serialNext();` which
// would not work because this.nextRead would be updated only after the
// promise resolves.
this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead)}async serialNext(){// TODO(soergel): consider tradeoffs of reading in parallel, eg.
// collecting next() promises in an Array and then waiting for
// Promise.all() of those. Benefit: pseudo-parallel execution.  Drawback:
// maybe delayed GC.
for(;this.count++<this.maxCount;){let e=await this.upstream.next();// short-circuit if upstream is already empty
if(e.done)return e;dp.dispose(e.value)}return this.upstream.next()}}class gR extends gT{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}// Note this batch just groups items into row-wise element arrays.
// Rotating these to a column-wise representation happens only at the dataset
// level.
class g_ extends gT{constructor(e,t,r=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=r,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return(// This sets this.lastRead to a new Promise right away, as opposed to
// saying `await this.lastRead; this.lastRead = this.serialNext();` which
// would not work because this.nextRead would be updated only after the
// promise resolves.
this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead)}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done){if(this.enableSmallLastBatch&&e.length>0)return{value:e,done:!1};return{value:null,done:!0}}e.push(t.value)}return{value:e,done:!1}}}class gO extends gT{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return(// This sets this.lastRead to a new Promise right away, as opposed to
// saying `await this.lastRead; this.lastRead = this.serialNext();` which
// would not work because this.nextRead would be updated only after the
// promise resolves.
this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead)}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;dp.dispose(e.value)}}}class gP extends gT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=gv.getTensorsInContainer(e.value),r=this.transform(e.value),n=gv.getTensorsInContainer(r);// TODO(soergel) faster intersection
// TODO(soergel) move to tf.disposeExcept(in, out)?
for(let e of t)gv.isTensorInList(e,n)||e.dispose();return{value:r,done:!1}}}class g$ extends gT{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return(// This sets this.lastRead to a new Promise right away, as opposed to
// saying `await this.lastRead; this.lastRead = this.serialNext();` which
// would not work because this.nextRead would be updated only after the
// promise resolves.
this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead)}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0};// If the handler returns true, loop and fetch the next upstream item.
// If the upstream iterator throws an endless stream of errors, and if
// the handler says to ignore them, then we loop forever here.  That is
// the correct behavior-- it's up to the handler to decide when to stop.
}}}class gD extends gT{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=gv.getTensorsInContainer(e.value),r=await this.transform(e.value),n=gv.getTensorsInContainer(r);// TODO(soergel) faster intersection
// TODO(soergel) move to tf.disposeExcept(in, out)?
for(let e of t)gv.isTensorInList(e,n)||e.dispose();return{value:r,done:!1}}}class gM extends gT{constructor(){super(),this.outputQueue=new gN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return(// This sets this.lastRead to a new Promise right away, as opposed to
// saying `await this.lastRead; this.lastRead = this.serialNext();` which
// would not work because this.nextRead would be updated only after the
// promise resolves.
this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead)}async serialNext(){// Fetch so that the queue contains at least one item if possible.
// If the upstream source is exhausted, AND there are no items left in
// the output queue, then this stream is also exhausted.
for(;0===this.outputQueue.length();)// TODO(soergel): consider parallel reads.
if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class gF extends gM{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=gv.getTensorsInContainer(e.value),r=this.transform(e.value),n=gv.getTensorsInContainer(r);// TODO(soergel) faster intersection, and deduplicate outputTensors
// TODO(soergel) move to tf.disposeExcept(in, out)?
for(let e of(this.outputQueue.pushAll(r),t))gv.isTensorInList(e,n)||e.dispose();return!0}}class gL extends gT{constructor(e,t){super(),this.baseErrorHandler=t,// Strict Promise execution order:
// a next() call may not even begin until the previous one completes.
this.lastRead=null,// Local state that should not be clobbered by out-of-order execution.
this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(// Must await on the previous read since the previous read may have advanced
// the stream of streams, from which we need to read.
// This is unfortunate since we can't parallelize reads. Which means
// prefetching of chained streams is a no-op.
// One solution is to prefetch immediately upstream of this.
await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(f=x||(x={}))[f.FAIL=0]="FAIL",f[f.SHORTEST=1]="SHORTEST",f[f.LONGEST=2]="LONGEST";class gj extends gT{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new gS(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}/**
     * Refill the prefetch buffer.  Returns only after the buffer is full, or
     * the upstream source is exhausted.
     */refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){// This shift will never throw an error because the buffer is always
// full after a refill. If the stream is exhausted, the buffer will be
// full of Promises that will resolve to the end-of-stream signal.
return this.refill(),this.buffer.shift()}}class gB extends gj{constructor(e,t,r){super(e,t),this.upstream=e,this.windowSize=t,// Local state that should not be clobbered by out-of-order execution.
this.upstreamExhausted=!1,this.random=gb.alea(r||dh.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return(// This sets this.lastRead to a new Promise right away, as opposed to
// saying `await this.lastRead; this.lastRead = this.serialNext();` which
// would not work because this.nextRead would be updated only after the
// promise resolves.
this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead)}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}// TODO(soergel): consider vectorized operations within the pipeline.
/**
 * Represents a potentially large list of independent data elements (typically
 * 'samples' or 'examples').
 *
 * A 'data example' may be a primitive, an array, a map from string keys to
 * values, or any nested structure of these.
 *
 * A `Dataset` represents an ordered collection of elements, together with a
 * chain of transformations to be performed on those elements. Each
 * transformation is a method of `Dataset` that returns another `Dataset`, so
 * these may be chained, e.g.
 * `const processedDataset = rawDataset.filter(...).map(...).batch(...)`.
 *
 * Data loading and transformation is done in a lazy, streaming fashion.  The
 * dataset may be iterated over multiple times; each iteration starts the data
 * loading anew and recapitulates the transformations.
 *
 * A `Dataset` is typically processed as a stream of unbatched examples -- i.e.,
 * its transformations are applied one example at a time. Batching produces a
 * new `Dataset` where each element is a batch. Batching should usually come
 * last in a pipeline, because data transformations are easier to express on a
 * per-example basis than on a per-batch basis.
 *
 * The following code examples are calling `await dataset.forEachAsync(...)` to
 * iterate once over the entire dataset in order to print out the data.
 *
 * @doc {heading: 'Data', subheading: 'Classes', namespace: 'data'}
 */class gz{constructor(){this.size=null}// TODO(soergel): Make Datasets report whether repeated iterator() calls
// produce the same result (e.g., reading from a file) or different results
// (e.g., from the webcam).  Currently we don't make this distinction but it
// could be important for the user to know.
// abstract isDeterministic(): boolean;
/**
     * Groups elements into batches.
     *
     * It is assumed that each of the incoming dataset elements has the same
     * structure -- i.e. the same set of keys at each location in an object
     * hierarchy.  For each key, the resulting `Dataset` provides a batched
     * element collecting all of the incoming values for that key.
     *
     *  * Incoming primitives are grouped into a 1-D Tensor.
     *  * Incoming Tensors are grouped into a new Tensor where the 0th axis is
     *    the batch dimension.
     *  * Incoming arrays are converted to Tensor and then batched.
     *  * A nested array is interpreted as an n-D Tensor, so the batched result
     *    has n+1 dimensions.
     *  * An array that cannot be converted to Tensor produces an error.
     *
     * If an array should not be batched as a unit, it should first be converted
     * to an object with integer keys.
     *
     * Here are a few examples:
     *
     * Batch a dataset of numbers:
     * ```js
     * const a = tf.data.array([1, 2, 3, 4, 5, 6, 7, 8]).batch(4);
     * await a.forEachAsync(e => e.print());
     * ```
     *
     * Batch a dataset of arrays:
     * ```js
     * const b = tf.data.array([[1], [2], [3], [4], [5], [6], [7], [8]]).batch(4);
     * await b.forEachAsync(e => e.print());
     * ```
     *
     * Batch a dataset of objects:
     * ```js
     * const c = tf.data.array([{a: 1, b: 11}, {a: 2, b: 12}, {a: 3, b: 13},
     *   {a: 4, b: 14}, {a: 5, b: 15}, {a: 6, b: 16}, {a: 7, b: 17},
     *   {a: 8, b: 18}]).batch(4);
     * await c.forEachAsync(e => {
     *   console.log('{');
     *   for(var key in e) {
     *     console.log(key+':');
     *     e[key].print();
     *   }
     *   console.log('}');
     * })
     * ```
     *
     * @param batchSize The number of elements desired per batch.
     * @param smallLastBatch Whether to emit the final batch when it has fewer
     *   than batchSize elements. Default true.
     * @returns A `Dataset`, from which a stream of batches can be obtained.
     *
     * @doc {heading: 'Data', subheading: 'Classes'}
     */batch(e,t=!0){let r=this;return dh.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`),gV(async()=>(await r.iterator()).columnMajorBatch(e,t,gG),this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e))}/**
     * Concatenates this `Dataset` with another.
     *
     * ```js
     * const a = tf.data.array([1, 2, 3]);
     * const b = tf.data.array([4, 5, 6]);
     * const c = a.concatenate(b);
     * await c.forEachAsync(e => console.log(e));
     * ```
     *
     * @param dataset A `Dataset` to be concatenated onto this one.
     * @returns A `Dataset`.
     *
     * @doc {heading: 'Data', subheading: 'Classes'}
     */concatenate(e){let t=this;return gV(async()=>(await t.iterator()).concatenate(await e.iterator()),this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null)}/**
     * Filters this dataset according to `predicate`.
     *
     * ```js
     * const a = tf.data.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
     *   .filter(x => x%2 === 0);
     * await a.forEachAsync(e => console.log(e));
     * ```
     *
     * @param predicate A function mapping a dataset element to a boolean or a
     * `Promise` for one.
     *
     * @returns A `Dataset` of elements for which the predicate was true.
     *
     * @doc {heading: 'Data', subheading: 'Classes'}
     */filter(e){let t=this;return gV(async()=>(await t.iterator()).filter(t=>dp.tidy(()=>e(t))),this.size===1/0?1/0:null)}/**
     * Apply a function to every element of the dataset.
     *
     * After the function is applied to a dataset element, any Tensors contained
     * within that element are disposed.
     *
     * ```js
     * const a = tf.data.array([1, 2, 3]);
     * await a.forEachAsync(e => console.log(e));
     * ```
     *
     * @param f A function to apply to each dataset element.
     * @returns A `Promise` that resolves after all elements have been processed.
     *
     * @doc {heading: 'Data', subheading: 'Classes'}
     */async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}/**
     * Maps this dataset through a 1-to-1 transform.
     *
     * ```js
     * const a = tf.data.array([1, 2, 3]).map(x => x*x);
     * await a.forEachAsync(e => console.log(e));
     * ```
     *
     * @param transform A function mapping a dataset element to a transformed
     *   dataset element.
     *
     * @returns A `Dataset` of transformed elements.
     *
     * @doc {heading: 'Data', subheading: 'Classes'}
     */map(e){let t=this;return gV(async()=>(await t.iterator()).map(t=>dp.tidy(()=>e(t))),this.size)}/**
     * Maps this dataset through an async 1-to-1 transform.
     *
     * ```js
     * const a =
     *  tf.data.array([1, 2, 3]).mapAsync(x => new Promise(function(resolve){
     *    setTimeout(() => {
     *      resolve(x * x);
     *    }, Math.random()*1000 + 500);
     *  }));
     * console.log(await a.toArray());
     * ```
     *
     * @param transform A function mapping a dataset element to a `Promise` for a
     *   transformed dataset element.  This transform is responsible for disposing
     *   any intermediate `Tensor`s, i.e. by wrapping its computation in
     *   `tf.tidy()`; that cannot be automated here (as it is in the synchronous
     *   `map()` case).
     *
     * @returns A `Dataset` of transformed elements.
     *
     * @doc {heading: 'Data', subheading: 'Classes'}
     */mapAsync(e){let t=this;return gV(async()=>(await t.iterator()).mapAsync(e),this.size)}/**
     *  Creates a `Dataset` that prefetches elements from this dataset.
     *
     * @param bufferSize: An integer specifying the number of elements to be
     *   prefetched.
     * @returns A `Dataset`.
     *
     * @doc {heading: 'Data', subheading: 'Classes'}
     */prefetch(e){if(null==e)throw RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return gV(async()=>(await t.iterator()).prefetch(e),this.size)}/**
     * Repeats this dataset `count` times.
     *
     * NOTE: If this dataset is a function of global state (e.g. a random number
     * generator), then different repetitions may produce different elements.
     *
     * ```js
     * const a = tf.data.array([1, 2, 3]).repeat(3);
     * await a.forEachAsync(e => console.log(e));
     * ```
     *
     * @param count: (Optional) An integer, representing the number of times
     *   the dataset should be repeated. The default behavior (if `count` is
     *   `undefined` or negative) is for the dataset be repeated indefinitely.
     * @returns A `Dataset`.
     *
     * @doc {heading: 'Data', subheading: 'Classes'}
     */repeat(e){let t=this;return gV(async()=>{var r,n;let a=(r=async()=>({value:await t.iterator(),done:!1}),new gC(r));return n=a.take(e),new gL(n,void 0)},null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null)}/**
     * Creates a `Dataset` that skips `count` initial elements from this dataset.
     *
     * ```js
     * const a = tf.data.array([1, 2, 3, 4, 5, 6]).skip(3);
     * await a.forEachAsync(e => console.log(e));
     * ```
     *
     * @param count: The number of elements of this dataset that should be skipped
     *   to form the new dataset.  If `count` is greater than the size of this
     *   dataset, the new dataset will contain no elements.  If `count`
     *   is `undefined` or negative, skips the entire dataset.
     *
     * @returns A `Dataset`.
     *
     * @doc {heading: 'Data', subheading: 'Classes'}
     */skip(e){let t=this;return gV(async()=>(await t.iterator()).skip(e),null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null)}/**
     * Pseudorandomly shuffles the elements of this dataset. This is done in a
     * streaming manner, by sampling from a given number of prefetched elements.
     *
     * ```js
     * const a = tf.data.array([1, 2, 3, 4, 5, 6]).shuffle(3);
     * await a.forEachAsync(e => console.log(e));
     * ```
     *
     * @param bufferSize: An integer specifying the number of elements from this
     *   dataset from which the new dataset will sample.
     * @param seed: (Optional) An integer specifying the random seed that will
     *   be used to create the distribution.
     * @param reshuffleEachIteration: (Optional) A boolean, which if true
     *   indicates that the dataset should be pseudorandomly reshuffled each time
     *   it is iterated over. If false, elements will be returned in the same
     *   shuffled order on each iteration. (Defaults to `true`.)
     * @returns A `Dataset`.
     *
     * @doc {heading: 'Data', subheading: 'Classes'}
     */shuffle(e,t,r=!0){if(null==e||e<0){if(null==this.size)throw RangeError("`Dataset.shuffle()` requires bufferSize to be specified.");throw RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`)}let n=this,a=gb.alea(t||dh.now().toString());return gV(async()=>{let t=a.int32();return r&&(t+=a.int32()),(await n.iterator()).shuffle(e,t.toString())},this.size)}/**
     * Creates a `Dataset` with at most `count` initial elements from this
     * dataset.
     *
     * ```js
     * const a = tf.data.array([1, 2, 3, 4, 5, 6]).take(3);
     * await a.forEachAsync(e => console.log(e));
     * ```
     *
     * @param count: The number of elements of this dataset that should be taken
     *   to form the new dataset.  If `count` is `undefined` or negative, or if
     *   `count` is greater than the size of this dataset, the new dataset will
     *   contain all elements of this dataset.
     * @returns A `Dataset`.
     *
     * @doc {heading: 'Data', subheading: 'Classes'}
     */take(e){let t=this;return gV(async()=>(await t.iterator()).take(e),null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null)}/**
     * Collect all elements of this dataset into an array.
     *
     * Obviously this will succeed only for small datasets that fit in memory.
     * Useful for testing and generally should be avoided if possible.
     *
     * ```js
     * const a = tf.data.array([1, 2, 3, 4, 5, 6]);
     * console.log(await a.toArray());
     * ```
     *
     * @returns A Promise for an array of elements, which will resolve
     *   when a new stream has been obtained and fully consumed.
     *
     * @doc {heading: 'Data', subheading: 'Classes'}
     */async toArray(){if(this.size===1/0)throw Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}/**
     * Collect all elements of this dataset into an array with prefetching 100
     * elements. This is useful for testing, because the prefetch changes the
     * order in which the Promises are resolved along the processing pipeline.
     * This may help expose bugs where results are dependent on the order of
     * Promise resolution rather than on the logical order of the stream (i.e.,
     * due to hidden mutable state).
     *
     * @returns A Promise for an array of elements, which will resolve
     *   when a new stream has been obtained and fully consumed.
     */async toArrayForTest(){if(this.size===1/0)throw Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function gV(e,t=null){return new class extends gz{constructor(){super(...arguments),this.size=t}/*
         * Provide a new stream of elements.  Note this will also start new streams
         * from any underlying `Dataset`s.
         */async iterator(){return e()}}}/**
 * A zip function for use with deepZip, passed via the columnMajorBatch call.
 *
 * Accepts an array of identically-structured nested elements and either batches
 * them (if they are primitives, numeric arrays, or Tensors) or requests
 * recursion (if not).
 */// tslint:disable-next-line:no-any
function gG(e){var t;if(null===e)return null;// use the first item to decide whether to recurse or batch here.
let r=e[0];if(null==r||null===(t=r)||"object"!=typeof t&&"function"!=typeof t||Array.isArray(r)||"object"==typeof r&&r instanceof u7.Tensor||dh.isTypedArray(r)){// rows is an array of primitives, Tensors, or arrays.  Batch them.
let t=/**
 * Assembles a list of same-shaped numbers, number arrays, or Tensors
 * into a single new Tensor where axis 0 is the batch dimension.
 */function(e){if(0===e.length)throw Error("Can't make a batch of zero elements.");return e[0]instanceof u7.Tensor?lE.stack(e):ga.tensor(e)}(e);return{value:t,recurse:!1}}// the example row is an object, so recurse into it.
return{value:null,recurse:!0}}// TODO(soergel): deep sharded shuffle, where supported
gz.MAX_BUFFER_SIZE=1e4,/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote"),// tf.data.FixedLengthRecordDataset()
// tf.data.TFRecordDataset()
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),dh=A("jjNRA"),ga=A("erbmM");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */A("i64bB");var ps=A("lalFM");A("gmMlv");var dd=A("ibsdL"),dh=A("jjNRA");A("cpgue");var dp=A("c2DT1"),u1=A("iPDWZ"),od=A("inFmq"),d3=A("aosGd"),oN=A("4sqA7");// in combination with chainable source->dataset above, e.g.:
// tf.data.url(...).asCsvDataset().shuffle().batch()
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */// inspired by https://github.com/maxogden/filereader-stream
A("i64bB");var dh=A("jjNRA"),dd=A("ibsdL");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL");A("6ZWSX").Buffer,/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// All exports from this package should be in base.
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//*
 * base.ts contains all the exports from tfjs-backend-cpu
 * without auto-kernel registration
 */A("i64bB");var dp=A("c2DT1");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gU=A("lzjc8"),gW=A("fJqML"),dp=A("c2DT1"),dd=A("ibsdL"),uc=A("7MaPk"),dh=A("jjNRA"),gq=A("iG87S");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");function gH(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&dh.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}const gK=gU.whereImpl;class gX extends gW.KernelBackend{nextDataId(){return gX.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new gW.DataStorage(this,(0,dp.engine)())}write(e,t,r){this.firstUse&&(this.firstUse=!1,(0,dd.env)().get("IS_NODE")&&uc.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let n={id:this.nextDataId()};return this.data.set(n,{values:e,dtype:r,refCount:1}),n}/**
     * Create a data bucket in cpu backend.
     * @param shape Shape of the `TensorInfo`.
     * @param dtype DType of the `TensorInfo`.
     * @param values The value of the `TensorInfo` stored as a flattened array.
     */makeTensorInfo(e,t,r){let n;if("string"===t&&null!=r&&r.length>0&&dh.isString(r[0])){let a=r.map(e=>dh.encodeString(e));n=this.write(a,e,t)}else n=this.write(r,e,t);return{dataId:n,shape:e,dtype:t}}/** Return refCount of a `TensorData`. */refCount(e){if(this.data.has(e)){let t=this.data.get(e);return t.refCount}return 0}/** Increase refCount of a `TensorData`. */incRef(e){let t=this.data.get(e);t.refCount++}/** Decrease refCount of a `TensorData`. */decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,r,n,a){this.data.set(e,{values:t,dtype:n,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:r}=this.data.get(e);if("complex64"===t){let e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);return uc.mergeRealAndImagArrays(e,t)}return dh.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{// Decode the bytes into string.
let r=t.map(e=>dh.decodeString(e));return(0,gq.buffer)(e.shape,e.dtype,r)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return(0,gq.buffer)(e.shape,e.dtype,t)}makeOutput(e,t,r){return(0,dp.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(t,r,e),this)}/**
     * Dispose the memory if the dataId has 0 refCount. Return true if the memory
     * is released or memory is not managed in this backend, false if memory is
     * not cleared.
     * @param dataId
     * @oaram force Optional, remove the data regardless of refCount
     */disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:r}=this.data.get(e);null!=r&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=dh.now();e();let r=dh.now()-t;return{kernelMs:r}}memory(){return{// Unreliable due to automatic gc. The numbers above are cumulative.
unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){gH([e],"where");let t=this.readSync(e.dataId);return gK(e.shape,t)}dispose(){}floatPrecision(){return 32}/** Returns the smallest representable number.  */epsilon(){return super.epsilon()}}gX.nextDataId=0,// Side effects for default initialization of MathBackendCPU
(0,dp.registerBackend)("cpu",()=>new gX,1/* priority */),/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// We explicitly import the modular kernels so they get registered in the
// global registry when we compile the library. A modular build would replace
// the contents of this file and import only the kernels that are needed.
A("i64bB");var u6=A("eky5o");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");function gZ(e){return(t,r,n)=>{let a=dh.getArrayFromDType(r,t.length);for(let r=0;r<t.length;++r)a[r]=e(t[r],n);return a}}function gQ(e,t,r){let n=gZ(t);return gY(e,n,r)}function gY(e,t,r){return({inputs:n,attrs:a,backend:s})=>{let i;let{x:o}=n;gH(o,e);let l=s.data.get(o.dataId).values;if("string"===o.dtype){if(!Array.isArray(l))throw Error("String tensor's value was not an instance of Array");i=uc.fromUint8ToStringArray(l)}else i=l;let u=r||o.dtype,c=t(i,u,a);return s.makeTensorInfo(o.shape,u,c)}}const gJ=gQ(oc.Elu,e=>e>=0?e:Math.exp(e)-1),g0={kernelName:oc.Elu,backendName:"cpu",kernelFunc:gJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");function g1(e){let{inputs:t,backend:r}=e,{x:n}=t;return r.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const g2={kernelName:oc.Identity,backendName:"cpu",kernelFunc:g1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");function g4(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{alpha:s}=n;gH([a],"leakyRelu");let i=dh.sizeFromShape(a.shape),o=r.data.get(a.dataId).values,l=dh.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return r.makeTensorInfo(a.shape,"float32",l)}const g3={kernelName:oc.LeakyRelu,backendName:"cpu",kernelFunc:g4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA");function g8(e){return(t,r,n,a,s)=>{let i=uc.assertAndGetBroadcastShape(t,r),o=i.length,l=dh.computeStrides(i),u=dh.sizeFromShape(i),c=dh.getTypedArrayFromDType(s,u),d=t.length,p=r.length,h=dh.computeStrides(t),f=dh.computeStrides(r),m=uc.getBroadcastDims(t,i),g=uc.getBroadcastDims(r,i);if(m.length+g.length===0)for(let t=0;t<c.length;++t)c[t]=e(n[t%n.length],a[t%a.length]);else for(let t=0;t<c.length;++t){let r=dh.indexToLoc(t,o,l),s=r.slice(-d);m.forEach(e=>s[e]=0);let i=dh.locToIndex(s,d,h),u=r.slice(-p);g.forEach(e=>u[e]=0);let y=dh.locToIndex(u,p,f);c[t]=e(n[i],a[y])}return[c,i]}}const g6=g8((e,t)=>e<0?t*e:e);function g5(e){let{inputs:t,backend:r}=e,{x:n,alpha:a}=t;gH([n,a],"prelu");let s=r.data.get(n.dataId).values,i=r.data.get(a.dataId).values,[o,l]=g6(n.shape,a.shape,s,i,"float32");return r.makeTensorInfo(l,"float32",o)}const g7={kernelName:oc.Prelu,backendName:"cpu",kernelFunc:g5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const g9=gQ(oc.Relu,e=>Math.max(0,e)),ye={kernelName:oc.Relu,backendName:"cpu",kernelFunc:g9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const yt=gQ(oc.Relu6,e=>Math.min(Math.max(0,e),6)),yr={kernelName:oc.Relu6,backendName:"cpu",kernelFunc:yt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const yn=gZ(e=>1/(1+Math.exp(-e))),ya=gQ(oc.Sigmoid,e=>1/(1+Math.exp(-e))),ys={kernelName:oc.Sigmoid,backendName:"cpu",kernelFunc:ya};function yi(e,t,r,n,a){if("linear"===r)return g1({inputs:{x:t},backend:e});if("relu"===r)return g9({inputs:{x:t},backend:e});if("elu"===r)return gJ({inputs:{x:t},backend:e});if("relu6"===r)return yt({inputs:{x:t},backend:e});if("prelu"===r)return g5({inputs:{x:t,alpha:n},backend:e});if("leakyrelu"===r)return g4({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===r)return ya({inputs:{x:t},backend:e});throw Error(`Activation ${r} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");function yo(e){let{inputs:t,backend:r}=e,{real:n,imag:a}=t,s=r.data.get(n.dataId).values,i=r.data.get(a.dataId).values,o=r.makeTensorInfo(n.shape,"complex64"),l=r.data.get(o.dataId);return(// The complex tensor owns the underlying real and imag tensorInfos, only the
// complex tensor tracks refCount, when complexData is disposed the
// underlying tensorData will be disposed.
l.complexTensorInfos={real:r.makeTensorInfo(n.shape,"float32",s),imag:r.makeTensorInfo(a.shape,"float32",i)},o)}const yl={kernelName:oc.Complex,backendName:"cpu",kernelFunc:yo};function yu(e,t,r="float32"){if("complex64"===r){let r=yu(e,t,"float32"),n=yu(e,t,"float32");return yo({inputs:{real:r,imag:n},backend:e})}let n=dh.makeZerosTypedArray(dh.sizeFromShape(t),r);return e.makeTensorInfo(t,r,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");function yc(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.data.get(n.dataId).complexTensorInfos.real,s=r.data.get(a.dataId).values;// When complex tensor is disposed, its underlying parts will be disposed too.
// Make new tensor out of the real value of the complex. This makes sure the
// value is still accessible even if complex tensor is disposed.
return r.makeTensorInfo(a.shape,a.dtype,s)}const yd={kernelName:oc.Real,backendName:"cpu",kernelFunc:yc};function yp(e,t,r,n){if("int32"===n){let r=Int32Array.from(e);return[t,"int32",r]}if("bool"===n){// This is essentially the result of notEqual(x, 0). We avoid using
// kernel notEqual to avoid circular dependency, i.e. binary_utils ->
// cast -> notEqual -> binary_utils.
let n=dh.toTypedArray([0],r),[a,s]=g8((e,t)=>e!==t?1:0)(t,[],e,n,"bool");return[s,"bool",a]}throw Error(`Error in Cast: failed to cast ${r} to ${n}`)}function yh(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dtype:s}=n;// Casting to complex64.
if("complex64"===s){if("complex64"===a.dtype)return g1({inputs:{x:a},backend:r});let e=yu(r,a.shape,a.dtype),t=yh({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),n=yo({inputs:{real:t,imag:e},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),n}// Casting from complex64
if("complex64"===a.dtype){let e=yc({inputs:{input:a},backend:r}),t=yh({inputs:{x:e},backend:r,attrs:{dtype:s}});return r.disposeIntermediateTensorInfo(e),t}if(!dh.hasEncodingLoss(a.dtype,s)){// We don't change the underlying data, since we cast to higher
// precision.
let e=g1({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:s}}let i=r.data.get(a.dataId).values,[o,l,u]=yp(i,a.shape,a.dtype,s);return r.makeTensorInfo(o,l,u)}const yf={kernelName:oc.Cast,backendName:"cpu",kernelFunc:yh};function ym(e,t,r,n){return null==r?({inputs:r,backend:a})=>{let{a:s,b:i}=r;gH([s,i],e);let o=a.data.get(s.dataId).values,l=a.data.get(i.dataId).values,u="string"===s.dtype?uc.fromUint8ToStringArray(o):o,c="string"===s.dtype?uc.fromUint8ToStringArray(l):l,d=n||s.dtype,[p,h]=t(s.shape,i.shape,u,c,d);return a.makeTensorInfo(h,d,p)}:({inputs:e,backend:a})=>{let{a:s,b:i}=e;if("complex64"===s.dtype||"complex64"===i.dtype){let e=yh({inputs:{x:s},backend:a,attrs:{dtype:"complex64"}}),t=a.data.get(e.dataId),n=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,l=a.data.get(n.dataId).values,u=a.data.get(o.dataId).values,c=yh({inputs:{x:i},backend:a,attrs:{dtype:"complex64"}}),d=a.data.get(c.dataId),p=d.complexTensorInfos.real,h=d.complexTensorInfos.imag,f=a.data.get(p.dataId).values,m=a.data.get(h.dataId).values,[g,y,b]=r(s.shape,i.shape,l,u,f,m),v=a.makeTensorInfo(b,"float32",g),x=a.makeTensorInfo(b,"float32",y),w=yo({inputs:{real:v,imag:x},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(x),w}{let e=a.data.get(s.dataId).values,r=a.data.get(i.dataId).values,o=n||s.dtype,[l,u]=t(s.shape,i.shape,e,r,o);return a.makeTensorInfo(u,o,l)}}}function yg(e){return(t,r,n,a,s,i)=>{let o=uc.assertAndGetBroadcastShape(t,r),l=dh.sizeFromShape(o),u=o.length,c=dh.computeStrides(o),d=dh.getTypedArrayFromDType("float32",l),p=dh.getTypedArrayFromDType("float32",l),h=uc.getBroadcastDims(t,o),f=uc.getBroadcastDims(r,o),m=uc.mergeRealAndImagArrays(n,a),g=uc.mergeRealAndImagArrays(s,i),y=t.length,b=dh.computeStrides(t),v=r.length,x=dh.computeStrides(r);if(h.length+f.length===0)for(let t=0;t<d.length;t++){let r=t%m.length,n=t%g.length,a=e(m[2*r],m[2*r+1],g[2*n],g[2*n+1]);d[t]=a.real,p[t]=a.imag}else for(let t=0;t<d.length;t++){let r=dh.indexToLoc(t,u,c),n=r.slice(-y);h.forEach(e=>n[e]=0);let a=dh.locToIndex(n,y,b),s=r.slice(-v);f.forEach(e=>s[e]=0);let i=dh.locToIndex(s,v,x),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);d[t]=o.real,p[t]=o.imag}return[d,p,o]}}const yy=g8((e,t)=>e+t),yb=yg((e,t,r,n)=>({real:e+r,imag:t+n})),yv=ym(oc.Add,yy,yb),yx={kernelName:oc.Add,backendName:"cpu",kernelFunc:yv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oS=A("8BaGO"),gq=A("iG87S"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");function yw(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{shape:s}=n,i=dh.sizeFromShape(a.shape),o=dh.inferFromImplicitShape(s,i),l=dh.sizeFromShape(o);dh.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),r.incRef(a.dataId);let u=r.data.get(a.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const yk={kernelName:oc.Reshape,backendName:"cpu",kernelFunc:yw};function yS(e){let{inputs:t,backend:r,attrs:n}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=n;gH([a,s],"matMul");let l=a.shape.length,u=s.shape.length,c=i?a.shape[l-2]:a.shape[l-1],d=o?s.shape[u-1]:s.shape[u-2],p=i?a.shape[l-1]:a.shape[l-2],h=o?s.shape[u-2]:s.shape[u-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=dh.sizeFromShape(f),y=dh.sizeFromShape(m),b=oS.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),v=b.concat([p,h]);dh.assert(c===d,()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,c,p]:[g,p,c],w=o?[y,h,d]:[y,d,h],k=yw({inputs:{x:a},backend:r,attrs:{shape:x}}),S=yw({inputs:{x:s},backend:r,attrs:{shape:w}}),N=i?k.shape[1]:k.shape[2],T=i?k.shape[2]:k.shape[1],I=o?S.shape[1]:S.shape[2],C=Math.max(g,y),E=r.data.get(k.dataId).values,A=r.data.get(S.dataId).values,R=dh.computeStrides(k.shape),_=dh.computeStrides(S.shape),[O,P,$]=i?[R[0],1,R[1]]:[R[0],R[1],1],[D,M,F]=o?[1,_[1],_[0]]:[_[1],1,_[0]],L=T*I,j=(0,gq.buffer)([C,T,I],k.dtype),B=j.values,z=r.blockSize;for(let e=0;e<C;e++){let t=e%g,r=e%y;for(let n=0;n<T;n+=z){// for when blockSize doesn't evenly divide the input
let a=Math.min(n+z,T);for(let s=0;s<I;s+=z){let i=Math.min(s+z,I);for(let o=0;o<N;o+=z){let l=Math.min(o+z,N);for(let u=n;u<a;u++)for(let n=s;n<i;n++){let a=0;for(let e=o;e<l;e++){let s=E[t*O+u*P+e*$],i=A[e*D+n*M+r*F];a+=s*i}B[e*L+(u*I+n)]+=a}}}}}// set correct shape on output.
return r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(S),r.makeTensorInfo(v,j.dtype,j.values)}const yN={kernelName:oc.BatchMatMul,backendName:"cpu",kernelFunc:yS},yT={kernelName:oc._FusedMatMul,backendName:"cpu",kernelFunc:function(e){let t,r,n;let{inputs:a,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:c}=a,{transposeA:d,transposeB:p,activation:h,leakyreluAlpha:f}=i,m=[],g=yS({inputs:{a:o,b:l},attrs:{transposeA:d,transposeB:p},backend:s});for(let e of(t=g,u&&(r=yv({inputs:{a:t,b:u},backend:s}),m.push(t),t=r),h&&(n=yi(s,t,h,c,f),m.push(t),t=n),m))s.disposeIntermediateTensorInfo(e);return t}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");function yI(e){let t=new Float32Array(e.length);for(let r=0;r<e.length;++r)t[r]=Math.abs(e[r]);return t}const yC={kernelName:oc.Abs,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,r=e.backend;gH(t,"abs");let n=new Float32Array(dh.sizeFromShape(t.shape)),a=r.data.get(t.dataId).values;return n=yI(a),r.makeOutput(n,t.shape,t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const yE=gQ(oc.Acos,e=>Math.acos(e)),yA={kernelName:oc.Acos,backendName:"cpu",kernelFunc:yE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const yR=gQ(oc.Acosh,e=>Math.acosh(e)),y_={kernelName:oc.Acosh,backendName:"cpu",kernelFunc:yR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gq=A("iG87S"),oc=A("hl418");const yO={kernelName:oc.AddN,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e;gH(t,"addN");let n=t.map(e=>r.data.get(e.dataId).values),a=(0,gq.buffer)(t[0].shape,t[0].dtype),s=a.values;for(let e=0;e<t.length;e++){let t=n[e];for(let e=0;e<s.length;e++)s[e]+=t[e]}return r.makeTensorInfo(a.shape,a.dtype,a.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");function yP(e,t,r,n,a){let s=t.length,i=dh.sizeFromShape(t),o=dh.computeStrides(t),l=dh.computeStrides(a),u=dh.getTypedArrayFromDType(r,dh.sizeFromShape(a));for(let t=0;t<i;++t){let r=dh.indexToLoc(t,s,o),a=Array(r.length);for(let e=0;e<a.length;e++)a[e]=r[n[e]];let i=dh.locToIndex(a,s,l);u[i]=e[t]}return u}function y$(e){let{inputs:t,attrs:r,backend:n}=e,{x:a}=t,{perm:s}=r;gH(a,"transpose");let i=a.shape.length,o=Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];let l=n.data.get(a.dataId).values,u=yP(l,a.shape,a.dtype,s,o),c=n.write(u,o,a.dtype);return{dataId:c,shape:o,dtype:a.dtype}}const yD={kernelName:oc.Transpose,backendName:"cpu",kernelFunc:y$},yM={kernelName:oc.All,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;gH(a,"all");let o=dh.parseAxisParam(s,a.shape),l=o,u=uc.getAxesPermutation(l,a.shape.length),c=a;null!=u&&(c=y$({inputs:{x:a},backend:r,attrs:{perm:u}}),l=uc.getInnerMostAxes(l.length,a.shape.length)),uc.assertAxesAreInnerMostDims("all",l,c.shape.length);let[d,p]=uc.computeOutAndReduceShapes(c.shape,l),h=dh.sizeFromShape(p),f=dh.makeZerosTypedArray(dh.sizeFromShape(d),c.dtype),m=r.data.get(c.dataId).values;for(let e=0;e<f.length;++e){let t=e*h,r=m[t];for(let e=0;e<h;++e){let n=m[t+e];r=r&&n}f[e]=r}null!=u&&r.disposeIntermediateTensorInfo(c);let g=r.makeTensorInfo(d,c.dtype,f);if(i){let e=uc.expandShapeToKeepDim(d,o),t=yw({inputs:{x:g},backend:r,attrs:{shape:e}});return r.disposeIntermediateTensorInfo(g),t}return g}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const yF={kernelName:oc.Any,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;gH(a,"any");let o=dh.parseAxisParam(s,a.shape),l=o,u=uc.getAxesPermutation(l,a.shape.length),c=a;null!=u&&(c=y$({inputs:{x:a},backend:r,attrs:{perm:u}}),l=uc.getInnerMostAxes(l.length,a.shape.length)),uc.assertAxesAreInnerMostDims("any",l,c.shape.length);let[d,p]=uc.computeOutAndReduceShapes(c.shape,l),h=dh.sizeFromShape(p),f=dh.makeZerosTypedArray(dh.sizeFromShape(d),c.dtype),m=r.data.get(c.dataId).values;for(let e=0;e<f.length;++e){let t=e*h,r=m[t];for(let e=0;e<h;++e){let n=m[t+e];r=r||n}f[e]=r}null!=u&&r.disposeIntermediateTensorInfo(c);let g=r.makeTensorInfo(d,c.dtype,f);if(i){let e=uc.expandShapeToKeepDim(d,o),t=yw({inputs:{x:g},backend:r,attrs:{shape:e}});return r.disposeIntermediateTensorInfo(g),t}return g}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const yL={kernelName:oc.ArgMax,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n;gH(a,"argMax");let i=dh.parseAxisParam(s,a.shape),o=uc.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=y$({inputs:{x:a},backend:r,attrs:{perm:o}})),i=uc.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],uc.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[c,d]=uc.computeOutAndReduceShapes(l.shape,i),p=dh.sizeFromShape(c),h=dh.makeZerosTypedArray(p,"int32"),f=dh.sizeFromShape(d),m=r.data.get(l.dataId).values;for(let e=0;e<h.length;++e){let t=e*f,r=m[t],n=0;for(let e=0;e<f;++e){let a=m[t+e];a>r&&(r=a,n=e)}h[e]=n}return u.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.makeTensorInfo(c,"int32",h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const yj={kernelName:oc.ArgMin,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n;gH(a,"argMin");let i=dh.parseAxisParam(s,a.shape),o=uc.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=y$({inputs:{x:a},backend:r,attrs:{perm:o}})),i=uc.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],uc.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[c,d]=uc.computeOutAndReduceShapes(l.shape,i),p=dh.sizeFromShape(c),h=dh.makeZerosTypedArray(p,"int32"),f=dh.sizeFromShape(d),m=r.data.get(l.dataId).values;for(let e=0;e<h.length;++e){let t=e*f,r=m[t],n=0;for(let e=0;e<f;++e){let a=m[t+e];a<r&&(r=a,n=e)}h[e]=n}return u.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.makeTensorInfo(c,"int32",h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const yB=gQ(oc.Asin,e=>Math.asin(e)),yz={kernelName:oc.Asin,backendName:"cpu",kernelFunc:yB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const yV=gQ(oc.Asinh,e=>Math.asinh(e)),yG={kernelName:oc.Asinh,backendName:"cpu",kernelFunc:yV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const yU=gQ(oc.Atan,e=>Math.atan(e)),yW={kernelName:oc.Atan,backendName:"cpu",kernelFunc:yU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const yq=g8((e,t)=>Math.atan2(e,t)),yH=ym(oc.Atan2,yq),yK={kernelName:oc.Atan2,backendName:"cpu",kernelFunc:yH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const yX=gQ(oc.Atanh,e=>Math.atanh(e)),yZ={kernelName:oc.Atanh,backendName:"cpu",kernelFunc:yX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gq=A("iG87S");function yQ(e,t,r,n,a,s){let i=a.strideHeight,o=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,c=a.effectiveFilterHeight,d=a.effectiveFilterWidth,p=a.padInfo.top,h=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=(0,gq.buffer)(a.outShape,r),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],v=a.outShape[3];for(let t=0;t<a.batchSize;++t){let r=t*y,m=t*n[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){let x=y*i-p,w=Math.max(0,x),k=Math.min(a.inHeight,c+x),S=r+y*b;for(let r=0;r<a.outWidth;++r){let i=r*o-h,c=Math.max(0,i),p=Math.min(a.inWidth,d+i),y=f,b=0,x=0;for(let r=w;r<k;r+=l){let a=m+r*n[1];for(let r=c;r<p;r+=u){let i=a+r*n[2],o=e[i+t];"max"===s&&o>y?y=o:"avg"===s&&(b+=o,x++)}if(isNaN(y))break}let N=S+r*v+t;g[N]="avg"===s?b/x:y}}}return m}function yY(e,t,r,n,a=!1,s=!1){let i=(0,gq.buffer)(n.outShape,"int32"),o=n.strideHeight,l=n.strideWidth,u=n.dilationHeight,c=n.dilationWidth,d=n.effectiveFilterHeight,p=n.effectiveFilterWidth,h=n.padInfo.top,f=n.padInfo.left,m=(0,gq.buffer)(t,r,e);for(let e=0;e<n.batchSize;++e)for(let t=0;t<n.inChannels;++t)for(let r=0;r<n.outHeight;++r){let g=r*o-h,y=g;for(;y<0;)y+=u;// const xRMin = Math.max(0, xRCorner);
let b=Math.min(n.inHeight,d+g);for(let o=0;o<n.outWidth;++o){let d=o*l-f,h=d;for(;h<0;)h+=c;let v=Math.min(n.inWidth,p+d),x=Number.NEGATIVE_INFINITY,w=-1;for(let r=y;r<b;r+=u){let i=r-g;for(let o=h;o<v;o+=c){let l=o-d,u=m.get(e,r,o,t);u>x&&(x=u,w=a?s?((e*n.inHeight+r)*n.inWidth+o)*n.inChannels+t:(r*n.inWidth+o)*n.inChannels+t:i*p+l)}}i.set(w,e,r,o,t)}}return i}function yJ(e,t,r,n,a,s){let i=a.strideDepth,o=a.strideHeight,l=a.strideWidth,u=a.dilationDepth,c=a.dilationHeight,d=a.dilationWidth,p=a.effectiveFilterDepth,h=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=(0,gq.buffer)(a.outShape,r),x=v.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],S=a.outShape[3]*a.outShape[4],N=a.outShape[4];for(let t=0;t<a.batchSize;++t){let r=t*w,v=t*n[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){let T=w*i-m,I=T;for(;I<0;)I+=u;let C=Math.min(a.inDepth,p+T),E=r+w*k;for(let r=0;r<a.outHeight;++r){let i=r*o-g,p=i;for(;p<0;)p+=c;let m=Math.min(a.inHeight,h+i),w=E+r*S;for(let r=0;r<a.outWidth;++r){let i=r*l-y,o=i;for(;o<0;)o+=d;let h=Math.min(a.inWidth,f+i),g=w+r*N,k=b,S=0,T=0;for(let r=I;r<C;r+=u){let a=v+r*n[1];for(let r=p;r<m;r+=c){let i=a+r*n[2];for(let r=o;r<h;r+=d){let a=i+r*n[3],o=e[a+t];if("max"===s&&o>k?k=o:"avg"===s&&(S+=o,T++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}let E=g+t;x[E]="avg"===s?S/Math.max(T,1):k}}}}return v}const y0={kernelName:oc.AvgPool,backendName:"cpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r;gH(s,"avgPool");let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;dh.assert(uc.eitherStridesOrDilationsAreOne(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);let c=uc.computePool2DInfo(s.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&dh.arraysEqual(c.inShape,c.outShape))t=g1({inputs:{x:s},backend:n});else{let e=n.data.get(s.dataId).values,r=dh.computeStrides(s.shape),a=yQ(e,s.shape,s.dtype,r,c,"avg");t=n.makeTensorInfo(c.outShape,s.dtype,a.values)}return t}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA"),oc=A("hl418");const y1={kernelName:oc.AvgPool3D,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=n;gH(a,"avgPool3d");let c=uc.computePool3DInfo(a.shape,s,i,1/* dilations */,o,l,u),d=r.data.get(a.dataId).values,p=yJ(d,a.shape,a.dtype,dh.computeStrides(a.shape),c,"avg");return r.makeTensorInfo(p.shape,"float32",p.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),gq=A("iG87S"),oc=A("hl418");const y2={kernelName:oc.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n;gH([a,s],"avgPool3DGrad");let c=uc.computePool3DInfo(s.shape,i,o,1/* dilations */,l,u),d=c.strideDepth,p=c.strideHeight,h=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,v=c.dilationWidth,x=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,S=x-1-c.padInfo.front,N=k-1-c.padInfo.left,T=w-1-c.padInfo.top,I=(0,gq.buffer)(s.shape,"float32"),C=1/(f*m*g),E=r.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let r=0;r<c.inDepth;++r)for(let n=0;n<c.inHeight;++n)for(let a=0;a<c.inWidth;++a){// Shader code begins.
let s=r-S,i=n-T,o=a-N,l=0;for(let r=0;r<x;r+=y){let n=(s+r)/d;if(!(n<0)&&!(n>=c.outDepth)&&Math.floor(n)===n)for(let r=0;r<w;r+=b){let a=(i+r)/p;if(!(a<0)&&!(a>=c.outHeight)&&Math.floor(a)===a)for(let r=0;r<k;r+=v){let s=(o+r)/h;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;let i=E.get(e,n,a,s,t);l+=i}}}I.set(l*C,e,r,n,a,t)}return r.makeTensorInfo(I.shape,I.dtype,I.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),gq=A("iG87S"),oc=A("hl418");const y4={kernelName:oc.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t;gH([a,s],"avgPoolGrad");let{filterSize:i,strides:o,pad:l}=n,u=uc.computePool2DInfo(s.shape,i,o,1/* dilations */,l),c=u.strideHeight,d=u.strideWidth,p=u.filterHeight,h=u.filterWidth,f=u.dilationHeight,m=u.dilationWidth,g=u.effectiveFilterHeight,y=u.effectiveFilterWidth,b=y-1-u.padInfo.left,v=g-1-u.padInfo.top,x=(0,gq.buffer)(s.shape,"float32"),w=1/(p*h),k=r.data.get(a.dataId).values,S=(0,gq.buffer)(a.shape,"float32",k);for(let e=0;e<u.batchSize;++e)for(let t=0;t<u.inChannels;++t)for(let r=0;r<u.inHeight;++r)for(let n=0;n<u.inWidth;++n){// Shader code begins.
let a=r-v,s=n-b,i=0;for(let r=0;r<g;r+=f){let n=(a+r)/c;if(!(n<0)&&!(n>=u.outHeight)&&Math.floor(n)===n)for(let r=0;r<y;r+=m){let a=(s+r)/d;if(a<0||a>=u.outWidth||Math.floor(a)!==a)continue;let o=S.get(e,n,a,t);i+=o}}x.set(i*w,e,r,n,t)}return r.makeTensorInfo(x.shape,x.dtype,x.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const y3={kernelName:oc.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,scale:s,offset:i,mean:o,variance:l}=t;dh.assert(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),dh.assert(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),dh.assert(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),gH([a,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=n;null==u&&(u=.001);let c=r.data.get(a.dataId).values,d=r.data.get(o.dataId).values,p=r.data.get(l.dataId).values,h=s?r.data.get(s.dataId).values:new Float32Array([1]),f=i?r.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=h.length,b=p.length,v=d.length,x=0,w=0,k=0,S=0;for(let e=0;e<c.length;++e)m[e]=f[x++]+(c[e]-d[w++])*h[k++]/Math.sqrt(p[S++]+u),x>=g&&(x=0),w>=v&&(w=0),k>=y&&(k=0),S>=b&&(S=0);return r.makeTensorInfo(a.shape,a.dtype,m)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uD=A("bszZn"),dh=A("jjNRA"),uc=A("7MaPk"),gq=A("iG87S"),oc=A("hl418");function y8(e,t,r,n,a){let s=uD.isSliceContinous(n,t,r),i=dh.sizeFromShape(r),o=dh.computeStrides(n);if(s){let r=uD.computeFlatOffset(t,o);return"string"===a?e.slice(r,r+i):e.subarray(r,r+i)}let l="string"===a?uc.fromUint8ToStringArray(e):e,u=(0,gq.buffer)(n,a,l),c=(0,gq.buffer)(r,a);for(let e=0;e<c.size;++e){let r=c.indexToLoc(e),n=r.map((e,r)=>e+t[r]);c.set(u.get(...n),...r)}return"string"===a?uc.fromStringArrayToUint8(c.values):c.values}function y6(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:s,size:i}=n;gH(a,"slice");let[o,l]=uD.parseSliceParams(a,s,i);uD.assertParamsValid(a,o,l);let u=r.data.get(a.dataId).values,c=y8(u,o,l,a.shape,a.dtype);return r.makeTensorInfo(l,a.dtype,c)}const y5={kernelName:oc.Slice,backendName:"cpu",kernelFunc:y6},y7={kernelName:oc.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,crops:i}=n;gH([a],"batchToSpaceND");let o=s.reduce((e,t)=>e*t),l=uc.getReshaped(a.shape,s,o),u=uc.getPermuted(l.length,s.length),c=uc.getReshapedPermuted(a.shape,s,o),d=uc.getSliceBeginCoords(i,s.length),p=uc.getSliceSize(c,i,s.length),h=yw({inputs:{x:a},backend:r,attrs:{shape:l}}),f=y$({inputs:{x:h},backend:r,attrs:{perm:u}}),m=yw({inputs:{x:f},backend:r,attrs:{shape:c}}),g=y6({inputs:{x:m},backend:r,attrs:{begin:d,size:p}});return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),g}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),gq=A("iG87S");function y9(e,t,r,n,a){let s=dh.sizeFromShape(n),i=dh.makeZerosTypedArray(a,r);for(let r=0;r<e.length;r++){let n=e[r];if(n<0)throw Error("Input x must be non-negative!");n>=a||(s>0?i[n]+=t[r]:i[n]+=1)}return i}function be(e,t,r,n=!1){let a=e.shape[0],s=e.shape[1],i=(0,gq.buffer)([a,r],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){let s=e.get(o,a);if(s<0)throw Error("Input x must be non-negative!");s>=r||(n?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}const bt={kernelName:oc.Bincount,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i}=n,o=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,u=y9(o,l,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,u)}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const br=g8((e,t)=>e&t),bn=ym(oc.BitwiseAnd,br),ba={kernelName:oc.BitwiseAnd,backendName:"cpu",kernelFunc:bn};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const bs={kernelName:oc.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{s0:n,s1:a}=t,s=r.data.get(n.dataId).values,i=r.data.get(a.dataId).values,o=uc.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return r.makeTensorInfo([o.length],"int32",Int32Array.from(o))}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const bi=gZ(e=>Math.ceil(e)),bo=gY(oc.Ceil,bi),bl={kernelName:oc.Ceil,backendName:"cpu",kernelFunc:bo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const bu=gQ(oc.ClipByValue,(e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e),bc={kernelName:oc.ClipByValue,backendName:"cpu",kernelFunc:bu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const bd={kernelName:oc.ComplexAbs,backendName:"cpu",kernelFunc:e=>{let{x:t}=e.inputs,r=e.backend,n=new Float32Array(dh.sizeFromShape(t.shape)),a=r.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=r.data.get(s.dataId).values,l=r.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],r=l[e];n[e]=Math.hypot(t,r)}return r.makeOutput(n,t.shape,"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk");function bp(e,t,r,n){let a=dh.getArrayFromDType(r,dh.sizeFromShape(t));if(n&&"string"!==r){// Use built-in TypedArray.set() method for speed.
let t=0;e.forEach(e=>{let r=dh.sizeFromShape(e.shape);a.set(e.vals,t),t+=r})}else{let n=0;e.forEach(e=>{let s="string"===r?uc.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let r=0;r<e.shape[0];++r){let o=r*t[1]+n;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}n+=e.shape[1]})}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");function bh(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.data.get(n.dataId).complexTensorInfos.imag,s=r.data.get(a.dataId).values;// When complex tensor is disposed, its underlying parts will be disposed too.
// Make new tensor out of the imag value of the complex. This makes sure the
// value is still accessible even if complex tensor is disposed.
return r.makeTensorInfo(a.shape,a.dtype,s)}const bf={kernelName:oc.Imag,backendName:"cpu",kernelFunc:bh};function bm(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n,s=dh.parseAxisParam(a,t[0].shape)[0],i=t.map(e=>e.shape);uc.assertParamsConsistent(i,s);let o=uc.computeOutShape(t.map(e=>e.shape),s);if(0===dh.sizeFromShape(o))return r.makeTensorInfo(o,t[0].dtype,[]);// Keep only non-empty tensors (ignore tensors with 0 in their shape).
let l=t.filter(e=>dh.sizeFromShape(e.shape)>0);if(1===l.length)return g1({inputs:{x:l[0]},backend:r});if("complex64"===l[0].dtype){let e=l.map(e=>yc({inputs:{input:e},backend:r})),t=l.map(e=>bh({inputs:{input:e},backend:r})),n=bm({inputs:e,backend:r,attrs:{axis:s}}),a=bm({inputs:t,backend:r,attrs:{axis:s}}),i=yo({inputs:{real:n,imag:a},backend:r});return e.forEach(e=>r.disposeIntermediateTensorInfo(e)),t.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),i}// Any concat of n-dimensional tensors across any axis can be reduced to
// a concatenation of two-dimensional tensors across the axis 1 by first
// partitioning the axes of the original tensors into those less than the
// axis to be concatenated and the rest. Then reshape the tensors
// into a two-dimensional tensor by collapsing these two sets of axes and
// concatenate the resulting matrices across the axis 1, finally reshaping
// the result to have the proper shape.
let u=l.map(e=>{let t=dh.sizeFromShape(e.shape.slice(s));return yw({inputs:{x:e},backend:r,attrs:{shape:[-1,t]}})}),c=u.map(e=>({vals:r.data.get(e.dataId).values,shape:e.shape}));// Concats 2d tensors along axis=1.
o=uc.computeOutShape(u.map(e=>e.shape),1/* axis */);let d=1===u[0].shape[0],p=bp(c,o,t[0].dtype,d),h=uc.computeOutShape(l.map(e=>e.shape),s),f=r.makeTensorInfo(h,t[0].dtype,p);return u.forEach(e=>r.disposeIntermediateTensorInfo(e)),f}const bg={kernelName:oc.Concat,backendName:"cpu",kernelFunc:bm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),u7=A("9jCh7"),dh=A("jjNRA"),oc=A("hl418");function by(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=n;gH([a,s],"conv2d");let d=uc.convertConv2DDataFormat(l),p=uc.computeConv2DInfo(a.shape,s.shape,i,u,o,c,!1,d),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,v="channelsLast"===p.dataFormat,x=new u7.TensorBuffer(p.outShape,a.dtype),w=dh.computeStrides(a.shape),k=dh.computeStrides(s.shape),S=w[0],N=v?w[1]:w[2],T=v?w[2]:1,I=v?1:w[1],C=x.strides[0],E=v?x.strides[1]:x.strides[2],A=v?x.strides[2]:1,R=v?1:x.strides[1],_=r.data.get(a.dataId).values,O=r.data.get(s.dataId).values,P=x.values;for(let e=0;e<p.batchSize;++e){let t=e*S,r=e*C;for(let e=0;e<p.outHeight;++e){let n=r+e*E,a=e*p.strideHeight-b;for(let e=0;e<h;++e){let r=a+e*m;if(r<0||r>=p.inHeight)continue;let s=e*k[0],i=t+r*N;for(let e=0;e<p.outWidth;++e){let t=n+e*A,r=e*p.strideWidth-y;for(let e=0;e<f;++e){let n=r+e*g;if(n<0||n>=p.inWidth)continue;let a=s+e*k[1],o=i+n*T,l=a;for(let e=0;e<p.inChannels;++e){let r=_[o+e*I];for(let e=0;e<p.outChannels;++e)P[t+e*R]+=r*O[l+e];l+=p.outChannels}}}}}}return r.makeTensorInfo(x.shape,x.dtype,P)}const bb={kernelName:oc.Conv2D,backendName:"cpu",kernelFunc:by};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),u7=A("9jCh7"),oc=A("hl418");const bv={kernelName:oc.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=n;gH([a,s],"conv2dBackpropFilter");let d=uc.convertConv2DDataFormat(l),p=uc.computeConv2DInfo(a.shape,c,i,1/* dilations */,o,u,!1,d),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new u7.TensorBuffer(p.filterShape,"float32"),v=p.padInfo.left,x=p.padInfo.top,w=r.data.get(a.dataId).values,k=r.data.get(s.dataId).values,S=new u7.TensorBuffer(a.shape,a.dtype,w),N=new u7.TensorBuffer(s.shape,s.dtype,k);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((x-e)/h)),r=Math.min(p.outHeight,(p.inHeight+x-e)/h);for(let n=0;n<g;++n){let a=Math.max(0,Math.ceil((v-n)/f)),s=Math.min(p.outWidth,(p.inWidth+v-n)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<r;++c){let t=e+c*h-x;for(let e=a;e<s;++e){let r=n+e*f-v;y?l+=S.get(u,t,r,i)*N.get(u,c,e,o):l+=S.get(u,i,t,r)*N.get(u,o,c,e)}}b.set(l,e,n,i,o)}}}return r.makeTensorInfo(b.shape,b.dtype,b.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),u7=A("9jCh7"),oc=A("hl418");const bx={kernelName:oc.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=n;gH([a,s],"conv2dBackpropInput");let d=dh.computeStrides(s.shape),p=dh.computeStrides(a.shape),h=uc.convertConv2DDataFormat(u),f=uc.computeConv2DInfo(i,s.shape,o,1/* dilations */,l,c,!1,h),m=new u7.TensorBuffer(f.inShape,"float32"),g=m.values,y=r.data.get(a.dataId).values,b=r.data.get(s.dataId).values,[v,x,w]=d,{batchSize:k,filterHeight:S,filterWidth:N,inChannels:T,inHeight:I,inWidth:C,outChannels:E,outHeight:A,outWidth:R,strideHeight:_,strideWidth:O}=f;h=f.dataFormat;let P=S-1-f.padInfo.top,$=N-1-f.padInfo.left,D="channelsLast"===h,M=m.strides[0],F=D?m.strides[1]:m.strides[2],L=D?m.strides[2]:1,j=D?1:m.strides[1],B=p[0],z=D?p[1]:p[2],V=D?p[2]:1,G=D?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<T;++t)for(let r=0;r<I;++r){let n=r-P,a=Math.max(0,Math.ceil(n/_)),s=Math.min(A,(S+n)/_);for(let i=0;i<C;++i){let o=i-$,l=Math.max(0,Math.ceil(o/O)),u=Math.min(R,(N+o)/O),c=0;for(let r=a;r<s;++r){let a=r*_-n;for(let n=l;n<u;++n){let s=n*O-o,i=B*e+z*r+V*n,l=v*(S-1-a)+x*(N-1-s)+w*t;for(let e=0;e<E;++e){let t=y[i+G*e],r=b[l+e];c+=t*r}}}let d=M*e+F*r+L*i+j*t;g[d]=c}}return r.makeTensorInfo(m.shape,m.dtype,m.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),u7=A("9jCh7"),dh=A("jjNRA"),oc=A("hl418");const bw={kernelName:oc.Conv3D,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=n;gH([a,s],"conv3d");let u=uc.computeConv3DInfo(a.shape,s.shape,i,l,o),{filterDepth:c,filterHeight:d,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,v=g.top,x=new u7.TensorBuffer(u.outShape,a.dtype),w=r.data.get(a.dataId).values,k=r.data.get(s.dataId).values,S=x.values,N=dh.computeStrides(a.shape),T=dh.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*N[0],r=e*x.strides[0];for(let e=0;e<u.outDepth;++e){let n=r+e*x.strides[1],a=e*u.strideDepth-y;for(let e=0;e<c;++e){let r=a+e*h;if(r<0||r>=u.inDepth)continue;let s=e*T[0],i=t+r*N[1];for(let e=0;e<u.outHeight;++e){let t=n+e*x.strides[2],r=e*u.strideHeight-v;for(let e=0;e<d;++e){let n=r+e*f;if(n<0||n>=u.inHeight)continue;let a=s+e*T[1],o=i+n*N[2];for(let e=0;e<u.outWidth;++e){let r=t+e*u.outChannels,n=e*u.strideWidth-b;for(let e=0;e<p;++e){let t=n+e*m;if(t<0||t>=u.inWidth)continue;let s=a+e*T[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=w[i+e];for(let e=0;e<u.outChannels;++e)S[r+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return r.makeTensorInfo(x.shape,x.dtype,x.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),u7=A("9jCh7"),oc=A("hl418");const bk={kernelName:oc.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=n;gH([a,s],"conv3dBackpropFilterV2");let u=dh.computeStrides(a.shape),c=dh.computeStrides(s.shape),d=uc.computeConv3DInfo(a.shape,l,i,1/* dilations */,o),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new u7.TensorBuffer(d.filterShape,"float32"),v=b.values,[x,w,k,S]=b.strides,N=r.data.get(s.dataId).values,[T,I,C,E]=c,A=r.data.get(a.dataId).values,[R,_,O,P]=u,$=d.padInfo.front,D=d.padInfo.left,M=d.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil(($-e)/p)),r=Math.min(d.outDepth,(d.inDepth+$-e)/p),n=e*x;for(let a=0;a<g;++a){let s=Math.max(0,Math.ceil((M-a)/h)),i=Math.min(d.outHeight,(d.inHeight+M-a)/h),o=a*w+n;for(let n=0;n<y;++n){let l=Math.max(0,Math.ceil((D-n)/f)),u=Math.min(d.outWidth,(d.inWidth+D-n)/f),c=n*k+o;for(let o=0;o<d.inChannels;++o){let m=o*S+c;for(let c=0;c<d.outChannels;++c){let g=0;for(let m=0;m<d.batchSize;++m){let d=m*R,y=m*T;for(let m=t;m<r;++m){let t=e+m*p-$,r=t*_+d,b=m*I+y;for(let e=s;e<i;++e){let t=a+e*h-M,s=t*O+r,i=e*C+b;for(let e=l;e<u;++e){let t=n+e*f-D,r=t*P+s,a=e*E+i;g+=A[r+o]*N[a+c]}}}}v[m+c]=g}}}}}return r.makeTensorInfo(b.shape,b.dtype,b.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),u7=A("9jCh7"),oc=A("hl418");const bS={kernelName:oc.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=n;gH([a],"conv3dBackpropInputV2");let u=dh.computeStrides(a.shape),c=dh.computeStrides(s.shape),d=uc.computeConv3DInfo(l,s.shape,o,1/* dilations */,i),p=new u7.TensorBuffer(d.inShape,"float32"),h=p.values,[f,m,g,y]=p.strides,b=r.data.get(a.dataId).values,[v,x,w,k]=u,S=r.data.get(s.dataId).values,[N,T,I,C]=c,{batchSize:E,filterDepth:A,filterHeight:R,filterWidth:_,inChannels:O,inDepth:P,inHeight:$,inWidth:D,outChannels:M,outDepth:F,outHeight:L,outWidth:j,strideDepth:B,strideHeight:z,strideWidth:V}=d,G=A-1-d.padInfo.front,U=R-1-d.padInfo.top,W=_-1-d.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<O;++t)for(let r=0;r<P;++r){let n=r-G,a=Math.max(0,Math.ceil(n/B)),s=Math.min(F,(A+n)/B);// Rows as per standard 2d matrix notation
for(let i=0;i<$;++i){let o=i-U,l=Math.max(0,Math.ceil(o/z)),u=Math.min(L,(R+o)/z);// Columns as per standard 2d matrix notation
for(let c=0;c<D;++c){let d=c-W,p=Math.max(0,Math.ceil(d/V)),E=Math.min(j,(_+d)/V),O=0;for(let r=a;r<s;++r){let a=r*B-n;for(let n=l;n<u;++n){let s=n*z-o;for(let i=p;i<E;++i){let o=i*V-d,l=v*e+x*r+w*n+k*i,u=N*(A-1-a)+T*(R-1-s)+I*(_-1-o)+C*t;for(let e=0;e<M;++e){let t=b[l+e],r=S[u+e];O+=t*r}}}}h[f*e+m*r+g*i+y*c+t]=O}}}return r.makeTensorInfo(p.shape,p.dtype,p.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const bN=gQ(oc.Cos,e=>Math.cos(e)),bT={kernelName:oc.Cos,backendName:"cpu",kernelFunc:bN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const bI=gQ(oc.Cosh,e=>Math.cosh(e)),bC={kernelName:oc.Cosh,backendName:"cpu",kernelFunc:bI};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gq=A("iG87S"),dh=A("jjNRA"),oc=A("hl418");const bE={kernelName:oc.CropAndResize,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=n,[c,d,p,h]=a.shape,f=s.shape[0],[m,g]=o,y=(0,gq.buffer)([f,m,g,h],"float32"),b=r.data.get(s.dataId).values,v=r.data.get(i.dataId).values,x=r.data.get(a.dataId).values,w=dh.computeStrides(a.shape),k=dh.computeStrides(y.shape);// Reference implementation
// tslint:disable-next-line:max-line-length
// https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/crop_and_resize_op.cc
for(let e=0;e<f;e++){let t=4*e,r=b[t],n=b[t+1],a=b[t+2],s=b[t+3],i=v[e];if(i>=c)continue;let o=m>1?(a-r)*(d-1)/(m-1):0,f=g>1?(s-n)*(p-1)/(g-1):0;for(let t=0;t<m;t++){let c=m>1?r*(d-1)+t*o:.5*(r+a)*(d-1);if(c<0||c>d-1){for(let r=0;r<g;r++)for(let n=0;n<h;n++){let a=n+r*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}if("bilinear"===l){let r=Math.floor(c),a=Math.ceil(c),o=c-r;for(let l=0;l<g;l++){let c=g>1?n*(p-1)+l*f:.5*(n+s)*(p-1);if(c<0||c>p-1){for(let r=0;r<h;r++){let n=r+l*k[2]+t*k[1]+e*k[0];y.values[n]=u}continue}let d=Math.floor(c),m=Math.ceil(c),b=c-d;for(let n=0;n<h;n++){let s=n+d*w[2]+r*w[1]+i*w[0],u=x[s];s=n+m*w[2]+r*w[1]+i*w[0];let c=x[s];s=n+d*w[2]+a*w[1]+i*w[0];let p=x[s];s=n+m*w[2]+a*w[1]+i*w[0];let h=x[s],f=u+(c-u)*b,g=p+(h-p)*b;s=n+l*k[2]+t*k[1]+e*k[0],y.values[s]=f+(g-f)*o}}}else for(let r=0;r<g;++r){let a=g>1?n*(p-1)+r*f:.5*(n+s)*(p-1);if(a<0||a>p-1){for(let n=0;n<h;n++){let a=n+r*k[2]+t*k[1]+e*k[0];y.values[a]=u}continue}let o=Math.round(a),l=Math.round(c);for(let n=0;n<h;n++){let a=n+o*w[2]+l*w[1]+i*w[0],s=n+r*k[2]+t*k[1]+e*k[0];y.values[s]=x[a]}}}}return r.makeTensorInfo(y.shape,y.dtype,y.values)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),bA=A("2MDja"),dh=A("jjNRA"),oc=A("hl418");const bR={kernelName:oc.Cumprod,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;gH(a,"cumprod");let l=uc.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=y$({inputs:{x:a},backend:r,attrs:{perm:l}}));let c=uc.getInnerMostAxes(1,a.shape.length)[0];if(c!==u.shape.length-1)throw Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let d=(0,bA.upcastType)(u.dtype,"int32"),p=dh.makeOnesTypedArray(dh.sizeFromShape(u.shape),d),h=r.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<h.length;e+=f)for(let t=0;t<f;t++){let r=m(e,t);if(0===t)p[r]=i?1:h[r];else{let n=m(e,t-1);p[r]=i?h[n]*p[n]:h[r]*p[n]}}let g=r.makeTensorInfo(u.shape,d,p);if(null!=l){let e=uc.getUndoAxesPermutation(l),t=y$({inputs:{x:g},backend:r,attrs:{perm:e}});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(u),t}return g}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),bA=A("2MDja"),dh=A("jjNRA"),oc=A("hl418");const b_={kernelName:oc.Cumsum,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;gH(a,"cumsum");let l=uc.getAxesPermutation([s],a.shape.length),u=a;null!=l&&(u=y$({inputs:{x:a},backend:r,attrs:{perm:l}}));let c=uc.getInnerMostAxes(1,a.shape.length)[0];if(c!==u.shape.length-1)throw Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let d=(0,bA.upcastType)(u.dtype,"int32"),p=dh.makeZerosTypedArray(dh.sizeFromShape(u.shape),d),h=r.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<h.length;e+=f)for(let t=0;t<f;t++){let r=m(e,t);if(0===t)p[r]=i?0:h[r];else{let n=m(e,t-1);p[r]=i?h[n]+p[n]:h[r]+p[n]}}let g=r.makeTensorInfo(u.shape,d,p);if(null!=l){let e=uc.getUndoAxesPermutation(l),t=y$({inputs:{x:g},backend:r,attrs:{perm:e}});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(u),t}return g}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const bO={kernelName:oc.DenseBincount,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=n;if(1===a.shape.length){let e=r.data.get(a.dataId).values,t=r.data.get(s.dataId).values,n=y9(e,t,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,n)}if(2===a.shape.length){let e=r.bufferSync(a),t=r.bufferSync(s),n=be(e,t,i,o);return r.makeTensorInfo(n.shape,s.dtype,n.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const bP={kernelName:oc.DepthToSpace,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockSize:s,dataFormat:i}=n;dh.assert("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=a.shape[0],l=a.shape[1],u=a.shape[2],c=a.shape[3],d=l*s,p=u*s,h=c/(s*s),f=r.data.get(a.dataId).values,m=new Float32Array(o*d*p*h),g=0;for(let e=0;e<o;++e)for(let t=0;t<d;++t){let r=Math.floor(t/s),n=t%s;for(let t=0;t<p;++t){let a=Math.floor(t/s),i=t%s,o=(n*s+i)*h;for(let t=0;t<h;++t){let n=t+o,s=n+c*(a+u*(r+l*e));m[g++]=f[s]}}}return r.makeTensorInfo([o,d,p,h],a.dtype,m)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),u7=A("9jCh7"),oc=A("hl418");function b$(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=n;gH([a,s],"depthwiseConv2DNative");let c=dh.computeStrides(a.shape),d=dh.computeStrides(s.shape),p=l;null==p&&(p=[1,1]),dh.assert(uc.eitherStridesOrDilationsAreOne(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let h=uc.computeConv2DInfo(a.shape,s.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=h,v=b.left,x=b.top,w=h.outChannels/h.inChannels,k=new u7.TensorBuffer(h.outShape,a.dtype),S=r.data.get(a.dataId).values,N=r.data.get(s.dataId).values,T=k.values;for(let e=0;e<h.batchSize;++e){let t=e*c[0],r=e*k.strides[0];for(let e=0;e<h.outHeight;++e){let n=r+e*k.strides[1],a=e*h.strideHeight-x;for(let e=0;e<f;++e){let r=a+e*g;if(r<0||r>=h.inHeight)continue;let s=e*d[0],i=t+r*c[1];for(let e=0;e<h.outWidth;++e){let t=n+e*k.strides[2],r=e*h.strideWidth-v;for(let e=0;e<m;++e){let n=r+e*y;if(n<0||n>=h.inWidth)continue;let a=s+e*d[1],o=i+n*h.inChannels,l=t,u=a;for(let e=0;e<h.inChannels;++e){let t=S[o+e];for(let e=0;e<w;++e)T[l+e]+=t*N[u+e];l+=w,u+=w}}}}}}return r.makeTensorInfo(k.shape,k.dtype,k.values)}const bD={kernelName:oc.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:b$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),u7=A("9jCh7"),oc=A("hl418");const bM={kernelName:oc.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=n;gH([a,s],"depthwiseConv2dNativeBackpropFilter");let d=uc.computeConv2DInfo(a.shape,c,i,o,l,u,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=d,g=new u7.TensorBuffer(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,v=d.outChannels/d.inChannels,x=r.data.get(a.dataId).values,w=new u7.TensorBuffer(a.shape,a.dtype,x),k=r.data.get(s.dataId).values,S=new u7.TensorBuffer(s.shape,s.dtype,k);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((b-e)/p)),r=Math.min(d.outHeight,(d.inHeight+b-e)/p);for(let n=0;n<m;++n){let a=Math.max(0,Math.ceil((y-n)/h)),s=Math.min(d.outWidth,(d.inWidth+y-n)/h);for(let i=0;i<d.outChannels;++i){let o=Math.trunc(i/v),l=i%v,u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<r;++c){let t=e+c*p-b;for(let e=a;e<s;++e){let r=n+e*h-y;u+=w.get(l,t,r,o)*S.get(l,c,e,i)}}g.set(u,e,n,o,l)}}}return r.makeTensorInfo(g.shape,g.dtype,g.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),u7=A("9jCh7"),oc=A("hl418");const bF={kernelName:oc.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=n;gH([a,s],"depthwiseConv2DNativeBackpropInput");let d=dh.computeStrides(a.shape),p=dh.computeStrides(s.shape),h=uc.computeConv2DInfo(c,s.shape,i,o,l,u,!0),f=new u7.TensorBuffer(h.inShape,"float32"),m=f.values,[g,y,b]=f.strides,v=r.data.get(a.dataId).values,[x,w,k]=d,S=r.data.get(s.dataId).values,[N,T,I]=p,{batchSize:C,filterHeight:E,filterWidth:A,inChannels:R,inHeight:_,inWidth:O,outChannels:P,outHeight:$,outWidth:D,strideHeight:M,strideWidth:F}=h,L=E-1-h.padInfo.top,j=A-1-h.padInfo.left,B=P/R;for(let e=0;e<C;++e)for(let t=0;t<R;++t)for(let r=0;r<_;++r){let n=r-L,a=Math.max(0,Math.ceil(n/M)),s=Math.min($,(E+n)/M);for(let i=0;i<O;++i){let o=i-j,l=Math.max(0,Math.ceil(o/F)),u=Math.min(D,(A+o)/F),c=0;for(let r=a;r<s;++r){let a=r*M-n;for(let n=l;n<u;++n){let s=n*F-o,i=x*e+w*r+k*n,l=N*(E-1-a)+T*(A-1-s)+I*t;for(let e=0;e<B;++e){let r=t*B+e,n=v[i+r],a=S[l+e];c+=n*a}}}m[g*e+y*r+b*i+t]=c}}return r.makeTensorInfo(f.shape,f.dtype,f.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),gq=A("iG87S"),oc=A("hl418");const bL={kernelName:oc.Diag,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n}=t,a=dh.sizeFromShape(n.shape),s=r.data.get(n.dataId).values,i=(0,gq.buffer)([a,a],n.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];let l=[...n.shape,...n.shape];return r.makeTensorInfo(l,i.dtype,i.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418"),uc=A("7MaPk"),dh=A("jjNRA");const bj={kernelName:oc.Dilation2D,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,filter:a}=e,{strides:s,pad:i,dilations:o}=r,l=t.data.get(n.dataId).values,u=n.shape.length,c=t.data.get(a.dataId).values,d=a.shape.length,{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:v,strideWidth:x,filterHeight:w,filterWidth:k,dilationHeight:S,dilationWidth:N,outShape:T}=uc.computeDilation2DInfo(n.shape,a.shape,s,i,"NHWC"/* dataFormat */,o),I=dh.sizeFromShape(T),C=T.length,E=dh.getArrayFromDType(n.dtype,I);// Upsampling the input by fill in `dilation size - 1` values between each
// input value.
// This implementation follows the TF c++ implementation:
// https://github.com/tensorflow/tensorflow/blob/d9a3a849edc198e90172bc58eb293de457f9d986/tensorflow/core/kernels/dilation_ops.cc
for(let e=0;e<p;++e)for(let t=0;t<g;++t){let r=t*v-b.top;for(let s=0;s<y;++s){let i=s*x-b.left;for(let o=0;o<m;++o){let p=Number.MIN_SAFE_INTEGER;for(let t=0;t<w;++t){let s=r+t*S;if(s>=0&&s<h)for(let r=0;r<k;++r){let h=i+r*N;if(h>=0&&h<f){let i=dh.locToIndex([e,s,h,o],u,dh.computeStrides(n.shape)),f=dh.locToIndex([t,r,o],d,dh.computeStrides(a.shape)),m=l[i]+c[f];m>p&&(p=m)}}}let m=dh.locToIndex([e,t,s,o],C,dh.computeStrides(T));E[m]=p}}}let A=t.write(dh.toTypedArray(E,n.dtype),T,n.dtype);return{dataId:A,shape:T,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418"),dh=A("jjNRA"),uc=A("7MaPk");const bB={kernelName:oc.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=r,u=dh.toNestedArray(n.shape,t.data.get(n.dataId).values),c=dh.toNestedArray(a.shape,t.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:h,inChannels:f,outHeight:m,outWidth:g,padInfo:y,strideHeight:b,strideWidth:v,filterHeight:x,filterWidth:w,dilationHeight:k,dilationWidth:S,outShape:N}=uc.computeDilation2DInfo(n.shape,a.shape,i,o,"NHWC"/* dataFormat */,l);dh.assert(s.rank===N.length,()=>`Error in ${oc.Dilation2DBackpropFilter}, dy must have the same rank as output ${N.length}, but got ${s.rank}`);let T=dh.toNestedArray(N,t.data.get(s.dataId).values),I=dh.makeZerosNestedTypedArray(a.shape,a.dtype);// In the case of multiple argmax branches, we only back-propagate along the
// last branch, i.e., the one with largest value of `h * filter_cols + w`,
// similarly to the max-pooling backward routines.
// This implementation follows the TF c++ implementation:
// https://github.com/tensorflow/tensorflow/blob/d9a3a849edc198e90172bc58eb293de457f9d986/tensorflow/core/kernels/dilation_ops.cc
for(let e=0;e<d;++e)for(let t=0;t<m;++t){let r=t*b-y.top;for(let n=0;n<g;++n){let a=n*v-y.left;for(let s=0;s<f;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<x;++t){let n=r+t*k;if(n>=0&&n<p)for(let r=0;r<w;++r){let d=a+r*S;if(d>=0&&d<h){let a=u[e][n][d][s]+c[t][r][s];a>i&&(i=a,o=t,l=r)}}}I[o][l][s]+=T[e][t][n][s]}}}let C=t.write(dh.toTypedArray(I,n.dtype),a.shape,a.dtype);return{dataId:C,shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418"),dh=A("jjNRA"),uc=A("7MaPk");const bz={kernelName:oc.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,filter:a,dy:s}=e,{strides:i,pad:o,dilations:l}=r,u=dh.toNestedArray(n.shape,t.data.get(n.dataId).values),c=dh.toNestedArray(a.shape,t.data.get(a.dataId).values),{batchSize:d,inHeight:p,inWidth:h,inChannels:f,outHeight:m,outWidth:g,padInfo:y,strideHeight:b,strideWidth:v,filterHeight:x,filterWidth:w,dilationHeight:k,dilationWidth:S,outShape:N}=uc.computeDilation2DInfo(n.shape,a.shape,i,o,"NHWC"/* dataFormat */,l);dh.assert(s.rank===N.length,()=>`Error in ${oc.Dilation2DBackpropInput}, dy must have the same rank as output ${N.length}, but got ${s.rank}`);let T=dh.toNestedArray(N,t.data.get(s.dataId).values),I=dh.makeZerosNestedTypedArray(n.shape,n.dtype);// In the case of multiple argmax branches, we only back-propagate along the
// last branch, i.e., the one with largest value of `h * filter_cols + w`,
// similarly to the max-pooling backward routines.
// This implementation follows the TF c++ implementation:
// https://github.com/tensorflow/tensorflow/blob/d9a3a849edc198e90172bc58eb293de457f9d986/tensorflow/core/kernels/dilation_ops.cc
for(let e=0;e<d;++e)for(let t=0;t<m;++t){let r=t*b-y.top;for(let n=0;n<g;++n){let a=n*v-y.left;for(let s=0;s<f;++s){let i=Number.MIN_SAFE_INTEGER,o=r<0?0:r,l=a<0?0:a;for(let t=0;t<x;++t){let n=r+t*k;if(n>=0&&n<p)for(let r=0;r<w;++r){let d=a+r*S;if(d>=0&&d<h){let a=u[e][n][d][s]+c[t][r][s];a>i&&(i=a,o=n,l=d)}}}I[e][o][l][s]+=T[e][t][n][s]}}}let C=t.write(dh.toTypedArray(I,n.dtype),n.shape,n.dtype);return{dataId:C,shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const bV={kernelName:oc.Draw,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{image:a}=t,{canvas:s,options:i}=n,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let d=s.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==d)throw Error(`Could not get the context with ${c} type.`);let[p,h]=a.shape.slice(0,2),f=2===a.shape.length?1:a.shape[2],m=r.data.get(a.dataId).values,g="float32"===a.dtype?255:1,y=new Uint8ClampedArray(h*p*4);for(let e=0;e<p*h;++e){let t=[0,0,0,255*u];for(let r=0;r<f;r++){let n=m[e*f+r];if("float32"===a.dtype){if(n<0||n>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${n}.`)}else if("int32"===a.dtype&&(n<0||n>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${n}.`);1===f?(t[0]=n*g,t[1]=n*g,t[2]=n*g):t[r]=n*g}let r=4*e;y[r+0]=Math.round(t[0]),y[r+1]=Math.round(t[1]),y[r+2]=Math.round(t[2]),y[r+3]=Math.round(t[3])}s.width=h,s.height=p;let b=new ImageData(y,h,p);return d.putImageData(b,0,0),a}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const bG=g8((e,t)=>e*t),bU=yg((e,t,r,n)=>({real:e*r-t*n,imag:e*n+t*r})),bW=ym(oc.Multiply,bG,bU),bq={kernelName:oc.Multiply,backendName:"cpu",kernelFunc:bW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");function bH(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{axis:i,keepDims:o}=a;gH(s,"sum"),t="bool"===s.dtype?yh({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):g1({inputs:{x:s},backend:n});let l=t.shape.length,u=dh.parseAxisParam(i,t.shape),c=uc.getAxesPermutation(u,l),d=u,p=t;null!=c&&(p=y$({inputs:{x:t},backend:n,attrs:{perm:c}}),d=uc.getInnerMostAxes(d.length,l)),uc.assertAxesAreInnerMostDims("sum",d,p.shape.length);let[h,f]=uc.computeOutAndReduceShapes(p.shape,d),m=uc.upcastType(p.dtype,"int32"),g=yu(n,h,m),y=dh.sizeFromShape(f),b=n.data.get(g.dataId).values,v=n.data.get(p.dataId).values;for(let e=0;e<b.length;++e){let t=e*y,r=0;for(let e=0;e<y;++e)r+=v[t+e];b[e]=r}if(o){let e=uc.expandShapeToKeepDim(g.shape,u),t=g;g=yw({inputs:{x:g},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(t),null!=c&&n.disposeIntermediateTensorInfo(p),g}const bK={kernelName:oc.Sum,backendName:"cpu",kernelFunc:bH},bX={kernelName:oc.Einsum,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{equation:a}=n,{allDims:s,summedDims:i,idDims:o}=uc.decodeEinsumEquation(a,t.length);uc.checkEinsumDimSizes(s.length,o,t);let{path:l,steps:u}=uc.getEinsumComputePath(i,o),c=u.length,d=null,p=s.length,h=[];for(let e=0;e<c;++e){for(let n of u[e]){let e;let{permutationIndices:a,expandDims:s}=uc.getEinsumPermutation(p,o[n]);uc.isIdentityPermutation(a)?e=t[n]:(e=y$({inputs:{x:t[n]},backend:r,attrs:{perm:a}}),h.push(e));let i=e.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);dh.arraysEqual(e.shape,i)||(e=yw({inputs:{x:e},backend:r,attrs:{shape:i}}),h.push(e)),null===d?d=e:(// tslint:disable-next-line: no-unnecessary-type-assertion
d=bW({inputs:{a:e,b:d},backend:r}),h.push(d))}e<c-1&&(l[e]>=0&&(d=bH({inputs:{x:d},backend:r,attrs:{axis:l[e]-(s.length-p),keepDims:!1}}),h.push(d)),p--)}// Clean up intermediate tensors.
for(let e of h)e!==d&&r.disposeIntermediateTensorInfo(e);return d}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const bZ={kernelName:oc.EluGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{dy:n,y:a}=t;gH([n,a],"eluGrad");let s=new Float32Array(dh.sizeFromShape(a.shape)),i=r.data.get(a.dataId).values,o=r.data.get(n.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];t>=0?s[e]=o[e]:s[e]=o[e]*(t+1)}return r.makeTensorInfo(a.shape,"float32",s)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const bQ=g8((e,t)=>e===t?1:0),bY=ym(oc.Equal,bQ,null,"bool"),bJ={kernelName:oc.Equal,backendName:"cpu",kernelFunc:bY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const b0=uc.ERF_P,b1=uc.ERF_A1,b2=uc.ERF_A2,b4=uc.ERF_A3,b3=uc.ERF_A4,b8=uc.ERF_A5,b6=gQ(oc.Erf,e=>{let t=Math.sign(e),r=Math.abs(e),n=1/(1+b0*r);return t*(1-((((b8*n+b3)*n+b4)*n+b2)*n+b1)*n*Math.exp(-r*r))}),b5={kernelName:oc.Erf,backendName:"cpu",kernelFunc:b6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const b7=gZ(e=>Math.exp(e)),b9=gY(oc.Exp,b7,"float32"),ve={kernelName:oc.Exp,backendName:"cpu",kernelFunc:b9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");function vt(e){let{inputs:t,backend:r,attrs:n}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),l=s;return s<0&&(dh.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),o.splice(l,0,1),yw({inputs:{x:a},backend:r,attrs:{shape:o}})}const vr={kernelName:oc.ExpandDims,backendName:"cpu",kernelFunc:vt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vn=gZ(e=>Math.expm1(e)),va=gY(oc.Expm1,vn),vs={kernelName:oc.Expm1,backendName:"cpu",kernelFunc:va};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vi=g8((e,t)=>e/t),vo=ym(oc.RealDiv,vi),vl={kernelName:oc.RealDiv,backendName:"cpu",kernelFunc:vo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vu=g8((e,t)=>e-t),vc=yg((e,t,r,n)=>({real:e-r,imag:t-n})),vd=ym(oc.Sub,vu,vc),vp={kernelName:oc.Sub,backendName:"cpu",kernelFunc:vd};function vh(e,t,r){let n=e.shape,a=n[0],s=n[1],i=r.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[a,s],c=dh.sizeFromShape(u),d=dh.getTypedArrayFromDType("float32",c),p=dh.getTypedArrayFromDType("float32",c);for(let e=0;e<a;e++){// TODO: Support slice ops for complex type.
let n=y6({inputs:{x:o},backend:r,attrs:{begin:[e,0],size:[1,s]}}),a=y6({inputs:{x:l},backend:r,attrs:{begin:[e,0],size:[1,s]}}),i=yo({inputs:{real:n,imag:a},backend:r}),{real:u,imag:c}=function(e,t,r){let n=dh.sizeFromShape(e.shape),a=r.data.get(e.dataId),s=r.data.get(a.complexTensorInfos.real.dataId).values,i=r.data.get(a.complexTensorInfos.imag.dataId).values;if((n&n-1)==0){let a=// FFT using Cooley-Tukey algorithm on radix 2 dimensional input.
function e(t,r,n,a,s){if(1===n)return{real:t,imag:r};let i=uc.mergeRealAndImagArrays(t,r),o=n/2,l=uc.complexWithEvenIndex(i),u=l.real,c=l.imag,d=[u.length],p=s.makeTensorInfo(d,"float32",u),h=s.makeTensorInfo(d,"float32",c),f=yo({inputs:{real:p,imag:h},backend:s}),m=uc.complexWithOddIndex(i),g=m.real,y=m.imag,b=[g.length],v=s.makeTensorInfo(b,"float32",g),x=s.makeTensorInfo(b,"float32",y),w=yo({inputs:{real:v,imag:x},backend:s}),k=e(u,c,o,a,s),S=k.real,N=k.imag,T=[S.length],I=s.makeTensorInfo(T,"float32",S),C=s.makeTensorInfo(T,"float32",N),E=yo({inputs:{real:I,imag:C},backend:s}),A=e(g,y,o,a,s),R=A.real,_=A.imag,O=[R.length],P=s.makeTensorInfo(O,"float32",R),$=s.makeTensorInfo(O,"float32",_),D=yo({inputs:{real:P,imag:$},backend:s}),M=uc.exponents(n,a),F=[M.real.length],L=s.makeTensorInfo(F,"float32",M.real),j=s.makeTensorInfo(F,"float32",M.imag),B=yo({inputs:{real:L,imag:j},backend:s}),z=bW({inputs:{a:B,b:D},backend:s}),V=yv({inputs:{a:E,b:z},backend:s}),G=vd({inputs:{a:E,b:z},backend:s}),U=yc({inputs:{input:V},backend:s}),W=yc({inputs:{input:G},backend:s}),q=bh({inputs:{input:V},backend:s}),H=bh({inputs:{input:G},backend:s}),K=bm({inputs:[U,W],backend:s,attrs:{axis:0}}),X=bm({inputs:[q,H],backend:s,attrs:{axis:0}}),Z=s.data.get(K.dataId).values,Q=s.data.get(X.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(X),{real:Z,imag:Q}}(s,i,n,t,r),o=[e.shape[0],e.shape[1]];if(t){let e=r.makeTensorInfo(o,"float32",a.real),t=r.makeTensorInfo(o,"float32",a.imag),s=r.makeTensorInfo([],"float32",dh.createScalarValue(n,"float32")),i=g1({inputs:{x:s},backend:r}),l=vl.kernelFunc({inputs:{a:e,b:s},backend:r}),u=vl.kernelFunc({inputs:{a:t,b:i},backend:r}),c=r.data.get(l.dataId).values,d=r.data.get(u.dataId).values;return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),{real:c,imag:d}}return a}{let e=uc.mergeRealAndImagArrays(s,i),r=// Calculate fourier transform by multplying sinusoid matrix.
function(e,t,r){let n=new Float32Array(2*t);// TODO: Use matmul instead once it supports complex64 type.
for(let a=0;a<t;a++){let s=0,i=0;for(let n=0;n<t;n++){let o=uc.exponent(a*n,t,r),l=uc.getComplexWithIndex(e,n);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}r&&(s/=t,i/=t),uc.assignToTypedArray(n,s,i,a)}return n}(e,n,t);return uc.splitRealAndImagArrays(r)}}(i,t,r),h=uc.mergeRealAndImagArrays(u,c);for(let t=0;t<s;t++){let r=uc.getComplexWithIndex(h,t);d[e*s+t]=r.real,p[e*s+t]=r.imag}r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i)}let h=r.makeTensorInfo(u,"float32",d),f=r.makeTensorInfo(u,"float32",p),m=yo({inputs:{real:h,imag:f},backend:r});return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(f),m}const vf={kernelName:oc.FFT,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{input:n}=t,a=dh.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=a/s,o=yw({inputs:{x:n},backend:r,attrs:{shape:[i,s]}}),l=vh(o,!1,r),u=yw({inputs:{x:l},backend:r,attrs:{shape:n.shape}});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(l),u}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");function vm(e){let{backend:t,attrs:r}=e,{shape:n,value:a,dtype:s}=r,i=s||dh.inferDtype(a),o=dh.getArrayFromDType(i,dh.sizeFromShape(n));return function(e,t,r){e.fill(t)}(o,a,0),t.makeTensorInfo(n,i,o)}const vg={kernelName:oc.Fill,backendName:"cpu",kernelFunc:vm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418"),dh=A("jjNRA");const vy={kernelName:oc.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,a=dh.getTypedArrayFromDType(n.dtype,dh.sizeFromShape(n.shape)),[s,i,o,l]=n.shape,u=r.data.get(n.dataId).values;for(let e=0;e<s;e++){let t=e*o*i*l;for(let e=0;e<i;e++){let r=e*(o*l);for(let e=0;e<o;e++){let n=e*l;for(let s=0;s<l;s++){let i=Math.round(o-e-1),c=t+r+n+s,d=u[c];// If the coordinate position falls within the image boundaries...
if(i>=0&&i<o){// set the output to the image value at the coordinate position.
let e=i*l,n=t+r+e+s;d=u[n]}a[c]=d}}}}let c=r.write(a,n.shape,n.dtype);return{dataId:c,shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vb=gZ(e=>Math.floor(e)),vv=gY(oc.Floor,vb),vx={kernelName:oc.Floor,backendName:"cpu",kernelFunc:vv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vw=g8((e,t)=>Math.floor(e/t)),vk=ym(oc.FloorDiv,vw,null,"int32"),vS={kernelName:oc.FloorDiv,backendName:"cpu",kernelFunc:vk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vN={kernelName:oc.FusedConv2D,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=by({inputs:{x:a,filter:s},backend:r,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p}});if(i){let e=m;// For NCHW format, if bias is a 1-D tensor, it is supposed to be aligned
// to the channel of the conv2d's result; if the bias is a scalar, the
// bias_add is computed as if the bias was broadcasted to the shape of the
// conv2d's result.
if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){let e=yw({inputs:{x:i},backend:r,attrs:{shape:[i.shape[0],1,1]}});m=yv({inputs:{a:m,b:e},backend:r}),r.disposeIntermediateTensorInfo(e)}else // for NCHW (1D case) is handled above.
m=yv({inputs:{a:m,b:i},backend:r});r.disposeIntermediateTensorInfo(e)}if(h){let e=m;// For NCHW format, if PReLu activation weights is a 1-D tensor, it is
// supposed to be aligned with the channel of the conv2d's result. For other
// cases, whether NCHW or NHWC data format, the conv2d result is
// already aligned with the activation weights.
if("NCHW"===c&&"prelu"===h&&1===o.shape.length&&1!==o.shape[0]){let e=yw({inputs:{x:o},backend:r,attrs:{shape:[o.shape[0],1,1]}});m=yi(r,m,h,e,f),r.disposeIntermediateTensorInfo(e)}else m=yi(r,m,h,o,f);r.disposeIntermediateTensorInfo(e)}return m}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vT={kernelName:oc.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=b$({inputs:{x:a,filter:s},backend:r,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p}});if(i){let e=m;m=yv({inputs:{a:m,b:i},backend:r}),r.disposeIntermediateTensorInfo(e)}if(h){let e=m;m=yi(r,m,h,o,f),r.disposeIntermediateTensorInfo(e)}return m}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gq=A("iG87S");function vI(e,t,r,n,a,s,i,o,l){let u=(0,gq.buffer)([n,s],r);for(let r=0;r<n;r++){let n=[],c=0;for(let t=0;t<a;t++){let s=e[r*a+t];c+=s*i[t],n.push(s)}if(c<0||c>=l/s)throw Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<s;e++)u.values[r*s+e]=t.get(...t.indexToLoc(c*s+e))}return u}const vC={kernelName:oc.GatherNd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{params:n,indices:a}=t,s=dh.sizeFromShape(n.shape),i=a.shape,o=i[i.length-1],[l,u,c,d]=uc.prepareAndValidate(n,a);if(0===u)return r.makeTensorInfo(l,n.dtype,[]);let p=r.data.get(a.dataId).values,h=r.bufferSync(n),f=vI(p,h,n.dtype,u,o,c,d,n.shape,s);return r.makeTensorInfo(l,n.dtype,f.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gq=A("iG87S");function vE(e,t,r){let n=(0,gq.buffer)(r,e.dtype);for(let r=0;r<n.size;++r){let a=n.indexToLoc(r),s=a.slice(),i=s[0],o=s[2],l=t.locToIndex([i,o]);s[2]=t.values[l];let u=e.locToIndex(s);0<=u&&u<e.values.length&&(n.values[r]=e.values[u]);// Else, index is out of bounds, so leave the default zero val in outBuf.
}return n}const vA={kernelName:oc.GatherV2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=n;gH([a,s],"gatherV2");// Throw error when any index is out of bound.
let l=dh.parseAxisParam(i,a.shape)[0],u=r.data.get(s.dataId).values,c=a.shape[l];for(let e=0;e<u.length;++e){let t=u[e];dh.assert(t<=c-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`)}let d=o;null==o&&(d=0);let p=dh.sizeFromShape(s.shape),h=uc.segment_util.collectGatherOpShapeInfo(a,s,l,d),f=yw({inputs:{x:a},backend:r,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=yw({inputs:{x:s},backend:r,attrs:{shape:[h.batchSize,p/h.batchSize]}}),g=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],y=r.bufferSync(m),b=r.bufferSync(f),v=vE(b,y,g);return r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),r.makeTensorInfo(h.outputShape,v.dtype,v.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vR=g8((e,t)=>e>t?1:0),v_=ym(oc.Greater,vR,null,"bool"),vO={kernelName:oc.Greater,backendName:"cpu",kernelFunc:v_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vP=g8((e,t)=>e>=t?1:0),v$=ym(oc.GreaterEqual,vP,null,"bool"),vD={kernelName:oc.GreaterEqual,backendName:"cpu",kernelFunc:v$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const vM={kernelName:oc.IFFT,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{input:n}=t,a=dh.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=a/s,o=yw({inputs:{x:n},backend:r,attrs:{shape:[i,s]}}),l=vh(o,!0,r),u=yw({inputs:{x:l},backend:r,attrs:{shape:n.shape}});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(l),u}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vF=gQ(oc.IsFinite,e=>Number.isFinite(e)?1:0,"bool"),vL={kernelName:oc.IsFinite,backendName:"cpu",kernelFunc:vF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vj=gQ(oc.IsInf,e=>Math.abs(e)===1/0?1:0,"bool"),vB={kernelName:oc.IsInf,backendName:"cpu",kernelFunc:vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vz=gQ(oc.IsNan,e=>Number.isNaN(e)?1:0,"bool"),vV={kernelName:oc.IsNan,backendName:"cpu",kernelFunc:vz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vG=g8((e,t)=>e<t?1:0),vU=ym(oc.Less,vG,null,"bool"),vW={kernelName:oc.Less,backendName:"cpu",kernelFunc:vU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vq=g8((e,t)=>e<=t?1:0),vH=ym(oc.LessEqual,vq,null,"bool"),vK={kernelName:oc.LessEqual,backendName:"cpu",kernelFunc:vH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");function vX(e,t,r){let n=(t-e)/(r-1),a=dh.makeZerosTypedArray(r,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}const vZ={kernelName:oc.LinSpace,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:r}=e,{start:n,stop:a,num:s}=r,i=vX(n,a,s);return t.makeTensorInfo([i.length],"float32",i)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const vQ=gZ(e=>Math.log(e)),vY=gY(oc.Log,vQ),vJ={kernelName:oc.Log,backendName:"cpu",kernelFunc:vY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const v0=gQ(oc.Log1p,e=>Math.log1p(e)),v1={kernelName:oc.Log1p,backendName:"cpu",kernelFunc:v0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const v2=g8((e,t)=>e&&t),v4=ym(oc.LogicalAnd,v2,null,"bool"),v3={kernelName:oc.LogicalAnd,backendName:"cpu",kernelFunc:v4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const v8=gQ(oc.LogicalNot,e=>e?0:1,"bool"),v6={kernelName:oc.LogicalNot,backendName:"cpu",kernelFunc:v8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const v5=g8((e,t)=>e||t),v7=ym(oc.LogicalOr,v5,null,"bool"),v9={kernelName:oc.LogicalOr,backendName:"cpu",kernelFunc:v7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const xe={kernelName:oc.LRN,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;gH(a,"LRN");let u=a.shape[3],c=u-1,d=r.data.get(a.dataId).values,p=dh.sizeFromShape(a.shape),h=new Float32Array(p);for(let e=0;e<p;e++){let t=function(e){let t=e%u,r=e-t+Math.max(0,t-s),n=e-t+Math.min(t+s,c),a=0;for(;r<=n;r++){let e=d[r];a+=e*e}return a}(e),r=d[e]*Math.pow(i+o*t,-l);h[e]=r}return r.makeTensorInfo(a.shape,a.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const xt={kernelName:oc.LRNGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=n;gH(i,"LRNGrad");let d=dh.sizeFromShape(i.shape),p=i.shape[3],h=r.data.get(i.dataId).values,f=r.data.get(a.dataId).values,m=r.data.get(s.dataId).values,g=new Float32Array(d);for(let e=0;e<d;e++){let t=e%p,r=e-t+Math.max(0,t-o),n=e-t+Math.min(p,t+o+1),a=0;for(let e=r;e<n;e++)a+=Math.pow(f[e],2);a=u*a+l;for(let t=r;t<n;t++){let r=-2*u*c*f[t]*m[e]/a;e===t&&(r+=Math.pow(a,-c)),r*=h[e],g[t]+=r}}return r.makeTensorInfo(i.shape,a.dtype,g)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");function xr(e,t,r,n){let a=dh.getTypedArrayFromDType(n,dh.sizeFromShape(r));for(let r=0;r<a.length;++r){let n=r*t,s=e[n];for(let r=0;r<t;++r){let t=e[n+r];(Number.isNaN(t)||t>s)&&(s=t)}a[r]=s}return a}function xn(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=n,o=a.shape,l=o.length,u=dh.parseAxisParam(s,o),c=u,d=uc.getAxesPermutation(c,l),p=r.data.get(a.dataId).values;if(null!=d){let e=Array(l);for(let t=0;t<e.length;t++)e[t]=o[d[t]];p=yP(p,o,a.dtype,d,e),c=uc.getInnerMostAxes(c.length,l),o=e}gH(a,"max"),uc.assertAxesAreInnerMostDims("max",c,l);let[h,f]=uc.computeOutAndReduceShapes(o,c),m=dh.sizeFromShape(f),g=xr(p,m,h,a.dtype),y=r.write(g,h,a.dtype),b=h;if(i){// reshape
let e=uc.expandShapeToKeepDim(h,u);b=e}return{dataId:y,shape:b,dtype:a.dtype}}const xa={kernelName:oc.Max,backendName:"cpu",kernelFunc:xn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const xs=g8((e,t)=>Math.max(e,t)),xi=ym(oc.Maximum,xs),xo={kernelName:oc.Maximum,backendName:"cpu",kernelFunc:xi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const xl={kernelName:oc.MaxPool,backendName:"cpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r;gH(s,"maxPool");let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;dh.assert(uc.eitherStridesOrDilationsAreOne(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);let c=uc.computePool2DInfo(s.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&dh.arraysEqual(c.inShape,c.outShape))t=g1({inputs:{x:s},backend:n});else{let e=n.data.get(s.dataId).values,r=dh.computeStrides(s.shape),a=yQ(e,s.shape,s.dtype,r,c,"max");t=n.makeTensorInfo(c.outShape,s.dtype,a.values)}return t}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA"),oc=A("hl418");const xu={kernelName:oc.MaxPool3D,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=n;gH(a,"maxPool3d");let c=uc.computePool3DInfo(a.shape,s,i,1/* dilations */,o,l,u),d=r.data.get(a.dataId).values,p=yJ(d,a.shape,a.dtype,dh.computeStrides(a.shape),c,"max");return r.makeTensorInfo(p.shape,"float32",p.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),gq=A("iG87S"),oc=A("hl418");const xc={kernelName:oc.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n;gH([a,s],"maxPool3DGrad");let c=uc.computePool3DInfo(s.shape,i,o,1/* dilations */,l,u),d=r.bufferSync(s),p=function(e,t){let r=(0,gq.buffer)(t.outShape,"int32"),n=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*n-p,v=b;for(;v<0;)v+=i;let x=Math.min(t.inDepth,u+b);for(let n=0;n<t.outHeight;++n){let u=n*a-h,p=u;for(;p<0;)p+=o;let w=Math.min(t.inHeight,c+u);for(let a=0;a<t.outWidth;++a){let h=a*s-f,k=h;for(;k<0;)k+=l;let S=Math.min(t.inWidth,d+h),N=Number.NEGATIVE_INFINITY,T=-1;for(let t=v;t<x;t+=i){let r=t-b;for(let n=p;n<w;n+=o){let a=n-u;for(let s=k;s<S;s+=l){let i=s-h,o=e.get(m,t,n,s,g);o>=N&&(N=o,T=r*c*d+a*c+i)}}}r.set(T,m,y,n,a,g)}}}return r}(d,c),h=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,v=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,k=v-1-c.padInfo.front,S=w-1-c.padInfo.left,N=x-1-c.padInfo.top,T=(0,gq.buffer)(s.shape,"float32"),I=r.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let r=0;r<c.inDepth;++r)for(let n=0;n<c.inHeight;++n)for(let a=0;a<c.inWidth;++a){// Shader code begins
let s=r-k,i=n-N,o=a-S,l=0;for(let r=0;r<v;r+=g){let n=(s+r)/h;if(!(n<0)&&!(n>=c.outDepth)&&Math.floor(n)===n)for(let a=0;a<x;a+=y){let s=(i+a)/f;if(!(s<0)&&!(s>=c.outHeight)&&Math.floor(s)===s)for(let i=0;i<w;i+=b){let u=(o+i)/m;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;let d=v*x*w-1-p.get(e,n,s,u,t),h=r*x*w+a*w+i,f=d===h?1:0;if(0===f)continue;let g=I.get(e,n,s,u,t);l+=g*f}}}T.set(l,e,r,n,a,t)}return r.makeTensorInfo(T.shape,T.dtype,T.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),gq=A("iG87S"),oc=A("hl418");const xd={kernelName:oc.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s,output:i}=t;gH([s,i],"maxPoolGrad");let{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=n,d=uc.computePool2DInfo(s.shape,o,l,1/* dilations */,u,c),p=r.data.get(s.dataId).values,h=(0,gq.buffer)(d.outShape,s.dtype,yY(p,s.shape,s.dtype,d).values),f=d.strideHeight,m=d.strideWidth,g=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,v=d.effectiveFilterWidth,x=v-1-d.padInfo.left,w=b-1-d.padInfo.top,k=(0,gq.buffer)(s.shape,"float32"),S=r.data.get(a.dataId).values,N=(0,gq.buffer)(a.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let r=0;r<d.inHeight;++r)for(let n=0;n<d.inWidth;++n){// Shader code begins.
let a=r-w,s=n-x,i=0;for(let r=0;r<b;r+=g){let n=(a+r)/f;if(!(n<0)&&!(n>=d.outHeight)&&Math.floor(n)===n)for(let a=0;a<v;a+=y){let o=(s+a)/m;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;let l=b*v-1-h.get(e,n,o,t),u=r*v+a,c=l===u?1:0;if(0===c)continue;let p=N.get(e,n,o,t);i+=p*c}}k.set(i,e,r,n,t)}return r.makeTensorInfo(k.shape,k.dtype,k.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418"),uc=A("7MaPk");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");const xp={kernelName:oc.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t;gH(n,"MaxPoolWithArgmax");let l=r.data.get(n.dataId).values,u=uc.computePool2DInfo(n.shape,a,s,[1,1],i),[c,d]=function(e,t,r,n,a){let s=dh.computeStrides(t),i=yQ(e,t,r,s,a,"max"),o=yY(e,t,r,a,!0,n);return[i.values,o.values]}(l,n.shape,n.dtype,o,u),p=r.write(c,u.outShape,n.dtype),h=r.write(d,u.outShape,n.dtype);return[{dataId:p,shape:u.outShape,dtype:n.dtype},{dataId:h,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const xh={kernelName:oc.Mean,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n,o=dh.parseAxisParam(s,a.shape),l=uc.computeOutAndReduceShapes(a.shape,o),u=l[1],c=dh.sizeFromShape(u),d=[],p=r.makeTensorInfo([],"float32",new Float32Array([c]));d.push(p);let h=yh({inputs:{x:a},backend:r,attrs:{dtype:"float32"}});d.push(h);let f=vo({inputs:{a:h,b:p},backend:r});d.push(f);let m=bH({inputs:{x:f},backend:r,attrs:{axis:s,keepDims:i}});return d.forEach(e=>r.disposeIntermediateTensorInfo(e)),m}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const xf={kernelName:oc.Min,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;gH(a,"min");let o=dh.parseAxisParam(s,a.shape),l=o,u=uc.getAxesPermutation(l,a.shape.length),c=a;null!=u&&(c=y$({inputs:{x:a},backend:r,attrs:{perm:u}}),l=uc.getInnerMostAxes(l.length,a.shape.length)),uc.assertAxesAreInnerMostDims("min",l,c.shape.length);let[d,p]=uc.computeOutAndReduceShapes(c.shape,l),h=dh.sizeFromShape(p),f=dh.makeZerosTypedArray(dh.sizeFromShape(d),c.dtype),m=r.data.get(c.dataId).values;for(let e=0;e<f.length;++e){let t=e*h,r=m[t];for(let e=0;e<h;++e){let n=m[t+e];(Number.isNaN(n)||n<r)&&(r=n)}f[e]=r}null!=u&&r.disposeIntermediateTensorInfo(c);let g=r.makeTensorInfo(d,c.dtype,f);if(i){let e=uc.expandShapeToKeepDim(d,o),t=yw({inputs:{x:g},backend:r,attrs:{shape:e}});return r.disposeIntermediateTensorInfo(g),t}return g}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const xm=g8((e,t)=>Math.min(e,t)),xg=ym(oc.Minimum,xm),xy={kernelName:oc.Minimum,backendName:"cpu",kernelFunc:xg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const xb={kernelName:oc.MirrorPad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:s,mode:i}=n;gH(a,"mirrorPad");let o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),l=s.map(e=>e[0]),u=s.map((e,t)=>e[0]+a.shape[t]),c="reflect"===i?0:1,d=r.data.get(a.dataId).values,p=a.shape.length,h=dh.computeStrides(a.shape),f=dh.sizeFromShape(o),m=o.length,g=dh.computeStrides(o),y=dh.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=dh.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=(u[e]-1)*2-t[e]+c);t=t.map((e,t)=>e-l[t]);let r=dh.locToIndex(t,p,h);y[e]=d[r]}let b=r.write(y,o,a.dtype);return{dataId:b,shape:o,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const xv=g8((e,t)=>{let r=e%t;return e<0&&t<0||e>=0&&t>=0?r:(r+t)%t}),xx=ym(oc.Mod,xv),xw={kernelName:oc.Mod,backendName:"cpu",kernelFunc:xx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418"),gb=A("3mnBW");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");function xk(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{dim:s}=n,i=a.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=dh.parseAxisParam([o],a.shape),u=xn({inputs:{x:a},backend:r,attrs:{reductionIndices:l,keepDims:!1}}),c=uc.expandShapeToKeepDim(u.shape,l),d=yw({inputs:{x:u},backend:r,attrs:{shape:c}}),p=vd({inputs:{a:a,b:d},backend:r}),h=b9({inputs:{x:p},backend:r}),f=bH({inputs:{x:h},backend:r,attrs:{axis:l,keepDims:!1}}),m=yw({inputs:{x:f},backend:r,attrs:{shape:c}}),g=vo({inputs:{a:h,b:m},backend:r});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),g}const xS={kernelName:oc.Softmax,backendName:"cpu",kernelFunc:xk},xN={kernelName:oc.Multinomial,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=n;gH(a,"multinomial");let l=o?a:xk({inputs:{logits:a},backend:r,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],d=r.data.get(l.dataId).values,p=[u,s],h=dh.makeZerosTypedArray(dh.sizeFromShape(p),"int32");for(let e=0;e<u;++e){let t=e*c,r=new Float32Array(c-1);r[0]=d[t];for(let e=1;e<r.length;++e)r[e]=r[e-1]+d[t+e];let n=gb.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){let t=n();// Assume last event happened by default.
h[a+e]=r.length;for(let n=0;n<r.length;n++)if(t<r[n]){h[a+e]=n;break}}}return o||r.disposeIntermediateTensorInfo(l),r.makeTensorInfo(p,"int32",h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");function xT(e,t,r){let n=dh.createScalarValue(-1,r);return bG([],t,n,e,r)}const xI={kernelName:oc.Neg,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n}=t;gH(n,"neg");let a=r.data.get(n.dataId).values,[s,i]=xT(a,n.shape,n.dtype);return r.makeTensorInfo(i,n.dtype,s)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gU=A("lzjc8"),oc=A("hl418");const xC=gU.nonMaxSuppressionV3Impl,xE={kernelName:oc.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=n;gH(a,"NonMaxSuppression");let u=r.data.get(a.dataId).values,c=r.data.get(s.dataId).values,{selectedIndices:d}=xC(u,c,i,o,l);return r.makeTensorInfo([d.length],"int32",new Int32Array(d))}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gU=A("lzjc8"),oc=A("hl418");const xA=gU.nonMaxSuppressionV4Impl,xR={kernelName:oc.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=n;gH(a,"NonMaxSuppressionPadded");let c=r.data.get(a.dataId).values,d=r.data.get(s.dataId).values,{selectedIndices:p,validOutputs:h}=xA(c,d,i,o,l,u);return[r.makeTensorInfo([p.length],"int32",new Int32Array(p)),r.makeTensorInfo([],"int32",new Int32Array([h]))]}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gU=A("lzjc8"),oc=A("hl418");const x_=gU.nonMaxSuppressionV5Impl,xO={kernelName:oc.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=n;gH(a,"NonMaxSuppressionWithScore");let c=r.data.get(a.dataId).values,d=r.data.get(s.dataId).values,{selectedIndices:p,selectedScores:h}=x_(c,d,i,o,l,u);return[r.makeTensorInfo([p.length],"int32",new Int32Array(p)),r.makeTensorInfo([h.length],"float32",new Float32Array(h))]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const xP=g8((e,t)=>e!==t?1:0),x$=ym(oc.NotEqual,xP,null,"bool"),xD={kernelName:oc.NotEqual,backendName:"cpu",kernelFunc:x$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const xM={kernelName:oc.OneHot,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=n;gH(a,"oneHot");let u=dh.sizeFromShape(a.shape),c=new Float32Array(u*i);c.fill(l);let d=r.data.get(a.dataId).values;for(let e=0;e<u;++e)d[e]>=0&&d[e]<i&&(c[e*i+d[e]]=o);return r.makeTensorInfo([...a.shape,i],s,c)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");function xF(e){let{inputs:t,backend:r}=e,{x:n}=t;if("string"===n.dtype)throw Error("zerosLike is not supported for string tensors");if("complex64"!==n.dtype)return vm({backend:r,attrs:{shape:n.shape,value:0,dtype:n.dtype}});{let e=yc({inputs:{input:n},backend:r}),t=xF({inputs:{x:e},backend:r}),a=bh({inputs:{input:n},backend:r}),s=xF({inputs:{x:a},backend:r}),i=yo({inputs:{real:t,imag:s},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),i}}const xL={kernelName:oc.ZerosLike,backendName:"cpu",kernelFunc:xF},xj={kernelName:oc.OnesLike,backendName:"cpu",kernelFunc:function e(t){let{inputs:r,backend:n}=t,{x:a}=r;if("string"===a.dtype)throw Error("onesLike is not supported for string tensors");if("complex64"!==a.dtype)return vm({backend:n,attrs:{shape:a.shape,value:1,dtype:a.dtype}});{let t=yc({inputs:{input:a},backend:n}),r=e({inputs:{x:t},backend:n}),s=bh({inputs:{input:a},backend:n}),i=xF({inputs:{x:s},backend:n}),o=yo({inputs:{real:r,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");function xB(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n;if(1===t.length)return vt({inputs:{input:t[0]},backend:r,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{dh.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),dh.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(e=>{let t=vt({inputs:{input:e},backend:r,attrs:{dim:a}});return o.push(t),t}),u=bm({inputs:l,backend:r,attrs:{axis:a}});return o.forEach(e=>r.disposeIntermediateTensorInfo(e)),u}const xz={kernelName:oc.Pack,backendName:"cpu",kernelFunc:xB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const xV={kernelName:oc.PadV2,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:s,constantValue:i}=n;gH(a,"pad");let o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),l=s.map(e=>e[0]),u=r.data.get(a.dataId).values,c=dh.sizeFromShape(a.shape),d=a.shape.length,p=dh.computeStrides(a.shape),h=dh.sizeFromShape(o),f=o.length,m=dh.computeStrides(o),g=dh.getTypedArrayFromDType(a.dtype,h);0!==i&&g.fill(i);for(let e=0;e<c;e++){let t=dh.indexToLoc(e,d,p),r=t.map((e,t)=>e+l[t]),n=dh.locToIndex(r,f,m);g[n]=u[e]}let y=r.write(g,o,a.dtype);return{dataId:y,shape:o,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const xG=g8((e,t)=>Math.pow(e,t)),xU=ym(oc.Pow,xG),xW={kernelName:oc.Pow,backendName:"cpu",kernelFunc:xU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),bA=A("2MDja"),dh=A("jjNRA"),oc=A("hl418");function xq(e,t,r,n){let[a,s]=uc.computeOutAndReduceShapes(e,n),i=(0,bA.upcastType)(t,"int32"),o=dh.makeZerosTypedArray(dh.sizeFromShape(a),i),l=dh.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,n=1;for(let e=0;e<l;++e)n*=r[t+e];o[e]=n}return{outVals:o,outShape:a,outDtype:i}}const xH={kernelName:oc.Prod,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;gH(a,"prod");let o=a.shape.length,l=dh.parseAxisParam(s,a.shape),u=uc.getAxesPermutation(l,o),c=l,d=a,p=[];null!=u&&(p.push(d=y$({inputs:{x:a},backend:r,attrs:{perm:u}})),c=uc.getInnerMostAxes(c.length,o));let h=r.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=xq(d.shape,d.dtype,h,c),y=m;return i&&(y=uc.expandShapeToKeepDim(m,l)),p.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.makeTensorInfo(y,g,f)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");function xK(e,t){let r=e.slice(0,t);for(;r.length<t;)r.push(1);for(let n=t;n<e.length;n++)r[t-1]*=e[n];return r}function xX(e,t,r,n,a,s,i,o){if(0===e.length)throw Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw Error("Split tensors must not be scalars");let l=t[0][0]-1;if(!function(e,t,r){e.forEach((e,n)=>{if(e<0||e>=r){let a=dh.indexToLoc(n,t.length,dh.computeStrides(t)).join(",");throw Error(`indices[${a}] = ${e} is not in [0, ${r})`)}})}(s,i,l),0===n.length)throw Error("params.rank must be nonzero");let u=n[0],{outSplits:c,valueSlices:d,numValues:p}=// Construct the `splits` output tensors, encoded using a nested vector.
// Also find the slices of values that need to be copied, and store them
// in `valueSlices`.  The total number of values that will be copied (which
// we need for allocating the output values tensor) is stored in `numValues`.
function(e,t,r,n){let a=[],s=0,i=t.length-1+r.length,o=Array(i).fill(null).map(()=>[0]);!function(e,t){// Validate
for(let r=0;r<e.length;++r){let n=e[r],a=r===e.length-1?t:e[r+1].length;if(0===n.length)throw Error("Ragged splits may not be empty");if(n[0]<0)throw Error("Ragged splits must be non-negative");if(n[n.length-1]>a)throw Error("Ragged splits must not point past values");for(let e=1;e<n.length;++e)if(n[e-1]>n[e])throw Error("Ragged splits must be sorted in ascending order")}}(r,n);// Add `splits` that come from all but the last dimension of the dense
// Tensor `indices`.  In particular, for each dimension D, we add a
// splits tensor whose values are:
//   range(reduceProd(splits.shape[:D]) + 1) * splits.shape[D+1]
// E.g., if indices.shape=[2, 3, 4] then we will add splits tensors:
//   [0, 3, 6]                    # length=2+1, stride=3
//   [0, 4, 8, 12, 16, 20, 24]    # length=2*3+1, stride=4
let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];let r=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*r)}// Add `splits` that come from `paramsNestedSplits`.  Starting with the
// outermost ragged dimension (i.e., the first `splits` tensor), we work
// our way in, finding the range of values that should be copied.  As we
// go, we update the output `splits` for each dimension with the appropriate
// values.  In particular, the *lengths* of the slices from `param_splits`
// should be copied to generate corresponding slice lengths in the output
// splits.  E.g., if we are copying a ragged row with length 4, then we
// should add a new split point to outSplits that is 4 greater than the
// previous split point in outSplits.
for(let n=0;n<e.length;++n){let i=e[n],l=e[n]+1;// Copy splits.
for(let e=0;e<r.length;++e){let n=r[e],a=e+t.length-1;if(a>=0){let e=o[a],t=e[e.length-1]-n[i];for(let e=i;e<l;++e)o[a].push(n[e+1]+t)}i=n[i],l=n[l]}l!==i&&(a.push([i,l]),s+=l-i)}return{outSplits:o,valueSlices:a,numValues:s}}(s,i,e,u),h=function(e){let t=[];for(let r=0;r<e.length;++r){let n=e[r].length,a=dh.getArrayFromDType("int32",n);t.push(a),e[r].forEach((e,t)=>a[t]=e)}return t}(c),f=function(e,t,r,n,a){let s=t.slice();s[0]=a;let i=dh.getArrayFromDType(r,dh.sizeFromShape(s)),o=e.length,l=0===o?0:o/t[0];return!// For each slice in `(start, limit)` in `valueSlices`, append
// `paramsDenseValues[start,...,limit] to `values`.  `valueSize` indicates
// the number of scalars contained in each value paramsDenseValues[i].
function(e,t,r,n,a,s){let i=xK(t,2)[1],o=xK(s,2)[1],l=0;for(let t of r)for(let r=t[0];r<t[1];++r){for(let t=0;t<n;++t)a[l*o+t]=e[r*i+t];++l}}(e,t,n,l,i,s),[i,s]}(r,n,a,d,p);return[h,f[0],f[1]]}const xZ={kernelName:oc.RaggedGather,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=n,l=a.map(e=>r.data.get(e.dataId).values),u=a.map(e=>e.shape),c=r.data.get(s.dataId).values,d=r.data.get(i.dataId).values,[p,h,f]=xX(l,u,c,s.shape,s.dtype,d,i.shape,o),m=p.map(e=>r.makeTensorInfo([e.length],"int32",e)),g=r.makeTensorInfo(f,s.dtype,h);return m.concat([g])}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");function xQ(e,t,r,n,a,s,i){// Check input tensor shapes.
if(t.length>1)throw Error("starts must be a scalar or vector");if(a.length>1)throw Error("limits must be a scalar or vector");if(i.length>1)throw Error("deltas must be a scalar or vector");// Determine which tensors we need to broadcast.
let o=0===t.length,l=0===a.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(a[0]),u||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw Error("starts, limits, and deltas must have the same shape");let d=0===c.length?1:c[0],p=dh.getArrayFromDType("int32",d+1);p[0]=0;for(let t=0;t<d;++t){let r;let a=o?e[0]:e[t],i=l?n[0]:n[t],c=u?s[0]:s[t];if(0===c)throw Error("Requires delta != 0");if(c>0&&i<a||c<0&&i>a)r=0;else if((r=Math.ceil(Math.abs((i-a)/c)))>2147483647)throw Error("Requires ((limit - start) / delta) <= 2147483647");p[t+1]=p[t]+r}let h=p[d],f=dh.getArrayFromDType(r,h),m=0;for(let t=0;t<d;++t){let r=p[t+1]-p[t],n=o?e[0]:e[t],a=u?s[0]:s[t];for(let e=0;e<r;++e)f[m++]=n,n+=a}return[p,f]}const xY={kernelName:oc.RaggedRange,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{starts:n,limits:a,deltas:s}=t,i=r.data.get(n.dataId).values,o=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,[u,c]=xQ(i,n.shape,n.dtype,o,a.shape,l,s.shape),d=r.makeTensorInfo([u.length],"int32",u),p=r.makeTensorInfo([c.length],n.dtype,c);return[d,p]}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA"),dp=A("c2DT1"),oN=A("4sqA7"),cp=A("aeB3Z"),xJ=uc.RowPartitionType;// Based on
// https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/ragged_tensor_to_tensor_op.cc
class x0{constructor(e,t,r,n,a,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=n,this.valuesDType=a,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=uc.getRowPartitionTypesHelper(u),this.raggedRank=uc.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===xJ.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}// Returns the relationship between dimension and dimension + 1.
getRowPartitionTensor(e){return this.rowPartitionTypes[0]===xJ.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case xJ.VALUE_ROWIDS:return x0.getMaxWidthValueRowID(t);case xJ.ROW_SPLITS:return x0.getMaxWidthRowSplit(t);default:throw Error(`Cannot handle partition type ${xJ[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let r=0;for(let n=0;n<t-1;++n){let t=e[n+1]-e[n];t>r&&(r=t)}return r}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let r=0,n=e[0],a=0;for(let s=1;s<t;++s){let t=e[s];t!==n&&(n=t,a=Math.max(s-r,a),r=s)}return Math.max(t-r,a)}tensorShapeFromTensor(e,t,r=!0){if(0===t.length){if(-1===e[0])return[];throw Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}// MakePartialShape/MakeShapeHelper.
return x2(e,r)}calculateOutputSize(e){let t=this.valuesShape,r=this.defaultValueShape;uc.validateDefaultValueShape(r,t);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=uc.combineRaggedTensorToTensorShapes(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let e=1;e<=this.raggedRank;++e)a[e]<0&&(a[e]=this.getMaxWidth(e));return a}/**
     * The outputIndex represents the index in the output tensor
     * where the first element of a particular dimension would be written.
     * If it is -1, it indicates that the index is out of scope.
     * Example, given firstDimension = 10, firstDimensionOutput = 6,
     * and outputIndexMultiplier = 100:
     * result = [0 100 200 300 400 500 -1 -1 -1 -1]
     * If firstDimensionOutput = 11 instead, then:
     * result = [0 100 200 300 400 500 600 700 800 900]
     */calculateFirstParentOutputIndex(e,t,r){let n=Math.min(e,r),a=[],s=0;for(let e=0;e<n;++e,s+=t)a.push(s);for(let t=n;t<e;++t)a.push(-1);return dh.assert(a.length===e,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(e,t,r,n){let a=e.length,s=[];for(let i=0;i<a-1;++i){let a=e[i+1]-e[i],o=Math.min(n,a),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)s.push(l),l+=r;for(let e=0;e<a-o;++e)s.push(-1)}if(a>0&&s.length!==e[a-1])throw Error("Invalid row split size.");return s}// Calculate the output index of the first element of a list.
// The parentOutputIndex is the same computation for the previous list.
// -1 indicates an element or list that is out of range.
// The outputIndexMultiplier is the number of output indices one moves
// forward for each column.
// E.g., given:
// valueRowIds:[0 1 2 2 2 3 5 5 6]
// parentOutputIndex:[1000 1100 2000 2100 -1 3000 4000]
// outputIndexMultiplier: 10
// outputSize: 2
// You get:
// result = [1000 1100 2000 2010 -1 2100 -1 -1 3000]
// result[0] = parentOutputIndex[valueRowIds[0]]
// result[1] = parentOutputIndex[valueRowIds[1]]
// result[2] = parentOutputIndex[valueRowIds[2]]
// result[3] = parentOutputIndex[valueRowIds[2] + 10]
// result[4] = -1 because it is the third element the size is 2.
// result[5] = parentOutputIndex[valueRowIds[3]]
// result[6] = -1 because parentOutputIndex[valueRowIds[6]] == -1
// result[7] = -1 because parentOutputIndex[valueRowIds[6]] == -1
// result[8] = parentOutputIndex[valueRowIds[7]]
calculateOutputIndexValueRowID(e,t,r,n){let a=e.length,s=[];if(0===a)return[];let i=0,o=e[0];if(o>=t.length)throw Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<a;++u){let a=e[u];if(a===o)l>=0&&(++i<n?l+=r:l=-1);else{if(i=0,o=a,a>=t.length)throw Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);l=t[a]}s.push(l)}if(s.length!==e.length)throw Error("Invalid row ids.");return s}calculateOutputIndex(e,t,r,n){let a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case xJ.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,r,n);case xJ.ROW_SPLITS:if(a.length-1>t.length)throw Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,r,n);default:throw Error(`Unsupported partition type: ${xJ[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case xJ.FIRST_DIM_SIZE:return e[0];case xJ.VALUE_ROWIDS:throw Error("Cannot handle VALUE_ROWIDS in first dimension.");case xJ.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw Error(`Cannot handle type ${xJ[t]}`)}}compute(){let e=this.rowPartitionValues[0];if(e.length<=0)throw Error("Invalid first partition input. Tensor requires at least one element.");let t=this.getFirstDimensionSize(),r=this.calculateOutputSize(t),n=Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*r[e+1];// Full size of the tensor.
let a=x2(r,!1),s=dh.getArrayFromDType(this.valuesDType,dh.sizeFromShape(a)),i=n[0]*r[0];if(i>0){let e=this.calculateFirstParentOutputIndex(t,n[0],r[0]);for(let t=1;t<=this.raggedRank;++t){let a=this.calculateOutputIndex(t-1,e,n[t],r[t]);e=a}this.setOutput(this.raggedRank,e,s,a)}return[a,s]}setOutput(e,t,r,n){if(0===r.length)return;let a=this.values,s=n.slice();s=s.slice(e+1);let i=dh.sizeFromShape(s),o=t.length,l=this.defaultValue;if(l.length!==i&&1!==l.length){let e=this.defaultValueShape;(0,dp.tidy)(()=>{let t=(0,oN.reshape)(l,e),r=(0,cp.broadcastTo)(t,s);l=r.dataSync()})}// Loop through the outputIndex array, finding contiguous regions that
// should be copied.  Once we find the end of a contiguous region, copy it
// and add any necessary padding (with defaultValue).
let u=0,c=0,d=0;// Start of contiguous region (in values)
for(let e=0;e<=o;++e){// dstI is the destination where the value at srcI should be copied.
let n=e<o?t[e]:-1;// If we're still in a contiguous region, then update dstEnd go to the
// next srcI.
if(n===d){++d;continue}// We found the end of contiguous region.  This can be because we found
// a gap (dstI > dstEnd), or a source value that shouldn't be copied
// because it's out-of-bounds (dstI == -1), or the end of the tensor
// (dstI === -1).
if(c<d){// Copy the contiguous region.
let e=a.subarray(u*i),t=r.subarray(c*i),n=(d-c)*i;x1(t,e,n)}// Add any necessary padding (w/ defaultValue).
if(e>=o){// We reached the end of values: pad to the end of output.
let e=r.length;n=Math.floor(e/i)}if(n>d){if(1===this.defaultValue.length)r.subarray(d*i,n*i).fill(this.defaultValue[0]),d=n;else for(;n>d;){let e=r.slice(d*i);x1(e,l,i),++d}}// Update indices.
n<0?(// srcI should be skipped -- leave it out of the contiguous region.
u=e+1,c=d):(// srcI should be copied -- include it in the contiguous region.
u=e,d=(c=d)+1)}}}function x1(e,t,r){for(let n=0;n<r;n++)e[n]=t[n]}function x2(e,t){let r=[];for(let n of e){if(n<0){if(!t)throw Error(`Dimension ${n} must be >= 0`);if(n<-1)throw Error(`Dimension ${n} must be >= -1`);n=-1}r.push(n)}return r}function x4(e,t,r,n,a,s,i,o,l,u){return new x0(e,t,r,n,a,s,i,o,l,u).compute()}const x3={kernelName:oc.RaggedTensorToTensor,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=n,u=r.data.get(a.dataId).values,c=r.data.get(s.dataId).values,d=r.data.get(i.dataId).values,p=o.map(e=>r.data.get(e.dataId).values),h=o.map(e=>e.shape),[f,m]=x4(u,a.shape,c,s.shape,s.dtype,d,i.shape,p,h,l);return r.makeTensorInfo(f,s.dtype,m)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");function x8(e,t,r,n){let a=e===t,s=e<t&&r<0,i=t<e&&r>1;if(a||s||i)return dh.makeZerosTypedArray(0,n);let o=Math.abs(Math.ceil((t-e)/r)),l=dh.makeZerosTypedArray(o,n);t<e&&1===r&&// (or was set to 1)
(r=-1),l[0]=e;for(let e=1;e<l.length;e++)l[e]=l[e-1]+r;return l}const x6={kernelName:oc.Range,backendName:"cpu",kernelFunc:function(e){let{backend:t,attrs:r}=e,{start:n,stop:a,dtype:s,step:i}=r,o=x8(n,a,i,s);return t.makeTensorInfo([o.length],s,o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const x5=gQ(oc.Reciprocal,e=>1/e),x7={kernelName:oc.Reciprocal,backendName:"cpu",kernelFunc:x5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const x9={kernelName:oc.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n;gH(a,"resizeBilinear");let l=dh.computeStrides(a.shape),[u,c]=o,[d,p,h,f]=a.shape,m=r.data.get(a.dataId).values,g=new Float32Array(dh.sizeFromShape([d,u,c,f])),y=[s&&u>1?p-1:p,s&&c>1?h-1:h],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],v=0,x=y[0]/b[0],w=y[1]/b[1];for(let e=0;e<d;e++)for(let t=0;t<u;t++){let r;r=i?x*(t+.5)-.5:x*t;let n=Math.max(0,Math.floor(r)),a=r-n,s=Math.min(p-1,Math.ceil(r)),o=e*l[0]+n*l[1],u=e*l[0]+s*l[1];for(let e=0;e<c;e++){let t;t=i?w*(e+.5)-.5:w*e;let r=Math.max(0,Math.floor(t)),n=t-r,s=Math.min(h-1,Math.ceil(t)),c=o+r*l[2],d=u+r*l[2],p=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){// Begin shader.
// Compute the fractional index of the source.
let t=m[c+e],r=m[d+e],s=m[p+e],i=m[y+e],o=t+(s-t)*n,l=r+(i-r)*n,u=o+(l-o)*a;g[v++]=u}}}return r.makeTensorInfo([d,u,c,f],"float32",g)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const we={kernelName:oc.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n;gH([s,a],"resizeBilinearGrad");let o=dh.computeStrides(a.shape),[l,u,c,d]=a.shape,[,p,h]=s.shape,f=new Float32Array(l*u*c*d),m=[i&&p>1?u-1:u,i&&h>1?c-1:c],g=[i&&p>1?p-1:p,i&&h>1?h-1:h],y=m[0]/g[0],b=m[1]/g[1],v=r.data.get(s.dataId).values,x=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<p;e++){let r=e*y,n=Math.floor(r),a=Math.min(Math.ceil(r),u-1),s=t+n*o[1],i=t+a*o[1],l=r-n,p=1-l;for(let e=0;e<h;e++){let t=e*b,r=Math.floor(t),n=Math.min(Math.ceil(t),c-1),a=t-r,u=1-a,h=s+r*o[2],m=s+n*o[2],g=i+r*o[2],y=i+n*o[2],w=p*u,k=p*a,S=l*u,N=l*a;for(let e=0;e<d;e++){let t=v[x++];f[h+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*S,f[y+e]+=t*N}}}}return r.makeTensorInfo([l,c,u,d],"float32",f)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const wt={kernelName:oc.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n;gH(a,"resizeNearestNeighbor");let l=dh.computeStrides(a.shape),[u,c]=o,[d,p,h,f]=a.shape,m=r.data.get(a.dataId).values,g=new Float32Array(d*u*c*f),y=[s&&u>1?p-1:p,s&&c>1?h-1:h],b=[s&&u>1?u-1:u,s&&c>1?c-1:c],v=y[0]/b[0],x=y[1]/b[1],w=0;for(let e=0;e<d;e++){let t=e*l[0];for(let e=0;e<u;e++){let r=i?v*(e+.5):v*e,n=Math.min(p-1,s?Math.round(r):Math.floor(r));i&&(n=Math.max(0,n));let a=t+n*l[1];for(let e=0;e<c;e++){let t=i?x*(e+.5):x*e,r=Math.min(h-1,s?Math.round(t):Math.floor(t));i&&(r=Math.max(0,r));let n=a+r*l[2];for(let e=0;e<f;e++){// Begin shader.
// Compute the fractional index of the source.
let t=m[n+e];g[w++]=t}}}}return r.makeTensorInfo([d,u,c,f],a.dtype,g)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const wr={kernelName:oc.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n;gH([s,a],"resizeNearestNeighborGrad");let o=dh.computeStrides(a.shape),l=dh.computeStrides(s.shape),[u,c,d,p]=a.shape,[,h,f]=s.shape,m=new Float32Array(u*c*d*p),g=r.data.get(s.dataId).values,y=[i&&h>1?c-1:c,i&&f>1?d-1:d],b=[i&&h>1?h-1:h,i&&f>1?f-1:f],v=y[0]/b[0],x=y[1]/b[1],w=1/v,k=1/x,S=2*Math.ceil(w)+2,N=2*Math.ceil(k)+2;// Loop over the output space.
for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<c;e++){let r=t+e*o[1],n=Math.floor(e*w),a=Math.floor(n-S/2);for(let n=0;n<d;n++){let s=r+n*o[2],u=Math.floor(n*k),y=Math.floor(u-N/2);for(let r=0;r<p;r++){let o=0;// loop over dy
for(let s=0;s<S;s++){let u=s+a;// Guard against the window exceeding the bounds of dy
if(u<0||u>=h)continue;let p=t+u*l[1],m=u*v,b=Math.min(c-1,i?Math.round(m):Math.floor(m));if(e===b)for(let e=0;e<N;e++){let t=e+y;// Guard against the window exceeding the bounds of dy
if(t<0||t>=f)continue;let a=p+t*l[2],s=t*x,u=Math.min(d-1,i?Math.round(s):Math.floor(s));n===u&&(o+=g[a+r])}}m[s+r]=o}}}}return r.makeTensorInfo(a.shape,a.dtype,m)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),u7=A("9jCh7"),oc=A("hl418");const wn={kernelName:oc.Reverse,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dims:s}=n;gH(a,"reverse");let i=a.shape.length,o=dh.parseAxisParam(s,a.shape);if(0===i)return g1({inputs:{x:a},backend:r});let l=new u7.TensorBuffer(a.shape,a.dtype),u=r.bufferSync(a);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),r=t.slice();o.forEach(e=>r[e]=a.shape[e]-1-r[e]),l.set(u.get(...r),...t)}return r.makeTensorInfo(l.shape,l.dtype,l.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418"),dh=A("jjNRA"),uc=A("7MaPk");const wa={kernelName:oc.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,{radians:a,fillValue:s,center:i}=t,o=dh.getTypedArrayFromDType(n.dtype,dh.sizeFromShape(n.shape)),[l,u,c,d]=n.shape,[p,h]=uc.getImageCenter(i,u,c),f=Math.sin(a),m=Math.cos(a),g=r.data.get(n.dataId).values;for(let e=0;e<l;e++){let t=e*c*u*d;for(let e=0;e<u;e++){let r=e*(c*d);for(let n=0;n<c;n++){let a=n*d;for(let i=0;i<d;i++){let y=[l,e,n,i],b=y[2],v=y[1],x=(b-p)*m-(v-h)*f,w=(b-p)*f+(v-h)*m;x=Math.round(x+p),w=Math.round(w+h);let k=s;// If the coordinate position falls within the image boundaries...
if("number"!=typeof s&&(k=3===i?255:s[i]),x>=0&&x<c&&w>=0&&w<u){// set the output to the image value at the coordinate position.
let e=w*(c*d),r=x*d,n=t+e+r+i;k=g[n]}let S=t+r+a+i;o[S]=k}}}}let y=r.write(o,n.shape,n.dtype);return{dataId:y,shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const ws=gQ(oc.Round,e=>{// The algorithm is based on banker's rounding.
let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),wi={kernelName:oc.Round,backendName:"cpu",kernelFunc:ws};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const wo=gZ(e=>1/Math.sqrt(e)),wl=gY(oc.Rsqrt,wo),wu={kernelName:oc.Rsqrt,backendName:"cpu",kernelFunc:wl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gq=A("iG87S"),u7=A("9jCh7");function wc(e,t,r,n,a,s,i,o,l,u){let c=[n/a,a],d=e.values,p=t.values;if(0===n)return(0,gq.buffer)(r,t.dtype);let h=l instanceof u7.TensorBuffer?l:(0,gq.buffer)(c,t.dtype);"string"==typeof l?h.values.fill(l):"number"==typeof l?h.values.fill(l):"boolean"==typeof l&&h.values.fill(+l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let r=d[e*i+t];s.push(r),l+=r*o[t]}if(l<0||l>=n/a)throw Error(`Invalid indices: ${s} does not index into ${r}`);for(let r=0;r<a;r++)u?h.values[l*a+r]+=p[e*a+r]:h.values[l*a+r]=0===t.rank?p[0]:p[e*a+r]}return h}const wd={kernelName:oc.ScatterNd,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a,updates:s}=t,{shape:i}=n,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=uc.calculateShapes(s,a,i),p=r.bufferSync(a),h=r.bufferSync(s),f=wc(p,h,i,d,u,l,o,c,0/* defaultValue */,!0);return r.makeTensorInfo(i,f.dtype,f.values)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");const wp={kernelName:oc.SearchSorted,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{sortedSequence:a,values:s}=t,{side:i}=n,o=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,u=function(e,t,r,n,a,s){let i=dh.getArrayFromDType("int32",r*a);for(let o=0;o<r;++o){let r=e.slice(o*n,(o+1)*n),l=o*a;for(let e=0;e<a;++e)i[l+e]="left"===s?function(e,t){let r=0,n=e.length,a=0;for(;r<n;)e[a=Math.floor((r+n)/2)]<t?r=a+1:n=a;return n}(r,t[e+l]):function(e,t){let r=0,n=e.length,a=0;for(;r<n;)e[a=Math.floor((r+n)/2)]<=t?r=a+1:n=a;return n}(r,t[e+l])}return i}(o,l,a.shape[0],a.shape[1],s.shape[1],i);return r.makeTensorInfo(s.shape,"int32",u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var bA=A("2MDja"),dh=A("jjNRA"),oc=A("hl418");const wh={kernelName:oc.Select,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{condition:n,t:a,e:s}=t;gH([n,a,s],"select");let i=n.shape.length,o=r.data.get(n.dataId).values,l=r.data.get(a.dataId).values,u=r.data.get(s.dataId).values,c=(0,bA.upcastType)(a.dtype,s.dtype),d=dh.makeZerosTypedArray(dh.sizeFromShape(a.shape),c),p=0,h=0===i||i>1||1===a.shape.length?1:dh.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<h;t++)1===o[e]?d[p++]=l[e]:d[p++]=u[e];return r.makeTensorInfo(a.shape,c,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const wf=uc.SELU_SCALEALPHA,wm=uc.SELU_SCALE,wg=gQ(oc.Selu,e=>e>=0?wm*e:wf*(Math.exp(e)-1)),wy={kernelName:oc.Selu,backendName:"cpu",kernelFunc:wg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const wb=gQ(oc.Sign,e=>e<0?-1:e>0?1:0),wv={kernelName:oc.Sign,backendName:"cpu",kernelFunc:wb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const wx=gQ(oc.Sin,e=>Math.sin(e)),ww={kernelName:oc.Sin,backendName:"cpu",kernelFunc:wx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const wk=gQ(oc.Sinh,e=>Math.sinh(e)),wS={kernelName:oc.Sinh,backendName:"cpu",kernelFunc:wk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const wN=Math.log(11920928955078125e-23)+2,wT=gQ(oc.Softplus,e=>{let t=Math.exp(e);return e<wN?t:e>-wN?e:Math.log(1+t)}),wI={kernelName:oc.Softplus,backendName:"cpu",kernelFunc:wT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const wC={kernelName:oc.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,paddings:i}=n;gH([a],"spaceToBatchND");let o=dh.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=xV.kernelFunc({inputs:{x:a},backend:r,attrs:{paddings:l,constantValue:0}}),c=uc.getReshaped(u.shape,s,o,!1),d=uc.getPermuted(c.length,s.length,!1),p=uc.getReshapedPermuted(u.shape,s,o,!1),h=yw({inputs:{x:u},backend:r,attrs:{shape:c}}),f=y$({inputs:{x:h},backend:r,attrs:{perm:d}}),m=yw({inputs:{x:f},backend:r,attrs:{shape:p}});return r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(f),m}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA");function wE(e,t,r,n,a,s,i){let o=t[0],l=s[0],u=Array(l),c=Array(o),d=t[1];if(0===l){if(0!==o)throw Error(uc.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let e=dh.getArrayFromDType(r,0),t=dh.getArrayFromDType(a,0);return[e,[0,d],t,u,c]}let p=!0,h=0,f=Array(l).fill(0);for(let t=0;t<o;++t){// indices is a 2d tensor with shape of [N, rank]
let r=e[t*d];if(r<0)throw Error(uc.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,r));if(r>=l)throw Error(uc.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,r,l));++f[r],p=p&&r>=h,h=r}let m=!0;for(let e=0;e<l;++e){// csrOffset here describes the number of elements in this dense row
let t=0===f[e];u[e]=t,m=m&&!t,// In filled version, each row has at least one element.
f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){for(let e=0;e<o;++e)c[e]=e;return[e,[o,d],n,u,c]}{let t=f[l-1],s=dh.getArrayFromDType(r,t*d),p=dh.getArrayFromDType(a,t),h=Array(l).fill(0);// Fill in values for rows that are not missing
for(let t=0;t<o;++t){// indices is a 2d tensor with shape of [N, rank]
let r=e[t*d],a=h[r],i=(0===r?0:f[r-1])+a;h[r]++;for(let r=0;r<d;++r)s[i*d+r]=e[t*d+r];p[i]=n[t],// We'll need this reverse index map to backprop correctly.
c[t]=i}// Fill in values for rows that are missing
for(let e=0;e<l;++e){let t=h[e];if(0===t){let t=0===e?0:f[e-1];// Remaining index values were set to zero already.
// Just need to set the row index in the right location.
// outputIndices is a 2d tensor with shape of [N, rank]
s[t*d+0]=e;for(let e=1;e<d;++e)s[t*d+e]=0;p[t]=i}}return[s,[t,d],p,u,c]}}const wA={kernelName:oc.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{indices:n,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(2!==n.shape.length)throw Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(1!==a.shape.length)throw Error(`Values must be a vector, saw:
        ${a.shape}`);if(0!==i.shape.length)throw Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=r.data.get(n.dataId).values,l=r.data.get(a.dataId).values,u=r.data.get(s.dataId).values,c=r.data.get(i.dataId).values[0],[d,p,h,f,m]=wE(o,n.shape,n.dtype,l,a.dtype,u,c);return[r.makeTensorInfo(p,n.dtype,d),r.makeTensorInfo([p[0]],a.dtype,h),r.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),r.makeTensorInfo([m.length],n.dtype,new Int32Array(m))]}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk");function wR(e,t,r,n,a){let s=dh.sizeFromShape(n),i=t[0],o=a.length,l=[],u=1,c=-1;for(let e=0;e<o;++e){let t=a[e];if(-1===t){if(-1!==c)throw Error(uc.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,e));c=e,l.push(1)}else{if(t<0)throw Error(uc.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw Error(uc.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw Error(uc.getSparseReshapeInputOutputMultipleErrorMessage(n,l));l[c]=e}let d=dh.sizeFromShape(l);if(d!==s)throw Error(uc.getSparseReshapeInputOutputMismatchErrorMessage(n,l));let p=n.length,h=[];if(p>0){h[p-1]=1;for(let e=p-2;e>=0;--e)h[e]=h[e+1]*n[e+1]}let f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}let m=dh.getArrayFromDType(r,i*o);for(let t=0;t<i;++t){let r=0;for(let n=0;n<p;++n)r+=e[t*p+n]*h[n];for(let e=0;e<o;++e)// newIndices is a 2d tensor with shape of [nnz, outputRank]
m[t*o+e]=Math.trunc(r/f[e]),r%=f[e]}return[m,[i,o],l]}const w_={kernelName:oc.SparseReshape,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{inputIndices:n,inputShape:a,newShape:s}=t;if(2!==n.shape.length)throw Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(1!==a.shape.length)throw Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(1!==s.shape.length)throw Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(r.data.get(a.dataId).values),o=r.data.get(n.dataId).values,l=Array.from(r.data.get(s.dataId).values),[u,c,d]=wR(o,n.shape,n.dtype,i,l);return[r.makeTensorInfo(c,n.dtype,u),r.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA");function wO(e,t,r,n,a,s=!1,i=0){let o=n.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?a[o-1]+1:0;if(c<0)throw Error(uc.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=c;let p=d.reduce((e,t)=>e*t,1),h=dh.getArrayFromDType(r,p);// Note that we do not initialize the output buffer with a default value, so
// we need to explicitly set missing indices to the default value.
if(0===o)return c>0&&h.fill(i),[h,d];if(c<=0)throw Error(uc.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[0];for(;;){// We initialize nextIndex to 0 to avoid may be uninitialized warning
let t=0;if(m<o){if(y===(t=a[m])){++m;continue}// We have a new segment here.  Verify that the segment ids are growing.
if(y>=t)throw Error(uc.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=c)throw Error(uc.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,c));y>g&&h.fill(i,g*u,y*u);for(let t=f;t<m;++t){let r=n[t];if(r<0||r>=l[0])throw Error(uc.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,n[t],l[0]));for(let t=0;t<u;t++)h[y*u+t]+=e[r*u+t]}if(s)for(let e=0;e<u;e++)h[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<c&&h.fill(i,g*u,c*u),[h,d]}const wP={kernelName:oc.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
          ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw Error("segmentIds and indices should have same size.");let i=r.data.get(n.dataId).values,o=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,[u,c]=wO(i,n.shape,n.dtype,o,l,!0);return r.makeTensorInfo(c,n.dtype,u)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const w$={kernelName:oc.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
         ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw Error("segmentIds and indices should have same size.");let i=r.data.get(n.dataId).values,o=r.data.get(a.dataId).values,l=r.data.get(s.dataId).values,[u,c]=wO(i,n.shape,n.dtype,o,l);return r.makeTensorInfo(c,n.dtype,u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA"),oc=A("hl418");const wD={kernelName:oc.SparseToDense,backendName:"cpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=r,{outputShape:l}=a,{sliceRank:u,numUpdates:c,sliceSize:d,strides:p,outputSize:h}=uc.calculateShapes(i,s,l),f=n.bufferSync(s);switch(i.dtype){case"bool":{let e=n.bufferSync(i),r=!!n.data.get(o.dataId).values[0];t=wc(f,e,l,h,d,c,u,p,r,!1);break}case"float32":{let e=n.bufferSync(i),r=n.data.get(o.dataId).values[0];t=wc(f,e,l,h,d,c,u,p,r,!1);break}case"int32":{let e=n.bufferSync(i),r=n.data.get(o.dataId).values[0];t=wc(f,e,l,h,d,c,u,p,r,!1);break}case"string":{let e=n.bufferSync(i),r=dh.decodeString(n.data.get(o.dataId).values[0]);t=wc(f,e,l,h,d,c,u,p,r,!1);break}default:throw Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(l,t.dtype,t.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const wM={kernelName:oc.SplitV,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=dh.parseAxisParam(i,a.shape)[0],l=uc.prepareSplitSize(a,s,o),u=Array(a.shape.length).fill(0),c=a.shape.slice();return l.map(e=>{let t=[...c];t[o]=e;let n=y6({inputs:{x:a},backend:r,attrs:{begin:u,size:t}});return u[o]+=e,n})}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const wF=gZ(e=>Math.sqrt(e)),wL=gQ(oc.Sqrt,e=>Math.sqrt(e)),wj={kernelName:oc.Sqrt,backendName:"cpu",kernelFunc:wL};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const wB={kernelName:oc.Square,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:r}=e;gH(r,"square");let n=t.data.get(r.dataId).values,a=new Float32Array(n.length);for(let e=0;e<n.length;++e){let t=n[e];a[e]=t*t}let s=t.write(a,r.shape,r.dtype);return{dataId:s,shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const wz=g8((e,t)=>{let r=e-t;return r*r}),wV=ym(oc.SquaredDifference,wz),wG={kernelName:oc.SquaredDifference,backendName:"cpu",kernelFunc:wV};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const wU=gZ((e,t)=>{let{pattern:r,replaceGlobal:n,rewrite:a}=t;// TODO(mattSoulanille): Don't create a regex each time.
return e.replace(new RegExp(r,n?"g":""),a)}),wW=gY(oc.StaticRegexReplace,wU),wq={kernelName:oc.StaticRegexReplace,backendName:"cpu",kernelFunc:wW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const wH=gQ(oc.Step,(e,t)=>isNaN(e)?NaN:e>0?1:t.alpha),wK={kernelName:oc.Step,backendName:"cpu",kernelFunc:wH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uD=A("bszZn"),dh=A("jjNRA"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gq=A("iG87S");function wX(e,t,r,n){let a=(0,gq.buffer)(e,t.dtype);for(let e=0;e<a.size;e++){let s=a.indexToLoc(e),i=Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*r[e]+n[e];a.set(t.get(...i),...s)}return a}const wZ={kernelName:oc.StridedSlice,backendName:"cpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:c,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=a;gH(s,"stridedSlice");let{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:v,end:x,strides:w}=uD.sliceInfo(s.shape,i,o,l,u,c,d,p,h);// ref:
// https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/strided_slice_op.cc
if(g)t=yw({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){dh.assert(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let e=uD.computeOutShape(v,x,w),r=y6({inputs:{x:s},backend:n,attrs:{begin:v,size:e}});t=yw({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(r)}else{let e=n.bufferSync(s),r=wX(f,e,w,v);t=n.makeTensorInfo(m,r.dtype,r.values)}return t}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");/**
 * The StringNGramsOp class creates ngrams from ragged string data.
 * The constructor contains all attributes related to the operation such as
 * padding widths and strings, and the compute function can be used to
 * compute the ngrams for different ragged tensor inputs.
 */class wQ{constructor(e,t,r,n,a,s){this.separator=dh.encodeString(e),this.nGramWidths=t,this.leftPad=dh.encodeString(r),this.rightPad=dh.encodeString(n),this.padWidth=a,this.preserveShort=s}getPadWidth(e){// Ngrams can be padded with either a fixed pad width or a dynamic pad
// width depending on the 'padWidth' arg, but in no case should the padding
// ever be wider than 'nGramWidth' - 1.
return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,n,a,s){for(let i=0;i<a;++i){let o;let l=this.getPadWidth(s),u=Math.max(0,l-i),c=Math.max(0,l-(a-(i+1))),d=s-(u+c),p=t+(u>0?0:i-l);// Size of the left padding.
o=0+u*this.leftPad.length;// Size of the tokens.
for(let t=0;t<d;++t)o+=e[p+t].length;// Size of the right padding.
o+=c*this.rightPad.length;// Size of the separators.
let h=u+c+d-1;o+=h*this.separator.length,// Build the nGram.
r[n+i]=new Uint8Array(o);let f=r[n+i],m=0,g=e=>e.forEach(e=>f[m++]=e);for(let e=0;e<u;++e)g(this.leftPad),g(this.separator);// Only output first numTokens - 1 pairs of data and separator
for(let t=0;t<d-1;++t)g(e[p+t]),g(this.separator);// Handle case when there are no tokens or no right padding as these
// can result in consecutive separators.
if(d>0){// If we have tokens, then output last and then pair each separator
// with the right padding that follows, to ensure nGram ends either with
// the token or with the right pad.
g(e[p+d-1]);for(let e=0;e<c;++e)g(this.separator),g(this.rightPad)}else{// If we don't have tokens, then the last item inserted into the nGram
// has been the separator from the left padding loop above. Hence,
// output right pad and separator and make sure to finish with a
// padding, not a separator.
for(let e=0;e<c-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}// Data and splits together form the definition of the ragged tensor,
// where data is 1 dimensional and contains the values of the tensor
// and splits denotes the indices at which each row starts.
compute(e,t){// Validate that the splits are valid indices into data, only if there are
// splits specified.
let r=e.length,n=t.length;if(n>0){let e=t[0];if(0!==e)throw Error(`First split value must be 0, got ${e}`);for(let a=1;a<n;++a){let n=t[a]>=e;if(!(n=n&&t[a]<=r))throw Error(`Invalid split value ${t[a]}, must be in [${e}, ${r}]`);e=t[a]}if(e!==r)throw Error(`Last split value must be data size. Expected ${r}, got ${e}`)}let a=n-1,s=dh.getArrayFromDType("int32",n);// If there is no data or size, return an empty ragged tensor.
if(0===r||0===n){let e=Array(r);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){let r=t[e]-t[e-1],n=0;this.nGramWidths.forEach(e=>{n+=this.getNumNGrams(r,e)}),this.preserveShort&&r>0&&0===n&&(n=1),s[e]=s[e-1]+n}let i=Array(s[a]);for(let r=0;r<a;++r){let n=t[r],a=s[r];// If we're preserving short sequences, check to see if no sequence was
// generated by comparing the current output start idx to the original
// one (nGramSplitsdata). If no ngrams were generated, then they will
// be equal (since we increment outputStartIdx by numNGrams every
// time we create a set of ngrams.)
if(this.nGramWidths.forEach(s=>{let o=t[r+1]-t[r],l=this.getNumNGrams(o,s);this.createNGrams(e,n,i,a,l,s),a+=l}),this.preserveShort&&a===s[r]){let s=t[r+1]-t[r];// One legitimate reason to not have any ngrams when this.preserveShort
// is true is if the sequence itself is empty. In that case, move on.
if(0===s)continue;// We don't have to worry about dynamic padding sizes here: if padding
// was dynamic, every sequence would have had sufficient padding to
// generate at least one nGram.
let o=s+2*this.padWidth;this.createNGrams(e,n,i,a,1,o)}}return[i,s]}}function wY(e,t,r,n,a,s,i,o){return new wQ(r,n,a,s,i,o).compute(e,t)}const wJ={kernelName:oc.StringNGrams,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=n,{data:c,dataSplits:d}=t,p=r.data.get(c.dataId).values,h=r.data.get(d.dataId).values,[f,m]=wY(p,h,a,s,i,o,l,u);return[r.makeTensorInfo([f.length],"string",f),r.makeTensorInfo(d.shape,"int32",m)]}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");function w0(e,t,r){let n=e.length,a=[],s=0,i=0,o=Array(n);for(let l=0;l<n;++l){let n=a.length;!function(e,t,r,n){if(!e.length)return;// When the delimiter is empty, the input is split into individual characters.
if(0===t.length){for(let t=0;t<e.length;++t)n.push(e.subarray(t,t+1));return}// When there is one delimiter, the input is split only at that delimiter.
if(1===t.length){let a=t[0],s=e.indexOf(a);for(;-1!==s;){let t=e.subarray(0,s);r&&0===t.length||n.push(t),s=(e=e.subarray(s+1)).indexOf(a)}r&&0===e.length||n.push(e);return}// When there are multiple delimiters, the input is split at every instance
// one of the delimiters appears.
let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(a,s);r&&0===t.length||n.push(t),a=s+1}}(e[l],t,r,a);let u=a.length-n;o[l]=u,s+=u,i=Math.max(i,u)}let l=dh.getArrayFromDType("int32",2*s),u=Array(s),c=[n,i],d=0;for(let e=0;e<n;++e)for(let t=0;t<o[e];++t)// indices is a 2d tensor with shape of [outputSize, 2]
l[2*d]=e,l[2*d+1]=t,u[d]=a[d],++d;return[l,u,c]}const w1={kernelName:oc.StringSplit,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{skipEmpty:a}=n,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(1!==s.shape.length)throw Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=r.data.get(s.dataId).values,l=r.data.get(i.dataId).values[0],[u,c,d]=w0(o,l,a),p=c.length;return[r.makeTensorInfo([p,2],"int32",u),r.makeTensorInfo([p],"string",c),r.makeTensorInfo([2],"int32",new Int32Array(d))]}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");function w2(e,t){let r=dh.getArrayFromDType("int32",e.length);for(let n=0;n<e.length;++n)r[n]=dh.fingerPrint64(e[n]).modulo(t).getLowBitsUnsigned();return r}const w4={kernelName:oc.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{numBuckets:a}=n,{input:s}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(a<=0)throw Error("Number of buckets must be at least 1");let i=r.data.get(s.dataId).values,o=w2(i,a);return r.makeTensorInfo(s.shape,"int32",o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const w3=gQ(oc.Tan,e=>Math.tan(e)),w8={kernelName:oc.Tan,backendName:"cpu",kernelFunc:w3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const w6=gQ(oc.Tanh,e=>Math.tanh(e)),w5={kernelName:oc.Tanh,backendName:"cpu",kernelFunc:w6};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const w7={kernelName:oc.TensorScatterUpdate,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{tensor:n,indices:a,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=uc.calculateShapes(s,a,n.shape),d=r.bufferSync(a),p=r.bufferSync(s),h=r.bufferSync(n),f=wc(d,p,n.shape,c,l,o,i,u,h,!1);return r.makeTensorInfo(n.shape,f.dtype,f.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gq=A("iG87S");function w9(e,t){let r=Array(e.rank);for(let n=0;n<r.length;n++)r[n]=e.shape[n]*t[n];let n=(0,gq.buffer)(r,e.dtype);for(let t=0;t<n.values.length;++t){let r=n.indexToLoc(t),a=Array(e.rank);for(let t=0;t<a.length;t++)a[t]=r[t]%e.shape[t];let s=e.locToIndex(a);n.values[t]=e.values[s]}return n}const ke={kernelName:oc.Tile,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reps:s}=n;gH(a,"tile");let i=w9(r.bufferSync(a),s);return r.makeTensorInfo(i.shape,i.dtype,i.values)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//** An implementation of the TopK kernel shared between webgl and cpu. */A("i64bB");var dh=A("jjNRA"),gq=A("iG87S");const kt=(e,t)=>{let r=t.value-e.value;return 0===r?e.index-t.index:r};function kr(e,t,r,n,a){// Reshape into a 2d tensor [batch, lastDim] and compute topk along lastDim.
let s=t[t.length-1],[i,o]=[e.length/s,s],l=dh.getTypedArrayFromDType(r,i*n),u=dh.getTypedArrayFromDType("int32",i*n);for(let t=0;t<i;t++){let r=t*o,s=e.subarray(r,r+o),i=Array(s.length);s.forEach((e,t)=>i[t]={value:e,index:t}),n<i.length&&(/**
 * Partitions array where all elements smaller than the (k+1) smallest element
 * are found to the left of it, and all larger to the right of it.
 * Based on the Floyd-Rivest Algorithm, ref:
 * https://en.wikipedia.org/wiki/Floyd%E2%80%93Rivest_algorithm
 * @param array: Array to partition
 * @param left: Left index for the interval
 * @param right: Right index for the interval
 * @param k: Desired index value, where array[k] is the (k+1)th smallest element
 *           when left = 0
 */function e(t,r,n=0,a=t.length-1){for(;a>n;){// Use select recursively to sample a smaller set of size s
// the arbitrary constants 600 and 0.5 are used in the original
// version to minimize execution time.
if(a-n>600){let s=a-n+1,i=r-n+1,o=Math.log(s),l=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*l*(s-l)/s)*Math.sign(i-s/2),c=Math.max(n,Math.floor(r-i*l/s+u)),d=Math.min(a,Math.floor(r+(s-i)*l/s+u));e(t,r,c,d)}// partition the elements between left and right around t
let s=t[r],i=n,o=a;for(dh.swap(t,n,r),kt(t[a],s)>0&&dh.swap(t,n,a);i<o;){for(dh.swap(t,i,o),i++,o--;0>kt(t[i],s);)i+=1;for(;kt(t[o],s)>0;)o-=1}0===kt(t[n],s)?dh.swap(t,n,o):(o+=1,dh.swap(t,o,a)),o<=r&&(n=o+1),r<=o&&(a=o-1)}}(i,n),i=i.slice(0,n)),a&&i.sort(kt);let c=t*n,d=l.subarray(c,c+n),p=u.subarray(c,c+n);for(let e=0;e<n;e++)d[e]=i[e].value,p[e]=i[e].index}// Reshape back to the original input shape, except that the last
// dimension is k.
let c=t.slice();return c[c.length-1]=n,[(0,gq.buffer)(c,r,l),(0,gq.buffer)(c,"int32",u)]}const kn={kernelName:oc.TopK,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{k:s,sorted:i}=n;gH(a,"topk");let o=r.data.get(a.dataId).values,[l,u]=kr(o,a.shape,a.dtype,s,i);return[r.makeTensorInfo(l.shape,l.dtype,l.values),r.makeTensorInfo(u.shape,u.dtype,u.values)]}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const ka={kernelName:oc.Transform,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:r,backend:n}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,d,p,h]=a.shape,[f,m]=null!=u?u:[d,p],g=[c,f,m,h],y=dh.computeStrides(a.shape),b=y[0],v=y[1],x=y[2],w=dh.computeStrides(g),k=w[0],S=w[1],N=w[2],T=dh.getTypedArrayFromDType(a.dtype,dh.sizeFromShape(g));T.fill(l);let I=n.data.get(a.dataId).values,C=n.data.get(s.dataId).values;// Ref TF implementation:
// https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image/image_ops.h
for(let e=0;e<c;++e){let t=1===s.shape[0]?C:C.subarray(8*e,8*e+8);for(let r=0;r<f;++r)for(let n=0;n<m;++n)for(let a=0;a<h;++a){let s;let u=t[6]*n+t[7]*r+1;if(0===u)continue;let c=(t[0]*n+t[1]*r+t[2])/u,h=(t[3]*n+t[4]*r+t[5])/u,f=ks(c,p,o),m=ks(h,d,o);switch(i){case"nearest":s=function(e,t,r,n,a,s,i,o,l,u,c){let d=Math.round(o),p=Math.round(l);return ki(e,t,r,n,a,s,i,d,p,u,c)}(I,d,p,b,v,x,e,m,f,a,l);break;case"bilinear":s=function(e,t,r,n,a,s,i,o,l,u,c){let d=Math.floor(o),p=Math.floor(l),h=d+1,f=p+1,m=(f-l)*ki(e,t,r,n,a,s,i,d,p,u,c)+(l-p)*ki(e,t,r,n,a,s,i,d,f,u,c),g=(f-l)*ki(e,t,r,n,a,s,i,h,p,u,c)+(l-p)*ki(e,t,r,n,a,s,i,h,f,u,c);// f(x, y) = (yCeil - y) / (yCeil - yFloor) * f(x, yFloor)
//         + (y - yFloor) / (yCeil - yFloor) * f(x, yCeil)
return(h-o)*m+(o-d)*g}(I,d,p,b,v,x,e,m,f,a,l);break;default:throw Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let g=e*k+r*S+n*N+a;T[g]=s}return n.makeTensorInfo(g,a.dtype,T)}let E=n.write(T,g,a.dtype);return{dataId:E,shape:a.shape,dtype:a.dtype}}};function ks(e,t,r){switch(r){case"reflect":return function(e,t){// Reflect [abcd] to [dcba|abcd|dcba].
let r=e;if(r<0){if(t<=1)r=0;else{let e=2*t;r<e&&(r=e*Math.trunc(-r/e)+r),r=r<-t?r+e:-r-1}}else if(r>t-1){if(t<=1)r=0;else{let e=2*t;(r-=e*Math.trunc(r/e))>=t&&(r=e-r-1)}}// clamp is necessary because when outCoord = 3.5 and len = 4,
// inCoord = 3.5 and will be rounded to 4 in nearest interpolation.
return dh.clamp(0,r,t-1)}(e,t);case"wrap":return function(e,t){// Wrap [abcd] to [abcd|abcd|abcd].
let r=e;if(r<0){if(t<=1)r=0;else{let e=t-1;r+=t*(Math.trunc(-r/e)+1)}}else if(r>t-1){if(t<=1)r=0;else{let e=t-1;r-=t*Math.trunc(r/e)}}// clamp is necessary because when outCoord = -0.5 and len = 4,
// inCoord = 3.5 and will be rounded to 4 in nearest interpolation.
return dh.clamp(0,r,t-1)}(e,t);case"nearest":return dh.clamp(0,e,t-1);default:return e}}function ki(e,t,r,n,a,s,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<r?e[i*n+o*a+l*s+u]:c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),u7=A("9jCh7");function ko(e,t,r,n){// Normalize and validate axis.
let a=dh.parseAxisParam(t,r)[0],s=[1,r[0],1];for(let e=0;e<a;e++)s[0]*=r[e];s[1]=r[a];for(let e=a+1;e<r.length;e++)s[2]*=r[e];// A map from unique elements (their string representations) to their values
// in "indices" (below).
let i=new Map,o=new Int32Array(r[a]),l=new u7.TensorBuffer(s,n,e),u=[],c=1===s[0]&&1===s[2];for(let t=0;t<r[a];t++){let r;if(c)r=e[t].toString();else{let e=[];for(let r=0;r<s[0];r++)for(let n=0;n<s[2];n++)e.push(l.get(r,t,n));r=e.join(",")}// Dedup and update various indices.
let n=i.get(r);if(null!=n)o[t]=n;else{let e=i.size;i.set(r,e),o[t]=e,u.push(t)}}// Now we know where each of the unique elements are located along the axis
// (uniqueIndices). Extract them from input buffer and store them in the
// output buffer.
let d=s.slice();d[1]=i.size;let p=new u7.TensorBuffer(d,n);u.forEach((e,t)=>{for(let r=0;r<s[0];r++)for(let n=0;n<s[2];n++)p.set(l.get(r,e,n),r,t,n)});// The output shape can be calculated from the input shape with the size of
// the given axis replaced by the number of unique elements along that axis.
let h=r.slice();return h[a]=d[1],{outputValues:p.values,outputShape:h,indices:o}}const kl={kernelName:oc.Unique,backendName:"cpu",kernelFunc:function(e){let{inputs:t,attrs:r,backend:n}=e,{axis:a}=r,{x:s}=t;gH(s,"unique");let i=n.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=ko(i,a,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,o),n.makeTensorInfo([u.length],"int32",u)]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const ku={kernelName:oc.Unpack,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{value:a}=t,{axis:s}=n;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let c=Array(i).fill(0),d=a.shape.slice();d[s]=1;let p=Array(o);for(let e=0;e<p.length;e++){c[s]=e;let t=y6({inputs:{x:a},backend:r,attrs:{begin:c,size:d}});p[e]=yw({inputs:{x:t},backend:r,attrs:{shape:l}}),r.disposeIntermediateTensorInfo(t)}return p}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const kc={kernelName:oc.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,segmentIds:s}=t,{numSegments:i}=n;gH(a,"unsortedSegmentSum");let o=a.shape.length,l=s.shape.length,u=[],c=[],d=o-l,p=s;for(let e=0;e<d;++e){let t=vt({inputs:{input:p},backend:r,attrs:{dim:e+1}});p=t,c.push(t)}for(let e=0;e<i;++e){let t=dh.createScalarValue(e,"int32"),n=r.makeTensorInfo([],"int32",t),s=bY({inputs:{a:n,b:p},backend:r}),i=yh({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),o=bW({inputs:{a:i,b:a},backend:r}),l=bH({inputs:{x:o},backend:r,attrs:{axis:0,keepDims:!1}});u.push(l),c.push(n),c.push(s),c.push(i),c.push(o),c.push(l)}let h=xB({inputs:u,backend:r,attrs:{axis:0}});return c.forEach(e=>r.disposeIntermediateTensorInfo(e)),h}};for(const e of[yT,yC,yA,y_,yx,yO,yM,yF,yL,yj,yz,yG,yW,yK,yZ,y0,y1,y2,y4,yN,y3,y7,bt,ba,bs,yf,bl,bc,yl,bd,bg,bb,bv,bx,bw,bk,bS,bT,bC,bE,bR,b_,bO,bP,bD,bM,bF,bL,bj,bB,bz,bV,bX,g0,bZ,bJ,b5,ve,vr,vs,vf,vg,vy,vx,vS,vN,vT,vC,vA,vO,vD,g2,vM,bf,vL,vB,vV,g3,vW,vK,vZ,vJ,v1,v3,v6,v9,xe,xt,xa,xo,xl,xu,xc,xd,xp,xh,xf,xy,xb,xw,xN,bq,xI,xE,xR,xO,xD,xM,xj,xz,xV,xW,g7,xH,xZ,xY,x3,x6,yd,vl,x7,ye,yr,yk,x9,we,wt,wr,wn,wa,wi,wu,wd,wp,wh,wy,ys,wv,ww,wS,y5,xS,wI,wC,wA,w_,wP,w$,wD,wM,wj,wB,wG,wq,wK,wZ,wJ,w1,w4,vp,bK,w8,w5,w7,ke,kn,ka,yD,kl,ku,kc,xL])(0,u6.registerKernel)(e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// All exports from this package should be in base.
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// base.ts is the webgl backend without auto kernel registration.
A("i64bB");var kd=A("4GTZ3"),dp=A("c2DT1");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// Import webgl flags.
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),kd=A("4GTZ3");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),dh=A("jjNRA");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL");const kp={},kh={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function kf(e,t){if(!(e in kp)||null!=t){let r=function(e,t){if(1!==e&&2!==e)throw Error("Cannot get WebGL rendering context, WebGL is disabled.");let r=null==t?function(e){// Use canvas element for Safari, since its offscreen canvas does not support
// fencing.
if(!(0,dd.env)().getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw Error("Cannot create a canvas in this context")}(e):t;return(r.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete kp[e]},!1),(0,dd.env)().getBool("SOFTWARE_WEBGL_ENABLED")&&(kh.failIfMajorPerformanceCaveat=!1),1===e)?r.getContext("webgl",kh)||r.getContext("experimental-webgl",kh):r.getContext("webgl2",kh)}(e,t);if(null===r)return console.log("Could not get context for WebGL version",e),null;kp[e]=r}let r=kp[e];return null==r||r.isContextLost()?(delete kp[e],kf(e)):(r.disable(r.DEPTH_TEST),r.disable(r.STENCIL_TEST),r.disable(r.BLEND),r.disable(r.DITHER),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SAMPLE_COVERAGE),r.enable(r.SCISSOR_TEST),r.enable(r.CULL_FACE),r.cullFace(r.BACK),kp[e])}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),dd=A("ibsdL");function km(e){let t=dh.sizeFromShape(e),r=Math.ceil(t/4);return dh.sizeToSquarishShape(r)}function kg(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function ky(e,t){let r,n,a,s,i,o,l,u,c,d;return 2===(0,dd.env)().getNumber("WEBGL_VERSION")?(r=e.R32F,n=e.R16F,a=e.RGBA16F,s=e.RGBA32F,i=e.RED,l=4,u=1,c=e.HALF_FLOAT,d=e.FLOAT,o=e.RGBA8):(r=e.RGBA,n=e.RGBA,a=e.RGBA,s=e.RGBA,i=e.RGBA,l=4,u=4,c=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,o=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:c,textureTypeFloat:d}}function kb(e,t){let r=t();return(0,dd.env)().getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),r}function kv(e,t){return kC(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}/**
     * All values in a single texel are densely packed without any constraints.
     *
     * This is how the shader encodes a tensor with shape = [2, 3, 4]
     * (indices are [batch, row, col]).
     *
     * 000|001   010|011   020|021
     * -------   -------   -------
     * 002|003   012|013   022|023
     *
     * 100|101   110|111   120|121
     * -------   -------   -------
     * 102|103   112|113   122|123
     *
     */(m=w||(w={}))[m.DENSE=0]="DENSE",/**
     * Single texels contain only values from the same batch, and from adjacent
     * rows and columns.
     *
     * This is how the shader encodes a tensor with shape = [2, 3, 5]
     * (indices are [batch, row, col]).
     *
     * 000|001   002|003   004|xxx   020|021   022|023   024|xxx
     * -------   -------   -------   -------   -------   -------
     * 010|011   012|013   014|xxx   xxx|xxx   xxx|xxx   xxx|xxx
     *
     * 100|101   102|103   104|xxx   120|121   122|123   124|xxx
     * -------   -------   -------   -------   -------   -------
     * 110|111   112|113   114|xxx   xxx|xxx   xxx|xxx   xxx|xxx
     *
     */m[m.SHARED_BATCH=1]="SHARED_BATCH",(g=k||(k={}))[g.RENDER=0]="RENDER",g[g.UPLOAD=1]="UPLOAD",g[g.PIXELS=2]="PIXELS",g[g.DOWNLOAD=3]="DOWNLOAD",(y=S||(S={}))[y.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",y[y.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",y[y.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",y[y.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",y[y.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";const kx=/ERROR: [0-9]+:([0-9]+):/g;function kw(e,t){let r=kx.exec(t);if(null==r){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let n=+r[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map((e,t)=>dh.rightPad((t+1).toString(),s)+e),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);let l=i.slice(0,n-1),u=i.slice(n-1,n),c=i.slice(n);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${dh.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function kk(e,t){if(kb(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Shader program validation failed.")}function kS(e,t,r,n,a,s,i){let o=e.getAttribLocation(t,r);return -1!==o&&(kb(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),kb(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),kb(e,()=>e.enableVertexAttribArray(o)),!0)}function kN(e,t,r){kb(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,r)),kb(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function kT(e,t){kb(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),kb(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function kI(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function kC(e,t,r){let n=kb(e,()=>t());if(null==n)throw Error(r);return n}function kE(e,t=2){return dh.sizeFromShape(e.slice(0,e.length-t))}function kA(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function kR(e){let t=[1,1,1],r=0===e.length||1===e.length&&1===e[0];return r||(t=[kE(e),...kA(e)]),t}function k_(e,t){if(e=e.slice(-2),t=t.slice(-2),dh.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let r=e[e.length-1],n=t[t.length-1];if(r===n||r%2==0&&n%2==0&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&e[0]%2==0&&t[0]%2==0}function kO(e,t){let r=e.getExtension(t);return null!=r}function kP(e){try{let t=kf(e);if(null!=t)return!0}catch(e){console.log("Error when getting WebGL context: ",e)}return!1}function k$(e){let t=ky(e),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let n=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,n),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(n),a}function kD(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&dh.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const kM=(0,dd.env)();/**
 * This file contains WebGL-specific flag registrations.
 *//**
 * True if WebGL is supported.
 */kM.registerFlag("HAS_WEBGL",()=>kM.getNumber("WEBGL_VERSION")>0),/** 0: No WebGL, 1: WebGL 1.0, 2: WebGL 2.0. */kM.registerFlag("WEBGL_VERSION",()=>kP(2)?2:kP(1)?1:0),/** Whether to check for numerical representation problems. */kM.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),kM.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===kM.get("WEBGL_VERSION")),/** Whether the WebGL backend will sometimes forward ops to the CPU. */kM.registerFlag("WEBGL_CPU_FORWARD",()=>!0),/** Whether the WebGL backend will always use f16 textures for rendering. */kM.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),/** Whether to turn all packing related flags on. */kM.registerFlag("WEBGL_PACK",()=>kM.getBool("HAS_WEBGL")),/** Whether we will pack the batchnormalization op. */kM.registerFlag("WEBGL_PACK_NORMALIZATION",()=>kM.getBool("WEBGL_PACK")),/** Whether we will pack the clip op. */kM.registerFlag("WEBGL_PACK_CLIP",()=>kM.getBool("WEBGL_PACK")),/** Whether we will pack the depthwise conv op. */kM.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>kM.getBool("WEBGL_PACK")),/** Whether we will pack binary ops. */kM.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>kM.getBool("WEBGL_PACK")),/** Whether we will pack unary ops. */kM.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>kM.getBool("WEBGL_PACK")),/** Whether we will pack array ops. */kM.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>kM.getBool("WEBGL_PACK")),/** Whether we will pack image ops. */kM.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>kM.getBool("WEBGL_PACK")),/** Whether we will pack reduce ops. */kM.registerFlag("WEBGL_PACK_REDUCE",()=>kM.getBool("WEBGL_PACK")),/** Whether packed WebGL kernels lazily unpack their outputs. */kM.registerFlag("WEBGL_LAZILY_UNPACK",()=>kM.getBool("WEBGL_PACK")),/** Whether we will use the im2col algorithm to speed up convolutions. */kM.registerFlag("WEBGL_CONV_IM2COL",()=>kM.getBool("WEBGL_PACK")),/** Whether we will pack conv2dTranspose op. */kM.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>kM.getBool("WEBGL_PACK")),/** The maximum texture dimension. */kM.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>(function(e){if(null==o){let t=kf(e);o=t.getParameter(t.MAX_TEXTURE_SIZE)}return o})(kM.getNumber("WEBGL_VERSION"))),/** The maximum texture dimension. */kM.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>(function(e){if(null==l){let t=kf(e);l=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}// We cap at 16 to avoid spurious runtime "memory exhausted" error.
    return Math.min(16,l)})(kM.getNumber("WEBGL_VERSION"))),/**
 * The disjoint_query_timer extension version.
 * 0: disabled, 1: EXT_disjoint_timer_query, 2:
 * EXT_disjoint_timer_query_webgl2.
 * In Firefox with WebGL 2.0,
 * EXT_disjoint_timer_query_webgl2 is not available, so we must use the
 * WebGL 1.0 extension.
 */kM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=kM.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t=kf(e);return kO(t,"EXT_disjoint_timer_query_webgl2")&&2===e?2:kO(t,"EXT_disjoint_timer_query")?1:0}(e)}),/**
 * Whether the timer object from the disjoint_query_timer extension gives
 * timing information that is reliable.
 */kM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>kM.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!kd.isMobile()),/**
 * Whether the device is physically capable of rendering to float32 textures.
 */kM.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>(function(e){if(0===e)return!1;let t=kf(e);if(1===e){if(!kO(t,"OES_texture_float"))return!1}else if(!kO(t,"EXT_color_buffer_float"))return!1;let r=k$(t);return r})(kM.getNumber("WEBGL_VERSION"))),/**
 * Whether rendering to float32 textures is enabled. If disabled, renders to
 * float16 textures.
 */kM.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!kM.getBool("WEBGL_FORCE_F16_TEXTURES")&&kM.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),/**
 * Whether downloading float textures is enabled (16 or 32 bit). If disabled,
 * uses IEEE 754 encoding of the float32 values to 4 uint8 when downloading.
 */kM.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>(function(e){if(0===e)return!1;let t=kf(e);if(1===e){if(!kO(t,"OES_texture_float")||!kO(t,"WEBGL_color_buffer_float"))return!1}else{if(kO(t,"EXT_color_buffer_float"))return k$(t);let e="EXT_color_buffer_half_float";if(kO(t,e)){let r=t.getExtension(e);return function(e,t){let r=ky(e,t),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,r.internalFormatHalfFloat,1,1,0,r.textureFormatFloat,r.textureTypeHalfFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),s}(t,r)}return!1}let r=k$(t);return r})(kM.getNumber("WEBGL_VERSION"))),/** Whether the fence API is available. */kM.registerFlag("WEBGL_FENCE_API_ENABLED",()=>(function(e){if(2!==e)return!1;let t=kf(e),r=null!=t.fenceSync;return r})(kM.getNumber("WEBGL_VERSION"))),/**
 * Tensors with size <= than this will be uploaded as uniforms, not textures.
 */kM.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>{// Use uniform uploads only when 32bit floats are supported. In
// 16bit
// environments there are problems with comparing a 16bit texture value
// with a 32bit uniform value.
let e=kM.getBool("WEBGL_RENDER_FLOAT32_ENABLED");return e?4:0}),/**
 * If the total number of bytes allocated on the GPU is greater than this
 * number, we will aggressively delete textures upon disposal with
 * gl.deleteMatrixTexture, rather than making them available for reuse.
 *
 * Default value -1 indicates that we will never aggressively delete textures.
 */kM.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),/**
 * Trigger a manual GL command flush if the threshold of time has passed since
 * previous Kernel execution. This can be useful for Andorid device where GL
 * command flush are delayed un til the end of javascript task. This value is
 * measured in millisecond. Typically you want to set this value to close to 1.
 *
 * Default value 1 for mobile chrome, and -1 for rest cases. -1 indicates that
 * we will not enforce manual flush and depend on system default flush schedule.
 */kM.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>kd.isMobile()?1:-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),/**
 * Threshold for input tensor size that determines whether WebGL backend will
 * delegate computation to CPU.
 *
 * Default value is 128.
 */kM.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),/** Whether we will use shapes uniforms. */kM.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),/**
 * Threshold for last dimension of input tensor that determines whether
 * WebGL backend for the Top K op will delegate computation to CPU. If input
 * is smaller than threshold then CPU will be used
 *
 * Default value is 100000.
 */kM.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),/**
 * Threshold for K that determines whether
 * WebGL backend for the Top K op will delegate computation to CPU. If k
 * is larger than threshold then CPU will be used
 *
 * Default value is 128.
 */kM.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),/** Whether we will use the experimental conv op. */kM.registerFlag("WEBGL_EXP_CONV",()=>!1),/**
 * If the device performance is low or if no hardware GPU is available, whether
 * software WebGL will be used.
 */kM.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>kM.getBool("IS_TEST")),/**
 * For narrow texture (physical height or physical width is 1), if the length of
 * any texture edges exceed the threshold, the texture will be reshaped to be
 * more squarish.
 *
 * This flag is used to help some GPUs that could not provide correct
 * interpolations for long skinny triangles. We found Mali GPU probably has this
 * problem: https://github.com/tensorflow/tfjs/issues/6775.
 */kM.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),/**
 * If the flag is set to true, the max size of the narrow texture will be auto
 * computed and it will be considerred as a threshold to reshape the narrow
 * texture to be more squarish.
 *
 * This flag is used to help some GPUs that could not provide correct
 * interpolations for long skinny triangles. We found Mali GPU probably has this
 * problem: https://github.com/tensorflow/tfjs/issues/6775.
 */kM.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),/**
 * Whether to use the customized isnan. It's only useful for webgl2 since webgl1
 * doesn't have the builtin isnan.
 */kM.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),/** Experimental flag, whether enter compile only phase. */kM.registerFlag("ENGINE_COMPILE_ONLY",()=>!1),A("i64bB");var gU=A("lzjc8"),dd=A("ibsdL"),gW=A("fJqML"),dp=A("c2DT1"),dh=A("jjNRA"),uc=A("7MaPk"),gq=A("iG87S"),oy=A("3xp7o"),hb=A("9LtVT");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL");function kF(){let e,t,r,n,a,s,i,o,l,u;return 2===(0,dd.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",r="out",n="in",a="texture",s="outputColor",i="out vec4 outputColor;",// Use custom isnan definition to work across differences between
// implementations on various platforms. While this should happen in ANGLE
// we still see differences between android and windows (on chrome) when
// using isnan directly. Since WebGL2 supports uint type and
// floatBitsToUinT built-in function, we could implment isnan following
// IEEE 754 rules.
// NaN defination in IEEE 754-1985 is :
//   - sign = either 0 or 1.
//   - biased exponent = all 1 bits.
//   - fraction = anything except all 0 bits (since all 0 bits represents
//   infinity).
// https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
o=(0,dd.env)().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",// In webgl 2 we do not need to specify a custom isinf so there is no
// need for a special INFINITY constant.
l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",r="varying",n="varying",a="texture2D",s="gl_FragColor",i="",// WebGL1 has no built in isnan so we define one here.
o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:r,varyingFs:n,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),dh=A("jjNRA"),uc=A("7MaPk");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// Please make sure the shaker key in makeShaderKey in gpgpu_math.ts is well
// mapped if any shader source code is changed in this file.
A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");function kL(e,t,r="index"){let n=dh.computeStrides(t);return n.map((t,a)=>{let s=`int ${e[a]} = ${r} / ${t}`,i=a===n.length-1?`int ${e[a+1]} = ${r} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`;return`${s}; ${i};`}).join("")}function kj(e,t,r="index"){let n=dh.computeStrides(t);return n.map((t,a)=>{let s=`int ${e[a]} = ${r} / outShapeStrides[${a}]`,i=a===n.length-1?`int ${e[a+1]} = ${r} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${s}; ${i};`}).join("")}function kB(e){let t=dh.computeStrides(e).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function kz(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const kV=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:kG}=uc,kU=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,kW=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,kq=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,kH=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function kK(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function kX(e){return`offset${e}`}function kZ(e){let t=e.name,r=dh.sizeFromShape(e.shapeInfo.logicalShape);return r<2?`return ${t};`:`
    for (int i = 0; i < ${r}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function kQ(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function kY(e,t,r){let{newShape:n,keptDims:a}=dh.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):n,l=!e&&s>1&&!dh.arraysEqual(t,r)&&n.length<s||i,u=l?o:t;return{useSqueezeShape:l,uniformShape:u,keptDims:a}}function kJ(e,t){// Deep copy.
let r=JSON.parse(JSON.stringify(e));return r.shapeInfo.logicalShape=t,r}function k0(e,t){return t.map(t=>e[t]).join(", ")}function k1(e,t,r){let n,a,s;let i=[],o=[],l=null,u=null;for(let n of(// Add special uniforms (NAN, INFINITY)
u=e.getUniformLocation(r,"NAN",!1),1===(0,dd.env)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(r,"INFINITY",!1)),t.variableNames)){let a={name:n,uniform:e.getUniformLocation(r,n,!1),offset:e.getUniformLocation(r,`offset${n}`,!1)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(r,`${n}Shape`,!1),a.texShape=e.getUniformLocation(r,`${n}TexShape`,!1)),i.push(a)}if(t.enableShapeUniforms&&(n=e.getUniformLocation(r,"outShape",!1),s=e.getUniformLocation(r,"outShapeStrides",!1),a=e.getUniformLocation(r,"outTexShape",!1)),t.customUniforms)for(let n of t.customUniforms)o.push(e.getUniformLocation(r,n.name,!1));return{variablesLocations:i,customUniformLocations:o,infLoc:l,nanLoc:u,outShapeLocation:n,outShapeStridesLocation:s,outTexShapeLocation:a}}function k2(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,r)=>{let n=e.logicalShape,a=t[r],s=a.shape;if(!dh.arraysEqual(n,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${n} and ${s} must match`);// The input is uploaded as uniform.
if(e.isUniform&&a.isUniform)return;let i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!dh.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)})}function k4(e){// TODO: Remove the limitaion of rank <= 4.
return(0,dd.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class k3{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=w.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=kF();this.outputShape=e,this.enableShapeUniforms=k4(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?kj(["r","c","d"],e):kL(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k8{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=w.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=kF();this.outputShape=e,this.enableShapeUniforms=k4(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?kj(["r","c","d"],e):kL(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k6{constructor(e){this.variableNames=["A"],this.outTexUsage=k.DOWNLOAD;let t=kF();this.outputShape=e,this.userCode=`
      ${kV}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k5{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=k.DOWNLOAD;let t=kF();this.outputShape=e,this.userCode=`
      ${kV}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k7={R:0,G:1,B:2,A:3};class k9{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=kF();this.outputShape=e,this.enableShapeUniforms=k4(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let e=0;e<r.length;e++){let t=r[e];s+=`
          if(offset == ${e}) {
            result = values[${k7[t]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?kz():kB(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${n.texture2D}(A, uv);
          ${s}
        }
        ${n.output} = vec4(${a}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Se{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=kF();this.outputShape=e,this.enableShapeUniforms=k4(this.outputShape.length);let n="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){let s=2*t+a;n+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${t};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${s}] = values[0];
            } else if (offset == 1) {
              result[${s}] = values[1];
            } else if (offset == 2) {
              result[${s}] = values[2];
            } else {
              result[${s}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?kz():kB(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${r.output} = ${a};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),dh=A("jjNRA");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL");function St(e,t,r,n,a,s){!function(e,t){let r=(0,dd.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let r=`[${e}x${t}]`;throw Error("Requested texture size "+r+" is invalid.")}if(e>r||t>r){let n=`[${e}x${t}]`,a=`[${r}x${r}]`;throw Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+a+".")}}(t,r);let i=kC(e,()=>e.createTexture(),"Unable to create WebGLTexture."),o=e.TEXTURE_2D;return kb(e,()=>e.bindTexture(o,i)),kb(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),kb(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),kb(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),kb(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===(0,dd.env)().getNumber("WEBGL_VERSION")?kb(e,()=>e.texImage2D(o,0,n,t,r,0,a,s,null)):kb(e,()=>e.texStorage2D(o,1,n,t,r)),kb(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[r,t]}}function Sr(e){return e.internalFormatFloat}function Sn(e){return e.internalFormatHalfFloat}function Sa(e){return e.downloadTextureFormat}function Ss(e){return e.internalFormatPackedFloat}function Si(e){return e.internalFormatPackedHalfFloat}class So{constructor(e){var t,r;this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let n=(0,dd.env)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,t=e,kp[n]=t):this.gl=kf(n),e=this.gl,2===(0,dd.env)().getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>kb(t,()=>t.createVertexArray()),this.bindVertexArray=e=>kb(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>kb(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>kb(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>kb(e,()=>t.createVertexArrayOES()),this.bindVertexArray=r=>kb(e,()=>t.bindVertexArrayOES(r)),this.deleteVertexArray=r=>kb(e,()=>t.deleteVertexArrayOES(r)),this.getVertexArray=()=>kb(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}// WebGL 2.0 enables texture floats without an extension.
let a="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,dd.env)().getNumber("WEBGL_VERSION")){let e="OES_texture_half_float";if(this.textureFloatExtension=kv(this.gl,"OES_texture_float"),kO(this.gl,e))this.textureHalfFloatExtension=kv(this.gl,e);else if((0,dd.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(a),kO(this.gl,s))this.colorBufferHalfFloatExtension=kv(this.gl,s);else if((0,dd.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(a="EXT_color_buffer_float",kO(this.gl,a))this.colorBufferFloatExtension=this.gl.getExtension(a);else if(kO(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw Error("GL context does not support color renderable floats");this.vertexBuffer=function(e){// [x y z u v] * [upper-left, lower-left, upper-right, lower-right]
let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return function(e,t){let r=kC(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return kb(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),kb(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),r}(e,t)}(this.gl),this.indexBuffer=function(e){// OpenGL (and WebGL) have "CCW == front" winding
let t=new Uint16Array([0,1,2,2,1,3]);return function(e,t){let r=kC(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return kb(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r)),kb(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),r}(e,t)}(this.gl),this.framebuffer=kC(r=this.gl,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer."),this.textureConfig=ky(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,dd.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;kb(e,()=>e.finish()),kb(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),kb(e,()=>e.deleteFramebuffer(this.framebuffer)),kb(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),kb(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),kb(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,r,n){let[a,s]=[r,t];return St(e,a,s,Sr(n),n.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,r,n){let[a,s]=[r,t];return St(e,a,s,Sn(n),n.textureFormatFloat,n.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,r,n){let[a,s]=[r,t];return St(e,a,s,Sa(n),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){var r;this.throwIfDisposed(),kb(r=this.gl,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?2===(0,dd.env)().getNumber("WEBGL_VERSION")?kb(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t.width,t.height,r.RGBA,r.UNSIGNED_BYTE,t.data)):kb(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):2===(0,dd.env)().getNumber("WEBGL_VERSION")?kb(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,t)):kb(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),kb(r,()=>r.bindTexture(r.TEXTURE_2D,null))}uploadDenseMatrixToTexture(e,t,r,n){var a,s;let i,o,l;this.throwIfDisposed(),a=this.gl,s=this.textureConfig,kb(a,()=>a.bindTexture(a.TEXTURE_2D,e)),n instanceof Uint8Array?(i=new Uint8Array(t*r*4),o=a.UNSIGNED_BYTE,l=a.RGBA):(i=new Float32Array(t*r*4),o=a.FLOAT,l=s.internalFormatPackedFloat),i.set(n),2===(0,dd.env)().getNumber("WEBGL_VERSION")?kb(a,()=>a.texSubImage2D(a.TEXTURE_2D,0,0,0,t,r,a.RGBA,o,i)):kb(a,()=>a.texImage2D(a.TEXTURE_2D,0,l,t,r,0,a.RGBA,o,i)),kb(a,()=>a.bindTexture(a.TEXTURE_2D,null))}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,r,n){let[a,s]=kg(t,r);return St(e,a,s,Si(n),e.RGBA,n.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,r,n){let[a,s]=kg(t,r);return St(e,a,s,Ss(n),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(kT(this.gl,this.framebuffer),this.outputTexture=null),kb(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>(function(e,t,r,n){let[a,s]=[r,t],i=new Uint8Array(t*r*4);// By wrapping the buffer in a Float32Array, we use native browser IEEE 754
    // decoding of the 4 bytes that back each 32 bit float.
    return kb(e,()=>e.readPixels(0,0,a,s,n.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)})(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,n,a,s){return function(e,t,r,n,a,s,i,o){let l=new Float32Array(function(e,t){let[r,n]=kg(e,t);return r*n*4}(s,i));return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,l),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,r){let n=new Float32Array(r);return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,n),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),n}(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);let n=function(e,t,r,n){// Create and bind the buffer.
let a=e.createBuffer();kb(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=16*t*r;return kb(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),// Enqueue a command on the GPU command queue to copy of texture into the
// buffer.
kb(e,()=>e.readPixels(0,0,r,t,e.RGBA,e.FLOAT,0)),kb(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if((0,dd.env)().getBool("WEBGL_FENCE_API_ENABLED")){let n=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{let t=e.clientWaitSync(n,0,0);return t===e.ALREADY_SIGNALED||t===e.CONDITION_SATISFIED},t=n}else(0,dd.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,(0,dd.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):// WebGL 1.0 when there is no disjoint query timer. In this case, because
// the fence passes immediately, we'll immediately ask for a download of
// the texture, which will cause the UI thread to hang.
r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>(function(e,t,r){let n=new Float32Array(t*r*4);return kb(e,()=>e.readPixels(0,0,r,t,e.RGBA,e.FLOAT,n)),n})(this.gl,t,r))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){let t=kF(),r=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return function(e,t){let r=kC(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(kb(e,()=>e.shaderSource(r,t)),kb(e,()=>e.compileShader(r)),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(r)),Error("Failed to compile vertex shader.");return r}(e,r)}(t));let r=kC(t,()=>t.createProgram(),"Unable to create WebGLProgram.");kb(t,()=>t.attachShader(r,this.vertexShader)),kb(t,()=>t.attachShader(r,e)),function(e,t){if(kb(e,()=>e.linkProgram(t)),!(0,dd.env)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Failed to link vertex and fragment shaders.")}(t,r);let n=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&kk(t,n),n}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;// Bind index buffer, and vertex buffers based on program attrib
// locations.
kb(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),function(e,t,r){kb(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r));let n=kS(e,t,"clipSpacePos",r,3,20,0);n&&kS(e,t,"uv",r,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(kb(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&kk(this.gl,this.program),kb(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){var n,a;return(this.throwIfDisposed(),r)?kC(n=this.gl,()=>n.getUniformLocation(e,a),'uniform "'+(a=t)+'" not present in program.'):this.gl.getUniformLocation(e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),kb(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){var n;this.throwIfDisposed(),this.throwIfNoProgram(),kb(n=this.gl,()=>{(function(e,t){let r=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+e.TEXTURE0;if(n<e.TEXTURE0||n>r){let e=`[gl.TEXTURE0, gl.TEXTURE${r}]`;throw Error(`textureUnit must be in ${e}.`)}})(n,r),kb(n,()=>n.activeTexture(n.TEXTURE0+r)),kb(n,()=>n.bindTexture(n.TEXTURE_2D,e))}),kb(n,()=>n.uniform1i(t,r))}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();let[n,a]=kg(t,r);this.setOutputMatrixTextureDriver(e,n,a)}setOutputMatrixWriteRegion(e,t,r,n){this.setOutputMatrixWriteRegionDriver(r,e,n,t)}setOutputPackedMatrixWriteRegion(e,t,r,n){throw Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&kk(this.gl,this.program),kI(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}kb(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),kb(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=kv(this.gl,2===(0,dd.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,dd.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),r=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,dd.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();e.endQuery(t.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await dh.repeatedTry(()=>this.disposed||// while testing contexts are created / disposed
    // in rapid succession, so without this check we
    // may poll for the query timer indefinitely
    this.isQueryAvailable(e,(0,dd.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,(0,dd.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl,r=t.getQueryParameter(e,t.QUERY_RESULT);// Return milliseconds.
return r/1e6}{let t=this.getQueryTimerExtensionWebGL1(),r=t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT);// Return milliseconds.
return r/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,r=this.getQueryTimerExtensionWebGL2(),n=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),n&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),r=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){// Find the last query that has finished.
let e=function(e){let t=0;for(;t<e.length;++t){let r=e[t]();if(!r)break}return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){let r;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||("setTimeoutCustom"in(0,dd.env)().platform&&(r=(0,dd.env)().platform.setTimeoutCustom.bind((0,dd.env)().platform)),dh.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,r))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),kN(this.gl,e,this.framebuffer),this.debug&&kI(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(kN(this.gl,this.outputTexture,this.framebuffer),this.debug&&kI(this.gl)):kT(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();let n=this.gl;kN(n,e,this.framebuffer),this.debug&&kI(n),this.outputTexture=e,kb(n,()=>n.viewport(0,0,t,r)),kb(n,()=>n.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,n){this.throwIfDisposed(),kb(this.gl,()=>this.gl.scissor(e,t,r,n))}throwIfDisposed(){if(this.disposed)throw Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw Error("No GPU program is currently set.")}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// Import shared functionality from tfjs-backend-cpu without triggering
// side effects.
// tslint:disable-next-line: no-imports-from-dist
var Sl={};c(Sl,"simpleAbsImpl",()=>yI),c(Sl,"addImpl",()=>yy),c(Sl,"bincountImpl",()=>y9),c(Sl,"bincountReduceImpl",()=>be),c(Sl,"bitwiseAndImpl",()=>br),c(Sl,"castImpl",()=>yp),c(Sl,"ceilImpl",()=>bi),c(Sl,"concatImpl",()=>bp),c(Sl,"equalImpl",()=>bQ),c(Sl,"expImpl",()=>b7),c(Sl,"expm1Impl",()=>vn),c(Sl,"floorImpl",()=>vb),c(Sl,"floorDivImpl",()=>vw),c(Sl,"gatherNdImpl",()=>vI),c(Sl,"gatherV2Impl",()=>vE),c(Sl,"greaterImpl",()=>vR),c(Sl,"greaterEqualImpl",()=>vP),c(Sl,"lessImpl",()=>vG),c(Sl,"lessEqualImpl",()=>vq),c(Sl,"linSpaceImpl",()=>vX),c(Sl,"logImpl",()=>vQ),c(Sl,"maxImpl",()=>xr),c(Sl,"maximumImpl",()=>xs),c(Sl,"minimumImpl",()=>xm),c(Sl,"multiplyImpl",()=>bG),c(Sl,"negImpl",()=>xT),c(Sl,"notEqualImpl",()=>xP),c(Sl,"prodImpl",()=>xq),c(Sl,"raggedGatherImpl",()=>xX),c(Sl,"raggedRangeImpl",()=>xQ),c(Sl,"raggedTensorToTensorImpl",()=>x4),c(Sl,"rangeImpl",()=>x8),c(Sl,"rsqrtImpl",()=>wo),c(Sl,"scatterImpl",()=>wc),c(Sl,"sigmoidImpl",()=>yn),c(Sl,"sliceImpl",()=>y8),c(Sl,"sparseFillEmptyRowsImpl",()=>wE),c(Sl,"sparseReshapeImpl",()=>wR),c(Sl,"sparseSegmentReductionImpl",()=>wO),c(Sl,"sqrtImpl",()=>wF),c(Sl,"squaredDifferenceImpl",()=>wz),c(Sl,"staticRegexReplaceImpl",()=>wU),c(Sl,"stridedSliceImpl",()=>wX),c(Sl,"stringNGramsImpl",()=>wY),c(Sl,"stringSplitImpl",()=>w0),c(Sl,"stringToHashBucketFastImpl",()=>w2),c(Sl,"subImpl",()=>vu),c(Sl,"tileImpl",()=>w9),c(Sl,"topKImpl",()=>kr),c(Sl,"transposeImpl",()=>yP),c(Sl,"uniqueImpl",()=>ko);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */// Shared functionality among backends.
const{addImpl:Su,bincountImpl:Sc,bincountReduceImpl:Sd,bitwiseAndImpl:Sp,castImpl:Sh,ceilImpl:Sf,concatImpl:Sm,equalImpl:Sg,expImpl:Sy,expm1Impl:Sb,floorImpl:Sv,gatherNdImpl:Sx,gatherV2Impl:Sw,greaterImpl:Sk,greaterEqualImpl:SS,lessImpl:SN,lessEqualImpl:ST,linSpaceImpl:SI,logImpl:SC,maxImpl:SE,maximumImpl:SA,minimumImpl:SR,multiplyImpl:S_,negImpl:SO,notEqualImpl:SP,prodImpl:S$,raggedGatherImpl:SD,raggedRangeImpl:SM,raggedTensorToTensorImpl:SF,rangeImpl:SL,rsqrtImpl:Sj,scatterImpl:SB,sigmoidImpl:Sz,simpleAbsImpl:SV,sliceImpl:SG,sparseFillEmptyRowsImpl:SU,sparseReshapeImpl:SW,sparseSegmentReductionImpl:Sq,sqrtImpl:SH,staticRegexReplaceImpl:SK,stridedSliceImpl:SX,stringNGramsImpl:SZ,stringSplitImpl:SQ,stringToHashBucketFastImpl:SY,subImpl:SJ,tileImpl:S0,topKImpl:S1,transposeImpl:S2,uniqueImpl:S4}=Sl;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S3(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function S8(e,t){return 1===t?[e]:S3(e,t)}class S6{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,// Only input / output 3D tensors.
this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=k4(this.outputShape.length),0===this.rank)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=S8("rc",this.rank),t=kQ(this.rank),r=this.getOutOfBoundsCondition(e),n=this.getSetup(e),a=this.getOutput(e);this.userCode=`
        void main() {
          ${t} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${n}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let r=0;r<=1;r++)for(let n=0;n<=1;n++){let a=`${0===r?"r":"rp1"}, ${0===n?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${n};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);if(1===this.rank){let e=this.enableShapeUniforms?"outShape":this.outputShape[0];return`getA(rc), (rc + 1 >= ${e} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S5{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=k4(this.outputShape.length);let r="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),r+=`
        ${t}
        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${e}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${e>0?"}":""}
      `}this.userCode=`
      ${function(e,t){let r=t?function(e,t,r="index"){let n=e.map((e,t)=>t),a=// Produces GLSL code that computes strides.
function(e,t){let r=e.length,n=e.map(e=>`${t}[${e}]`),a=Array(r-1);a[r-2]=n[r-1];for(let e=r-3;e>=0;--e)a[e]=`(${a[e+1]} * ${n[e+1]})`;return a}(n,t);return a.map((t,n)=>{let s=`int ${e[n]} = ${r} / ${a[n]}`,i=n===a.length-1?`int ${e[n+1]} = ${r} - ${e[n]} * ${a[n]}`:`index -= ${e[n]} * ${a[n]}`;return`${s}; ${i};`}).join("")}(["r","c","d"],"inputShape"):kL(["r","c","d"],e);return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${r}
      return ivec3(r, c, d);
    }
  `}(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?kz():kB(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL");class S7{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,// Number of bytes that have been allocated and available for reuse.
this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){let n;let a=Ne(t,r),s=Nt(e,a,r);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let i=S9(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}return a===S.PACKED_2X2_FLOAT32?n=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===S.PACKED_2X2_FLOAT16?n=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===S.UNPACKED_FLOAT32?n=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===S.UNPACKED_FLOAT16?n=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===S.PACKED_4X1_UNSIGNED_BYTE&&(n=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(n),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),n}releaseTexture(e,t,r,n){if(null==this.freeTextures)return;let a=Ne(r,n),s=Nt(t,a,n);s in this.freeTextures||(this.freeTextures[s]=[]);let i=S9(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,n),o=(0,dd.env)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l&&l.indexOf(e);if(null==u||u<0)throw Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});// TODO: Assign non-null value (empty object) to textures after disposed.
this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function S9(e,t,r,n,a){let s;// It is not possible to infer packed status from the texture type because
// depending on the textureConfig, different  texture types may resolve to the
// same internal format (e.g. in WebGL1, the internal format for
// UNPACKED_FLOAT16 textures is gl.RGBA). Therefore we pass in `isPacked`
// explicitly.
let i=function(e,t){switch(e){case S.PACKED_2X2_FLOAT32:return Ss(t);case S.PACKED_2X2_FLOAT16:return Si(t);case S.UNPACKED_FLOAT32:return Sr(t);case S.UNPACKED_FLOAT16:return Sn(t);case S.PACKED_4X1_UNSIGNED_BYTE:return Sa(t);default:throw Error(`Unknown physical texture type ${e}`)}}(t,n);if(a){let[t,r]=kg(e[0],e[1]);s=t*r}else{var o;let[t,r]=(o=e[0],[e[1],o]);s=t*r}let l=function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F||t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw Error(`Unknown internal format ${t}`)}(r,i);return s*l}function Ne(e,t){if(e===k.UPLOAD)return S.PACKED_2X2_FLOAT32;if(e===k.RENDER||null==e)return(0,dd.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?S.PACKED_2X2_FLOAT32:S.UNPACKED_FLOAT32:t?S.PACKED_2X2_FLOAT16:S.UNPACKED_FLOAT16;if(e===k.DOWNLOAD||e===k.PIXELS)return S.PACKED_4X1_UNSIGNED_BYTE;throw Error(`Unknown logical texture type ${e}`)}function Nt(e,t,r){return`${e[0]}_${e[1]}_${t}_${r}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nr{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=k4(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const Nn="if (isnan(x)) return x;",Na="return abs(x);",Ns=Nn+`
  return (x < 0.0) ? 0.0 : x;
`,Ni=Nn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,No="return x;",Nl=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Nu=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Nc=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;class Nd{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=k4(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Np{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=k4(this.outputShape.length);let t=e.length,r=S8("rc",t),n=kQ(t),a=function(e,t){if(1===e)return"rc";let r="";for(let n=0;n<e;n++)r+=t[n],n<e-1&&(r+=",");return r}(t,r),s=r.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}const Nh=gU.whereImpl,Nf={},Nm=(0,dd.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Ng extends gW.KernelBackend{nextDataId(){return Ng.nextDataId++}constructor(e){let t;if(super(),// Maps data ids that have a pending read operation, to list of subscribers.
this.pendingRead=new WeakMap,// List of data ids that are scheduled for disposal, but are waiting on a
// pending read operation.
this.pendingDisposal=new WeakSet,// Used to count the number of 'shallow' sliced tensors that point to the
// same data id.
this.dataRefCount=new WeakMap,this.numBytesInGPU=0,// Accumulated time spent (including blocking) in uploading data to webgl.
this.uploadWaitMs=0,// Accumulated time spent (including blocking in downloading data from webgl.
this.downloadWaitMs=0,// record the last manual GL Flush time.
this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,dd.env)().getBool("HAS_WEBGL"))throw Error("WebGL is not supported on this device");if(null!=e){if(e instanceof So)t=e;else{let r=kf((0,dd.env)().getNumber("WEBGL_VERSION"),e);t=new So(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{var r;let e=kf((0,dd.env)().getNumber("WEBGL_VERSION"));t=new So(e),this.binaryCache=((r=(0,dd.env)().getNumber("WEBGL_VERSION"))in Nf||(Nf[r]={}),Nf[r]),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new S7(this.gpgpu),this.numMBBeforeWarning=null==(0,dd.env)().global.screen?1024:(0,dd.env)().global.screen.height*(0,dd.env)().global.screen.width*window.devicePixelRatio*600/1024/1024// 1 GB.
,this.texData=new gW.DataStorage(this,(0,dp.engine)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}// Writes a new entry to the data store with a WebGL texture, and registers it
// to the texture manager.
writeTexture(e,t,r,n,a,s){// Temporarily create an tensor info to make the texture compatible with
// the runWebGLProgram's input.
let i=this.makeTensorInfo(t,r),o=this.texData.get(i.dataId);// Even though the input texture could be unpacked or dense packed, it is
// always considered as unpacked for EncodeMatrixProgram.
o.isPacked=!1,// Bind texture to the input tensor.
o.texture={texture:e,texShape:[n,a]},o.texShape=[n,a];let l=kR(t),u=new k9(l,!1,s),c=this.runWebGLProgram(u,[i],r,[[n,a]]);return c.shape=t,// Unbind the texture from the input tensor to avoid the texture being
// released.
o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,r){if(((0,dd.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,dd.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===r&&null!=e)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let n={id:this.nextDataId()};return this.texData.set(n,{shape:t,dtype:r,values:e,usage:k.UPLOAD,refCount:1}),n}/** Return refCount of a `TensorData`. */refCount(e){if(this.texData.has(e)){let t=this.texData.get(e);return t.refCount}return 0}/** Increase refCount of a `TextureData`. */incRef(e){let t=this.texData.get(e);t.refCount++}/** Decrease refCount of a `TextureData`. */decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,r,n,a){if((0,dd.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===n)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:n,values:t,usage:k.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t,r;let n=this.texData.get(e),{values:a,dtype:s,complexTensorInfos:i,slice:o,shape:l,isPacked:u}=n;// The presence of `slice` indicates this tensor is a shallow slice of a
// different tensor, and is using that original tensor's texture. Run
// `clone` in order to copy that texture and read from it.
if(null!=o){let t;t=u?new Nd(l,No):new Nr(l,No);let r=this.runWebGLProgram(t,[{dataId:e,shape:l,dtype:s}],s),n=this.readSync(r.dataId);return this.disposeIntermediateTensorInfo(r),n}if(null!=a)return this.convertAndCacheOnCPU(e);if("string"===s)return a;let c=null!=this.activeTimers;if(c&&(t=dh.now()),"complex64"===s){let e=this.readSync(i.real.dataId),t=this.readSync(i.imag.dataId);r=uc.mergeRealAndImagArrays(e,t)}else r=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=dh.now()-t),this.convertAndCacheOnCPU(e,r)}async read(e){let t,r;if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}let n=this.texData.get(e),{values:a,shape:s,slice:i,dtype:o,complexTensorInfos:l,isPacked:u}=n;// The presence of `slice` indicates this tensor is a shallow slice of a
// different tensor, and is using that original tensor's texture. Run
// `clone` in order to copy that texture and read from it.
if(null!=i){let t;t=u?new Nd(s,No):new Nr(s,No);let r=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:o}],o),n=this.read(r.dataId);return this.disposeIntermediateTensorInfo(r),n}if(null!=a)return this.convertAndCacheOnCPU(e);if((0,dd.env)().getBool("DEBUG")&&!(0,dd.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,dd.env)().getNumber("WEBGL_VERSION"))throw Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null;if("complex64"!==o&&(0,dd.env)().get("WEBGL_BUFFER_SUPPORTED")){// Possibly copy the texture into a buffer before inserting a fence.
t=this.decode(e);let r=this.texData.get(t.dataId);c=this.gpgpu.createBufferFromTexture(r.texture.texture,...km(s))}if(this.pendingRead.set(e,[]),"complex64"!==o&&await this.gpgpu.createAndWaitForFence(),"complex64"===o){let e=await Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),t=e[0],n=e[1];r=uc.mergeRealAndImagArrays(t,n)}else if(null==c)r=this.getValuesFromTexture(e);else{let e=dh.sizeFromShape(s);r=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=t&&this.disposeIntermediateTensorInfo(t),null!=c){let e=this.gpgpu.gl;kb(e,()=>e.deleteBuffer(c))}let d=this.convertAndCacheOnCPU(e,r),p=this.pendingRead.get(e);return this.pendingRead.delete(e),// Notify all pending reads.
p.forEach(e=>e(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,dp.engine)().removeDataId(e,this),this.pendingDeletes--),d}/**
     * Read tensor to a new texture that is densely packed for ease of use.
     * @param dataId The source tensor.
     * @param options
     *     customTexShape: Optional. If set, will use the user defined texture
     *     shape to create the texture.
     */readToGPU(e,t={}){let r=this.texData.get(e),{values:n,shape:a,slice:s,dtype:i,isPacked:o,texture:l}=r;if("complex64"===i)throw Error("Does not support reading texture for complex64 dtype.");// The presence of `slice` indicates this tensor is a shallow slice of a
// different tensor, and is using that original tensor's texture. Run
// `clone` in order to copy that texture and read from it.
if(null!=s){let r;r=o?new Nd(a,No):new Nr(a,No);let n=this.runWebGLProgram(r,[{dataId:e,shape:a,dtype:i}],i),s=this.readToGPU(n,t);return this.disposeIntermediateTensorInfo(n),s}if(null==l){if(null!=n)throw Error("Data is not on GPU but on CPU.");throw Error("There is no data on GPU or CPU.")}// Decode the texture so that it is stored densely (using four channels).
let u=this.decode(e,t.customTexShape),c=(0,dp.engine)().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:c},d.texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{// Decode the bytes into string.
let r=t.map(e=>dh.decodeString(e));return(0,gq.buffer)(e.shape,e.dtype,r)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return(0,gq.buffer)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let r=e[t];if(!((0,dd.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===r||596e-10<Math.abs(r)&&65504>Math.abs(r))){if((0,dd.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${r} cannot be represented on this device.`)}}}getValuesFromTexture(e){let{shape:t,dtype:r,isPacked:n}=this.texData.get(e),a=dh.sizeFromShape(t);if((0,dd.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let r=this.decode(e),n=this.texData.get(r.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(n.texture.texture,...km(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(r),s}let s=(0,dd.env)().getBool("WEBGL_PACK")&&!0===n,i=s?kR(t):t,o=s?new k5(i):new k6(i),l=this.runWebGLProgram(o,[{shape:i,dtype:r,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return(0,dd.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,r=[],n=!1;null==this.programTimersStack?(this.programTimersStack=r,n=!0):this.activeTimers.push(r),this.activeTimers=r,e();// needing to split these up because util.flatten only accepts certain types
let a=dh.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=dh.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,n&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null// will be filled by the engine
};return(async()=>{if((0,dd.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);i.kernelMs=dh.sum(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,dd.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:dh.now(),endMs:null}}endTimer(e){return(0,dd.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.endQuery():e.endMs=dh.now(),e}async getQueryTime(e){return(0,dd.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}/**
     * Decrease the RefCount on the dataId and dispose the memory if the dataId
     * has 0 refCount. If there are pending read on the data, the disposal would
     * added to the pending delete queue. Return true if the dataId is removed
     * from backend or the backend does not contain the dataId, false if the
     * dataId is not removed. Memory may or may not be released even when dataId
     * is removed, which also depends on dataRefCount, see `releaseGPU`.
     * @param dataId
     * @oaram force Optional, remove the data regardless of refCount
     */disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;// No-op if already disposed.
if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:r}=this.texData.get(e);return null!=r&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:r,texShape:n,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(n,r),this.textureManager.releaseTexture(t,n,a,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}/**
     * Returns internal information for the specific data bucket. Used in unit
     * tests.
     */getDataInfo(e){return this.texData.get(e)}/*
    Tests whether all the inputs to an op are small and on the CPU. This heuristic
    determines when it would be faster to execute a kernel on the CPU. WebGL
    kernels opt into running this check and forwarding when appropriate.
    TODO(https://github.com/tensorflow/tfjs/issues/872): Develop a more
    sustainable strategy for optimizing backend execution of ops.
     */shouldExecuteOnCPU(e,t=Nm){return(0,dd.env)().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&dh.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){uc.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return Nh(e.shape,t)}packedUnaryOp(e,t,r){let n=new Nd(e.shape,t),a=this.compileAndRun(n,[e],r);return(0,dp.engine)().makeTensorFromTensorInfo(a)}// TODO(msoulanille) remove this once the backend has been modularized
// a copy is needed here to break a circular dependency.
// Also remove the op from unary_op.
abs(e){// TODO: handle cases when x is complex.
if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=SV(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,dd.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Na,e.dtype);let t=new Nr(e.shape,Na),r=this.compileAndRun(t,[e]);return(0,dp.engine)().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let n;if("string"===t&&null!=r&&r.length>0&&dh.isString(r[0])){let a=r.map(e=>dh.encodeString(e));n=this.write(a,e,t)}else n=this.write(r,e,t);return this.texData.get(n).usage=null,{dataId:n,shape:e,dtype:t}}makeOutput(e,t,r){return(0,dp.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){let t=new Np(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new S6(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let r=[kE(e.shape),...kA(e.shape)],n={dtype:e.dtype,shape:r,dataId:e.dataId},a=[kE(t),...kA(t)],s=new S5(a,r),i=[r],o=this.runWebGLProgram(s,[n],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let r;let n=this.texData.get(e),{isPacked:a,shape:s,dtype:i}=n;if(null!=t){let e=dh.sizeFromShape(s),r=t[0]*t[1]*4;dh.assert(e<=r,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let o=kR(s);r=a?new k8(o):new k3(o);let l=[null!=t?t:km(o)],u=this.runWebGLProgram(r,[{shape:o,dtype:i,dataId:e}],i,l,!0,t);return{dtype:i,shape:s,dataId:u.dataId}}runWebGLProgram(e,t,r,n,a=!1,s){let i;let o=this.makeTensorInfo(e.outputShape,r),l=this.texData.get(o.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===w.DENSE){let t=null!=s?s:km(e.outputShape);// For a densely packed output, we explicitly set texShape
// so it doesn't get assigned later according to our typical packing
// scheme wherein a single texel can only contain values from adjacent
// rows/cols.
l.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(l.usage=e.outTexUsage),0===dh.sizeFromShape(o.shape))return(// Short-circuit the computation since the result is empty (has 0 in its
// shape).
l.values=dh.getTypedArrayFromDType(o.dtype,0),o);let u=[],c=t.map(t=>{if("complex64"===t.dtype)throw Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let r=this.texData.get(t.dataId);if(null==r.texture){if(!e.packedInputs&&dh.sizeFromShape(t.shape)<=(0,dd.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))// textures. Do this only when the environment supports 32bit floats
// due to problems when comparing 16bit floats with 32bit floats.
// TODO(https://github.com/tensorflow/tfjs/issues/821): Make it
// possible for packed shaders to sample from uniforms.
return{shape:t.shape,texData:null,isUniform:!0,uniformValues:r.values};// This ensures that if a packed program's inputs have not yet been
// uploaded to the GPU, they get uploaded as packed right off the bat.
e.packedInputs&&(r.isPacked=!0,r.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!r.isPacked!=!!e.packedInputs)t=r.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),r=this.texData.get(t.dataId);else if(r.isPacked&&!k_(r.shape,t.shape)){// This is a special case where a texture exists for a tensor
// but the shapes are incompatible (due to packing constraints) because
// the tensor did not have a chance to go through the packed reshape
// shader. This only happens when we reshape the *same* tensor to form
// *distinct* inputs to an op, e.g. dotting a vector with itself. This
// case will disappear once packed uploading is the default.
let e=t,n=t.shape;t.shape=r.shape,t=this.packedReshape(t,n),u.push(t),r=this.texData.get(t.dataId),e.shape=n}return{shape:t.shape,texData:r,isUniform:!1}});this.uploadToGPU(o.dataId);let d={shape:o.shape,texData:l,isUniform:!1},p=function(e,t,r){let n="";t.concat(r).forEach(t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;// TODO: Remove the condition of !x.isUniform.
if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=kY(e.packedInputs,t.shape,s),u="",c="",d="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=dh.computeStrides(o);d=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;let p=t.shape.length,h=2===o.length&&dh.arraysEqual(t.shape,s),f=1===dh.sizeFromShape(t.shape),m=uc.getBroadcastDims(t.shape,r.shape),g=!e.packedInputs&&p===r.shape.length&&dh.arraysEqual(s,r.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;// These key components are needed due to shader_compiler is embedding
// them in the shader.
// |xRank| is used to determine the coords length. See
// get[Packed]SamplerAtOutputCoords.
// |isInOutTexShapeEqual| is used to determine whether going to an
// optimization path in getSamplerAtOutputCoords.
// |useSqueezeShape| is extracted from squeezeInputInfo of
// getSampler[2|3|4]D/getPackedSampler3D.
// |isScalar| is extracted from isInputScalar/isOutputScalar in
// getPackedSamplerAtOutputCoords.
// |broadcastDims| is extracted from get[Packed]SamplerAtOutputCoords.
// |isLogicalShapTexShapeEqual| is used in
// getOutput[Packed]2DCoords/get[Packed]Sampler2D.
// |rank1| is used in getOutputPacked1DCoords.
// |rank2| is used in getOutput2DCoords.
// |rank34| is used in getSampler3D/getSampler4D.
// |isTexShapeGreaterThanOne| are used in
// getSampler[Scalar|1D|2D]/getOutput1DCoords.
n+=`${p}_${g}_${i?l:""}_${o.length}_${f}_${m}_${h}_${u}_${c}_${d}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;n+=`${t.shape}_${e}_${a}`}});let a=e.userCode;return(// Fast string concat. See https://jsperf.com/string-concatenation/14.
e.constructor.name+("_"+n+"_"+a)+`${(0,dd.env)().getNumber("WEBGL_VERSION")}`)}(e,c,d),h=this.getAndSaveBinary(p,()=>(function(e,t,r,n){let a=r.map((e,r)=>{let n={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(n.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[r],shapeInfo:n}}),s=a.map(e=>e.shapeInfo),i={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},o=function(e,t,r){let n,a;let s=[];if(e.forEach(e=>{let t=dh.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),r.enableShapeUniforms){let{uniformShape:t}=kY(r.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}}),r.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}r.customUniforms&&r.customUniforms.forEach(e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});let i=s.join("\n"),o=e.map(e=>(function(e,t,r=!1,n){let a="";r?a+=function e(t,r){let n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(e){let t=e.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),n=kF();return`
    vec4 ${r}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}(t);case 1:return function(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,s=kF();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${r}, uv);
    }
  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${r}, uv);
    }
  `}(t,r);case 2:return function(e,t){let r=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=kF();if(null!=s&&dh.arraysEqual(r,s))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${l.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${l.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],c=Math.ceil(r[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `}(t,r);case 3:return function(t,r){let n=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=t.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){let a=n.slice(1),i=kJ(t,a);return`
        ${e(i,r)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${k0(["b","row","col"],[1,2])});
        }
      `}let l=kF();if(r)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${l.texture2D}(${a}, uv);
    }
  `;let u=o[0],c=o[1],d=Math.ceil(n[2]/2),p=d*Math.ceil(n[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${c}, ${p}, ${d}, b, row, col);
      return ${l.texture2D}(${a}, uv);
    }
  `}(t,r);default:return function(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=kF();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${r}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${r}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${r}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],d=Math.ceil(s[i-1]/2),p=d*Math.ceil(s[i-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<i-1;e++)h=`int b${e}, `+h,p*=s[i-e-1],f=`b${e} * ${p} + `+f;return`
    vec4 ${n}(${h}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${a.texture2D}(${r}, uv);
    }
  `}(t,r)}}(e,n):a+=function e(t,r=!1){let n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${r};}`;let[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`
      float ${n}() {
        return sampleTexture(${r}, halfCR);
      }
    `;let i=kX(r);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], ${i});
      return sampleTexture(${r}, uv);
    }
  `;let[o,l]=e.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${i});
      return sampleTexture(${r}, uv);
    }
  `}(t,r);case 1:return function(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1);if(e.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${kZ(e)}
      }
    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`
      float ${n}(int index) {
        return sampleTexture(${r}, halfCR);
      }
    `;let o=kX(r);return 1===i?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${r}, uv);
      }
    `:1===s?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${r}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${o});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${r}, uv);
    }
  `}(t,r);case 2:return function(t,r){let n=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=t.shapeInfo.texShape;if(null!=i&&dh.arraysEqual(n,i)){if(r)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `;let e=i[0],t=i[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${t}.0, ${e}.0);
      return sampleTexture(${a}, uv);
    }
  `}let{newShape:o,keptDims:l}=dh.squeezeShape(n);if(o.length<n.length){let n=kJ(t,o);return`
      ${e(n,r)}
      float ${s}(int row, int col) {
        return ${s}(${k0(["row","col"],l)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${kZ(t)}
      }
    `;let u=i[0],c=i[1],d=kX(a);return 1===c?// index is used directly as physical (no risk of float16 overflow).
        r?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${a}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${a}, uv);
    }
  `:1===u?// index is used directly as physical (no risk of float16 overflow).
        r?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${a}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${a}, uv);
    }
  `:r?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);
        return sampleTexture(${a}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${a}, uv);
  }
`}(t,r);case 3:return function(t,r){let n=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=n[1]*n[2],o=n[2],{newShape:l,keptDims:u}=dh.squeezeShape(n);if(l.length<n.length){let n=kJ(t,l);return`
        ${e(n,r)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${k0(["row","col","depth"],u)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${o}, 1)));
        ${kZ(t)}
      }
    `;let c=t.shapeInfo.texShape,d=c[0],p=c[1],h=t.shapeInfo.flatOffset;if(p===i&&null==h)return(// texC is used directly as physical (no risk of float16 overflow).
        r?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${a}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${a}, uv);
        }
      `);if(p===o&&null==h)return(// texR is used directly as physical (no risk of float16 overflow).
        r?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${a}, uv);
    }
  `);let f=kX(a);return r?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${a}Shape[1] * ${a}Shape[2];
      int stride1 = ${a}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);
      return sampleTexture(${a}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${a}, uv);
      }
  `}(t,r);case 4:return function(t,r){let n=t.shapeInfo.logicalShape,a=t.name,s="get"+a.charAt(0).toUpperCase()+a.slice(1),i=n[3],o=n[2]*i,l=n[1]*o,{newShape:u,keptDims:c}=dh.squeezeShape(n);if(u.length<n.length){let n=kJ(t,u);return`
      ${e(n,r)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${k0(["row","col","depth","depth2"],c)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${l}, ${o}, ${i}, 1)));
        ${kZ(t)}
      }
    `;let d=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,h=p[0],f=p[1],m=`int stride2 = ${a}Shape[3];`,g=`int stride1 = ${a}Shape[2] * stride2;`,y=`int stride0 = ${a}Shape[1] * stride1;`;if(f===l&&null==d)return(// texC is used directly as physical (no risk of float16 overflow).
        r?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${m}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${a}, uv);
      }
    `);if(f===i&&null==d)return(// texR is used directly as physical (no risk of float16 overflow).
        r?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${a}, uv);
      }
    `);let b=kX(a);return r?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${g}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${b});
      return sampleTexture(${a}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${o} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${h}, ${f}, index + ${b});
      return sampleTexture(${a}, uv);
    }
  `}(t,r);case 5:return function(t){let r=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r[4],i=r[3]*s,o=r[2]*i,l=r[1]*o,{newShape:u,keptDims:c}=dh.squeezeShape(r);if(u.length<r.length){let r=kJ(t,u);return`
      ${e(r)}
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        return ${a}(${k0(["row","col","depth","depth2","depth3"],c)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${o}, ${i}, ${s})) +
          depth3;
        ${kZ(t)}
      }
    `;let d=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,h=p[0],f=p[1];if(f===l&&null==d)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===s&&null==d)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${r[1]*r[2]*r[3]},
               ${r[2]*r[3]}, ${r[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=kX(n);return`
    float ${a}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${o} + depth * ${i} +
          depth2 * ${s} + depth3 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}(t);case 6:return function(t){let r=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=dh.squeezeShape(r);if(s.length<r.length){let r=kJ(t,s);return`
      ${e(r)}
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${a}(${k0(["row","col","depth","depth2","depth3","depth4"],i)});
      }
    `}let o=r[5],l=r[4]*o,u=r[3]*l,c=r[2]*u,d=r[1]*c;if(t.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${d}, ${c}, ${u}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${kZ(t)}
      }
    `;let p=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,f=h[0],m=h[1];if(m===d&&null==p)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${u}, ${l}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${f}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(m===o&&null==p)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${r[1]*r[2]*r[3]*r[4]},
               ${r[2]*r[3]*r[4]},
               ${r[3]*r[4]},
               ${r[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${f}.0);
        return sampleTexture(${n}, uv);
      }
    `;let g=kX(n);return`
    float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${d} + col * ${c} + depth * ${u} +
          depth2 * ${l} + depth3 * ${o} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${m}, index);
      return sampleTexture(${n}, uv);
    }
  `}(t);default:throw Error(`${n.length}-D input sampling is not yet supported`)}}(e,n);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(r?a+=function(e,t){let r;let n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=kG(e.shapeInfo.logicalShape,t.logicalShape),l=kQ(i),u=i-s,c=["x","y","z","w","u","v"];r=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map(e=>`coords.${c[e+u]} = 0;`).join("\n");let d="";d=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${c[t+u]}`).join(", ");let p="return outputValue;",h=dh.sizeFromShape(e.shapeInfo.logicalShape),f=1===h,m=dh.sizeFromShape(t.logicalShape),g=1===m;if(1!==s||f||g){if(f&&!g)p=1===i?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `;else if(o.length){let e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 ${"get"+a+"AtOutCoords"}() {
      ${l} coords = getOutputCoords();
      ${r}
      vec4 outputValue = get${a}(${d});
      ${p}
    }
  `}(e,t):a+=function(e,t){let r;let n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),s="get"+a+"AtOutCoords",i=t.texShape,o=e.shapeInfo.texShape,l=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&l===u&&null==e.shapeInfo.flatOffset&&dh.arraysEqual(o,i))return`
      float ${s}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let c=kQ(u),d=kG(e.shapeInfo.logicalShape,t.logicalShape),p=u-l,h=["x","y","z","w","u","v"];r=0===l?"":u<2&&d.length>=1?"coords = 0;":d.map(e=>`coords.${h[e+p]} = 0;`).join("\n");let f="";return f=u<2&&l>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${h[t+p]}`).join(", "),`
    float ${s}() {
      ${c} coords = getOutputCoords();
      ${r}
      return get${a}(${f});
    }
  `}(e,t)),a})(e,t,r.packedInputs,r.enableShapeUniforms)).join("\n"),l=t.texShape,u=kF(),c=`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${u.texture2D}(textureSampler, uv).r;
    }
  `,d=function(e){let t=`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${kU}
    ${kW}
    ${kq}
  `;return t}(u);t.isPacked?(n=function(e,t,r){switch(e.length){case 0:return kK();case 1:return function(e,t,r){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?r?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:1===n[1]?r?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:r?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}(0,t,r);case 2:return function(e,t,r){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(dh.arraysEqual(e,t))return r?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;// texels needed to accommodate a logical row
    let a=Math.ceil(e[1]/2);return(/**
     * getOutputCoords
     *
     * resTexRC: The rows and columns of the texels. If you move over one
     * texel to the right in the packed texture, you are moving over one column
     * (not two).
     *
     * index: The texel index
     */r?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `)}(e,t,r);case 3:return function(e,t,r){if(r)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}(e,t,r);default:return function(e,t,r){if(r)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`
      int b${t} = index / ${i};
      index -= b${t} * ${i};
    `+o,l=`b${t}, `+l;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${l});
    }
  `}(e,t,r)}}(t.logicalShape,l,r.enableShapeUniforms),a=`
    void setOutput(vec4 val) {
      ${u.output} = val;
    }
  `):(n=function(e,t,r){switch(e.length){case 0:return kK();case 1:return 1===t[0]?r?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:1===t[1]?r?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:r?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `;case 2:return dh.arraysEqual(e,t)?r?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:1===e[1]?r?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:1===e[0]?r?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:r?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `;case 3:return function(e,t,r){if(r){let t=kj(["r","c","d"],e);return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${t}
    return ivec3(r, c, d);
  }
`}let n=kL(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}(e,t,r);case 4:return function(e,t,r){if(r){let t=kj(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${t}
      return ivec4(r, c, d, d2);
    }
  `}let n=kL(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}(e,t,r);case 5:return function(e,t){let r=kL(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${r}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}(e,t);case 6:return function(e,t){let r=kL(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${r}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}(e,t);default:throw Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,l,r.enableShapeUniforms),a=`
    void setOutput(float val) {
      ${u.output} = vec4(val, 0, 0, 0);
    }
  `),r.packedInputs&&(d+=kH);let p=[d,c,a,i,n,o,r.userCode].join("\n");return p}(a,i,t),l=function(e,t){let r=kC(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(kb(e,()=>e.shaderSource(r,t)),kb(e,()=>e.compileShader(r)),(0,dd.env)().get("ENGINE_COMPILE_ONLY"))return r;if(!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw kw(t,e.getShaderInfoLog(r)),Error("Failed to compile fragment shader.");return r}(e.gl,o),u=e.createProgram(l);return(0,dd.env)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},k1(e,t,u)))})(this.gpgpu,e,c,d)),f=null!=this.activeTimers;f&&(i=this.startTimer()),(0,dd.env)().get("ENGINE_COMPILE_ONLY")||function(e,t,r,n,a){t.program.enableShapeUniforms||(k2(t.inShapeInfos,r),k2([t.outShapeInfo],[n]));let s=n.texData.texture,i=n.texData.texShape;n.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,dd.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);// Set user-defined inputs
for(let n=0;n<r.length;++n){let a=r[n],{uniform:s,offset:i,shape:o,texShape:l}=t.variablesLocations[n];if(o){let{uniformShape:r}=kY(t.program.packedInputs,a.shape,a.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,a.texData.texShape[0],a.texData.texShape[1]),null!=s){if(a.isUniform){// Upload the values of the tensor as uniform.
if(2>dh.sizeFromShape(a.shape))e.gl.uniform1f(s,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}continue}null!=a.texData.slice&&null!=i&&e.gl.uniform1i(i,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,s,n)}}let o=t.outShapeLocation;if(o)switch(n.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(n.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(n.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(n.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(n.shape))}if(t.outShapeStridesLocation){let r=dh.computeStrides(n.shape);switch(n.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(r));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(r));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(r))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&a)for(let r=0;r<t.program.customUniforms.length;++r){let n=t.program.customUniforms[r],s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else if("ivec4"===n.type)e.gl.uniform4iv(s,i);else throw Error(`uniform type ${n.type} is not supported yet.`)}e.executeProgram()}(this.gpgpu,h,c,d,n),u.forEach(e=>this.disposeIntermediateTensorInfo(e)),f&&(i=this.endTimer(i),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(i)}));let m=(0,dd.env)().getNumber("WEBGL_FLUSH_THRESHOLD");// Manually GL flush requested
if(m>0){let e=dh.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,dd.env)().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===a){let e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,r,n,a=!1){r=r||t[0].dtype;let s=this.runWebGLProgram(e,t,r,n,a);return s}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){// Avoid disposing the compiled webgl programs during unit testing because
// it slows down test execution.
if(!(0,dd.env)().getBool("IS_TEST")){let e=Object.keys(this.binaryCache);e.forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,dp.tidy)(()=>{if(!(0,dd.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){// Momentarily switching DEBUG flag to false so we don't throw an
// error trying to upload a small value.
let e=(0,dd.env)().getBool("DEBUG");(0,dd.env)().set("DEBUG",!1);let t=this.abs((0,oy.scalar)(1e-8)).dataSync()[0];if((0,dd.env)().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}/** Returns the smallest representable number.  */epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t;let r=this.texData.get(e),{shape:n,dtype:a,values:s,texture:i,usage:o,isPacked:l}=r;if(null!=i)return;let u=null!=this.activeTimers;u&&(t=dh.now());let c=r.texShape;if(null==c&&(// This texShape may not be the final texture shape. For packed or dense
// textures, the texShape will be changed when textures are created.
c=function(e,t=!1){let r=(0,dd.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=(0,dd.env)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");// If logical shape is 2, we don't squeeze, since we want to match physical.
if(n===1/0&&(0,dd.env)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=r/2),t&&(r*=2,n*=2,1===// This logic ensures we accurately count the number of packed texels needed
// to accommodate the tensor. We can only pack values in the same texel if
// they are from adjacent pairs of rows/cols within the same batch. So if a
// tensor has 3 rows, we pretend it has 4 rows in order to account for the
// fact that the texels containing the third row are half empty.
(e=e.map((t,r)=>r>=e.length-2?dh.nearestLargerEven(e[r]):e[r])).length&&(e=[2,e[0]])),2!==e.length){let t=dh.squeezeShape(e);e=t.newShape}let a=dh.sizeFromShape(e),s=null;e.length<=1&&a<=r?s=[1,a]:2===e.length&&e[0]<=r&&e[1]<=r?s=e:3===e.length&&e[0]*e[1]<=r&&e[2]<=r?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=r&&e[1]*e[2]<=r?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=r&&e[3]<=r?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=r&&e[1]*e[2]*e[3]<=r&&(s=[e[0],e[1]*e[2]*e[3]]);// true if one edge length is 1 (1 or 2, if packed), while another edge
// length exceeds maxSizeForNarrowTex.
let i=null!=s&&Math.max(...s)>n&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i){if(t){// For packed textures size equals the number of channels required to
// accommodate the texture data. However in order to squarify such that
// inner dimensions stay even, we rewrite size to equal the number of
// texels. Then in the return statement we rehydrate the squarified
// dimensions to channel units.
let t=kE(e),r=2,n=2;e.length&&([r,n]=kA(e)),a=t*(r/2)*(n/2),s=dh.sizeToSquarishShape(a).map(e=>2*e)}else s=dh.sizeToSquarishShape(a)}return s}(n,l),r.texShape=c),null!=s){let e;let i=kR(n),o=c[1],d=c[0],p=s instanceof Uint8Array||s instanceof Uint8ClampedArray;(l||!p)&&([o,d]=kg(c[0],c[1])),e=l?new Se(i,p):new k9(i,p);// TexShape for float array needs to be the original shape, which byte
// array needs to be packed size. This allow the data upload shape to be
// matched with texture creation logic.
let h=p?[d,o]:c,f=this.makeTensorInfo(h,a),m=this.texData.get(f.dataId);p?m.usage=k.PIXELS:m.usage=k.UPLOAD,m.texShape=h,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,d,s);let g=[[d,o]],y=this.runWebGLProgram(e,[f],a,g,!0),b=this.texData.get(y.dataId);r.texShape=b.texShape,r.isPacked=b.isPacked,r.usage=b.usage,(0,dd.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(r.texture=b.texture,// Once uploaded, don't store the values on cpu.
r.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=dh.now()-t)}else{let e=this.acquireTexture(c,o,a,l);r.texture=e}}convertAndCacheOnCPU(e,t){let r=this.texData.get(e),{dtype:n}=r;return null!=t&&(r.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let r="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<r.length;++t)r[t]=Math.round(e[t]);return r}throw Error(`Unknown dtype ${t}`)}(t,n)),r.values}acquireTexture(e,t,r,n){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>1048576*this.numMBBeforeWarning){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,n)}computeBytes(e,t){return e[0]*e[1]*dh.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let r=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}});e.push(r)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await (0,hb.nextFrame)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw kw(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),Error("Failed to compile fragment shader.");throw Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){// TODO: Iterating through all binaries to build VAOs is supposed to be in
// a seperate function, like 'setVaos'. However, to avoid breaking changes
// for the users using parallel compile feature now, buildVao is silently
// added here.
this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:r,infLoc:n,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}=k1(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=r,e.infLoc=n,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}/**
     * Create a TF.js tensor out of an existing WebGL texture. A new texture will
     * be created.
     */createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";let{texture:n,height:a,width:s,channels:i}=e,o=(0,dp.engine)().backend;// Have to throw an error, otherwise WebGL just warns and returns wrong
// values.
if(!o.gpgpu.gl.isTexture(n))throw Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(n,t,r,a,s,i);return(0,dp.engine)().makeTensorFromDataId(l,t,r,o)}}Ng.nextDataId=0,/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL");kd.isBrowser()&&(0,dp.registerBackend)("webgl",()=>new Ng,2/* priority */),/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var u6=A("eky5o");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oS=A("8BaGO"),bA=A("2MDja");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),bA=A("2MDja"),uc=A("7MaPk");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk");const Ny=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Nb{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=uc.assertAndGetBroadcastShape(t,r),this.enableShapeUniforms=k4(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA");const Nv=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Nx{constructor(e,t,r,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=uc.assertAndGetBroadcastShape(t,r);let a=this.outputShape.length;this.enableShapeUniforms=k4(a);let s="";if(n){if(0===a||1===dh.sizeFromShape(this.outputShape))s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else{let e=kQ(a);if(s=`
          ${e} coords = getOutputCoords();
        `,1===a)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let e=S8("coords",a);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${e[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${e[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}}}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");function Nw(e){let{inputs:t,backend:r}=e,{x:n}=t;return r.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const Nk={kernelName:oc.Identity,backendName:"webgl",kernelFunc:Nw};function NS(e){let{inputs:t,backend:r}=e,{real:n,imag:a}=t,s=r.makeTensorInfo(n.shape,"complex64"),i=r.texData.get(s.dataId),o=Nw({inputs:{x:n},backend:r}),l=Nw({inputs:{x:a},backend:r});return i.complexTensorInfos={real:o,imag:l},s}const NN={kernelName:oc.Complex,backendName:"webgl",kernelFunc:NS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),dd=A("ibsdL"),oc=A("hl418");const NT="return (a < 0.) ? b * a : a;",NI=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,NC={kernelName:oc.LeakyRelu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{alpha:s}=n,i=r.makeTensorInfo([],"float32",dh.createScalarValue(s,"float32")),o=(0,dd.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nx(NI,a.shape,i.shape):new Nb(NT,a.shape,i.shape),l=r.runWebGLProgram(o,[a,i],"float32");return r.disposeIntermediateTensorInfo(i),l}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),oc=A("hl418");const NE="return (a < 0.) ? b * a : a;",NA=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,NR={kernelName:oc.Prelu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n,alpha:a}=t,s=(0,dd.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nx(NA,n.shape,a.shape):new Nb(NE,n.shape,a.shape);return r.runWebGLProgram(s,[n,a],"float32")}},N_="if (isnan(x)) return x;";function NO({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:r,dtype:n}){return({inputs:a,backend:s})=>{let i;let{x:o}=a,l=n||o.dtype;if(s.shouldExecuteOnCPU([o])&&null!=r){let e=s.texData.get(o.dataId),t=r(e.values,l);return s.makeTensorInfo(o.shape,l,t)}let u=(0,dd.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t;return i=u?new Nd(o.shape,t):new Nr(o.shape,e),s.runWebGLProgram(i,[o],l)}}function NP({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:r=!1,supportsComplex:n=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let l;let{a:u,b:c}=i;if(n&&"complex64"===u.dtype){let t=o.texData.get(u.dataId),r=o.texData.get(c.dataId),[n,a]=[[t.complexTensorInfos.real,r.complexTensorInfos.real],[t.complexTensorInfos.imag,r.complexTensorInfos.imag]].map(t=>{let[r,n]=t,a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},s={dataId:n.dataId,dtype:n.dtype,shape:c.shape},i=new Nb(e,u.shape,c.shape);return o.runWebGLProgram(i,[a,s],(0,bA.upcastType)(r.dtype,n.dtype))}),s=NS({inputs:{real:n,imag:a},backend:o});// TODO(annxingyuan): Implement CPU forwarding for complex inputs.
return o.disposeIntermediateTensorInfo(n),o.disposeIntermediateTensorInfo(a),s}let d=s||(0,bA.upcastType)(u.dtype,c.dtype);if(("string"===u.dtype||"string"===c.dtype||o.shouldExecuteOnCPU([u,c]))&&null!=a){let e=o.texData.get(u.dataId).values,t=o.texData.get(c.dataId).values,r="string"===u.dtype?uc.fromUint8ToStringArray(e):e,n="string"===u.dtype?uc.fromUint8ToStringArray(t):t,[s,i]=a(u.shape,c.shape,r,n,d),l=o.makeTensorInfo(i,d),p=o.texData.get(l.dataId);return p.values=s,l}let p=(0,dd.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t;return l=p?new Nx(t,u.shape,c.shape,r):new Nb(e,u.shape,c.shape),o.runWebGLProgram(l,[u,c],d)}}function N$(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?Nu:Ns;if("elu"===e)return t?Nl:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?Nc:Ni;if("prelu"===e)return t?NA:NE;if("leakyrelu"===e)return t?NI:NT;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw Error(`Activation ${e} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ND{constructor(e,t,r,n=!1,a=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=k4(this.outputShape.length);let u=n?e[1]:e[2],c=Math.ceil(u/2),d=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],h="",f="";i&&(h=o?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:`vec4 activation(vec4 x) {
          ${i}
        }`,f="result = activation(result);"),s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let m="rc.x",g="rc.x";e[0]<t[0]?m=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(g=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${h}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${c}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${m};
        int batchB = ${g};
        for (int i = 0; i < ${c}; i++) {
          vec4 a = getMatrixA(batchA, ${n?"i * 2, rc.y":"rc.y, i * 2"});
          vec4 b = getMatrixB(batchB, ${a?"rc.z, i * 2":"i * 2, rc.z"});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${d[0]} * ${p[0]});
          result += (${d[1]} * ${p[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${s?"result += getBiasAtOutCoords();":""}

        ${f}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dd=A("ibsdL"),oc=A("hl418");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk");const NM={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class NF{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=uc.assertAndGetBroadcastShape(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}const NL="return a * b;";function Nj(e){let t;let{inputs:r,backend:n}=e,{a:a,b:s}=r,i=uc.upcastType(a.dtype,s.dtype);if("complex64"===a.dtype){let e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),r=new NF(NM.REAL,a.shape,s.shape),i=new NF(NM.IMAG,a.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(r,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=NS({inputs:{real:l,imag:u},backend:n});// TODO(annxingyuan): CPU forwarding for complex inputs.
return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([a,s])){let e=n.texData.get(a.dataId),t=n.texData.get(s.dataId),[r,o]=S_(a.shape,s.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i),u=n.texData.get(l.dataId);return u.values=r,l}return t=(0,dd.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nx(NL,a.shape,s.shape):new Nb(NL,a.shape,s.shape),n.runWebGLProgram(t,[a,s],i)}const NB={kernelName:oc.Multiply,backendName:"webgl",kernelFunc:Nj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");function Nz(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{shape:s}=n,i=dh.sizeFromShape(a.shape),o=dh.inferFromImplicitShape(s,i),l=dh.sizeFromShape(o);dh.assert(i===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);let u=r.texData.get(a.dataId);return!u.isPacked||k_(a.shape,o)||null!==u.texture&&k_(u.shape,o)?(r.incRef(a.dataId),{dataId:a.dataId,shape:o,dtype:a.dtype}):/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=[kE(e.shape),...kA(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},s=[kE(t),...kA(t)],i=new S5(s,n),o=[n],l=r.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(a,o,r)}const NV={kernelName:oc.Reshape,backendName:"webgl",kernelFunc:Nz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),bA=A("2MDja");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");class NG{constructor(e,t){this.variableNames=["x"];let{windowSize:r,batchSize:n,inSize:a,outSize:s}=e;this.outputShape=[n,s];let i=4*Math.floor(r/4),o=r%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${dh.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";a%r>0&&(u=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${1===o}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${2===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${3===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NU{constructor(e,t){this.variableNames=["x"];let{windowSize:r,batchSize:n,inSize:a,outSize:s}=e;this.outputShape=[n,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(// WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.
i="1.0 / 1e-20",o="min"):"max"===t&&(// WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.
i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(r/4),c=r%4,d=`
      if (${"sum"===t}) {
        sumValue += dot(values, ones);
      } else if (${"prod"===t}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${"min"===t} || ${"max"===t}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";"all"===t?(i="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):"any"===t&&(i="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let h="";a%r>0&&(h=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${1===c}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${2===c}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${3===c}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${l});
      }
    `}}function NW(e,t,r,n){let a=// Returns an array of configuration objects that describe each stage of the
// reduction.
function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let r=t.length?t[t.length-1].outSize:e[1],n=uc.computeOptimalWindowSize(r);t.push({inSize:r,windowSize:n,outSize:Math.ceil(r/n)})}return t}(e.shape),s=e;for(let i=0;i<a.length;i++){let o,l;let{inSize:u,windowSize:c,outSize:d}=a[i];o="mean"===r?0===i?new NG({windowSize:c,inSize:u,batchSize:e.shape[0],outSize:d},u):new NG({windowSize:c,inSize:u,batchSize:e.shape[0],outSize:d}):new NU({windowSize:c,inSize:u,batchSize:e.shape[0],outSize:d},r),l=s,s=n.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&n.disposeIntermediateTensorInfo(l)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nq{constructor(e,t){this.variableNames=["A"];let r=Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[t[n]];this.outputShape=r,this.rank=r.length;let n=kQ(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let r=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=Array(t);for(let t=0;t<e.length;t++)n[e[t]]=r[t];return n.join()}(t);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NH{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let r=Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[t[n]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=kQ(this.rank),a=S3("rc",this.rank),s=Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${r[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${o}) {
        result[1] = ${l};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${l};
        if(${o}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}function NK(e,t,r){let n=(0,dd.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NH(e.shape,t):new Nq(e.shape,t);return r.runWebGLProgram(n,[e],e.dtype)}function NX(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,keepDims:i}=n;return function(e,t,r,n){let a=e.shape.length,s=dh.parseAxisParam(t,e.shape),i=s,o=uc.getAxesPermutation(i,a),l=null!=o,u=e;l&&(u=NK(e,o,n),i=uc.getInnerMostAxes(i.length,a)),uc.assertAxesAreInnerMostDims("sum",i,a);let[c,d]=uc.computeOutAndReduceShapes(u.shape,i),p=c;r&&(p=uc.expandShapeToKeepDim(c,s));let h=dh.sizeFromShape(d),f=dh.sizeFromShape(e.shape),m=f/h,g=Nz({inputs:{x:u},attrs:{shape:[m,h]},backend:n}),y=(0,bA.sumOutType)(e.dtype),b=NW(g,y,"sum",n),v=Nz({inputs:{x:b},attrs:{shape:p},backend:n});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),l&&n.disposeIntermediateTensorInfo(u),v}(a,s,i,r)}const NZ={kernelName:oc.Sum,backendName:"webgl",kernelFunc:NX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");function NQ(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{perm:i}=a,o=s.shape.length,l=Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[i[e]];if(n.shouldExecuteOnCPU([s])){let e=n.texData.get(s.dataId),r=e.values,a=S2(r,s.shape,s.dtype,i,l);t=n.makeTensorInfo(l,s.dtype);let o=n.texData.get(t.dataId);o.values=a}else t=NK(s,i,n);return t}const NY={kernelName:oc.Transpose,backendName:"webgl",kernelFunc:NQ};function NJ({a:e,b:t,transposeA:r,transposeB:n,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u;let c=e.shape.length,d=t.shape.length,p=r?e.shape[c-2]:e.shape[c-1],h=n?t.shape[d-1]:t.shape[d-2],f=r?e.shape[c-1]:e.shape[c-2],m=n?t.shape[d-2]:t.shape[d-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=dh.sizeFromShape(g),v=dh.sizeFromShape(y),x=oS.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)),w=x.concat([f,m]);dh.assert(p===h,()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${r} and transposeB=${n} must match.`);let k=r?[b,p,f]:[b,f,p],S=n?[v,m,h]:[v,h,m],N=Nz({inputs:{x:e},backend:a,attrs:{shape:k}}),T=Nz({inputs:{x:t},backend:a,attrs:{shape:S}}),I=[N,T],C=Math.max(b,v),E=r?N.shape[1]:N.shape[2],A=null!=s,R=null!=i,_="leakyrelu"===l,O=null!=l?N$(l,!0):null,P=A||R||_||null!=O;// Since the matrices are vectors, it is faster to call mul().sum()
// because sum() is O(sqrt(N)) due to divide-and-conquer.
if((1===f||1===m)&&E>1e3&&!1===P){let e=N,t=T;r&&(e=NQ({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),I.push(e)),n&&(t=NQ({inputs:{x:T},backend:a,attrs:{perm:[0,2,1]}}),I.push(t));let s=1!==m,i=1===m,o=e;s&&(o=Nz({inputs:{x:e},backend:a,attrs:{shape:[C,E,1]}}),I.push(o));let l=1===m?2:1,c=t;i&&(c=Nz({inputs:{x:t},backend:a,attrs:{shape:[C,1,E]}}),I.push(c));let d=Nj({inputs:{a:o,b:c},backend:a});u=NX({inputs:{x:d},backend:a,attrs:{axis:l,keepDims:!0}}),I.push(d)}else{let l=(0,bA.upcastType)(e.dtype,t.dtype),c=new ND(k,S,[C,f,m],r,n,A,O,R,_),d=[N,T];if(null!=s&&d.push(s),R&&d.push(i),_){let e=a.makeTensorInfo([],"float32",dh.createScalarValue(o,"float32"));d.push(e),I.push(e)}u=a.runWebGLProgram(c,d,l)}let $=Nz({inputs:{x:u},backend:a,attrs:{shape:w}});for(let e of(I.push(u),I))a.disposeIntermediateTensorInfo(e);return $}const N0={kernelName:oc._FusedMatMul,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=n;return NJ({a:a,b:s,transposeA:l,transposeB:u,backend:r,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),oc=A("hl418");const N1="return abs(x);",N2={kernelName:oc.Abs,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n}=e,{x:a}=r;// TODO: handle cases when x is complex. Once the cpu implementation
// can handle complex values, refactor to use unaryKernelFunc.
if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=n.texData.get(a.dataId),t=SV(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}return t=(0,dd.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Nd(a.shape,N1):new Nr(a.shape,N1),n.runWebGLProgram(t,[a],a.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const N4=Nn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,N3=NO({opSnippet:N4}),N8={kernelName:oc.Acos,backendName:"webgl",kernelFunc:N3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const N6=Nn+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,N5=NO({opSnippet:N6}),N7={kernelName:oc.Acosh,backendName:"webgl",kernelFunc:N5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const N9="return a + b;",Te=NP({opSnippet:N9,packedOpSnippet:N9,supportsComplex:!0,cpuKernelImpl:Su}),Tt={kernelName:oc.Add,backendName:"webgl",kernelFunc:Te};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),bA=A("2MDja"),oc=A("hl418");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tr{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let r=[];// Get target elements from every input tensor.
this.variableNames.forEach(e=>{r.push(`float v${e} = get${e}AtOutCoords();`)});// Calculate the sum of all elements.
let n=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${r.join("\n        ")}

        float result = ${n};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tn{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let r=[];// Get target elements from every input tensor.
this.variableNames.forEach(e=>{r.push(`vec4 v${e} = get${e}AtOutCoords();`)});// Calculate the sum of all elements.
let n=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${r.join("\n        ")}

        vec4 result = ${n};
        setOutput(result);
      }
    `}}const Ta={kernelName:oc.AddN,backendName:"webgl",kernelFunc:function e(t){let{inputs:r,backend:n}=t;if(1===r.length)return Nw({inputs:{x:r[0]},backend:n});// Limit the number of uploaded textures for optimization.
if(r.length>(0,dd.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(r.length/2),a=e({inputs:r.slice(0,t),backend:n}),s=e({inputs:r.slice(t),backend:n});return e({inputs:[a,s],backend:n})}let a=r.map(e=>e.dtype).reduce((e,t)=>(0,bA.upcastType)(e,t)),s=r.map(e=>e.shape),i=(0,dd.env)().getBool("WEBGL_PACK"),o=i?new Tn(r[0].shape,s):new Tr(r[0].shape,s);return n.runWebGLProgram(o,r,a)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const Ts={kernelName:oc.All,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{axis:i,keepDims:o}=a,l=s.shape.length,u=dh.parseAxisParam(i,s.shape),c=u,d=uc.getAxesPermutation(c,l),p=s;null!=d&&(p=NQ({inputs:{x:s},backend:n,attrs:{perm:d}}),c=uc.getInnerMostAxes(c.length,l)),uc.assertAxesAreInnerMostDims("all",c,l);let[h,f]=uc.computeOutAndReduceShapes(p.shape,c),m=dh.sizeFromShape(f),g=Nz({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),y=NW(g,g.dtype,"all",n);if(o){let e=uc.expandShapeToKeepDim(h,u);t=Nz({inputs:{x:y},backend:n,attrs:{shape:e}})}else t=Nz({inputs:{x:y},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=d&&n.disposeIntermediateTensorInfo(p),t}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const Ti={kernelName:oc.Any,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{axis:i,keepDims:o}=a,l=s.shape.length,u=dh.parseAxisParam(i,s.shape),c=u,d=uc.getAxesPermutation(c,l),p=s;null!=d&&(p=NQ({inputs:{x:s},backend:n,attrs:{perm:d}}),c=uc.getInnerMostAxes(c.length,l)),uc.assertAxesAreInnerMostDims("any",c,l);let[h,f]=uc.computeOutAndReduceShapes(p.shape,c),m=dh.sizeFromShape(f),g=Nz({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),y=NW(g,g.dtype,"any",n);if(o){let e=uc.expandShapeToKeepDim(h,u);t=Nz({inputs:{x:y},backend:n,attrs:{shape:e}})}else t=Nz({inputs:{x:y},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=d&&n.disposeIntermediateTensorInfo(p),t}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dd=A("ibsdL"),dh=A("jjNRA");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class To{constructor(e,t,r){this.variableNames=["A"];let{windowSize:n,batchSize:a,outSize:s}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};
          float candidate = getA(batch, inIdx);
          if (candidate ${"max"===t?">":"<"} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");class Tl{constructor(e,t,r,n){let a,s;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,dh.assert(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);let i=e[e.length-1],o=Math.ceil(i/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),n||this.variableNames.push("bestIndicesA");let l=this.outputShape,u=l.length,c=kQ(u),d=S8("coords",u);if(1===o){s=u+1;let e=kQ(s);a=`
        ${e} sourceLocR = ${e}(${d.join()}, 0);
        ++${d[u-1]};
        ${e} sourceLocG = ${e}(${d.join()}, 0);
        ++${d[u-2]};
        ${e} sourceLocA = ${e}(${d.join()}, 0);
        --${d[u-1]};
        ${e} sourceLocB = ${e}(${d.join()}, 0);
        --${d[u-2]};`}else s=u,a=`
        ${c} sourceLocR = coords;
        ++${d[u-1]};
        ${c} sourceLocG = coords;
        ++${d[u-2]};
        ${c} sourceLocA = coords;
        --${d[u-1]};
        ${c} sourceLocB = coords;
        --${d[u-2]};`;let p=["x","y","z","w","u","v"].slice(0,s),h="."+p[s-1],f=p.map(e=>"int "+e),m=S8("sourceLocR",s-1).concat("inIdx.r"),g=S8("sourceLocG",s-1).concat("inIdx.g"),y=S8("sourceLocB",s-1).concat("inIdx.b"),b=S8("sourceLocA",s-1).concat("inIdx.a"),v=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()})));`,x=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,w=n?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${w}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${d[u-1]} < ${l[u-1]-1};
        bool hasNextRow = ${d[u-2]} < ${l[u-2]-1};
        ${a}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${x};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${v}
          vec4 candidate = ${x};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${"max"===r?"greaterThan":"lessThan"}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}function Tu(e,t,r,n){let a=[r];if(uc.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),a,t.shape.length),!(0,dd.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let r=[],s=e.texData.get(t.dataId),i=null!==s&&s.isPacked,o=t;i&&r.push(o=e.unpackTensor(t));let[l,u]=uc.computeOutAndReduceShapes(o.shape,a),c=dh.sizeFromShape(u),d=Nz({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});r.push(d);let p=function e(t,r,n,a=null){let s=r.shape[0],i=r.shape[1];null!=a&&(s=a.shape[0],i=a.shape[1]);let o=uc.computeOptimalWindowSize(i),l={windowSize:o,inSize:i,batchSize:s,outSize:Math.ceil(i/o)},u=new To(l,n,null==a),c=[r];null!=a&&c.push(a);let d=t.runWebGLProgram(u,c,"int32");// No need to run another GPGPU program.
if(1===d.shape[1])return d;let p=e(t,r,n,d);return t.disposeIntermediateTensorInfo(d),p}(e,d,n);r.push(p);let h=Nz({inputs:{x:p},backend:e,attrs:{shape:l}});return r.forEach(t=>e.disposeIntermediateTensorInfo(t)),h}return function e(t,r,n,a=null){let s=null!=a?a.shape:r.shape,i=s[s.length-1],o=uc.computeOptimalWindowSize(i),l=new Tl(s,o,n,null==a),u=null==a?[r]:[r,a],c=t.runWebGLProgram(l,u,"int32");if(c.shape.length===r.shape.length){let a=e(t,r,n,c);return t.disposeIntermediateTensorInfo(c),a}return c}(e,t,n)}const Tc={kernelName:oc.ArgMax,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n,i=dh.parseAxisParam(s,a.shape),o=uc.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=NQ({inputs:{x:a},backend:r,attrs:{perm:o}})),i=uc.getInnerMostAxes(i.length,l.shape.length)),uc.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let c=Tu(r,l,i[0],"max");return u.forEach(e=>r.disposeIntermediateTensorInfo(e)),c}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const Td={kernelName:oc.ArgMin,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s}=n,i=dh.parseAxisParam(s,a.shape),o=uc.getAxesPermutation(i,a.shape.length),l=a,u=[];null!=o&&(u.push(l=NQ({inputs:{x:a},backend:r,attrs:{perm:o}})),i=uc.getInnerMostAxes(i.length,l.shape.length)),uc.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let c=Tu(r,l,i[0],"min");return u.forEach(e=>r.disposeIntermediateTensorInfo(e)),c}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Tp=Nn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Th=NO({opSnippet:Tp}),Tf={kernelName:oc.Asin,backendName:"webgl",kernelFunc:Th};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Tm=NO({opSnippet:Nn+"return log(x + sqrt(x * x + 1.0));"}),Tg={kernelName:oc.Asinh,backendName:"webgl",kernelFunc:Tm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Ty=Nn+`
  return atan(x);
`,Tb=NO({opSnippet:Ty}),Tv={kernelName:oc.Atan,backendName:"webgl",kernelFunc:Tb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Tx=Ny+`
  return atan(a, b);
`,Tw=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Nv+`
  return result;
`,Tk=NP({opSnippet:Tx,packedOpSnippet:Tw}),TS={kernelName:oc.Atan2,backendName:"webgl",kernelFunc:Tk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const TN=Nn+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,TT=NO({opSnippet:TN}),TI={kernelName:oc.Atanh,backendName:"webgl",kernelFunc:TT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TC{constructor(e,t,r,n=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&r)throw Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),r){this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${p}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${c};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?a?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");let v=4*Math.floor(s/4),x=s%4,w=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${p}, ${h});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${c};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${v}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${w}
          }

          int xC = xCCorner + ${v};
          if (${1===x}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${w}
          } else if (${2===x}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${w}
          } else if (${3===x}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${w}
          }
        }
        setOutput(${b});
      }
    `}}class TE{constructor(e,t,r,n=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&r)throw Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,v="0.0";if(b||(v="-1.0 / 1e-20"),r){this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${l});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${c}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&// If count === 0.0, `avgValue` is always 0.0 and we change `count`'s
// value to avoid dividing zero.
(x="avgValue / max(count, 1.0)");let w=4*Math.floor(s/4),k=s%4,S=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${l});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${w}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${S}
            }

            int xC = xCCorner + ${w};
            if (${1===k}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${2===k}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${S}
            } else if (${3===k}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${S}
            }
          }
        }
        setOutput(${x});
      }
    `}}const TA={kernelName:oc.AvgPool,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;kD(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;dh.assert(uc.eitherStridesOrDilationsAreOne(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let u=uc.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&dh.arraysEqual(u.inShape,u.outShape))return Nw({inputs:{x:a},backend:r});let c=new TC(u,"avg",!1);return r.runWebGLProgram(c,[a],"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const TR={kernelName:oc.AvgPool3D,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=n,c=uc.computePool3DInfo(a.shape,s,i,[1,1,1],o,l,u),d=new TE(c,"avg",!1);return r.runWebGLProgram(d,[a],"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T_{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${u}, ${c});
      const float avgMultiplier = float(${1/(t*r)});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class TO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,r=e.filterHeight,n=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${1/(t*r*n)});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}const TP={kernelName:oc.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,c=uc.computePool3DInfo(s.shape,i,o,[1,1,1],l,u),d=new TO(c);return r.runWebGLProgram(d,[a],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const T$={kernelName:oc.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t;kD([a,s],"avgPoolGrad");let{filterSize:i,strides:o,pad:l}=n,u=uc.computePool2DInfo(s.shape,i,o,1/* dilations */,l),c=new T_(u);return r.runWebGLProgram(c,[a],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const TD={kernelName:oc.BatchMatMul,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=n;return NJ({a:a,b:s,transposeA:i,transposeB:o,backend:r})}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),dd=A("ibsdL"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk");class TM{constructor(e,t,r,n,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],uc.assertAndGetBroadcastShape(e,t),uc.assertAndGetBroadcastShape(e,r);let i="0.0";null!=n&&(uc.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(uc.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk");class TF{constructor(e,t,r,n,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],uc.assertAndGetBroadcastShape(e,t),uc.assertAndGetBroadcastShape(e,r);let i="vec4(0.0)";null!=n&&(uc.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(uc.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}}const TL={kernelName:oc.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,mean:a,variance:s,offset:i,scale:o}=e;dh.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),dh.assert(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),dh.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=r;null==l&&(l=.001);let u=[n,a,s],c=null;null!=i&&(c=i.shape,u.push(i));let d=null;null!=o&&(d=o.shape,u.push(o));let p=(0,dd.env)().getBool("WEBGL_PACK_NORMALIZATION")?new TF(n.shape,a.shape,s.shape,c,d,l):new TM(n.shape,a.shape,s.shape,c,d,l),h=t.runWebGLProgram(p,u,u[0].dtype);return h}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uD=A("bszZn"),dh=A("jjNRA"),dd=A("ibsdL"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tj{constructor(e){let t;this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let r=kQ(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=function(e){if(1===e)return"sourceLoc";if(e<=6)return TB.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank),a=e.map((e,t)=>`sourceLoc.${TB[t]} = start[${t}] + coords.${TB[t]};`);t=`
        ${r} sourceLoc;
        ${r} coords = getOutputCoords();
        ${a.join("\n")}
      `,this.userCode=`
      void main() {
        ${t}
        setOutput(getSource(${n}));
      }
    `}}const TB=["x","y","z","w","u","v"];/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tz{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=kQ(this.rank),r=S8("coords",this.rank),n=S8("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${n.slice(-2).join()})`,s=`getChannel(getSource(${n.join()}), ${a})`,i=`
      result.x = ${s};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${s};
        --${n[this.rank-1]};
      }
    `,o=1===this.rank?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${s};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${s};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${n[t]} = ${r[t]} + start[${t}];`).join("\n");this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}}function TV(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:s,size:i}=n,[o,l]=uD.parseSliceParams(a,s,i);if(uD.assertParamsValid(a,o,l),0===dh.sizeFromShape(l))return r.makeTensorInfo(l,a.dtype,[]);// Run on cpu if dtype is string. For string, the backend represents it
// as Uint8Array[], where each Uint8Array is a character. Given that the
// computation is only on the outer array, uploading the whole data onto
// gpu is wasteful. Also, currently webgl doesn't have a design to
// upload and retrieve Uint8Array[] between cpu and gpu. Therefore, we
// just run the kernel on cpu if dtype is string.
if(r.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=r.texData.get(a.dataId),t=SG(e.values,o,l,a.shape,a.dtype);return r.makeTensorInfo(l,a.dtype,t)}let{isPacked:u}=r.texData.get(a.dataId),c=uD.isSliceContinous(a.shape,o,l);if(u||!c){let e=(0,dd.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Tz(l):new Tj(l),t=[o];return r.runWebGLProgram(e,[a],a.dtype,t)}return r.uploadToGPU(a.dataId),function(e,t,r,n){let a=n.texData.get(e.dataId),s=n.makeTensorInfo(r,e.dtype),i=n.texData.get(s.dataId);// Copy texture data from the original tensor.
Object.assign(i,a),i.refCount=1,i.shape=r,i.dtype=e.dtype;let o=uD.computeFlatOffset(t,dh.computeStrides(e.shape));a.slice&&// the offset.
(o+=a.slice.flatOffset),i.slice={flatOffset:o,// Point to the original dataId, which is used to do ref counting.
origDataId:a.slice&&a.slice.origDataId||e.dataId};// Increase the ref count for that data bucket.
let l=n.dataRefCount.get(i.slice.origDataId)||1;return n.dataRefCount.set(i.slice.origDataId,l+1),s}(a,o,l,r)}const TG={kernelName:oc.Slice,backendName:"webgl",kernelFunc:TV},TU={kernelName:oc.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,crops:i}=n;dh.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=uc.getReshaped(a.shape,s,o),u=uc.getPermuted(l.length,s.length),c=uc.getReshapedPermuted(a.shape,s,o),d=uc.getSliceBeginCoords(i,s.length),p=uc.getSliceSize(c,i,s.length),h=[],f=Nz({inputs:{x:a},backend:r,attrs:{shape:l}}),m=NQ({inputs:{x:f},backend:r,attrs:{perm:u}}),g=Nz({inputs:{x:m},backend:r,attrs:{shape:c}}),y=TV({inputs:{x:g},backend:r,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach(e=>r.disposeIntermediateTensorInfo(e)),y}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const TW={kernelName:oc.Bincount,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i}=n,o=r.readSync(a.dataId),l=r.readSync(s.dataId),u=Sc(o,l,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,u)}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),oc=A("hl418");const Tq=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,TH=`
  return float(int(a.r) & int(b.r));
`,TK={kernelName:oc.BitwiseAnd,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n}=e,{a:a,b:s}=r,i=(0,dd.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=(0,dd.env)().getNumber("WEBGL_VERSION");// The type of a and b are ensured to be `int32` in core, therefore no need to
// consider other type situations.
if(n.shouldExecuteOnCPU([a,s])||1===o){let e=n.texData.get(a.dataId).values,t=n.texData.get(s.dataId).values,[r,i]=Sp(a.shape,s.shape,e,t,a.dtype),o=n.makeTensorInfo(i,a.dtype),l=n.texData.get(o.dataId);return l.values=r,o}return t=i?new Nx(Tq,a.shape,s.shape,!1):new Nb(TH,a.shape,s.shape),n.runWebGLProgram(t,[a,s],a.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const TX={kernelName:oc.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{s0:n,s1:a}=t,s=r.readSync(n.dataId),i=r.readSync(a.dataId),o=uc.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return r.makeTensorInfo([o.length],"int32",Int32Array.from(o))}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var ue=A("hxi4c"),dh=A("jjNRA"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const TZ=NP({opSnippet:"return float(a != b);",cpuKernelImpl:SP,dtype:"bool"}),TQ={kernelName:oc.NotEqual,backendName:"webgl",kernelFunc:TZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");function TY(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.texData.get(n.dataId);return Nw({inputs:{x:a.complexTensorInfos.real},backend:r})}const TJ={kernelName:oc.Real,backendName:"webgl",kernelFunc:TY},T0={kernelName:oc.Cast,backendName:"webgl",kernelFunc:function e(t){let{inputs:r,backend:n,attrs:a}=t,{x:s}=r,{dtype:i}=a;// Casting to complex64.
if("complex64"===i){if("complex64"===s.dtype)return Nw({inputs:{x:s},backend:n});// TODO(annxingyuan): Import kernel function once zeros is modularized.
let t=ue.zeros(s.shape),r=e({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),a=NS({inputs:{real:r,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(r),a}// Casting from complex64
if("complex64"===s.dtype){let t=TY({inputs:{input:s},backend:n}),r=e({inputs:{x:t},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(t),r}if(!dh.hasEncodingLoss(s.dtype,i)){// We don't change the underlying data, since we cast to higher
// precision.
let e=Nw({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(n.shouldExecuteOnCPU([s])){let e=n.texData.get(s.dataId).values,[t,r,a]=Sh(e,s.shape,s.dtype,i);return n.makeTensorInfo(t,r,a)}if("int32"===i)return function(e,t){let r=new Nr(e.shape,"return float(int(x));"),n=t.runWebGLProgram(r,[e],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}(s,n);if("bool"===i){let e=n.makeTensorInfo([],"bool",dh.getTypedArrayFromDType("bool",1)),t=TZ({inputs:{a:s,b:e},backend:n});return n.disposeIntermediateTensorInfo(e),t}throw Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const T1="return ceil(x);",T2=NO({opSnippet:T1,packedOpSnippet:T1,cpuKernelImpl:Sf}),T4={kernelName:oc.Ceil,backendName:"webgl",kernelFunc:T2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T3{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T8{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}const T6={kernelName:oc.ClipByValue,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{clipValueMin:i,clipValueMax:o}=a;t=(0,dd.env)().getBool("WEBGL_PACK_CLIP")?new T8(s.shape):new T3(s.shape);let l=[[i],[o]];return n.runWebGLProgram(t,[s],s.dtype,l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T5{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}// Returns a TensorInfo with the complex shape and the dataId of the
// underlying part. We need to do this because a reshaped complex tensor is
// not reflected in its parts.
function T7(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const T9={kernelName:oc.ComplexAbs,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n}=t,a=r.texData.get(n.dataId),s=new T5(n.shape),i=[T7(n,a.complexTensorInfos.real),T7(n,a.complexTensorInfos.imag)];return r.runWebGLProgram(s,i,i[0].dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),dd=A("ibsdL");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk");class Ie{// Concats 2d tensors along axis=1. See comments in MathBackendWebGL.concat().
constructor(e){this.outputShape=[],this.outputShape=uc.computeOutShape(e,1/* axis */),this.variableNames=e.map((e,t)=>`T${t}`);let t=Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];let r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let n=t[e-1];r.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${n}));`)}let n=t.length,a=t[t.length-1];r.push(`else setOutput(getT${n}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join("\n        ")}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk");class It{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=uc.computeOutShape(e,t);let r=this.outputShape,n=r.length,a=kQ(n),s=S8("coords",n),i=["x","y","z","w","u","v"].slice(0,n);this.variableNames=e.map((e,t)=>`T${t}`);let o=Array(e.length-1);o[0]=e[0][t];for(let r=1;r<o.length;r++)o[r]=o[r-1]+e[r][t];let l=i[t],u=i.slice(-2),c=i.join(),d=`if (${l} < ${o[0]}) {
        return getChannel(
            getT0(${c}), vec2(${u.join()}));
        }`;for(let e=1;e<o.length;e++){let t=o[e-1];// Note: the >= comparison below may seem unnecessary given the check
// above but is needed to workaround branch execution issues on some
// devices. It makes all the conditions exclusive without relying on
// execution order.
d+=`
        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {
          return getChannel(
            getT${e}(${Ir(i,l,t)}),
            vec2(${Ir(u,l,t)}));
        }`}let p=o.length,h=o[o.length-1];d+=`
        return getChannel(
          getT${p}(${Ir(i,l,h)}),
          vec2(${Ir(u,l,h)}));`,this.userCode=`
      float getValue(${i.map(e=>"int "+e)}) {
        ${d}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[n-1]} = ${s[n-1]} + 1;
        if (${s[n-1]} < ${r[n-1]}) {
          result.g = getValue(${s});
        }

        ${s[n-2]} = ${s[n-2]} + 1;
        if (${s[n-2]} < ${r[n-2]}) {
          result.a = getValue(${s});
        }

        ${s[n-1]} = ${s[n-1]} - 1;
        if (${s[n-2]} < ${r[n-2]} &&
            ${s[n-1]} < ${r[n-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}}/**
 * Return an expression for coordinates into a vector where a given channel
 * will be offset by [shift].
 *
 * @param channels the channels to consider
 * @param channel the channel we want shifted
 * @param shift  the amount to subtract from the channel.
 *
 * @returns a string of the form 'x, y-[shift], z' where any one channel can
 * have the shift applied.
 */function Ir(e,t,r){let n=e.indexOf(t),a=e.map((e,t)=>t===n?`${e} - ${r}`:e);return a.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");function In(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.texData.get(n.dataId);return Nw({inputs:{x:a.complexTensorInfos.imag},backend:r})}const Ia={kernelName:oc.Imag,backendName:"webgl",kernelFunc:In};function Is(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n,s=dh.parseAxisParam(a,t[0].shape)[0],i=t.map(e=>e.shape);uc.assertParamsConsistent(i,s);let o=uc.computeOutShape(t.map(e=>e.shape),s);if(0===dh.sizeFromShape(o))return r.makeTensorInfo(o,t[0].dtype,[]);// Keep only non-empty tensors (ignore tensors with 0 in their shape).
let l=t.filter(e=>dh.sizeFromShape(e.shape)>0);return 1===l.length?Nw({inputs:{x:l[0]},backend:r}):function e(t,r,n){let a=t[0].dtype;if("complex64"===a){let a=t.map(e=>TY({inputs:{input:e},backend:n})),s=t.map(e=>In({inputs:{input:e},backend:n})),i=e(a,r,n),o=e(s,r,n),l=NS({inputs:{real:i,imag:o},backend:n});return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),s.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}let s=n.shouldExecuteOnCPU(t);if("string"===a&&(s=!0),s){// Any concat of n-dimensional tensors across any axis can be reduced to
// a concatenation of two-dimensional tensors across the axis 1 by first
// partitioning the axes of the original tensors into those less than the
// axis to be concatenated and the rest. Then reshape the tensors
// into a two-dimensional tensor by collapsing these two sets of axes and
// concatenate the resulting matrices across the axis 1, finally reshaping
// the result to have the proper shape.
let e=t.map(e=>{let t=dh.sizeFromShape(e.shape.slice(r));return Nz({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),s=e.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),i=uc.computeOutShape(e.map(e=>e.shape),1/* axis */),o=1===e[0].shape[0],l=Sm(s,i,a,o),u=uc.computeOutShape(t.map(e=>e.shape),r),c=n.makeTensorInfo(u,a,l);return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}// Keep only non-empty tensors (ignore tensors with 0 in their shape).
let i=t.filter(e=>dh.sizeFromShape(e.shape)>0),o=(0,dd.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){// Clone tensor.
let e=o?new Nr(t[0].shape,No):new Nd(t[0].shape,No);return n.runWebGLProgram(e,t,a)}let l=(0,dd.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>l){let t=[];for(let a=0;a<i.length;a+=l){let s=i.slice(a,a+l);t.push(e(s,r,n))}let a=e(t,r,n);for(let e of t)n.disposeIntermediateTensorInfo(e);return a}if(o){let e=new It(i.map(e=>e.shape),r);return n.runWebGLProgram(e,i,a)}let{tensors2D:u,outShape:c}=function(e,t,r){// Any concat of n-dimensional tensors across any axis can be reduced to
// a concatenation of two-dimensional tensors across the axis 1 by first
// partitioning the axes of the original tensors into those less than the
// axis to be concatenated and the rest. Then reshape the tensors
// into a two-dimensional tensor by collapsing these two sets of axes and
// concatenate the resulting matrices across the axis 1, finally reshaping
// the result to have the proper shape.
let n=uc.computeOutShape(e.map(e=>e.shape),t),a=e.map(e=>Nz({inputs:{x:e},attrs:{shape:[-1,dh.sizeFromShape(e.shape.slice(t))]},backend:r}));return{tensors2D:a,outShape:n}}(i,r,n),d=new Ie(u.map(e=>e.shape)),p=n.runWebGLProgram(d,u,a);u.forEach(e=>n.disposeIntermediateTensorInfo(e));let h=Nz({inputs:{x:p},attrs:{shape:c},backend:n});return n.disposeIntermediateTensorInfo(p),h}(l,s,r)}const Ii={kernelName:oc.Concat,backendName:"webgl",kernelFunc:Is};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dd=A("ibsdL"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Io{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g="",y="";r&&(g=n?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`
          float activation(float x) {
            ${r}
          }
        `,y="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${g}

      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${m?3:1}];

        ivec2 xRCCorner =
            ivec2(coords[${m?1:2}], coords[${m?2:3}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${c};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${1===f}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${2===f}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${3===f}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${y}
        setOutput(result);
      }
    `}}class Il{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,r=e.padInfo.top,n=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${r}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${c}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${1===f}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${2===f}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${3===f}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");class Iu{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=k4(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<u;e++)c+=`
           vec4 xTexelC${2*e};
           int xTexelC${2*e}Ready;
           vec4 xTexelC${2*e+1};
           int xTexelC${2*e+1}Ready;
           vec4 xC${e};`;/**
         * This vectorized implementation works by gathering the values needed for
         * each output channel's dot product into vec4's and then multiplying them
         * all together (this happens in the final double for-loop below). Most of
         * the main loop consists of constructing these vec4's with the minimum
         * number of texture2D calls, which means making use of all four returned
         * values from a texture2D call at once.
         */c+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let e=0;e<u;e++)c+=`
           xTexelC${2*e} = vec4(0.0);
           xTexelC${2*e}Ready = 0;
           xTexelC${2*e+1} = vec4(0.0);
           xTexelC${2*e+1}Ready = 0;
           xC${e} = vec4(0.0);`;c+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let t=0;t<(u+1)/2;t++){let r=2*t;if(c+=`
           xC = xCCorner + ${r*o};
           `,1===i){if(r<u&&(s%2==1?(// TODO: Ensure vec4 previous does not result in redundant sample,
// and avoid setting xTexelRC's that exceed the boundary in the
// first place rather than resetting them to vec4(0)).
// To compute xCOffset:
// - If padding is odd, we must add 1 to ensure we ask for an
// even-numbered row.
// - We subtract 2 to access the previous texel.
c+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }
               `,1===o&&r>0?c+=`
                 xC${r} = vec4(xTexelC${r-2}.zw, xTexelC${r}.xy);
                 `:c+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${r} = vec4(previous.zw, xTexelC${r}.xy);
                   } else {
                     xC${r} = vec4(0.0, 0.0, xTexelC${r}.xy);
                   }
                   `):c+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }

                 xC${r} = xTexelC${r};
                 `,r+1<u)){// If dilation is even, the second entry should match the first
// (either both are composed or both are single samples). But if
// dilation is odd, then the second entry should be the opposite
// of the first (if the first is composed, the second is a single
// sample, and vice versa.)
let e=s%2==0?dh.nearestLargerEven(o):o;o%2==0&&s%2==1||o%2!=0&&s%2!=1?(c+=`
                   xCOffset = xC + imod(pads[1], 2) + ${e};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r+1}Ready == 0) {
                     xTexelC${r+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${r+1}.zw = vec2(0.0);
                     }
                     xTexelC${r+1}Ready = 1;
                   }
                   `,o>1?c+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${r+1} = vec4(previous.zw, xTexelC${r+1}.xy);
                     } else {
                      xC${r+1} = vec4(0.0, 0.0, xTexelC${r+1}.xy);
                     }
                     `:c+=`
                     xC${r+1} = vec4(xTexelC${r}.zw, xTexelC${r+1}.xy);
                     `):1===e?c+=`
                     xC${r+1} = xTexelC${r};
                     `:c+=`
                     xCOffset = xC + ${e};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r+1}Ready == 0) {
                       xTexelC${r+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${r+1}.zw = vec2(0.0);
                       }
                       xTexelC${r+1}Ready = 1;
                     }

                     xC${r+1} = xTexelC${r+1};
                     `}}else r<u&&(s%2==1?(c+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${r+1}Ready == 0) {
                   xTexelC${r+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${r+1}.zw = vec2(0.0);
                   }
                   xTexelC${r+1}Ready = 1;
                 }

                 xC${r} = vec4(xTexelC${r}.zw, xTexelC${r+1}.zw);
               `,r+1<u&&(c+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${r+1} = vec4(xTexelC${r+1}.xy, final.xy);
                 `)):(c+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r+1}Ready == 0) {
                   xTexelC${r+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${r+1}.zw = vec2(0.);
                   }
                   xTexelC${r+1}Ready = 1;
                 }

                 xC${r} = vec4(
                   xTexelC${r}.xy, xTexelC${r+1}.xy);
               `,r+1<u&&(c+=`
                   xC${r+1} = vec4(xTexelC${r}.zw, xTexelC${r+1}.zw);
                 `)));r<u&&(c+=`
             wTexel = getW(r, ${r}, d1, d2);
             dotProd += xC${r}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${r}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,r+1<u&&(c+=`
               wTexel = getW(r, ${r+1}, d1, d2);
               dotProd += xC${r+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${r+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}c+=`
     }
   
     }
   
     }
   `;let d="",p="";r&&(d=n?`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:a?`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:`vec4 activation(vec4 x) {
           ${r}
         }`,p="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${c}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${t?"result += getBiasAtOutCoords();":""}
         ${p}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ic{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=k4(this.outputShape.length);let{dataFormat:r}=t,n=kF(),a="channelsLast"===r,s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`
          blockIndex = rc.z + ${t};
          pos = rc.y + ${e};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${n.output} = result;
      }
    `}}// Both conv2dByMatMul and conv2dWithIm2Row fuse height and width into one
// dimension to compute batchMatMul, so bias and activation weights are also
// supposed to fuse the two dimensions into one.
//
// This function computes the target shape for fusing height and width
// dimensions. Returning null means the shape is already compatible.
//
// Even though the bias is not supposed to be a 3-D or a 4-D (including
// batch) tensor and PReLU activiation weights is not supposed to be a 4-D
// tensor, we still need to support them, because we haven't disabled
// them for NHWC format.
// https://github.com/tensorflow/tfjs/blob/b53bd47e880367ae57493f0ea628abaf08db2d5d/tfjs-core/src/ops/fused/conv2d.ts#L181-L196
function Id(e,t){let r=e.length;return r>=3?t?[...e.slice(0,-3),e[r-3]*e[r-2],e[r-1]]:[...e.slice(0,-3),e[r-3],e[r-2]*e[r-1]]:!t&&1===r&&e[0]>1?[e[0],1]:null}function Ip({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l;// Reshapes conv2D input to 2D tensors, uses matMul and then reshape the
// result from 2D to 4D.
let u=e.shape,c=n.texData.get(e.dataId),d=r.inChannels,p=u[0]*u[1]*u[2],h=r.outChannels,f="channelsLast"===r.dataFormat,m=[];if(null!=s){let e=Id(s.shape,f);null!=e&&(s=Nz({inputs:{x:s},backend:n,attrs:{shape:e}}),m.push(s))}if(null!=a){let e=Id(a.shape,f);null!=e&&(a=Nz({inputs:{x:a},backend:n,attrs:{shape:e}}),m.push(a))}// The algorithm in the if condition assumes (1) the output will be packed,
// (2) x is packed, (3) x isChannelsLast, (4)  x's packed texture is already
// on GPU, (5) col is odd, (6) the width, height and inChannels are the same
// for xTexData.shape and xShape.
let g=!((1===p||1===h)&&d>1e3)&&c.isPacked&&f&&null!=c.texture&&u[2]%2!=0&&dh.arraysEqual(c.shape.slice(-3),u.slice(-3));if(g){// We avoid expensive packed 2x2 reshape by padding col count to next,
// even number. When col is odd, the result of packed batchMatMul is
// the same (has the same texture layout and and values in the texture) as
// it is for next even col. We make the odd-cols tensor to look like
// even-cols tensor before the operation and, after the batchMatMul,
// fix the even-cols result to have odd number of cols.
let d=u[0]*u[1]*(u[2]+1),p={dataId:e.dataId,shape:[1,d,r.inChannels],dtype:e.dtype},h=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,dh.assert(k_(c.shape,p.shape),()=>`packed reshape ${c.shape} to ${p.shape} isn't free`);let f=Nz({inputs:{x:t},backend:n,attrs:{shape:[1,r.inChannels,r.outChannels]}});m.push(f);let g=NJ({a:p,b:f,backend:n,transposeA:!1,transposeB:!1,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=n.texData.get(g.dataId);dh.assert(y.isPacked,()=>"batchMatMul result is expected to be packed"),// Restore the input shape to original.
c.shape=h,// Set the output shape - there is no need for expensive reshape as data
// layout is already correct.
y.shape=r.outShape,(l=Nw({inputs:{x:g},backend:n})).shape=r.outShape,m.push(g)}else{let u=r.outHeight*r.outWidth,c=Nz({inputs:{x:e},backend:n,attrs:{shape:f?[r.batchSize,u,r.inChannels]:[r.batchSize,r.inChannels,u]}}),d=Nz({inputs:{x:t},backend:n,attrs:{shape:[1,r.inChannels,r.outChannels]}}),p=NJ({a:f?c:d,b:f?d:c,transposeA:!f,transposeB:!1,backend:n,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=Nz({inputs:{x:p},backend:n,attrs:{shape:r.outShape}}),m.push(c),m.push(d),m.push(p)}for(let e of m)n.disposeIntermediateTensorInfo(e);return l}function Ih({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){// Rearranges conv2d input so each block to be convolved over forms the
// column of a new matrix with shape [filterWidth * filterHeight *
// inChannels, outHeight * outWidth]. The filter is also rearranged so each
// output channel forms a row of a new matrix with shape [outChannels,
// filterWidth * filterHeight * inChannels]. The convolution is then
// computed by multiplying these matrices and reshaping the result.
let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:d,outHeight:p,dataFormat:h}=r,f="channelsLast"===h,m=l*u*c,g=p*d,y=[r.batchSize,m,g],b=[];if(null!=s){let e=Id(s.shape,f);null!=e&&(s=Nz({inputs:{x:s},backend:n,attrs:{shape:e}}),b.push(s))}if(null!=a){let e=Id(a.shape,f);null!=e&&(a=Nz({inputs:{x:a},backend:n,attrs:{shape:e}}),b.push(a))}let v=Nz({inputs:{x:t},backend:n,attrs:{shape:[1,m,dh.sizeFromShape(t.shape)/m]}});b.push(v);let x=new Ic(y,r),w=[e.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],k=n.runWebGLProgram(x,[e],"float32",w),S=Nz({inputs:{x:k},backend:n,attrs:{shape:y}});b.push(k),b.push(S);let N=null!=a,T=null!=s,I="leakyrelu"===o,C=o?N$(o,!0):null,E=new ND(f?S.shape:v.shape,f?v.shape:S.shape,f?[r.batchSize,g,r.outChannels]:[r.batchSize,r.outChannels,g],!0,!1,N,C,T,I),A=f?[S,v]:[v,S];if(a&&A.push(a),T&&A.push(s),I){let e=n.makeTensorInfo([],"float32",dh.createScalarValue(i,"float32"));A.push(e),b.push(e)}let R=n.runWebGLProgram(E,A,"float32"),_=Nz({inputs:{x:R},backend:n,attrs:{shape:r.outShape}});for(let e of(b.push(R),b))n.disposeIntermediateTensorInfo(e);return _}const If={kernelName:oc.Conv2D,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s,filter:i}=r,{strides:o,pad:l,dataFormat:u,dilations:c,dimRoundingMode:d}=a,p=uc.convertConv2DDataFormat(u),h=uc.computeConv2DInfo(s.shape,i.shape,o,c,l,d,!1,p);if(1===h.filterHeight&&1===h.filterWidth&&1===h.dilationHeight&&1===h.dilationWidth&&1===h.strideHeight&&1===h.strideWidth&&("SAME"===h.padInfo.type||"VALID"===h.padInfo.type))t=Ip({x:s,filter:i,convInfo:h,backend:n});else if(h.strideWidth<=2&&"channelsLast"===p&&(0,dd.env)().getBool("WEBGL_EXP_CONV")){let e=new Iu(h),r=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];t=n.runWebGLProgram(e,[s,i],"float32",r)}else if((0,dd.env)().getBool("WEBGL_CONV_IM2COL"))t=Ih({x:s,filter:i,convInfo:h,backend:n});else{let e=new Io(h);t=n.runWebGLProgram(e,[s,i],"float32")}let f=Nz({inputs:{x:t},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(t),f}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Im{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,r=e.strideWidth,n=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Ig{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${s?3:1}];

        ivec2 dyCorner = ivec2(coords[${s?1:2}], coords[${s?2:3}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Iy{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,r=e.strideHeight,n=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Ib{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,r=e.filterHeight,n=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=r-1-e.padInfo.top,u=n-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${l}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}const Iv={kernelName:oc.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=n,d=uc.convertConv2DDataFormat(l),p=uc.computeConv2DInfo(a.shape,c,i,1/* dilations */,o,u,!1,d),h=new Im(p);return r.runWebGLProgram(h,[a,s],"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dd=A("ibsdL"),oc=A("hl418");/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ix{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=k4(this.outputShape.length);let t=e.filterHeight,r=e.filterWidth,n=t-1-e.padInfo.top,a=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}const Iw={kernelName:oc.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=n,d=uc.convertConv2DDataFormat(u),p=uc.computeConv2DInfo(i,s.shape,o,1/* dilations */,l,c,!1,d);if((0,dd.env)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===d){let e=[[p.strideHeight,p.strideWidth]],t=new Ix(p);return r.runWebGLProgram(t,[a,s],"float32",e)}{let e=new Ig(p);return r.runWebGLProgram(e,[a,s],"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const Ik={kernelName:oc.Conv3D,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:l}=n,u=uc.computeConv3DInfo(a.shape,s.shape,i,l,o),c=new Il(u);return r.runWebGLProgram(c,[a,s],"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const IS={kernelName:oc.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:l}=n,u=uc.computeConv3DInfo(a.shape,l,i,1/* dilations */,o),c=new Iy(u);return r.runWebGLProgram(c,[a,s],"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const IN={kernelName:oc.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:l}=n,u=uc.computeConv3DInfo(l,s.shape,o,1/* dilations */,i),c=new Ib(u);return r.runWebGLProgram(c,[a,s],"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const IT=N_+`
  return cos(x);
`,II=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Nv}
  return result;
`,IC=NO({opSnippet:IT,packedOpSnippet:II}),IE={kernelName:oc.Cos,backendName:"webgl",kernelFunc:IC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const IA=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,IR=NO({opSnippet:IA}),I_={kernelName:oc.Cosh,backendName:"webgl",kernelFunc:IR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IO{constructor(e,t,r,n,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[c,d]=r;this.outputShape=[u,c,d,l];let[p,h]=[`${i-1}.0`,`${o-1}.0`],[f,m,g]=c>1?[`${(i-1)/(c-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,b,v]=d>1?[`${(o-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${h} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${h}`];// Reference implementation
// tslint:disable-next-line:max-line-length
// https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/crop_and_resize_op_gpu.cu.cc
this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${m};
        float width_scale = ${b};

        float in_y = ${g};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${v};
        if( in_x < 0.0 || in_x > ${h} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${"bilinear"===n?1:0} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}const IP={kernelName:oc.CropAndResize,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=n,c=new IO(a.shape,s.shape,o,l,u);return r.runWebGLProgram(c,[a,s,i],"float32")}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");(b=N||(N={})).Prod="*",b.Sum="+";class I${constructor(e,t,r,n){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===N.Prod?"1.0":"0.0",i=r?s:`getX(${ID(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";r?(l=n?`end != ${o-1}`:"end != 0",u=n?"end + 1":"end - 1"):(l=n?`end + pow2 < ${o}`:"end >= pow2",u=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${kQ(a)} coords = getOutputCoords();
        int end = ${IM(a,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${u};
          ${IM(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${ID(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function ID(e,t,r){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${r} for rank ${e} is not yet supported`)}function IM(e,t,r){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${r} for rank ${e} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk");function IF(e,t,r,n,a,s){let i=t.shape.length,o=uc.getAxesPermutation([n],i),l=t;null!=o&&(l=NQ({inputs:{x:t},backend:r,attrs:{perm:o}}));let u=uc.getInnerMostAxes(1,i)[0];if(u!==i-1)throw Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let c=l.shape[u],d=Nw({inputs:{x:l},backend:r});// Use cum parallel algorithm, inspired by:
// https://developer.nvidia.com/gpugems/gpugems3/part-vi-gpu-computing/chapter-39-parallel-prefix-sum-scan-cuda
// Note: although the algorithm is called sum, it works for any associtative
// operator with an identity.
for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){let n=new I$(e,l.shape,!1,s),a=[[t]],i=d;d=r.runWebGLProgram(n,[d],d.dtype,a),r.disposeIntermediateTensorInfo(i)}// For exclusive cum, shift the end result in the direction of product or sum
// and add 1 for product or 0 for sum to the front index.
if(a){let t=new I$(e,l.shape,a,s),n=d;d=r.runWebGLProgram(t,[d],d.dtype),r.disposeIntermediateTensorInfo(n)}if(null!=o){let e=uc.getUndoAxesPermutation(o),t=NQ({inputs:{x:d},backend:r,attrs:{perm:e}});return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(l),t}return d}const IL={kernelName:oc.Cumprod,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;return IF(N.Prod,a,r,s,i,o)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Ij={kernelName:oc.Cumsum,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=n;return IF(N.Sum,a,r,s,i,o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const IB={kernelName:oc.DenseBincount,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=n;if(1===a.shape.length){let e=r.readSync(a.dataId),t=r.readSync(s.dataId),n=Sc(e,t,s.dtype,s.shape,i);return r.makeTensorInfo([i],s.dtype,n)}if(2===a.shape.length){let e=r.bufferSync(a),t=r.bufferSync(s),n=Sd(e,t,i,o);return r.makeTensorInfo(n.shape,s.dtype,n.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iz{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const IV={kernelName:oc.DepthToSpace,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockSize:s,dataFormat:i}=n,o=a.shape[0],l="NHWC"===i?a.shape[1]:a.shape[2],u="NHWC"===i?a.shape[2]:a.shape[3],c="NHWC"===i?a.shape[3]:a.shape[1],d=l*s,p=u*s,h=c/(s*s),f="NHWC"===i?[o,d,p,h]:[o,h,d,p],m=new Iz(f,s,i);return r.runWebGLProgram(m,[a],a.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),dd=A("ibsdL"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IG{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=k4(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";r&&(l=n?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`
          float activation(float x) {
            ${r}
          }
        `,u="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");class IU{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=k4(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<c;e++)d+=`
          vec4 xTexelC${2*e};
          int xTexelC${2*e}Ready;
          vec4 xTexelC${2*e+1};
          int xTexelC${2*e+1}Ready;
          vec4 xC${e};`;/**
         * This vectorized implementation works by gathering the values needed for
         * each output channel's dot product into vec4's and then multiplying them
         * all together (this happens in the final double for-loop below). Most of
         * the main loop consists of constructing these vec4's with the minimum
         * number of texture2D calls, which means making use of all four returned
         * values from a texture2D call at once.
         */d+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let e=0;e<c;e++)d+=`
          xTexelC${2*e} = vec4(0.0);
          xTexelC${2*e}Ready = 0;
          xTexelC${2*e+1} = vec4(0.0);
          xTexelC${2*e+1}Ready = 0;
          xC${e} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let e=0;e<(c+1)/2;e++){let t=2*e;if(d+=`
          xC = xCCorner + ${t*l};
          `,1===o){if(t<c&&(i%2==1?(// TODO: Ensure vec4 previous does not result in redundant sample,
// and avoid setting xTexelRC's that exceed the boundary in the
// first place rather than resetting them to vec4(0)).
// To compute xCOffset:
// - If padding is odd, we must add 1 to ensure we ask for an
// even-numbered row.
// - We subtract 2 to access the previous texel.
d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }
              `,1===l&&t>0?d+=`
                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);
                  } else {
                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xC${t} = xTexelC${t};
                `,t+1<c)){// If dilation is even, the second entry should match the first
// (either both are composed or both are single samples). But if
// dilation is odd, then the second entry should be the opposite
// of the first (if the first is composed, the second is a single
// sample, and vice versa.)
let e=i%2==0?dh.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${e};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${t+1}.zw = vec2(0.0);
                    }
                    xTexelC${t+1}Ready = 1;
                  }
                  `,l>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);
                    } else {
                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);
                    }
                    `:d+=`
                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);
                    `):1===e?d+=`
                    xC${t+1} = xTexelC${t};
                    `:d+=`
                    xCOffset = xC + ${e};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${t+1}.zw = vec2(0.0);
                      }
                      xTexelC${t+1}Ready = 1;
                    }

                    xC${t+1} = xTexelC${t+1};
                    `}}else t<c&&(i%2==1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.0);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
              `,t+1<c&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(
                  xTexelC${t}.xy, xTexelC${t+1}.xy);
              `,t+1<c&&(d+=`
                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
                `)));t<c&&(d+=`
            wTexel = getW(r, ${t}, d1, q);
            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);
          `,t+1<c&&(d+=`
              wTexel = getW(r, ${t+1}, d1, q);
              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  
      }
    `;let p="",h="";r&&(p=n?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`vec4 activation(vec4 x) {
          ${r}
        }`,h="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${t?"result += getBiasAtOutCoords();":""}
        ${h}
        setOutput(result);
      }
    `}}const IW={kernelName:oc.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s,filter:i}=r,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=a,d=u;null==d&&(d=[1,1]),dh.assert(uc.eitherStridesOrDilationsAreOne(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);let p=uc.computeConv2DInfo(s.shape,i.shape,o,d,l,c,!0);t=(0,dd.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new IU(p):new IG(p);let h=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(t,[s,i],"float32",h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iq{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,r=e.strideWidth,n=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class IH{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=r-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}const IK={kernelName:oc.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=n,d=uc.computeConv2DInfo(a.shape,c,i,o,l,u,!0),p=new Iq(d);return r.runWebGLProgram(p,[a,s],"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const IX={kernelName:oc.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=n,d=uc.computeConv2DInfo(c,s.shape,i,o,l,u,!0),p=new IH(d);return r.runWebGLProgram(p,[a,s],"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IZ{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}const IQ={kernelName:oc.Diag,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n}=t,a=[...n.shape,...n.shape],s=dh.sizeFromShape(n.shape),i=Nz({inputs:{x:n},backend:r,attrs:{shape:[s]}}),o=new IZ(s),l=r.runWebGLProgram(o,[i],i.dtype),u=Nz({inputs:{x:l},backend:r,attrs:{shape:a}});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(l),u}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IY{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:r,padInfo:n,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:d}=n;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${s});
      const ivec2 pads = ivec2(${c}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}const IJ={kernelName:oc.Dilation2D,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s,filter:i}=r,{strides:o,pad:l,dilations:u}=a,c=uc.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC"/* dataFormat */,u),d=new IY(c);t=n.runWebGLProgram(d,[s,i],"float32");let p=Nz({inputs:{x:t},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(t),p}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA"),oc=A("hl418");const I0={kernelName:oc.Einsum,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{equation:a}=n,{allDims:s,summedDims:i,idDims:o}=uc.decodeEinsumEquation(a,t.length);uc.checkEinsumDimSizes(s.length,o,t);let{path:l,steps:u}=uc.getEinsumComputePath(i,o),c=u.length,d=null,p=s.length,h=[];for(let e=0;e<c;++e){for(let n of u[e]){let e;let{permutationIndices:a,expandDims:s}=uc.getEinsumPermutation(p,o[n]);uc.isIdentityPermutation(a)?e=t[n]:(e=NQ({inputs:{x:t[n]},backend:r,attrs:{perm:a}}),h.push(e));let i=e.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);dh.arraysEqual(e.shape,i)||(e=Nz({inputs:{x:e},backend:r,attrs:{shape:i}}),h.push(e)),null===d?d=e:(// tslint:disable-next-line: no-unnecessary-type-assertion
d=Nj({inputs:{a:e,b:d},backend:r}),h.push(d))}e<c-1&&(l[e]>=0&&(d=NX({inputs:{x:d},backend:r,attrs:{axis:l[e]-(s.length-p),keepDims:!1}}),h.push(d)),p--)}// Clean up intermediate tensors.
for(let e of h)e!==d&&r.disposeIntermediateTensorInfo(e);return d}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const I1=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,I2=NO({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:I1}),I4={kernelName:oc.Elu,backendName:"webgl",kernelFunc:I2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),oc=A("hl418");const I3=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,I8={kernelName:oc.EluGrad,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r}=e,{dy:n,y:a}=t,s=(0,dd.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nx(I3,n.shape,a.shape):new Nb("return (b >= 0.0) ? a : a * (b + 1.0);",n.shape,a.shape);return r.runWebGLProgram(s,[n,a],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const I6=`
  return vec4(equal(a, b));
`,I5=NP({opSnippet:"return float(a == b);",packedOpSnippet:I6,dtype:"bool",cpuKernelImpl:Sg}),I7={kernelName:oc.Equal,backendName:"webgl",kernelFunc:I5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const I9=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${uc.ERF_P};
  float a1 = ${uc.ERF_A1};
  float a2 = ${uc.ERF_A2};
  float a3 = ${uc.ERF_A3};
  float a4 = ${uc.ERF_A4};
  float a5 = ${uc.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Ce=NO({opSnippet:I9}),Ct={kernelName:oc.Erf,backendName:"webgl",kernelFunc:Ce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Cr=N_+`
  return exp(x);
`,Cn=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Ca=NO({opSnippet:Cr,packedOpSnippet:Cn,cpuKernelImpl:Sy,dtype:"float32"}),Cs={kernelName:oc.Exp,backendName:"webgl",kernelFunc:Ca};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");function Ci(e){let{inputs:t,attrs:r,backend:n}=e,{dim:a}=r,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=a;return a<0&&(dh.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+a+1),o.splice(l,0,1),Nz({inputs:{x:s},backend:n,attrs:{shape:o}})}const Co={kernelName:oc.ExpandDims,backendName:"webgl",kernelFunc:Ci};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Cl="return exp(x) - 1.0;",Cu=NO({opSnippet:Cl,packedOpSnippet:Cl,cpuKernelImpl:Sb}),Cc={kernelName:oc.Expm1,backendName:"webgl",kernelFunc:Cu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cd{constructor(e,t,r){let n;this.variableNames=["real","imag"];let a=t[1];this.outputShape=t;let s=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=r?`${a}.0`:"1.0";if("real"===e)n="return real * expR - imag * expI;";else if("imag"===e)n="return real * expI + imag * expR;";else throw Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${n}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}function Cp(e,t,r){let n=r.texData.get(e.dataId),a=dh.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=a/s,o=Nz({inputs:{x:e},backend:r,attrs:{shape:[i,s]}}),l=o.shape,u=new Cd("real",l,t),c=new Cd("imag",l,t),d=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],p=r.runWebGLProgram(u,d,"float32"),h=r.runWebGLProgram(c,d,"float32"),f=NS({inputs:{real:p,imag:h},backend:r});r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h);let m=Nz({inputs:{x:f},backend:r,attrs:{shape:e.shape}});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(f),m}const Ch={kernelName:oc.FFT,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{input:n}=t;return Cp(n,!1,r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cf{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}function Cm(e){let{backend:t,attrs:r}=e,{shape:n,value:a}=r,{dtype:s}=r;if("string"===(s=s||dh.inferDtype(a))){// String type should be handled in CPU memory.
let e=dh.getArrayFromDType(s,dh.sizeFromShape(n));return e.fill(a),t.makeTensorInfo(n,s,e)}{let e=new Cf(n,a),r=[[a]];return t.runWebGLProgram(e,[],s,r)}}const Cg={kernelName:oc.Fill,backendName:"webgl",kernelFunc:Cm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cy{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}const Cb={kernelName:oc.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:r}=e,n=new Cy(r.shape),a=t.runWebGLProgram(n,[r],r.dtype);return a}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Cv="return floor(x);",Cx=NO({opSnippet:Cv,packedOpSnippet:Cv,cpuKernelImpl:Sv}),Cw={kernelName:oc.Floor,backendName:"webgl",kernelFunc:Cx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");// We use native integer division to deal with floating point imprecision. Since
// we implement floor division and glsl implements truncated division, we
// correct for this by subtracting 1 from result when the result is negative and
// there is a remainder.
const Ck=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,CS=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,CN=NP({opSnippet:Ck,packedOpSnippet:CS,dtype:"int32"}),CT={kernelName:oc.FloorDiv,backendName:"webgl",kernelFunc:CN};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418"),dd=A("ibsdL");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CI{constructor(e){this.variableNames=["A"];let t=kF(),[r,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CC{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=kF(),[r,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}const CE={kernelName:oc.FromPixels,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{pixels:a}=t,{numChannels:s}=n,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,c]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[c,l],p=[c,l,s];if(o||i){let e=(0,dd.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==u||e!==CA)&&(CA=e,u=document.createElement("canvas").getContext("2d",{willReadFrequently:CA})),u.canvas.width=l,u.canvas.height=c,u.drawImage(a,0,0,l,c),a=u.canvas}let h=r.makeTensorInfo(d,"int32");// This is a byte texture with pixels.
r.texData.get(h.dataId).usage=k.PIXELS,r.gpgpu.uploadPixelDataToTexture(r.getTexture(h.dataId),a);let f=(0,dd.env)().getBool("WEBGL_PACK")?new CC(p):new CI(p),m=r.runWebGLProgram(f,[h],"int32");return r.disposeData(h.dataId),m}};let CA=(0,dd.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA"),dd=A("ibsdL"),oc=A("hl418");const CR={kernelName:oc.FusedConv2D,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=r,{strides:u,pad:c,dataFormat:d,dilations:p,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=a,g=uc.convertConv2DDataFormat(d),y=uc.computeConv2DInfo(s.shape,i.shape,u,p,c,h,!1,g),b=[],v=null!=o,x=null!=l,w="leakyrelu"===f,k=()=>{let e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=Nz({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(v&&e.push(t(o,d)),x&&e.push(t(l,d)),w){let t=n.makeTensorInfo([],"float32",dh.createScalarValue(m,"float32"));e.push(t),b.push(t)}return e};if(1===y.filterHeight&&1===y.filterWidth&&1===y.dilationHeight&&1===y.dilationWidth&&1===y.strideHeight&&1===y.strideWidth&&("SAME"===y.padInfo.type||"VALID"===y.padInfo.type))t=Ip({x:s,filter:i,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else if(y.strideWidth<=2&&"channelsLast"===g&&(0,dd.env)().getBool("WEBGL_EXP_CONV")){let e=f?N$(f,!0):null,r=new Iu(y,v,e,x,w),a=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],s=k();t=n.runWebGLProgram(r,s,"float32",a)}else if((0,dd.env)().getBool("WEBGL_CONV_IM2COL"))t=Ih({x:s,filter:i,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=f?N$(f,!1):null,r=new Io(y,v,e,x,w),a=k();t=n.runWebGLProgram(r,a,"float32")}let S=Nz({inputs:{x:t},backend:n,attrs:{shape:y.outShape}});return b.push(t),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),S}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),dd=A("ibsdL"),oc=A("hl418");const C_={kernelName:oc.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=r,{strides:u,pad:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a,m=[],g=d;null==g&&(g=[1,1]),dh.assert(uc.eitherStridesOrDilationsAreOne(u,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`);let y=uc.computeConv2DInfo(s.shape,i.shape,u,g,c,p,!0),b=(0,dd.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,v=h?N$(h,b):null,x=[s,i],w=null!=o,k=null!=l,S="leakyrelu"===h;if(w&&x.push(o),k&&x.push(l),S){let e=n.makeTensorInfo([],"float32",dh.createScalarValue(f,"float32"));x.push(e),m.push(e)}t=b?new IU(y,w,v,k,S):new IG(y,w,v,k,S);let N=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],T=n.runWebGLProgram(t,x,"float32",N);return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),T}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");class CO{constructor(e,t,r,n){this.sliceDim=e,this.strides=t,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=r;let a=kQ(r.length),s=`
    int index;`;for(let e=0;e<this.sliceDim;e++)s+=`
          index = round(getIndices(coords[0], ${e}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};
          flattenIndex += index * ${this.strides[e]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}const CP={kernelName:oc.GatherNd,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{params:n,indices:a}=t,s=a.shape,i=s[s.length-1],o=dh.sizeFromShape(n.shape),[l,u,c,d]=uc.prepareAndValidate(n,a),p=Nz({inputs:{x:a},backend:r,attrs:{shape:[u,i]}}),h=Nz({inputs:{x:n},backend:r,attrs:{shape:[dh.sizeFromShape(n.shape)/c,c]}});if(r.shouldExecuteOnCPU([n,a])||"string"===n.dtype){let e=r.readSync(a.dataId),t=r.bufferSync(n),s=Sx(e,t,n.dtype,u,i,c,d,n.shape,o);return r.makeTensorInfo(l,n.dtype,s.values)}let f=new CO(i,d,[u,c],n.shape),m=r.runWebGLProgram(f,[h,p],h.dtype),g=Nz({inputs:{x:m},backend:r,attrs:{shape:l}});return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(m),g}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),dd=A("ibsdL"),uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C${constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let r=kQ(this.rank),n=// The input and output are always flattened into rank 4 tensors.
function(e,t){let r=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let t=0;t<e.length;t++)2===t?n.push("index"):n.push(`${r[t]}`);return n.join()}(e,0);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}}function CD(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=n,l=dh.parseAxisParam(i,a.shape)[0];if((0,dd.env)().get("DEBUG")){// In debug mode, throw error when any index is out of bound.
// Otherwise, just fill out of bounds with zeroes.
let e=r.readSync(s.dataId),t=a.shape[l];for(let r=0;r<e.length;++r){let n=e[r];dh.assert(n<=t-1&&n>=0,()=>`GatherV2: the index value ${n} is not in [0, ${t-1}]`)}}let u=uc.segment_util.collectGatherOpShapeInfo(a,s,l,o),c=dh.sizeFromShape(s.shape),d=[],p=Nz({inputs:{x:a},backend:r,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=Nz({inputs:{x:s},backend:r,attrs:{shape:[u.batchSize,c/u.batchSize]}});d.push(p),d.push(h);let f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(r.shouldExecuteOnCPU([a,s])||"string"===a.dtype){let e=r.bufferSync(h),t=r.bufferSync(p),n=Sw(t,e,f);return d.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.makeTensorInfo(u.outputShape,n.dtype,n.values)}let m=new C$(p.shape,f),g=r.runWebGLProgram(m,[p,h],p.dtype);d.push(g);let y=Nz({inputs:{x:g},backend:r,attrs:{shape:u.outputShape}});return d.forEach(e=>r.disposeIntermediateTensorInfo(e)),y}const CM={kernelName:oc.GatherV2,backendName:"webgl",kernelFunc:CD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const CF=`
  return vec4(greaterThan(a, b));
`,CL=NP({opSnippet:"return float(a > b);",packedOpSnippet:CF,cpuKernelImpl:Sk,dtype:"bool"}),Cj={kernelName:oc.Greater,backendName:"webgl",kernelFunc:CL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const CB=`
  return vec4(greaterThanEqual(a, b));
`,Cz=NP({opSnippet:"return float(a >= b);",packedOpSnippet:CB,dtype:"bool",cpuKernelImpl:SS}),CV={kernelName:oc.GreaterEqual,backendName:"webgl",kernelFunc:Cz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const CG={kernelName:oc.IFFT,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{input:n}=t;return Cp(n,!0,r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const CU=NO({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),CW={kernelName:oc.IsFinite,backendName:"webgl",kernelFunc:CU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Cq=NO({opSnippet:"return float(isinf(x));",dtype:"bool"}),CH={kernelName:oc.IsInf,backendName:"webgl",kernelFunc:Cq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const CK=NO({opSnippet:"return float(isnan(x));",dtype:"bool"}),CX={kernelName:oc.IsNan,backendName:"webgl",kernelFunc:CK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const CZ=`
  return vec4(lessThan(a, b));
`,CQ=NP({opSnippet:"return float(a < b);",packedOpSnippet:CZ,cpuKernelImpl:SN,dtype:"bool"}),CY={kernelName:oc.Less,backendName:"webgl",kernelFunc:CQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const CJ=`
  return vec4(lessThanEqual(a, b));
`,C0=NP({opSnippet:"return float(a <= b);",packedOpSnippet:CJ,cpuKernelImpl:ST,dtype:"bool"}),C1={kernelName:oc.LessEqual,backendName:"webgl",kernelFunc:C0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const C2={kernelName:oc.LinSpace,backendName:"webgl",kernelFunc:function(e){let{backend:t,attrs:r}=e,{start:n,stop:a,num:s}=r,i=SI(n,a,s);return t.makeTensorInfo([i.length],"float32",i)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");// Windows chrome return 0 if the input is negative value. We will specifically
// return NaN if the input is 0 to solve compatiblity issue.
const C4=N_+`
  return x < 0.0 ? 0./0. : log(x);
`,C3=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,C8=NO({opSnippet:C4,packedOpSnippet:C3,cpuKernelImpl:SC}),C6={kernelName:oc.Log,backendName:"webgl",kernelFunc:C8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const C5=N_+`
  return log(1.0 + x);
`,C7=NO({opSnippet:C5}),C9={kernelName:oc.Log1p,backendName:"webgl",kernelFunc:C7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Ee=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Et=NP({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:Ee,dtype:"bool"}),Er={kernelName:oc.LogicalAnd,backendName:"webgl",kernelFunc:Et};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const En=NO({opSnippet:"return float(!(x >= 1.0));"}),Ea={kernelName:oc.LogicalNot,backendName:"webgl",kernelFunc:En};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Es=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Ei=NP({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:Es,dtype:"bool"}),Eo={kernelName:oc.LogicalOr,backendName:"webgl",kernelFunc:Ei};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class El{constructor(e,t,r,n,a){let s;this.variableNames=["x"],this.outputShape=[];let i=e[3]-1;this.outputShape=e;let o=`float(${r}) + float(${n}) * sum`;s=.5===a?`inversesqrt(${o})`:1===a?`1.0/(${o})`:`exp(log(${o}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${t}; j <= ${t}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${s};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eu{constructor(e,t,r,n,a){let s;this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let i=e[3]-1;this.outputShape=e;let o=`float(${r}) + float(${n}) * sum`;s=.5===a?`inversesqrt(${o})`:1===a?`1.0/(${o})`:`exp(log(${o}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${t};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${t}; j <= ${t}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${s};
        setOutput(result);
      }
    `}}const Ec={kernelName:oc.LRN,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n,u=(0,dd.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Eu(a.shape,s,i,o,l):new El(a.shape,s,i,o,l);return r.runWebGLProgram(u,[a],a.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ed{constructor(e,t,r,n,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=n,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${a})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}const Ep={kernelName:oc.LRNGrad,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=n,d=new Ed(a.shape,o,l,u,c);return r.runWebGLProgram(d,[a,s,i],a.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");function Eh(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{reductionIndices:i,keepDims:o}=a,l=s.shape.length,u=dh.parseAxisParam(i,s.shape),c=u,d=uc.getAxesPermutation(c,l),p=null!=d,h=n.shouldExecuteOnCPU([s]),f=s;if(p){if(h){let e=n.texData.get(f.dataId),t=e.values,r=Array(l);for(let e=0;e<r.length;e++)r[e]=s.shape[d[e]];let a=S2(t,s.shape,s.dtype,d,r);f=n.makeTensorInfo(r,s.dtype);let i=n.texData.get(f.dataId);i.values=a}else f=NK(s,d,n);c=uc.getInnerMostAxes(c.length,l)}uc.assertAxesAreInnerMostDims("max",c,l);let[m,g]=uc.computeOutAndReduceShapes(f.shape,c),y=m;if(o&&(y=uc.expandShapeToKeepDim(m,u)),h){let e=n.texData.get(f.dataId),r=e.values,a=SE(r,dh.sizeFromShape(g),y,s.dtype);t=n.makeTensorInfo(y,s.dtype);let i=n.texData.get(t.dataId);i.values=a}else t=function(e,t,r,n){let a=dh.sizeFromShape(t),s=dh.sizeFromShape(e.shape),i=s/a,o=Nz({inputs:{x:e},attrs:{shape:[i,a]},backend:n}),l=NW(o,e.dtype,"max",n),u=Nz({inputs:{x:l},attrs:{shape:r},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}(f,g,y,n);return p&&n.disposeIntermediateTensorInfo(f),t}const Ef={kernelName:oc.Max,backendName:"webgl",kernelFunc:Eh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Em=Ny+`
  return max(a, b);
`,Eg=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Nv+`
  return result;
`,Ey=NP({opSnippet:Em,packedOpSnippet:Eg,cpuKernelImpl:SA}),Eb={kernelName:oc.Maximum,backendName:"webgl",kernelFunc:Ey};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const Ev={kernelName:oc.MaxPool,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;kD(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;dh.assert(uc.eitherStridesOrDilationsAreOne(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);let u=uc.computePool2DInfo(a.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&dh.arraysEqual(u.inShape,u.outShape))return Nw({inputs:{x:a},backend:r});let c=new TC(u,"max",!1);return r.runWebGLProgram(c,[a],a.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const Ex={kernelName:oc.MaxPool3D,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=n,c=uc.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,l),d=new TE(c,"max",!1);return r.runWebGLProgram(d,[a],a.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ew{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,r=e.strideWidth,n=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${a*s-1} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class Ek{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,r=e.strideHeight,n=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,d=l-1-e.padInfo.top,p=u-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${o*l*u-1} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}const ES={kernelName:oc.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,c=uc.computePool3DInfo(s.shape,i,o,[1,1,1],l,u),d=new TE(c,"max",!0),p=r.runWebGLProgram(d,[s],s.dtype),h=new Ek(c),f=r.runWebGLProgram(h,[a,p],s.dtype);return r.disposeIntermediateTensorInfo(p),f}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const EN={kernelName:oc.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:s,output:i}=t;kD([s,i],"maxPoolGrad");let{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=n,d=uc.computePool2DInfo(s.shape,o,l,1/* dilations */,u,c),p=new TC(d,"max",!0),h=r.runWebGLProgram(p,[s],s.dtype),f=new Ew(d),m=r.runWebGLProgram(f,[a,h],s.dtype);return r.disposeIntermediateTensorInfo(h),m}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418"),dh=A("jjNRA"),uc=A("7MaPk");const ET={kernelName:oc.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t;dh.assert(4===n.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let l=[1,1];dh.assert(uc.eitherStridesOrDilationsAreOne(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);let u=uc.computePool2DInfo(n.shape,a,s,l,i),[c,d]=/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n){let a=new TC(r,"max",!1),s=n.runWebGLProgram(a,[e],"float32");a=new TC(r,"max",!0,!0,t);let i=n.runWebGLProgram(a,[e],"float32");return[s,i]}(n,o,u,r);return[c,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418"),dh=A("jjNRA"),uc=A("7MaPk");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA");const EI={kernelName:oc.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{keepDims:a,axis:s}=t,i=n.shape.length,o=dh.parseAxisParam(s,n.shape),l=o,u=uc.getAxesPermutation(l,i),c=null!=u,d=r.shouldExecuteOnCPU([n]),p=[],h=n;if(c){if(d){let e=r.texData.get(h.dataId),t=e.values,a=Array(i);for(let e=0;e<a.length;e++)a[e]=n.shape[u[e]];let s=S2(t,n.shape,n.dtype,u,a);h=r.makeTensorInfo(a,n.dtype);let o=r.texData.get(h.dataId);o.values=s}else h=NK(n,u,r);p.push(h),l=uc.getInnerMostAxes(l.length,i)}uc.assertAxesAreInnerMostDims("sum",l,i);let[f,m]=uc.computeOutAndReduceShapes(h.shape,l),g=f;a&&(g=uc.expandShapeToKeepDim(f,o));let y=function(e,t,r,n){let a=dh.sizeFromShape(t),s=dh.sizeFromShape(e.shape),i=s/a,o=Nz({inputs:{x:e},attrs:{shape:[i,a]},backend:n}),l=NW(o,"float32","mean",n),u=Nz({inputs:{x:l},attrs:{shape:r},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}(h,m,g,r);for(let e of p)r.disposeIntermediateTensorInfo(e);return y}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const EC={kernelName:oc.Min,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{axis:i,keepDims:o}=a,l=s.shape.length,u=dh.parseAxisParam(i,s.shape),c=u,d=uc.getAxesPermutation(c,l),p=s;null!=d&&(p=NQ({inputs:{x:s},backend:n,attrs:{perm:d}}),c=uc.getInnerMostAxes(c.length,s.shape.length)),uc.assertAxesAreInnerMostDims("min",c,l);let[h,f]=uc.computeOutAndReduceShapes(p.shape,c),m=dh.sizeFromShape(f),g=Nz({inputs:{x:p},backend:n,attrs:{shape:[-1,m]}}),y=NW(g,g.dtype,"min",n);if(o){let e=uc.expandShapeToKeepDim(h,u);t=Nz({inputs:{x:y},backend:n,attrs:{shape:e}})}else t=Nz({inputs:{x:y},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),null!=d&&n.disposeIntermediateTensorInfo(p),t}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const EE=Ny+`
  return min(a, b);
`,EA=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Nv+`
  return result;
`,ER=NP({opSnippet:EE,packedOpSnippet:EA,cpuKernelImpl:SR}),E_={kernelName:oc.Minimum,backendName:"webgl",kernelFunc:ER};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EO{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let n=e.length,a=kQ(n),s=t.map(e=>e[0]).join(","),i=t.map((t,r)=>t[0]+e[r]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),l="reflect"===r?0:1;if(1===n){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EP{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let n=e.length,a=kQ(n),s=t.map(e=>e[0]).join(","),i=t.map((t,r)=>t[0]+e[r]).join(","),o=S8("rc",n),l=S8("source",n),u=`${o[n-1]} < ${this.outputShape[n-1]}`,c=1===n?"source":`vec2(${l.slice(-2).join()})`,d="reflect"===r?0:1,p="";if(1===n){let e=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${a} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${o[n-1]} += 1;
        if(${u}) {
          ${e}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
      `}else{let e=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${a} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${l.join()}), ${c});
        ${o[n-1]} += 1;
        if(${u}) {
          ${e}
          result[1] = getChannel(getX(${l.join()}), ${c});
        }
        rc = outputLoc;
        ${o[n-2]} += 1;
        if(${o[n-2]} < ${this.outputShape[n-2]}) {
          ${e}
          result[2] = getChannel(getX(${l.join()}), ${c});
          ${o[n-1]} += 1;
          if(${u}) {
            ${e}
            result[3] = getChannel(getX(${l.join()}), ${c});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}const E$={kernelName:oc.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n}=e,{paddings:a,mode:s}=r,i=(0,dd.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EP(n.shape,a,s):new EO(n.shape,a,s),o=t.runWebGLProgram(i,[n],n.dtype);return o}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const ED=`if (b == 0.0) return NAN;
  return mod(a, b);`,EM=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Nv+`
  return result;
`,EF=NP({opSnippet:ED,packedOpSnippet:EM}),EL={kernelName:oc.Mod,backendName:"webgl",kernelFunc:EF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ej{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");// Without the equality check div produces 0.9999 for a = b, which when
// floored can cause errors.
const EB=`
if (a == b) {
  return 1.0;
};
return a / b;`,Ez=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,EV=NP({opSnippet:EB,packedOpSnippet:Ez,checkOutOfBounds:!0}),EG={kernelName:oc.RealDiv,backendName:"webgl",kernelFunc:EV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const EU="return a - b;",EW=NP({opSnippet:EU,packedOpSnippet:EU,supportsComplex:!0,cpuKernelImpl:SJ}),Eq={kernelName:oc.Sub,backendName:"webgl",kernelFunc:EW};function EH(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{dim:s}=n,i=dh.parseAxisParam([s],a.shape),o=Eh({inputs:{x:a},backend:r,attrs:{reductionIndices:i,keepDims:!1}}),l=uc.expandShapeToKeepDim(o.shape,i),u=Nz({inputs:{x:o},backend:r,attrs:{shape:l}}),c=EW({inputs:{a:a,b:u},backend:r}),d=Ca({inputs:{x:c},backend:r}),p=NX({inputs:{x:d},backend:r,attrs:{axis:i,keepDims:!1}}),h=Nz({inputs:{x:p},backend:r,attrs:{shape:l}}),f=EV({inputs:{a:d,b:h},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(u),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),f}const EK={kernelName:oc.Softmax,backendName:"webgl",kernelFunc:EH},EX={kernelName:oc.Multinomial,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=n,l=o?a:EH({inputs:{logits:a},backend:r,attrs:{dim:a.shape.length-1}}),u=l.shape[0],c=l.shape[1],d=new Ej(u,c,s),p=r.runWebGLProgram(d,[l],"int32",[[i]]);return o||r.disposeIntermediateTensorInfo(l),p}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),oc=A("hl418");const EZ=Nn+`
  return -x;
`,EQ=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,EY={kernelName:oc.Neg,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n}=e,{x:a}=r;if(n.shouldExecuteOnCPU([a])){let e=n.texData.get(a.dataId),[t,r]=SO(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}return t=(0,dd.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Nd(a.shape,EQ):new Nr(a.shape,EZ),n.runWebGLProgram(t,[a],a.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gU=A("lzjc8"),uc=A("7MaPk"),oc=A("hl418");const EJ=gU.nonMaxSuppressionV3Impl,E0={kernelName:oc.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){uc.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=n,u=r.readSync(a.dataId),c=r.readSync(s.dataId),{selectedIndices:d}=EJ(u,c,i,o,l);return r.makeTensorInfo([d.length],"int32",new Int32Array(d))}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gU=A("lzjc8"),uc=A("7MaPk"),oc=A("hl418");const E1=gU.nonMaxSuppressionV4Impl,E2={kernelName:oc.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){uc.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=n,c=r.readSync(a.dataId),d=r.readSync(s.dataId),{selectedIndices:p,validOutputs:h}=E1(c,d,i,o,l,u);return[r.makeTensorInfo([p.length],"int32",new Int32Array(p)),r.makeTensorInfo([],"int32",new Int32Array([h]))]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var gU=A("lzjc8"),uc=A("7MaPk"),oc=A("hl418");const E4=gU.nonMaxSuppressionV5Impl,E3={kernelName:oc.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){uc.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=n,c=r.readSync(a.dataId),d=r.readSync(s.dataId),{selectedIndices:p,selectedScores:h}=E4(c,d,i,o,l,u);return[r.makeTensorInfo([p.length],"int32",new Int32Array(p)),r.makeTensorInfo([h.length],"float32",new Float32Array(h))]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E8{constructor(e,t,r,n){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${r}),
                      float(index == coords.y)));
      }
    `}}const E6={kernelName:oc.OneHot,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:l}=n,u=dh.sizeFromShape(a.shape),c=new E8(u,i,o,l),d=Nz({inputs:{x:a},backend:r,attrs:{shape:[u]}}),p=r.runWebGLProgram(c,[d],s);r.disposeIntermediateTensorInfo(d);let h=[...a.shape,i],f=Nz({inputs:{x:p},backend:r,attrs:{shape:h}});return r.disposeIntermediateTensorInfo(p),f}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");function E5(e){let{inputs:t,backend:r}=e,{x:n}=t;if("complex64"!==n.dtype)return Cm({attrs:{shape:n.shape,dtype:n.dtype,value:"string"===n.dtype?"":0},backend:r});{let e=TY({inputs:{input:n},backend:r}),t=E5({inputs:{x:e},backend:r}),a=In({inputs:{input:n},backend:r}),s=E5({inputs:{x:a},backend:r}),i=NS({inputs:{real:t,imag:s},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(s),i}}const E7={kernelName:oc.ZerosLike,backendName:"webgl",kernelFunc:E5},E9={kernelName:oc.OnesLike,backendName:"webgl",kernelFunc:function e(t){let{inputs:r,backend:n}=t,{x:a}=r;if("string"===a.dtype)throw Error("onesLike is not supported under string dtype");if("complex64"!==a.dtype)//   https://github.com/tensorflow/tfjs/issues/1293
return Cm({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:n});{let t=TY({inputs:{input:a},backend:n}),r=e({inputs:{x:t},backend:n}),s=In({inputs:{input:a},backend:n}),i=E5({inputs:{x:s},backend:n}),o=NS({inputs:{real:r,imag:i},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),oc=A("hl418");const Ae={kernelName:oc.Pack,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n;if(1===t.length)return Ci({inputs:{input:t[0]},backend:r,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(e=>{dh.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),dh.assert(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],l=t.map(e=>{let t=Ci({inputs:{input:e},backend:r,attrs:{dim:a}});return o.push(t),t}),u=Is({inputs:l,backend:r,attrs:{axis:a}});return o.forEach(e=>r.disposeIntermediateTensorInfo(e)),u}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),dd=A("ibsdL"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class At{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let n=e.length,a=kQ(n),s=t.map(e=>e[0]).join(","),i=t.map((t,r)=>t[0]+e[r]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(1===n){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ar{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let n=e.length,a=kQ(n),s=t.map(e=>e[0]).join(","),i=t.map((t,r)=>t[0]+e[r]).join(","),o=S8("rc",n),l=S8("source",n),u=`${o[n-1]} < ${this.outputShape[n-1]}`,c=1===n?"source":`vec2(${l.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[n-1]} += 1;
       if(${u}) {
      `,1===n?"":`}
       rc = outputLoc;
       ${o[n-2]} += 1;
       if(${o[n-2]} < ${this.outputShape[n-2]}) {`,1===n?"":`  ${o[n-1]} += 1;
         if(${u}) {`],p=1===n?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let e=0,t=1===n?2:4;e<t;e++)h+=`
        ${d[e]}
        if (${p}) {
          result[${e}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${e}] = getChannel(getX(${l.join()}), ${c});
        }
      `;h+=1===n?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}}const An=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:s,constantValue:i}=n;if(0===dh.sizeFromShape(a.shape)){// Short-circuit the computation, since x doesn't have value, only
// the shape is used to compute output shape to pad.
let e=s.map((e,t)=>e[0]+a.shape[t]+e[1]);return Cm({backend:r,attrs:{shape:e,value:i,dtype:a.dtype}})}let o=(0,dd.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ar(a.shape,s,i):new At(a.shape,s,i),l=[[i]];return r.runWebGLProgram(o,[a],a.dtype,l)},Aa={kernelName:oc.PadV2,backendName:"webgl",kernelFunc:An};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const As=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Ai=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Nv+`
  return result;
`,Ao=NP({opSnippet:As,packedOpSnippet:Ai}),Al={kernelName:oc.Pow,backendName:"webgl",kernelFunc:Ao};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),bA=A("2MDja"),oc=A("hl418");const Au={kernelName:oc.Prod,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{axis:i,keepDims:o}=a,l=s.shape.length,u=[],c=dh.parseAxisParam(i,s.shape),d=c,p=uc.getAxesPermutation(d,l),h=s;if(null!=p&&(h=NQ({inputs:{x:s},backend:n,attrs:{perm:p}}),d=uc.getInnerMostAxes(d.length,l),u.push(h)),uc.assertAxesAreInnerMostDims("prod",d,l),n.shouldExecuteOnCPU([h])){let e=n.texData.get(h.dataId).values,{outVals:r,outShape:a,outDtype:s}=S$(h.shape,h.dtype,e,d);t=n.makeTensorInfo(a,s,r)}else{let[e,r]=uc.computeOutAndReduceShapes(h.shape,d),a=dh.sizeFromShape(r),i=Nz({inputs:{x:h},backend:n,attrs:{shape:[-1,a]}}),o=(0,bA.sumOutType)(s.dtype),l=NW(i,o,"prod",n);t=Nz({inputs:{x:l},backend:n,attrs:{shape:e}}),u.push(i),u.push(l)}if(o){u.push(t);let e=uc.expandShapeToKeepDim(t.shape,c);t=Nz({inputs:{x:t},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),t}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Ac={kernelName:oc.RaggedGather,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=n,l=a.map(e=>r.readSync(e.dataId)),u=a.map(e=>e.shape),c=r.readSync(s.dataId),d=r.readSync(i.dataId),[p,h,f]=SD(l,u,c,s.shape,s.dtype,d,i.shape,o),m=p.map(e=>r.makeTensorInfo([e.length],"int32",e)),g=r.makeTensorInfo(f,s.dtype,h);return m.concat([g])}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Ad={kernelName:oc.RaggedRange,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{starts:n,limits:a,deltas:s}=t,i=r.readSync(n.dataId),o=r.readSync(a.dataId),l=r.readSync(s.dataId),[u,c]=SM(i,n.shape,n.dtype,o,a.shape,l,s.shape),d=r.makeTensorInfo([u.length],"int32",u),p=r.makeTensorInfo([c.length],n.dtype,c);return[d,p]}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Ap={kernelName:oc.RaggedTensorToTensor,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=n,u=r.readSync(a.dataId),c=r.readSync(s.dataId),d=r.readSync(i.dataId),p=o.map(e=>r.readSync(e.dataId)),h=o.map(e=>e.shape),[f,m]=SF(u,a.shape,c,s.shape,s.dtype,d,i.shape,p,h,l);return r.makeTensorInfo(f,s.dtype,m)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Ah=e=>{let{backend:t,attrs:r}=e,{start:n,stop:a,step:s,dtype:i}=r,o=SL(n,a,s,i);return t.makeTensorInfo([o.length],i,o)},Af={kernelName:oc.Range,backendName:"webgl",kernelFunc:Ah};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Am=NO({opSnippet:"return 1.0 / x;"}),Ag={kernelName:oc.Reciprocal,backendName:"webgl",kernelFunc:Am};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Ay=Nn+`
  return (x < 0.0) ? 0.0 : x;
`,Ab=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Av=NO({opSnippet:Ay,packedOpSnippet:Ab}),Ax={kernelName:oc.Relu,backendName:"webgl",kernelFunc:Av};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Aw=Nn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ak=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,AS=NO({opSnippet:Aw,packedOpSnippet:Ak}),AN={kernelName:oc.Relu6,backendName:"webgl",kernelFunc:AS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AT{constructor(e,t,r,n,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,r,l];let u=[n&&t>1?i-1:i,n&&r>1?o-1:o],c=[n&&t>1?t-1:t,n&&r>1?r-1:r];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/c[0]},
          ${u[1]/c[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AI{constructor(e,t,r,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,r,l];let u=[n&&t>1?i-1:i,n&&r>1?o-1:o],c=[n&&t>1?t-1:t,n&&r>1?r-1:r];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/c[0]},
          ${u[1]/c[1]},
          ${u[1]/c[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}const AC={kernelName:oc.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[l,u]=o,c=(0,dd.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new AI(a.shape,l,u,s,i):new AT(a.shape,l,u,s,i);return r.runWebGLProgram(c,[a],"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AE{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,a]=t,[,s,i]=e,o=[r&&s>1?n-1:n,r&&i>1?a-1:a],l=[r&&s>1?s-1:s,r&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],d=1/u,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${c});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}const AA={kernelName:oc.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n,o=new AE(s.shape,a.shape,i);return r.runWebGLProgram(o,[s],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),oc=A("hl418");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AR{constructor(e,t,r,n,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,r,l];let u=[n&&t>1?i-1:i,n&&r>1?o-1:o],c=[n&&t>1?t-1:t,n&&r>1?r-1:r];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/c[0]},
          ${u[1]/c[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${n?"0.5":"0.0"})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class A_{constructor(e,t,r,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,r,l];let u=[n&&t>1?i-1:i,n&&r>1?o-1:o],c=[n&&t>1?t-1:t,n&&r>1?r-1:r];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/c[0]},
          ${u[1]/c[1]},
          ${u[1]/c[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC"};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${n?"0.5":"0.0"})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}const AO={kernelName:oc.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=n,[l,u]=o,c=(0,dd.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new A_(a.shape,l,u,s,i):new AR(a.shape,l,u,s,i);return r.runWebGLProgram(c,[a],a.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AP{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,a]=t,[,s,i]=e,o=[r&&s>1?n-1:n,r&&i>1?a-1:a],l=[r&&s>1?s-1:s,r&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],d=1/u,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${c});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}const A$={kernelName:oc.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:s}=t,{alignCorners:i}=n,o=new AP(s.shape,a.shape,i);return r.runWebGLProgram(o,[s],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),dd=A("ibsdL"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AD{constructor(e,t){this.variableNames=["x"];let r=e.length;if(r>4)throw Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,1===r){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let n=r=>-1!==t.indexOf(r)&&1!==e[r]?`${e[r]} - coords[${r}] - 1`:`coords[${r}]`,a=e.map((e,t)=>n(t)).join(","),s=kQ(r);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AM{constructor(e,t){var r,n,a;this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let s=e.length;if(s>4)throw Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;let i=S8("rc",s),o=`${i[s-1]} + 1 < ${this.outputShape[s-1]}`,l=`${i[s-2]} + 1 < ${this.outputShape[s-2]}`,u=kQ(s);function c(r){let n=e.map((n,a)=>-1!==t.indexOf(a)&&1!==e[a]?`${e[a]} - ${r[a]} - 1`:`${r[a]}`),a=n.join(","),s=n.slice(-2).join(",");return`getChannel(getX(${a}), vec2(${s}))`}1===s?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${u} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${c(i.slice())};
          if(${o}){
            result.g = ${(r=i.slice())[s-1]="("+r[s-1]+" + 1)",c(r)};
          }
          if(${l}) {
            result.b = ${(n=i.slice())[s-2]="("+n[s-2]+" + 1)",c(n)};
            if(${o}) {
              result.a = ${(a=i.slice())[s-1]="("+a[s-1]+" + 1)",a[s-2]="("+a[s-2]+" + 1)",c(a)};
            }
          }
          setOutput(result);
        }
    `}}const AF={kernelName:oc.Reverse,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dims:s}=n,i=a.shape.length,o=dh.parseAxisParam(s,a.shape);if(0===i)return Nw({inputs:{x:a},backend:r});let l=(0,dd.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AM(a.shape,o):new AD(a.shape,o);return r.runWebGLProgram(l,[a],a.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418"),uc=A("7MaPk");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AL{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let r=e[1],n=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}const Aj={kernelName:oc.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,{radians:a,fillValue:s,center:i}=t,o=new AL(n.shape,s),[l,u]=uc.getImageCenter(i,n.shape[1],n.shape[2]),c=[[l,u,Math.sin(a),Math.cos(a)]],d=r.runWebGLProgram(o,[n],n.dtype,c);return d}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const AB=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Az=NO({opSnippet:AB}),AV={kernelName:oc.Round,backendName:"webgl",kernelFunc:Az};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const AG=NO({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Sj}),AU={kernelName:oc.Rsqrt,backendName:"webgl",kernelFunc:AG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dd=A("ibsdL"),oc=A("hl418");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AW{constructor(e,t,r,n,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let l=kQ(a.length),u=kQ(s.length),c="";1===r?c="i":2===r&&(c="i, j");let d=`getIndices(${c})`,p="";1===n?p="i":2===n&&(p="i, coords[1]");let h=`getUpdates(${p})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`;this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${t>1?"strides[j]":"strides"};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${h};
              found = true;
            }
          }
          setOutput(mix(${m}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Aq{constructor(e,t,r,n,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let l=kQ(a.length),u=kQ(s.length),c="";1===r?c="i":2===r&&(c="i, j");let d=`getIndices(${c})`,p="";1===n?p="i":2===n&&(p="i, coords[1]");let h=`getUpdates(${p})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`;this.userCode=`
        ${l} strides = ${l}(${a});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${t>1?"strides[j]":"strides"};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${t>1?"strides[j + 1]":"strides"};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${h};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${m}, sum, found));
        }
      `}}const AH={kernelName:oc.ScatterNd,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{indices:s,updates:i}=r,{shape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:p}=uc.calculateShapes(i,s,o),h=[p/c,c];if(0===p)return n.makeTensorInfo(o,s.dtype);let f=Nz({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=Nz({inputs:{x:i},backend:n,attrs:{shape:[u,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));t=(0,dd.env)().getBool("WEBGL_PACK")?new Aq(u,l,f.shape.length,m.shape.length,d,h):new AW(u,l,f.shape.length,m.shape.length,d,h);let y=n.runWebGLProgram(t,[m,f,g],m.dtype),b=Nz({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),b}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL");class AK{constructor(e,t,r,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];// WebGL1 doesn't accept non constant loop conditions, so upper bound loop
// iterations.
let a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===(0,dd.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":a;this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${s}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${"left"===n?"<":"<="} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}const AX={kernelName:oc.SearchSorted,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{sortedSequence:a,values:s}=t,{side:i}=n,o=new AK(a.shape[0],a.shape[1],s.shape[1],i),l=[[a.shape[1]]];return r.runWebGLProgram(o,[a,s],"int32",l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var bA=A("2MDja"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AZ{constructor(e,t,r){let n,a;if(this.variableNames=["c","a","b"],this.outputShape=t,r>4)throw Error(`Where for rank ${r} is not yet supported`);if(1===r)a="resRC",n="resRC";else{let r=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let n=0;n<t.length;n++)i.push(`${r[n]}`),n<e&&s.push(`${r[n]}`);n=s.join(),a=i.join()}let s=kQ(r);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}}const AQ={kernelName:oc.Select,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{condition:n,t:a,e:s}=t,i=new AZ(n.shape.length,a.shape,a.shape.length);return r.runWebGLProgram(i,[n,a,s],(0,bA.upcastType)(a.dtype,s.dtype))}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const AY=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${uc.SELU_SCALEALPHA};
  float scale = ${uc.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,AJ=NO({opSnippet:AY}),A0={kernelName:oc.Selu,backendName:"webgl",kernelFunc:AJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const A1=N_+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,A2=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,A4=NO({opSnippet:A1,packedOpSnippet:A2,cpuKernelImpl:Sz}),A3={kernelName:oc.Sigmoid,backendName:"webgl",kernelFunc:A4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");// Sign does not propagate NANs.
const A8=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,A6=NO({opSnippet:A8}),A5={kernelName:oc.Sign,backendName:"webgl",kernelFunc:A6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const A7=N_+`
  return sin(x);
`,A9=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Nv}
  return result;
`,Re=NO({opSnippet:A7,packedOpSnippet:A9}),Rt={kernelName:oc.Sin,backendName:"webgl",kernelFunc:Re};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Rr=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Rn=NO({opSnippet:Rr}),Ra={kernelName:oc.Sinh,backendName:"webgl",kernelFunc:Rn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Rs=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Ri=NO({opSnippet:Rs}),Ro={kernelName:oc.Softplus,backendName:"webgl",kernelFunc:Ri};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const Rl={kernelName:oc.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:s,paddings:i}=n;dh.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((e,t)=>e*t),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);let u=[],c=An({inputs:{x:a},backend:r,attrs:{paddings:l,constantValue:0}}),d=uc.getReshaped(c.shape,s,o,!1),p=uc.getPermuted(d.length,s.length,!1),h=uc.getReshapedPermuted(c.shape,s,o,!1),f=Nz({inputs:{x:c},backend:r,attrs:{shape:d}}),m=NQ({inputs:{x:f},backend:r,attrs:{perm:p}}),g=Nz({inputs:{x:m},backend:r,attrs:{shape:h}});return u.push(c),u.push(f),u.push(m),u.forEach(e=>r.disposeIntermediateTensorInfo(e)),g}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Ru={kernelName:oc.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{indices:n,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(2!==n.shape.length)throw Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(1!==a.shape.length)throw Error(`Values must be a vector, saw:
         ${a.shape}`);if(0!==i.shape.length)throw Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=r.readSync(n.dataId),l=r.readSync(a.dataId),u=r.readSync(s.dataId),c=r.readSync(i.dataId)[0],[d,p,h,f,m]=SU(o,n.shape,n.dtype,l,a.dtype,u,c);return[r.makeTensorInfo(p,n.dtype,d),r.makeTensorInfo([p[0]],a.dtype,h),r.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),r.makeTensorInfo([m.length],n.dtype,new Int32Array(m))]}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Rc={kernelName:oc.SparseReshape,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{inputIndices:n,inputShape:a,newShape:s}=t;if(2!==n.shape.length)throw Error(`Input indices should be a matrix but received shape ${n.shape}`);if(1!==a.shape.length)throw Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(r.readSync(a.dataId)),o=r.readSync(n.dataId),l=Array.from(r.readSync(s.dataId)),[u,c,d]=SW(o,n.shape,n.dtype,i,l);return[r.makeTensorInfo(c,n.dtype,u),r.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Rd={kernelName:oc.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
              ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=r.readSync(n.dataId),o=r.readSync(a.dataId),l=r.readSync(s.dataId),[u,c]=Sq(i,n.shape,n.dtype,o,l,!0);return r.makeTensorInfo(c,n.dtype,u)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Rp={kernelName:oc.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:s}=t;if(n.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
             ${a.shape}`);if(1!==s.shape.length)throw Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=r.readSync(n.dataId),o=r.readSync(a.dataId),l=r.readSync(s.dataId),[u,c]=Sq(i,n.shape,n.dtype,o,l);return r.makeTensorInfo(c,n.dtype,u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA"),oc=A("hl418");const Rh={kernelName:oc.SparseToDense,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=n,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:p}=uc.calculateShapes(s,a,o);if("string"===s.dtype){let e=r.bufferSync(a),t=r.bufferSync(s),n=dh.decodeString(r.readSync(i.dataId)[0]),h=SB(e,t,o,p,c,u,l,d,n,!1);return r.makeTensorInfo(o,h.dtype,h.values)}let h=new AW(u,l,a.shape.length,s.shape.length,d,[p,1],!1),f=r.runWebGLProgram(h,[s,a,i],s.dtype),m=Nz({inputs:{x:f},backend:r,attrs:{shape:o}});return r.disposeIntermediateTensorInfo(f),m}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),uc=A("7MaPk"),oc=A("hl418");const Rf={kernelName:oc.SplitV,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=dh.parseAxisParam(i,a.shape)[0],l=uc.prepareSplitSize(a,s,o),u=a.shape.length,c=Array(u).fill(0),d=a.shape.slice();return l.map(e=>{let t=[...d];t[o]=e;let n=TV({inputs:{x:a},backend:r,attrs:{begin:c,size:t}});return c[o]+=e,n})}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Rm="return sqrt(x);",Rg=NO({opSnippet:Rm,packedOpSnippet:Rm,cpuKernelImpl:SH}),Ry={kernelName:oc.Sqrt,backendName:"webgl",kernelFunc:Rg};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Rb=NO({opSnippet:"return x * x;"}),Rv={kernelName:oc.Square,backendName:"webgl",kernelFunc:Rb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Rx="return (a - b) * (a - b);",Rw=NP({opSnippet:Rx,packedOpSnippet:Rx}),Rk={kernelName:oc.SquaredDifference,backendName:"webgl",kernelFunc:Rw};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const RS={kernelName:oc.StaticRegexReplace,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;if("string"!==a.dtype)throw Error("Input must be of datatype string");let s=r.readSync(a.dataId),i=uc.fromUint8ToStringArray(s),o=SK(i,"string",n);return r.makeTensorInfo(a.shape,"string",o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const RN={kernelName:oc.Step,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:r}){let{x:n}=e,a=Nn+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new Nr(n.shape,a);return r.runWebGLProgram(s,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uD=A("bszZn"),dh=A("jjNRA"),gq=A("iG87S"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RT{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;let n=r.length,a=kQ(r.length),s=kQ(r.length),i="";if(1===n)i="coords * strides + begin";else{let e=0;i=r.map((t,n)=>(e++,1===r.length?`coords * strides[${n}] + begin[${n}]`:`coords[${e-1}] * strides[${n}] + begin[${n}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}const RI={kernelName:oc.StridedSlice,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:s}=r,{begin:i,end:o,strides:l,beginMask:u,endMask:c,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:v,end:x,strides:w}=uD.sliceInfo(s.shape,i,o,l,u,c,d,p,h);if(g)t=Nz({inputs:{x:s},backend:n,attrs:{shape:m}});else if(y||b){dh.assert(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);let e=uD.computeOutShape(v,x,w),r=TV({inputs:{x:s},backend:n,attrs:{begin:v,size:e}});t=Nz({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(r)}else{let e=n.shouldExecuteOnCPU([s]);if(e){// tslint:disable-next-line: no-unnecessary-type-assertion
let e=n.readSync(s.dataId),r=(0,gq.buffer)(s.shape,s.dtype,e),a=SX(f,r,w,v);t=n.makeTensorInfo(m,s.dtype,a.values)}else{let e=new RT(v,w,f);t=n.runWebGLProgram(e,[s],s.dtype)}}let k=Nz({inputs:{x:t},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(t),k}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const RC={kernelName:oc.StringNGrams,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=n,{data:c,dataSplits:d}=t,p=r.readSync(c.dataId),h=r.readSync(d.dataId),[f,m]=SZ(p,h,a,s,i,o,l,u);return[r.makeTensorInfo([f.length],"string",f),r.makeTensorInfo(d.shape,"int32",m)]}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const RE={kernelName:oc.StringSplit,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{skipEmpty:a}=n,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(1!==s.shape.length)throw Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=r.readSync(s.dataId),l=r.readSync(i.dataId)[0],[u,c,d]=SQ(o,l,a),p=c.length;return[r.makeTensorInfo([p,2],"int32",u),r.makeTensorInfo([p],"string",c),r.makeTensorInfo([2],"int32",new Int32Array(d))]}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const RA={kernelName:oc.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{numBuckets:a}=n,{input:s}=t;if("string"!==s.dtype)throw Error("Input must be of datatype string");if(a<=0)throw Error("Number of buckets must be at least 1");let i=r.readSync(s.dataId),o=SY(i,a);return r.makeTensorInfo(s.shape,"int32",o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const RR=NO({opSnippet:"return tan(x);"}),R_={kernelName:oc.Tan,backendName:"webgl",kernelFunc:RR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const RO=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,RP=NO({opSnippet:RO}),R$={kernelName:oc.Tanh,backendName:"webgl",kernelFunc:RP};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),oc=A("hl418");const RD={kernelName:oc.TensorScatterUpdate,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{tensor:a,indices:s,updates:i}=t,{}=n,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=uc.calculateShapes(i,s,a.shape),p=[d/u,u];if(0===d)return r.makeTensorInfo(a.shape,s.dtype);let h=Nz({inputs:{x:s},backend:r,attrs:{shape:[l,o]}}),f=Nz({inputs:{x:i},backend:r,attrs:{shape:[l,u]}}),m=Nz({inputs:{x:a},backend:r,attrs:{shape:p}}),g=new AW(l,o,h.shape.length,f.shape.length,c,p,!1,!0),y=r.runWebGLProgram(g,[f,h,m],m.dtype),b=Nz({inputs:{x:y},backend:r,attrs:{shape:a.shape}});return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(y),b}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dh=A("jjNRA"),gq=A("iG87S"),oc=A("hl418");/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RM{constructor(e,t){this.variableNames=["A"];let r=Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[n]*t[n];this.outputShape=r,this.rank=r.length;let n=kQ(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let r=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let t=0;t<e.length;t++)n.push(`imod(${r[t]}, ${e[t]})`);return n.join()}(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}}function RF(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reps:s}=n;// tile gpu program cannot handle rank > 5 case.
if("string"===a.dtype||a.shape.length>5){// Even thought string tensor is always on CPU, just to be consistent on how
// to access tensor data.
let e=r.readSync(a.dataId),t="string"===a.dtype?e.map(e=>dh.decodeString(e)):e,n=(0,gq.buffer)(a.shape,a.dtype,t),i=S0(n,s);return r.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new RM(a.shape,s),o=r.runWebGLProgram(i,[a],a.dtype);return o}const RL={kernelName:oc.Tile,backendName:"webgl",kernelFunc:RF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var dd=A("ibsdL"),dh=A("jjNRA"),oc=A("hl418");// Based on Algorithm 2 of Bitonic Top K, ref:
// https://anilshanbhag.in/static/papers/gputopk_sigmod18.pdf
// The original algorithm is based on computing the top K only, however
// since for TFJS we require the indices of the top K values as well then the
// algorithm found here is a bit modified. Rather than producing the values
// at each step, the indices containing the top K are generated instead.
// The output values are not generated to reduce the number of outputs in the
// GPU, the values can easily be retrieved from the indices using a gather
// op.
class Rj{/**
     * @param shape desired output shape (can be larger than input shape, output
     *                                    will be padded with -Infinity)
     */constructor(e){this.variableNames=["x","indices"],// |n| Size of the original input of TopK.
// |firstPass|indicates if this is the first time swap is being used which
// means no indices input containing the top K is present yet.
// |inc| Swaps pairs of indices (0, inc), (1, inc + 1), (2, inc + 2) ...
this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class RB{/**
     * @param shape desired output shape (must be half of the input size)
     */constructor(e){this.variableNames=["x","indices"],// |n| Size of the original input of TopK
// |firstPass| indicates if this is the first time swap is being used which
// means no indices input containing the top K is present yet.
// |k| Top k elements desired
this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}function Rz(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function RV(e){let t=1;for(;t<e;)t*=2;return t}const RG={kernelName:oc.TopK,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{k:s,sorted:i}=n,o=(0,dd.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,dd.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=a.shape,c=u[u.length-1];if(r.shouldExecuteOnCPU([a])||c<o||s>l){let e=r.readSync(a.dataId),[t,n]=S1(e,u,a.dtype,s,i);return[r.makeTensorInfo(t.shape,t.dtype,t.values),r.makeTensorInfo(n.shape,n.dtype,n.values)]}if(0===s)return u[u.length-1]=0,[r.makeTensorInfo(u,a.dtype,[]),r.makeTensorInfo(u,"int32",[])];if(1/* firstPass */===c)return[a,Cm({attrs:{shape:u,dtype:"int32",value:0},backend:r})];// Eagerly unpack x input since it is passed in to all the shaders which
// require unpacked inputs.
let d=r.texData.get(a.dataId),p=null!==d&&d.isPacked,h=p?r.unpackTensor(a):a,f=dh.sizeFromShape(u),m=f/c,g=Nz({inputs:{x:h},attrs:{shape:[m,c]},backend:r});p&&Rz(r,h);let y=RV(s),b=RV(c),v=null,x=()=>null===v?[g,g]:[g,v],w=(e,t,n)=>{let a=x(),s=new Rj(n),i=null===v?1:0,o=[[c],[i],[Number.NEGATIVE_INFINITY],[e],[t]],l=v;v=r.runWebGLProgram(s,a,"int32",o),Rz(r,l)};// Step 1: local sort
for(let e=1;e<y;e*=2){let t=2*e;for(let r=e;r>=1;r/=2)w(t,r,[m,b])}// Step 2: merge
for(let e=b;e>y;e/=2){let t=x(),n=new RB([m,e/2]),a=null===v?1:0,s=[[c],[a],[y]],i=v;v=r.runWebGLProgram(n,t,"int32",s),Rz(r,i);// Step 3: rebuild
let o=y/2,l=2*o;for(let e=o;e>=1;e/=2)w(l,e,v.shape)}// Keep only the requested top K results instead of kPow2
let k=v;v=TV({inputs:{x:v},backend:r,attrs:{begin:0,size:[m,s]}}),Rz(r,k);// Gather values on last dimension
let S=CD({inputs:{x:g,indices:v},backend:r,attrs:{axis:1,batchDims:1}});Rz(r,g);// Reshape back to the original input shape, except that the last
// dimension is k.
let N=u.slice(0,-1);N.push(s),k=v,v=Nz({inputs:{x:v},attrs:{shape:N},backend:r}),Rz(r,k);let T=S;return S=Nz({inputs:{x:S},attrs:{shape:N},backend:r}),Rz(r,T),[S,v]}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RU{constructor(e,t,r,n,a,s){let i;switch(this.variableNames=["Image","Transforms"],this.outputShape=s,n){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${i} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${i} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${"nearest"===r?1:2} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}const RW={kernelName:oc.Transform,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,d,p,h]=a.shape,[f,m]=null!=u?u:[d,p],g=new RU(d,p,i,o,l,[c,f,m,h]);return r.runWebGLProgram(g,[a,s],"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const Rq={kernelName:oc.Unique,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:r,backend:n}=e,{axis:a}=r,{x:s}=t;kD(s,"unique"),// For now, always forward calculation to the CPU backend.
console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=n.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=S4(i,a,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,o),n.makeTensorInfo([u.length],"int32",u)]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var oc=A("hl418");const RH={kernelName:oc.Unpack,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{value:a}=t,{axis:s}=n;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],l=Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=a.shape[e]);let c=[],d=Array(i).fill(0),p=a.shape.slice();p[s]=1;let h=Array(o);for(let e=0;e<h.length;e++){d[s]=e;let t=TV({inputs:{x:a},backend:r,attrs:{begin:d,size:p}}),n=Nz({inputs:{x:t},backend:r,attrs:{shape:l}});h[e]=n,c.push(t)}return c.forEach(e=>r.disposeIntermediateTensorInfo(e)),h}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */A("i64bB");var uc=A("7MaPk"),dh=A("jjNRA"),bA=A("2MDja"),oc=A("hl418");/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RK{constructor(e,t){this.variableNames=["x","segmentIds"];let r=e.windowSize,n=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/r);this.outputShape=[n,i];let o=4*Math.floor(r/4),l=r%4,u=`
        sumValue += dot(values, segFilter);
    `,c="";a%r>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let d="";a%r>0&&(d=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${u}
        }

        int inIdx = inOffset + ${o};
        if (${1===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${u}
        } else if (${2===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${u}
        } else if (${3===l}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${u}
        }
        setOutput(sumValue);
      }
    `}}const RX={kernelName:oc.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,segmentIds:s}=t,{numSegments:i}=n,o=a.shape.length,l=[],u=0,c=uc.getAxesPermutation([u],o),d=a;null!=c&&(d=NQ({inputs:{x:a},backend:r,attrs:{perm:c}}),l.push(d),u=uc.getInnerMostAxes(1,o)[0]);let p=uc.segment_util.computeOutShape(d.shape,u,i),h=dh.sizeFromShape([d.shape[u]]),f=Nz({inputs:{x:d},backend:r,attrs:{shape:[-1,h]}});l.push(f);let m=(0,bA.sumOutType)(a.dtype),g=(e,t,n,a,s)=>{let i=e.shape[0],o=e.shape[1],u=uc.segment_util.segOpComputeOptimalWindowSize(o,s),c=new RK({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),d=r.compileAndRun(c,[e,n],a);// No need to run another GPGPU program.
if(l.push(d),d.shape[1]===s)return d;let p=Ah({backend:r,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),h=RF({inputs:{x:p},backend:r,attrs:{reps:[o/u]}});l.push(p),l.push(h);let f=g(d,t,h,a,s);return f},y=g(f,"unsortedSegmentSum",s,m,i),b=Nz({inputs:{x:y},backend:r,attrs:{shape:p}}),v=b;if(null!=c){l.push(b);let e=uc.getUndoAxesPermutation(c);v=NQ({inputs:{x:v},backend:r,attrs:{perm:e}})}return l.forEach(e=>r.disposeIntermediateTensorInfo(e)),v}};for(const e of[N0,N2,N8,N7,Tt,Ta,Ts,Ti,Tc,Td,Tf,Tg,Tv,TS,TI,TA,TR,TP,T$,TD,TL,TU,TW,TK,TX,T0,T4,T6,NN,T9,Ii,If,Iv,Iw,Ik,IS,IN,IE,I_,IP,IL,Ij,IB,IV,IW,IK,IX,IQ,IJ,I0,I4,I8,I7,Ct,Cs,Co,Cc,Ch,Cg,Cb,Cw,CT,CE,CR,C_,CP,CM,Cj,CV,Nk,CG,Ia,CW,CH,CX,NC,CY,C1,C2,C6,C9,Er,Ea,Eo,Ec,Ep,Ef,Eb,Ev,Ex,ES,EN,ET,EI,EC,E_,E$,EL,EX,NB,EY,E0,E2,E3,TQ,E6,E9,Ae,Aa,Al,NR,Au,Ac,Ad,Ap,Af,TJ,EG,Ag,Ax,AN,NV,AC,AA,AO,A$,AF,Aj,AV,AU,AH,AX,AQ,A0,A3,A5,Rt,Ra,TG,EK,Ro,Rl,Ru,Rc,Rd,Rp,Rh,Rf,Ry,Rv,Rk,RS,RN,RI,RC,RE,RA,Eq,NZ,R_,R$,RD,RL,RG,RW,NY,Rq,RH,RX,E7])(0,u6.registerKernel)(e);ou.version,gy.version;var RZ=0,RQ=()=>{let e=(0,O.useRef)(null),t=(0,O.useRef)(null);(0,O.useEffect)(()=>{let t=async()=>{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){let t=navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user",width:500,height:300}}).then(t=>(window.stream=t,e.current.srcObject=t,new Promise(t=>{e.current.onloadedmetadata=()=>{t()}}))),n=ol.load();Promise.all([n,t]).then(t=>{r(e.current,t[0])}).catch(e=>{console.error(e)})}};t()},[]);let r=(e,a)=>{a.detect(e).then(s=>{t.current&&(n(s),requestAnimationFrame(()=>{r(e,a)}))})},n=e=>{let r=t.current.getContext("2d");r.clearRect(0,0,r.canvas.width,r.canvas.height),r.font="16px sans-serif",r.textBaseline="top",e.forEach(t=>{t.bbox[0],t.bbox[1],t.bbox[2],t.bbox[3];//   // Draw the bounding box.
//   ctx.strokeStyle = "#00FFFF";
//   ctx.lineWidth = 2;
//   ctx.strokeRect(x, y, width, height);
//   // Draw the label background.
//   ctx.fillStyle = "#00FFFF";
//   const textWidth = ctx.measureText(prediction.class).width;
//   const textHeight = parseInt(font, 10); // base 10
//   ctx.fillRect(x, y, textWidth + 8, textHeight + 8);
for(let t=0;t<e.length;t++)// Face, object detection
"cell phone"===e[t].class?(/*@__PURE__*/I(oo)("Cell Phone Detected","Action has been Recorded","error"),RZ+=1):"book"===e[t].class?(/*@__PURE__*/I(oo)("Object Detected","Action has been Recorded","error"),RZ+=1):"laptop"===e[t].class?(/*@__PURE__*/I(oo)("Object Detected","Action has been Recorded","error"),RZ+=1):"person"!==e[t].class&&(/*@__PURE__*/I(oo)("Face Not Visible","Action has been Recorded","error"),RZ+=1)}),e.forEach(e=>{let t=e.bbox[0],n=e.bbox[1];r.fillStyle="#000000",("person"===e.class||"cell phone"===e.class||"book"===e.class||"laptop"===e.class)&&r.fillText(e.class,t,n)}),sessionStorage.setItem("count_facedetect",RZ)};return/*#__PURE__*/(0,_.jsxs)("div",{className:"",children:[/*#__PURE__*/(0,_.jsx)("video",{className:"tw-w-full",autoPlay:!0,playsInline:!0,muted:!0,ref:e}),/*#__PURE__*/(0,_.jsx)("canvas",{className:"tw-hidden",ref:t,width:"250",height:"300"})]})},_=A("ayMG0"),O=A("acw62"),RY=({targetTime:e})=>{let t=()=>{let t=e-new Date().getTime(),r={};return t>0&&(r={days:Math.floor(t/864e5),hours:Math.floor(t%864e5/36e5),minutes:Math.floor(t%36e5/6e4),seconds:Math.floor(t%6e4/1e3)}),r},[r,n]=(0,O.useState)(t());(0,O.useEffect)(()=>{let e=setTimeout(()=>{n(t())},1e3);return()=>clearTimeout(e)});let{days:a,hours:s,minutes:i,seconds:o}=r;return/*#__PURE__*/(0,_.jsxs)("div",{children:[a>0&&/*#__PURE__*/(0,_.jsxs)("p",{children:[a," ",1===a?"day":"days"]}),/*#__PURE__*/(0,_.jsxs)("p",{children:[s.toString().padStart(2,"0")," : ",i.toString().padStart(2,"0")," : ",o.toString().padStart(2,"0")]})]})},RJ=()=>{let{newInst:e,newDuration:t,newTitle:r,ALLTEST:n}=(0,O.useContext)(sy.default),[a,s]=(0,M.useSearchParams)();var i=parseInt(a.get("v1"));let[o,l]=(0,O.useState)([]),[u,c]=(0,O.useState)(i),[d,p]=(0,O.useState)({});(0,O.useRef)(null),(0,O.useRef)(null);let h=[];o.map(e=>{let t={Question:e.Question,options:[e.option1,e.option2,e.option3,e.option4],correctAnswer:e.Answer,QuestionId:e.quesId};h.push(t)});let[f,m]=(0,O.useState)(!1),[g,y]=(0,O.useState)(i),[b,v]=(0,O.useState)(!1),[x,w]=(0,O.useState)(!1),[k,S]=(0,O.useState)(i+1);var N=1;let T=(0,D.useNavigate)(),[I,C]=(0,O.useState)("0"),[E,A]=(0,O.useState)(" "),R=K(e=>e.userResponse.item);en();let P=window.location.href;console.log(P),console.log(R);let[$,F]=(0,O.useState)([]),{id:L}=(0,D.useParams)(),j=n.filter(e=>e.id==L),B={QuestionNo:i,selectedAnswer:d[i],status:d.hasOwnProperty(i)?" Answered":"not Answered",QuizCategory:j[0]?.name};console.log(B),console.log(d.currentQuestions);let z=()=>{let e=document.documentElement;e.requestFullscreen?(e.requestFullscreen(),T(`/testenv/${L}`)):e.webkitRequestFullscreen?(e.webkitRequestFullscreen(),T(`/testenv/${L}`)):e.msRequestFullscreen&&(e.msRequestFullscreen(),T(`/testenv/${L}`))},V=(e,t)=>{m(!0),s({v1:e.target.innerText}),c(i),S(t),A(" ")},G=new Date().getTime()+9e5;var U=1;(0,O.useEffect)(()=>{z(),X()},[]);// useEffect(() => {
//  postData();
// }, [path]);
// async function postData() {
//   try {
//     const { markForReview, selectedAnswer, status, QuestionNo } =
//       UserResponse;
//     const response = await fetch("http://localhost:8000/quiz/useranswer", {
//       method: "POST",
//       headers: {
//         "Content-Type": "application/json",
//       },
//       body: JSON.stringify({
//         markForReview: markForReview,
//         selectedAnswer: selectedAnswer,
//         status: status,
//         QuestionNo: QuestionNo,
//       }),
//     });
//     const result = await response.json();
//     setData(result);
//   } catch (error) {
//     console.error("Error sending data:", error);
//   }
// }
let W=new Date,q=W.getHours();console.log(q),W.getMinutes(),W.getSeconds();let H=e=>{let{value:t}=e.target,{id:r}=e.target;console.log(r),p({...d,[i]:t})};async function X(){let e=await fetch("http://localhost:3000/api/aptitude/timework"),t=await e.json();l(t)}if(console.log(d),d.hasOwnProperty(i)){let e=document.getElementById(`key${i}`);e.style.backgroundColor="#4ADE80"}return console.log(),/*#__PURE__*/(0,_.jsx)("div",{className:"container-fluid  p-0",children:/*#__PURE__*/(0,_.jsxs)("div",{className:"row",children:[/*#__PURE__*/(0,_.jsx)("h3",{className:"text-center p-2 tw-bg-fuchsia-200",children:j[0]?.name}),/*#__PURE__*/(0,_.jsxs)("div",{className:"col-md-3 tw-p-3",children:[/*#__PURE__*/(0,_.jsx)("h4",{children:"Question Platlee"}),/*#__PURE__*/(0,_.jsx)("hr",{}),/*#__PURE__*/(0,_.jsx)("div",{className:" tw-flex tw-gap-4 tw-flex-wrap tw-p-2",children:o.map(e=>/*#__PURE__*/(0,_.jsx)("div",{className:"tw-cursor-pointer tw-w-16 tw-h-16 rounded-circle tw-flex tw-justify-center tw-items-center tw-bg-gray-200 tw-shadow-md",id:`key${N++}`,onClick:()=>{V(event,e.quesId)},children:/*#__PURE__*/(0,_.jsx)("span",{children:U++})},e.quesId))}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("hr",{}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-justify-start tw-items-center",children:[/*#__PURE__*/(0,_.jsx)("div",{className:" border border-success tw-w-16 tw-h-16 rounded-circle tw-flex tw-justify-center tw-items-center tw-bg-gray-200 tw-shadow-md",children:/*#__PURE__*/(0,_.jsx)("span",{className:" tw-text-lg",children:1})}),"\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0",/*#__PURE__*/(0,_.jsx)("p",{className:" tw-text-lg",children:"Not Answered"})]}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-justify-start tw-items-center",children:[/*#__PURE__*/(0,_.jsx)("div",{className:" border border-success tw-w-16 tw-h-16 rounded-circle tw-flex tw-justify-center tw-items-center tw-bg-green-500 tw-shadow-md",children:/*#__PURE__*/(0,_.jsx)("span",{className:" tw-text-lg",children:1})}),"\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0",/*#__PURE__*/(0,_.jsx)("p",{className:" tw-text-lg",children:" Answered"})]}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("p",{className:" tw-text-lg",children:"Answered question consider for evaluation"})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:"col-md-6 tw-p-3",children:[/*#__PURE__*/(0,_.jsxs)("h4",{children:["Question ",i,":"]}),/*#__PURE__*/(0,_.jsx)("hr",{}),/*#__PURE__*/(0,_.jsxs)("div",{children:[/*#__PURE__*/(0,_.jsx)("h5",{className:" tw-text-start",children:o[i]?.Question}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("h5",{children:"Select only one :"})]}),/*#__PURE__*/(0,_.jsx)("br",{}),h[i]?.options.map((e,t)=>_.jsx("div",{children:_.jsx(_.Fragment,{children:_.jsxs("div",{id:"1",className:` tw-m-6 tw-flex tw-gap-6 tw-border-2 tw-border-gray-200 tw-border-solid tw-p-5 tw-rounded-lg hover:tw-shadow-md hover:tw-border-green-600 ${"1"===t?"tw-bg-green-500":"tw-border-gray-200"}`,children:[_.jsx("input",{type:"radio",className:" tw-h-[20px] tw-w-[20px] active:tw-bg-green-500",name:`question_${i}`,id:`question_${i+t}`,value:e,checked:d[i]===e,onChange:()=>H(event)}),_.jsx("label",{htmlFor:`question_${i+t}`,id:t+1,className:"answer1 tw-text-xl tw-items-center tw-flex tw-justify-center",children:e})]})})},t)),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-2 tw-flex tw-justify-between",children:[/*#__PURE__*/(0,_.jsx)("div",{className:" tw-flex tw-justify-between tw-gap-6",children:/*#__PURE__*/(0,_.jsxs)("div",{children:[" ",/*#__PURE__*/(0,_.jsxs)("button",{onClick:()=>{!function(){p({});let e=document.getElementById(`key${i}`);e.style.backgroundColor="#e5e7eb"}()},className:" tw-px-4 tw-py-2 tw-bg-green-400 tw-rounded-md tw-shadow-md tw-border-0 tw-text-lg",children:[" ","Clear Response"]})]})}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-justify-between tw-gap-6",children:[/*#__PURE__*/(0,_.jsx)("div",{children:/*#__PURE__*/(0,_.jsx)("button",{disabled:0===i,className:" tw-px-6 tw-py-2 tw-bg-green-400 tw-rounded-md tw-shadow-md tw-border-0 tw-text-lg",onClick:()=>{i>0&&s({v1:i-1})},children:"Previous"})}),/*#__PURE__*/(0,_.jsx)("div",{children:/*#__PURE__*/(0,_.jsx)("button",{disabled:i===o.length-1,className:" tw-px-6 tw-py-2 tw-bg-green-400 tw-rounded-md tw-shadow-md tw-border-0 tw-text-lg",onClick:()=>{i<o.length-1&&(s({v1:i+1}),C(0))},children:"Save & Next"})})]})]})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:"col-md-3",children:[/*#__PURE__*/(0,_.jsx)("div",{className:"",children:/*#__PURE__*/(0,_.jsx)(RQ,{})}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-flex-col tw-justify-center tw-gap-3",children:[/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-justify-start tw-items-center",children:[" ",/*#__PURE__*/(0,_.jsx)("h3",{children:"User Name"})]}),/*#__PURE__*/(0,_.jsx)("div",{className:"  tw-flex tw-justify-center tw-items-center tw-p-2 tw-bg-gray-200 tw-rounded-md",children:/*#__PURE__*/(0,_.jsxs)("h4",{className:" tw-text-center tw-m-auto",children:[" ",/*#__PURE__*/(0,_.jsx)(RY,{targetTime:G})]})}),/*#__PURE__*/(0,_.jsx)("div",{className:" tw-flex tw-justify-center",children:/*#__PURE__*/(0,_.jsx)("button",{className:" tw-bg-green-500 tw-px-6 tw-py-[5px] tw-border-0 tw-text-xl tw-shadow-lg tw-rounded-md",children:"End Test"})})]})]})]})})},_=A("ayMG0"),O=A("acw62");A("lzNIT");var D=A("aphAM"),R0=()=>{let[e,t]=(0,O.useState)(!1),[r,n]=(0,O.useState)(" "),a=(0,O.useRef)(null),s=(0,O.useRef)(null),[i,o]=(0,O.useState)(""),l=(0,D.useNavigate)(),u=en();return(0,O.useEffect)(()=>{eD(sc).onAuthStateChanged(e=>{if(e){let{uid:t,email:r,displayName:n}=e;u(on({uid:t,email:r,displayName:n}))}else u(oa())},void 0,void 0)},[]),/*#__PURE__*/(0,_.jsx)("div",{className:" tw-h-[700] tw-flex tw-justify-center tw-items-center tw-bg-[#D09683]",children:/*#__PURE__*/(0,_.jsxs)("div",{className:"  tw-p-4 tw-bg-[#44AA97] tw-opacity-85 tw-rounded-md tw-shadow-md tw-w-[450px]",children:[/*#__PURE__*/(0,_.jsxs)("form",{onSubmit:e=>{e.preventDefault()},action:"",className:"  tw-flex tw-justify-center tw-flex-col ",children:[/*#__PURE__*/(0,_.jsx)("h1",{className:" tw-text-start tw-text-[#333333] tw-font-bold tw-text-3xl tw-ml-10",children:e?"SignUp":"Login"}),/*#__PURE__*/(0,_.jsx)("br",{}),e&&/*#__PURE__*/(0,_.jsxs)(_.Fragment,{children:[/*#__PURE__*/(0,_.jsx)("input",{type:"text",value:i,className:" tw-bg-[#333333] tw-w-[350px] tw-m-auto tw-p-2 tw-rounded-md tw-shadow-sm tw-text-white",placeholder:"Full Name",onChange:e=>{o(e.target.value)}}),/*#__PURE__*/(0,_.jsx)("br",{})]}),/*#__PURE__*/(0,_.jsx)("input",{type:"email",ref:a,className:" tw-bg-[#333333] tw-w-[350px] tw-m-auto tw-p-2 tw-rounded-md tw-shadow-sm tw-text-white",placeholder:"Email or Phone Number"}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("input",{type:"password",ref:s,className:" tw-bg-[#333333] tw-w-[350px] tw-m-auto tw-p-2 tw-rounded-md tw-shadow-sm tw-text-white",placeholder:"Password"}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("p",{className:" tw-text-[#333333] tw-text-lg tw-font-semibold tw-ml-10",children:r}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("button",{className:"  tw-w-[350px] tw-m-auto tw-p-2 tw-rounded-md tw-shadow-sm tw-text-white tw-bg-[#333333]",onClick:function(){let t=function(e,t,r){let n=/^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,})$/.test(e),a=/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/.test(t);return(/^[A-Z][A-Za-z\'\-]+([\ A-Za-z][A-Za-z\'\-]+)*$/.test(void 0),n)?a?" ":"Password is not valid":"Email ID is not valid"}(a?.current?.value,s?.current?.value);if(n(t),e)na(sc,a?.current?.value,s?.current?.value).then(e=>{let t=e.user;console.log(t),ni(t,{displayName:i}).then(()=>{let{uid:e,email:t,displayName:r}=sc.currentUser;u(on({uid:e,email:t,displayName:r})),l("/")})}).catch(e=>{e.code;let t=e.message;n(t.substring(22,40))})," "===r&&l("/");else{var o,c;(o=a?.current?.value,c=s?.current?.value,tl(sc.app)?Promise.reject(tP(sc)):nr(eD(sc),rQ.credential(o,c)).catch(async e=>{throw"auth/password-does-not-meet-requirements"===e.code&&nn(sc),e})).then(e=>{let t=e.user;console.log(t);// ...
}).catch(e=>{e.code;let t=e.message;n(t.substring(22,40))})," "===r&&l("/")}},children:e?"SignUp":"Login"})]}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsxs)("p",{className:" tw-text-gray-600 tw-text-lg tw-ml-10 tw-cursor-pointer",children:[e?"Already registered":"New Here"," ? \xa0",/*#__PURE__*/(0,_.jsxs)("span",{className:" tw-text-white",onClick:function(){t(!e)},children:[" ",e?"login":"Sign up now"]})]})]})})},_=A("ayMG0"),O=A("acw62"),R1={},ea=A("hPtJY");!// Last Updated On: 2020-08-12 11:18:41 AM UTC
// ________________
// DetectRTC v1.4.1
// Open-Sourced: https://github.com/muaz-khan/DetectRTC
// --------------------------------------------------
// Muaz Khan     - www.MuazKhan.com
// MIT License   - www.WebRTC-Experiment.com/licence
// --------------------------------------------------
function(){var e,t,r,n,a,s,i="Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45",o="object"==typeof ea&&"object"==typeof ea.versions&&ea.versions.node&&/*node-process*/!1;if(o){var l=ea.versions.node.toString().replace("v","");i="Nodejs/"+l+" (NodeOS) AppleWebKit/"+l+" (KHTML, like Gecko) Nodejs/"+l+" Nodejs/"+l}e=void 0!==T?T:window,"undefined"==typeof window&&("undefined"==typeof window&&void 0!==T&&(T.navigator={userAgent:i,getUserMedia:function(){}},/*global window:true */e.window=T),"undefined"==typeof location&&/*global location:true */(e.location={protocol:"file:",href:"",hash:""}),"undefined"==typeof screen&&/*global screen:true */(e.screen={width:0,height:0}));/*global navigator:true */var u=window.navigator;void 0!==u?(void 0!==u.webkitGetUserMedia&&(u.getUserMedia=u.webkitGetUserMedia),void 0!==u.mozGetUserMedia&&(u.getUserMedia=u.mozGetUserMedia)):u={getUserMedia:function(){},userAgent:i};var c=!!/Android|webOS|iPhone|iPad|iPod|BB10|BlackBerry|IEMobile|Opera Mini|Mobile|mobile/i.test(u.userAgent||""),d=-1!==u.userAgent.indexOf("Edge")&&(!!u.msSaveOrOpenBlob||!!u.msSaveBlob),p=!!window.opera||u.userAgent.indexOf(" OPR/")>=0,h=u.userAgent.toLowerCase().indexOf("firefox")>-1&&"netscape"in window&&/ rv:/.test(u.userAgent),f=/^((?!chrome|android).)*safari/i.test(u.userAgent),m=!!window.chrome&&!p,g="undefined"!=typeof document&&!!document.documentMode&&!d;// via: https://gist.github.com/cou929/7973956
function y(e,t){var r=0,n=!1,a=window.setInterval(function(){e()&&(window.clearInterval(a),t(n)),r++>50&&(window.clearInterval(a),t(n=!0))},10)}var b={Android:function(){return u.userAgent.match(/Android/i)},BlackBerry:function(){return u.userAgent.match(/BlackBerry|BB10/i)},iOS:function(){return u.userAgent.match(/iPhone|iPad|iPod/i)},Opera:function(){return u.userAgent.match(/Opera Mini/i)},Windows:function(){return u.userAgent.match(/IEMobile/i)},any:function(){return b.Android()||b.BlackBerry()||b.iOS()||b.Opera()||b.Windows()},getOsName:function(){var e="Unknown OS";return b.Android()&&(e="Android"),b.BlackBerry()&&(e="BlackBerry"),b.iOS()&&(e="iOS"),b.Opera()&&(e="Opera Mini"),b.Windows()&&(e="Windows"),e}},v="Unknown OS",x="Unknown OS Version",w=// via: http://jsfiddle.net/ChristianL/AVyND/
function(){for(var e,t=u.appVersion,r=u.userAgent,n="-",a=[{s:"Chrome OS",r:/CrOS/},{s:"Windows 10",r:/(Windows 10.0|Windows NT 10.0)/},{s:"Windows 8.1",r:/(Windows 8.1|Windows NT 6.3)/},{s:"Windows 8",r:/(Windows 8|Windows NT 6.2)/},{s:"Windows 7",r:/(Windows 7|Windows NT 6.1)/},{s:"Windows Vista",r:/Windows NT 6.0/},{s:"Windows Server 2003",r:/Windows NT 5.2/},{s:"Windows XP",r:/(Windows NT 5.1|Windows XP)/},{s:"Windows 2000",r:/(Windows NT 5.0|Windows 2000)/},{s:"Windows ME",r:/(Win 9x 4.90|Windows ME)/},{s:"Windows 98",r:/(Windows 98|Win98)/},{s:"Windows 95",r:/(Windows 95|Win95|Windows_95)/},{s:"Windows NT 4.0",r:/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/},{s:"Windows CE",r:/Windows CE/},{s:"Windows 3.11",r:/Win16/},{s:"Android",r:/Android/},{s:"Open BSD",r:/OpenBSD/},{s:"Sun OS",r:/SunOS/},{s:"Linux",r:/(Linux|X11)/},{s:"iOS",r:/(iPhone|iPad|iPod)/},{s:"Mac OS X",r:/Mac OS X/},{s:"Mac OS",r:/(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/},{s:"QNX",r:/QNX/},{s:"UNIX",r:/UNIX/},{s:"BeOS",r:/BeOS/},{s:"OS/2",r:/OS\/2/},{s:"Search Bot",r:/(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\/Teoma|ia_archiver)/}],s=0;e=a[s];s++)if(e.r.test(r)){n=e.s;break}var i="-";switch(/Windows/.test(n)&&(/Windows (.*)/.test(n)&&(i=/Windows (.*)/.exec(n)[1]),n="Windows"),n){case"Mac OS X":/Mac OS X (10[\.\_\d]+)/.test(r)&&(i=/Mac OS X (10[\.\_\d]+)/.exec(r)[1]);break;case"Android":/Android ([\.\_\d]+)/.test(r)&&(i=/Android ([\.\_\d]+)/.exec(r)[1]);break;case"iOS":/OS (\d+)_(\d+)_?(\d+)?/.test(r)&&(i=/OS (\d+)_(\d+)_?(\d+)?/.exec(t))&&i.length>3&&(i=i[1]+"."+i[2]+"."+(0|i[3]))}return{osName:n,osVersion:i}}();w&&w.osName&&"-"!=w.osName?(v=w.osName,x=w.osVersion):b.any()&&"Android"==(v=b.getOsName())&&(x=!!(r=(t=(t||u.userAgent).toLowerCase()).match(/android\s([0-9\.]*)/))&&r[1]);var o="object"==typeof ea&&"object"==typeof ea.versions&&ea.versions.node;"Unknown OS"===v&&o&&(v="Nodejs",x=ea.versions.node.toString().replace("v",""));var k=!1,S=!1;["captureStream","mozCaptureStream","webkitCaptureStream"].forEach(function(e){"undefined"!=typeof document&&"function"==typeof document.createElement&&(!k&&e in document.createElement("canvas")&&(k=!0),!S&&e in document.createElement("video")&&(S=!0))});var N=/^(192\.168\.|169\.254\.|10\.|172\.(1[6-9]|2\d|3[01]))/,I=/([0-9]{1,3}(\.[0-9]{1,3}){3})/,C=/[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7}/,E=[],A=[],R=[],_=[];u.mediaDevices&&u.mediaDevices.enumerateDevices&&// Thanks @xdumaine/enumerateDevices
(u.enumerateDevices=function(e){var t=u.mediaDevices.enumerateDevices();t&&t.then?u.mediaDevices.enumerateDevices().then(e).catch(function(){e([])}):e([])});// Media Devices detection
var O=!1;"undefined"!=typeof MediaStreamTrack&&"getSources"in MediaStreamTrack?O=!0:u.mediaDevices&&u.mediaDevices.enumerateDevices&&(O=!0);var P=!1,$=!1,D=!1,M=!1,F=!1,L=window.DetectRTC||{};// ----------
// DetectRTC.browser.name || DetectRTC.browser.version || DetectRTC.browser.fullVersion
L.browser=// this one can also be used:
// https://www.websocket.org/js/stuff.js (DetectBrowser.js)
function(){u.appVersion;var e,t,r,n=u.userAgent,a=u.appName,s=""+parseFloat(u.appVersion),i=parseInt(u.appVersion,10);// In Opera, the true version is after 'Opera' or after 'Version'
if(p){a="Opera";try{i=(s=u.userAgent.split("OPR/")[1].split(" ")[0]).split(".")[0]}catch(e){s="0.0.0.0",i=0}}else g?((t=n.indexOf("rv:"))>0?s=n.substring(t+3):(t=n.indexOf("MSIE"),s=n.substring(t+5)),a="IE"):m?(t=n.indexOf("Chrome"),a="Chrome",s=n.substring(t+7)):f?-1!==n.indexOf("CriOS")?(t=n.indexOf("CriOS"),a="Chrome",s=n.substring(t+6)):-1!==n.indexOf("FxiOS")?(t=n.indexOf("FxiOS"),a="Firefox",s=n.substring(t+6)):(t=n.indexOf("Safari"),a="Safari",s=n.substring(t+7),-1!==(t=n.indexOf("Version"))&&(s=n.substring(t+8)),-1!==u.userAgent.indexOf("Version/")&&(s=u.userAgent.split("Version/")[1].split(" ")[0])):h?(t=n.indexOf("Firefox"),a="Firefox",s=n.substring(t+8)):(e=n.lastIndexOf(" ")+1)<(t=n.lastIndexOf("/"))&&(a=n.substring(e,t),s=n.substring(t+1),a.toLowerCase()===a.toUpperCase()&&(a=u.appName));return d&&(a="Edge",s=u.userAgent.split("Edge/")[1]),-1!==(r=s.search(/[; \)]/))&&(s=s.substring(0,r)),isNaN(i=parseInt(""+s,10))&&(s=""+parseFloat(u.appVersion),i=parseInt(u.appVersion,10)),{fullVersion:s,version:i,name:a,isPrivateBrowsing:!1}}(),function(e){var t,r;try{if(window.webkitRequestFileSystem)window.webkitRequestFileSystem(window.TEMPORARY,1,function(){t=!1},function(e){t=!0});else if(window.indexedDB&&/Firefox/.test(window.navigator.userAgent)){try{(r=window.indexedDB.open("test")).onerror=function(){return!0}}catch(e){t=!0}void 0===t&&y(function(){return"done"===r.readyState},function(e){e||(t=!r.result)})}else if(function(e){var t=e.toLowerCase();if(0===t.indexOf("msie")&&0===t.indexOf("trident"))return!1;var r=/(?:msie|rv:)\s?([\d\.]+)/.exec(t);return!!(r&&parseInt(r[1],10)>=10)}(window.navigator.userAgent)){t=!1;try{window.indexedDB||(t=!0)}catch(e){t=!0}}else if(window.localStorage&&/Safari/.test(window.navigator.userAgent)){try{window.localStorage.setItem("test",1)}catch(e){t=!0}void 0===t&&(t=!1,window.localStorage.removeItem("test"))}}catch(e){t=!1}y(function(){return void 0!==t},function(r){e(t)})}(function(e){L.browser.isPrivateBrowsing=!!e}),// DetectRTC.isChrome || DetectRTC.isFirefox || DetectRTC.isEdge
L.browser["is"+L.browser.name]=!0,// -----------
L.osName=v,L.osVersion=x,"object"==typeof ea&&"object"==typeof ea.versions&&ea.versions["node-webkit"];// --------- Detect if system supports WebRTC 1.0 or WebRTC 1.1.
var j=!1;["RTCPeerConnection","webkitRTCPeerConnection","mozRTCPeerConnection","RTCIceGatherer"].forEach(function(e){!j&&e in window&&(j=!0)}),L.isWebRTCSupported=j,//-------
L.isORTCSupported="undefined"!=typeof RTCIceGatherer;// --------- Detect if system supports screen capturing API
var B=!1;L.browser.isChrome&&L.browser.version>=35?B=!0:L.browser.isFirefox&&L.browser.version>=34?B=!0:L.browser.isEdge&&L.browser.version>=17?B=!0:"Android"===L.osName&&L.browser.isChrome&&(B=!0),(u.getDisplayMedia||u.mediaDevices&&u.mediaDevices.getDisplayMedia)&&(B=!0),!/^(https:|chrome-extension:)$/g.test(location.protocol||"")&&("undefined"!=typeof document&&"string"==typeof document.domain&&document.domain.search&&-1===document.domain.search(/localhost|127.0./g)&&(L.browser.isChrome||L.browser.isEdge||L.browser.isOpera)?B=!1:L.browser.isFirefox&&(B=!1)),L.isScreenCapturingSupported=B;// --------- Detect if WebAudio API are supported
var z={isSupported:!1,isCreateMediaStreamSourceSupported:!1};["AudioContext","webkitAudioContext","mozAudioContext","msAudioContext"].forEach(function(e){!z.isSupported&&e in window&&(z.isSupported=!0,window[e]&&"createMediaStreamSource"in window[e].prototype&&(z.isCreateMediaStreamSourceSupported=!0))}),L.isAudioContextSupported=z.isSupported,L.isCreateMediaStreamSourceSupported=z.isCreateMediaStreamSourceSupported;// ---------- Detect if SCTP/RTP channels are supported.
var V=!1;L.browser.isChrome&&L.browser.version>31&&(V=!0),L.isRtpDataChannelsSupported=V;var G=!1;L.browser.isFirefox&&L.browser.version>28?G=!0:L.browser.isChrome&&L.browser.version>25?G=!0:L.browser.isOpera&&L.browser.version>=11&&(G=!0),L.isSctpDataChannelsSupported=G,// ---------
L.isMobileDevice=c;// ------
var U=!1;u.getUserMedia?U=!0:u.mediaDevices&&u.mediaDevices.getUserMedia&&(U=!0),L.browser.isChrome&&L.browser.version>=46&&!/^(https:|chrome-extension:)$/g.test(location.protocol||"")&&"undefined"!=typeof document&&"string"==typeof document.domain&&document.domain.search&&-1===document.domain.search(/localhost|127.0./g)&&(U="Requires HTTPs"),"Nodejs"===L.osName&&(U=!1),L.isGetUserMediaSupported=U;var W="";screen.width&&(W+=""+(screen.width?screen.width:"")+" x "+(screen.height?screen.height:"")),L.displayResolution=W,L.displayAspectRatio=(s=function e(t,r){return 0==r?t:e(r,t%r)}(n=screen.width,a=screen.height),n/s/(a/s)).toFixed(2),// ----------
L.isCanvasSupportsStreamCapturing=k,L.isVideoSupportsStreamCapturing=S,"Chrome"==L.browser.name&&L.browser.version>=53&&(L.isCanvasSupportsStreamCapturing||(L.isCanvasSupportsStreamCapturing="Requires chrome flag: enable-experimental-web-platform-features"),L.isVideoSupportsStreamCapturing||(L.isVideoSupportsStreamCapturing="Requires chrome flag: enable-experimental-web-platform-features")),// ------
L.DetectLocalIPAddress=// via: https://github.com/diafygi/webrtc-ips
function(e,t){if(L.isWebRTCSupported){var r=!0,n=!0;(function(e,t){if("undefined"!=typeof document&&"function"==typeof document.getElementById){var r={},n=window.RTCPeerConnection||window.mozRTCPeerConnection||window.webkitRTCPeerConnection;if(!n){var a=document.getElementById("iframe");if(!a)return;var s=a.contentWindow;n=s.RTCPeerConnection||s.mozRTCPeerConnection||s.webkitRTCPeerConnection}if(n){var i=null;"Chrome"===L.browser&&L.browser.version<58&&(i={optional:[{RtpDataChannels:!0}]});var o=new n({iceServers:[{urls:"stun:stun.l.google.com:19302"}]},i);// create data channel
if(t&&(o.addStream?o.addStream(t):o.addTrack&&t.getTracks()[0]&&o.addTrack(t.getTracks()[0],t)),// listen for candidate events
o.onicecandidate=function(e){e.candidate&&e.candidate.candidate?l(e.candidate.candidate):l();// Pass nothing to tell that ICE-gathering-ended
},!t)try{o.createDataChannel("sctp",{})}catch(e){}L.isPromisesSupported?o.createOffer().then(function(e){o.setLocalDescription(e).then(u)}):o.createOffer(function(e){o.setLocalDescription(e,u,function(){})},function(){})}}function l(t){if(!t){e();// Pass nothing to tell that ICE-gathering-ended
return}var n=I.exec(t);if(n){var a=n[1],s=t.match(N);void 0===r[a]&&e(a,s,!0),r[a]=!0}}function u(){o.localDescription.sdp.split("\n").forEach(function(e){e&&0===e.indexOf("a=candidate:")&&l(e)})}})(function(t){t?t.match(N)?e("Local: "+t,r=!1,n):t.match(C)?e("Public: "+t,r,n=!1):e("Public: "+t,r,n):e()},t)}},L.isWebSocketsSupported="WebSocket"in window&&2===window.WebSocket.CLOSING,L.isWebSocketsBlocked=!L.isWebSocketsSupported,"Nodejs"===L.osName&&(L.isWebSocketsSupported=!0,L.isWebSocketsBlocked=!1),L.checkWebSocketsSupport=function(e){e=e||function(){};try{var t,r=new WebSocket("wss://echo.websocket.org:443/");r.onopen=function(){L.isWebSocketsBlocked=!1,t=(new Date).getTime(),r.send("ping")},r.onmessage=function(){L.WebsocketLatency=(new Date).getTime()-t+"ms",e(),r.close(),r=null},r.onerror=function(){L.isWebSocketsBlocked=!0,e()}}catch(t){L.isWebSocketsBlocked=!0,e()}},// -------
L.load=function(e){!// http://dev.w3.org/2011/webrtc/editor/getusermedia.html#mediadevices
function(e){if(!O||(!u.enumerateDevices&&window.MediaStreamTrack&&window.MediaStreamTrack.getSources&&(u.enumerateDevices=window.MediaStreamTrack.getSources.bind(window.MediaStreamTrack)),!u.enumerateDevices&&u.enumerateDevices&&(u.enumerateDevices=u.enumerateDevices.bind(u)),!u.enumerateDevices)){e&&e();return}E=[],A=[],R=[],_=[],P=!1,$=!1,D=!1,M=!1,F=!1;// to prevent duplication
var t={};u.enumerateDevices(function(r){E=[],A=[],R=[],_=[],r.forEach(function(e){var r={};for(var n in e)try{"function"!=typeof e[n]&&(r[n]=e[n])}catch(e){}t[r.deviceId+r.label+r.kind]||("audio"===r.kind&&(r.kind="audioinput"),"video"===r.kind&&(r.kind="videoinput"),r.deviceId||(r.deviceId=r.id),r.id||(r.id=r.deviceId),r.label?("videoinput"!==r.kind||F||(F=!0),"audioinput"!==r.kind||M||(M=!0)):(r.isCustomLabel=!0,"videoinput"===r.kind?r.label="Camera "+(_.length+1):"audioinput"===r.kind?r.label="Microphone "+(A.length+1):"audiooutput"===r.kind?r.label="Speaker "+(R.length+1):r.label="Please invoke getUserMedia once.",void 0!==L&&L.browser.isChrome&&L.browser.version>=46&&!/^(https:|chrome-extension:)$/g.test(location.protocol||"")&&"undefined"!=typeof document&&"string"==typeof document.domain&&document.domain.search&&-1===document.domain.search(/localhost|127.0./g)&&(r.label="HTTPs is required to get label of this "+r.kind+" device.")),"audioinput"===r.kind&&(P=!0,-1===A.indexOf(r)&&A.push(r)),"audiooutput"===r.kind&&($=!0,-1===R.indexOf(r)&&R.push(r)),"videoinput"===r.kind&&(D=!0,-1===_.indexOf(r)&&_.push(r)),// there is no 'videoouput' in the spec.
E.push(r),t[r.deviceId+r.label+r.kind]=r)}),void 0!==L&&(// to sync latest outputs
L.MediaDevices=E,L.hasMicrophone=P,L.hasSpeakers=$,L.hasWebcam=D,L.isWebsiteHasWebcamPermissions=F,L.isWebsiteHasMicrophonePermissions=M,L.audioInputDevices=A,L.audioOutputDevices=R,L.videoInputDevices=_),e&&e()})}(e=e||function(){})},void 0!==E?L.MediaDevices=E:L.MediaDevices=[],L.hasMicrophone=P,L.hasSpeakers=$,L.hasWebcam=D,L.isWebsiteHasWebcamPermissions=F,L.isWebsiteHasMicrophonePermissions=M,L.audioInputDevices=A,L.audioOutputDevices=R,L.videoInputDevices=_;// ------
var q=!1;"undefined"!=typeof document&&"function"==typeof document.createElement&&"setSinkId"in document.createElement("video")&&(q=!0),L.isSetSinkIdSupported=q;// -----
var H=!1;L.browser.isFirefox&&"undefined"/*&& DetectRTC.browser.version > 39*/!=typeof mozRTCPeerConnection?"getSenders"in mozRTCPeerConnection.prototype&&(H=!0):L.browser.isChrome&&"undefined"!=typeof webkitRTCPeerConnection&&"getSenders"in webkitRTCPeerConnection.prototype&&(H=!0),L.isRTPSenderReplaceTracksSupported=H;//------
var K=!1;L.browser.isFirefox&&L.browser.version>38&&(K=!0),L.isRemoteStreamProcessingSupported=K;//-------
var X=!1;"undefined"!=typeof MediaStreamTrack&&"applyConstraints"in MediaStreamTrack.prototype&&(X=!0),L.isApplyConstraintsSupported=X;//-------
var Z=!1;L.browser.isFirefox&&L.browser.version>=43&&// version 44 will support exact multi-monitor selection i.e. you can select any monitor for screen capturing.
(Z=!0),L.isMultiMonitorScreenCapturingSupported=Z,L.isPromisesSupported="Promise"in window,// version is generated by "grunt"
L.version="1.4.1",void 0===L&&(window.DetectRTC={});var Q=window.MediaStream;void 0===Q&&"undefined"!=typeof webkitMediaStream&&(Q=webkitMediaStream),void 0!==Q&&"function"==typeof Q?L.MediaStream=Object.keys(Q.prototype):L.MediaStream=!1,"undefined"!=typeof MediaStreamTrack?L.MediaStreamTrack=Object.keys(MediaStreamTrack.prototype):L.MediaStreamTrack=!1;var Y=window.RTCPeerConnection||window.mozRTCPeerConnection||window.webkitRTCPeerConnection;void 0!==Y?L.RTCPeerConnection=Object.keys(Y.prototype):L.RTCPeerConnection=!1,window.DetectRTC=L,R1=L,"function"==typeof define&&define.amd&&define("DetectRTC",[],function(){return L})}(),A("lzNIT");var D=A("aphAM"),M=A("lzNIT"),D=A("aphAM"),_=A("ayMG0"),O=(A("acw62"),A("acw62")),R2={};function R4(e){return(R4="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(R2,"__esModule",{value:!0}),Object.defineProperty(R2,"useSpeechRecognition",{enumerable:!0,get:function(){return R3.useSpeechRecognition}}),R2.default=void 0;var R3=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!==R4(e)&&"function"!=typeof e)return{default:e};var t=R8();if(t&&t.has(e))return t.get(e);var r={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var s=n?Object.getOwnPropertyDescriptor(e,a):null;s&&(s.get||s.set)?Object.defineProperty(r,a,s):r[a]=e[a]}return r.default=e,t&&t.set(e,r),r}(A("45HU9"));function R8(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return R8=function(){return e},e}var R6=R3.default;R2.default=R6;const R5=/*#__PURE__*/(0,O.lazy)(()=>Promise.resolve(A("3E8gM"))),R7=(0,M.createBrowserRouter)([{path:"/",element:/*#__PURE__*/(0,_.jsx)(()=>{let{ALLTEST:e,Coding:t,Role:r,technical:n,Foundation:a,aptitude:s,breadcrum:i,title:o,duration:l,instruction:u,newTest:c}=(0,O.useContext)(sy.default),[d,p]=(0,O.useState)(e),[h,f]=(0,O.useState)(i),[m,g]=(0,O.useState)(o),[y,b]=(0,O.useState)(l),[v,x]=(0,O.useState)(u),w=(0,D.useLocation)().pathname;console.log(w.slice(0,8));let{id:k}=(0,D.useParams)();return/*#__PURE__*/(0,_.jsx)(sy.default.Provider,{value:{aptitude:s,Foundation:a,technical:n,show:d,setShow:p,Role:r,Coding:t,crum:h,setCrum:f,setNewTitle:g,setNewDuration:b,setNewInst:x,ALLTEST:e,newTitle:m,newInst:v,newDuration:y,newTest:c},children:/*#__PURE__*/(0,_.jsx)(ee,{store:oi,children:/*#__PURE__*/(0,_.jsx)("div",{className:"",children:"/Signup"==w?/*#__PURE__*/(0,_.jsx)(R0,{}):/*#__PURE__*/(0,_.jsx)(_.Fragment,{children:"/testenv"==w.slice(0,8)?/*#__PURE__*/(0,_.jsx)(D.Outlet,{}):/*#__PURE__*/(0,_.jsxs)(_.Fragment,{children:[/*#__PURE__*/(0,_.jsx)(sp,{})," ",/*#__PURE__*/(0,_.jsx)(D.Outlet,{}),"  ",/*#__PURE__*/(0,_.jsx)(sg,{})]})})})})})},{}),children:[{path:"/",element:/*#__PURE__*/(0,_.jsx)(()=>/*#__PURE__*/(0,_.jsxs)("div",{className:"container-fluid tw-mt-[74]",children:[/*#__PURE__*/(0,_.jsx)("div",{className:"row",children:/*#__PURE__*/(0,_.jsx)("div",{className:"col-12 tw-flex tw-justify-center tw-bg-gradient-to-tl tw-from-[#2d545e] tw-to-[#e1b382]",children:/*#__PURE__*/(0,_.jsxs)("div",{className:"m-5 p-3 tw-flex tw-justify-center tw-flex-col tw-items-center",children:[/*#__PURE__*/(0,_.jsx)("img",{src:/*@__PURE__*/I(sd),alt:"logo",className:"tw-w-96 tw-h-64 tw-object-contain tw-bg-transparent"}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("h1",{className:"text-center tw-text-gray-200",children:"Powerful, Database-based Online Assessment Platform"}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsxs)("h6",{className:"text-center tw-text-xl tw-text-gray-300",children:[" ","A one-stop platform for all your assessments needs ",/*#__PURE__*/(0,_.jsx)("br",{}),"Hire best talent using Testify"]}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)(M.Link,{to:"/test",className:"btn btn-success tw-w-48",children:"Get Started"})]})})}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-2 ",children:[/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("h1",{className:" tw-text-center tw-font-bold",children:"Hiring made easy."})," "]}),/*#__PURE__*/(0,_.jsx)("p",{className:" tw-text-center tw-contrast-50 md:tw-ml-20",children:"Building assessments is a breeze with Testify. Get started with these simple steps."}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsxs)("div",{className:"row tw-p-4 ",children:[/*#__PURE__*/(0,_.jsx)("div",{className:" offset-md-1 col-md-3 tw-p-2 tw-flex tw-justify-center ",children:/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-justify-center tw-flex-col ",children:[/*#__PURE__*/(0,_.jsx)("i",{class:"fa-solid fa-gear tw-text-8xl tw-m-auto tw-text-[#49A997]"}),/*#__PURE__*/(0,_.jsx)("h5",{className:" text-center tw-mt-2 tw-font-bold",children:"Step 1"}),/*#__PURE__*/(0,_.jsx)("h6",{className:" tw-text-center tw-font-bold",children:"Create high-quality assessments, fast."}),/*#__PURE__*/(0,_.jsx)("p",{className:" tw-text-center tw-contrast-50",children:"Pick the perfect assessment name, select the tests that work for you, and get personal with your own custom questions."})]})}),/*#__PURE__*/(0,_.jsx)("div",{className:" offset-md-1 col-md-3 tw-p-2 tw-flex tw-justify-start",children:/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-justify-start tw-flex-col ",children:[/*#__PURE__*/(0,_.jsx)("i",{class:"fa-solid fa-envelope-open-text tw-text-8xl tw-m-auto tw-text-[#49A997]"}),/*#__PURE__*/(0,_.jsx)("h5",{className:" text-center tw-mt-2 tw-font-bold",children:"Step 2"}),/*#__PURE__*/(0,_.jsx)("h6",{className:" tw-text-center tw-font-bold",children:"Invite candidates your way."}),/*#__PURE__*/(0,_.jsx)("p",{className:" tw-text-center tw-contrast-50",children:"Connect with candidates by sending email invites directly from Testify, straight from your ATS or sharing a direct link."})]})}),/*#__PURE__*/(0,_.jsx)("div",{className:" offset-md-1 col-md-3 tw-p-2 tw-flex tw-justify-center ",children:/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-justify-center tw-flex-col ",children:[/*#__PURE__*/(0,_.jsx)("i",{class:"fa-solid fa-chart-simple tw-text-8xl tw-m-auto tw-text-[#49A997]"}),/*#__PURE__*/(0,_.jsx)("h5",{className:" text-center tw-mt-2 tw-font-bold",children:"Step 3"}),/*#__PURE__*/(0,_.jsx)("h6",{className:" tw-text-center tw-font-bold",children:"Analyze and decide on the best candidates."}),/*#__PURE__*/(0,_.jsx)("p",{className:" tw-text-center tw-contrast-50",children:"Receive real-time assessment results, compare your candidates instantly, and go in-depth with a candidate review."})]})})]}),/*#__PURE__*/(0,_.jsx)("div",{className:" tw-flex tw-justify-center tw-p-2",children:/*#__PURE__*/(0,_.jsxs)(M.Link,{to:"/test",className:" tw-no-underline tw-px-8 tw-py-2 tw-bg-[#44AA97] tw-mt-10 tw-rounded-md tw-shadow-md tw-border-0 tw-text-slate-200",children:[" ","Try Now for free"]})}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsxs)("div",{className:"tw-bg-[#EDFCF7] tw-p-2",children:[/*#__PURE__*/(0,_.jsx)("h1",{className:" tw-text-center tw-font-bold tw-p-4",children:"What Can you Do"}),/*#__PURE__*/(0,_.jsxs)("div",{className:"row",children:[/*#__PURE__*/(0,_.jsxs)("div",{className:"offset-md-1 col-md-3 tw-p-2 tw-flex-col tw-justify-center tw-gap-6 text-center",children:[/*#__PURE__*/(0,_.jsx)("p",{className:" tw-font-bold tw-text-xl",children:"Test Your Prepration"}),/*#__PURE__*/(0,_.jsx)("img",{className:" tw-h-48",src:/*@__PURE__*/I(sh),alt:"Image"}),/*#__PURE__*/(0,_.jsx)("p",{className:" tw-mt-4 tw-text-center tw-contrast-50",children:"Use Our interactive Quizzes to assess and enhance your knowledge and readiness for exams or challenges."})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:"offset-md-1 col-md-3 tw-p-2 tw-flex-col tw-justify-center tw-gap-6 text-center",children:[/*#__PURE__*/(0,_.jsx)("p",{className:" tw-font-bold tw-text-xl",children:"Track Your Progress"}),/*#__PURE__*/(0,_.jsx)("img",{className:" tw-h-48 ",src:/*@__PURE__*/I(sm),alt:"Image"}),/*#__PURE__*/(0,_.jsx)("p",{className:" tw-mt-4 tw-text-center tw-contrast-50",children:"Users can monitor their progress over time with dashboards, performance reports, and historical data analysis."})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:"offset-md-1 col-md-3 tw-p-2 tw-flex-col tw-justify-center tw-gap-6 text-center",children:[/*#__PURE__*/(0,_.jsx)("p",{className:" tw-font-bold tw-text-xl",children:"Analyze Your Mistake"}),/*#__PURE__*/(0,_.jsx)("img",{className:" tw-h-48",src:/*@__PURE__*/I(sf),alt:"Image"}),/*#__PURE__*/(0,_.jsx)("p",{className:" tw-mt-4 tw-text-center tw-contrast-50",children:"We detailed performance analytics to help you improve and succeed,Automated grading highlighting strengths and areas for improvement."})]})]})]}),/*#__PURE__*/(0,_.jsx)("div",{className:"row",children:/*#__PURE__*/(0,_.jsxs)("div",{className:"col-md-12 tw-p-2",children:[/*#__PURE__*/(0,_.jsxs)("h1",{className:" tw-mt-2 text-center tw-text-[32px]",children:["Check your Knowledge on"," ",/*#__PURE__*/(0,_.jsx)("span",{className:" tw-text-[#49A997]",children:"Specific Skill or technology"})]}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-flex-col tw-gap-8",children:[/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-flex-wrap tw-justify-center tw-gap-6",children:[/*#__PURE__*/(0,_.jsxs)("span",{className:" tw-flex tw-justify-center tw-px-2 tw-items-center tw-gap-2 tw-min-w-[116px] tw-w-[116px] group-hover:tw-w-max tw-transition-all tw-cursor-default border tw-rounded-xl",children:[/*#__PURE__*/(0,_.jsx)("img",{src:"https://cdn-media-assets.socratease.co/equip/product/img/homepage/skills-icons/c.png",alt:"C",loading:"lazy",class:"w-4 h-4"}),/*#__PURE__*/(0,_.jsx)("small",{className:"tw-truncate tw-text-sm group-hover:overflow-visible",children:"C"})]}),/*#__PURE__*/(0,_.jsxs)("span",{className:" tw-flex tw-justify-center tw-px-2 tw-items-center tw-gap-2 tw-min-w-[116px] tw-w-[116px] group-hover:tw-w-max tw-transition-all tw-cursor-default border tw-rounded-xl",children:[/*#__PURE__*/(0,_.jsx)("img",{src:"https://cdn-media-assets.socratease.co/equip/product/img/homepage/skills-icons/cpp.png",alt:"C",loading:"lazy",class:"w-4 h-4"}),/*#__PURE__*/(0,_.jsx)("small",{className:"tw-truncate tw-text-sm group-hover:overflow-visible",children:"C++"})]}),/*#__PURE__*/(0,_.jsxs)("span",{className:" tw-flex tw-justify-center tw-px-2 tw-items-center tw-gap-2 tw-min-w-[116px] tw-w-[116px] group-hover:tw-w-max tw-transition-all tw-cursor-default border tw-rounded-xl",children:[/*#__PURE__*/(0,_.jsx)("img",{src:"https://cdn-media-assets.socratease.co/equip/product/img/homepage/skills-icons/java.png",alt:"C",loading:"lazy",class:"w-4 h-4"}),/*#__PURE__*/(0,_.jsx)("small",{className:"tw-truncate tw-text-sm group-hover:overflow-visible",children:"Java"})]}),/*#__PURE__*/(0,_.jsxs)("span",{className:" tw-flex tw-justify-center tw-px-2 tw-items-center tw-gap-2 tw-min-w-[116px] tw-w-[116px] tw-px-2 group-hover:tw-w-max tw-transition-all tw-cursor-default border tw-rounded-xl",children:[/*#__PURE__*/(0,_.jsx)("img",{src:"https://cdn-media-assets.socratease.co/equip/product/img/homepage/skills-icons/nodejs.png",alt:"C",loading:"lazy",class:"w-4 h-4"}),/*#__PURE__*/(0,_.jsx)("small",{className:"tw-truncate tw-text-sm group-hover:overflow-visible",children:"Nodejs"})]})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-flex-wrap tw-justify-center tw-gap-6",children:[/*#__PURE__*/(0,_.jsxs)("span",{className:" tw-flex tw-justify-center tw-px-2 tw-items-center tw-gap-2 tw-min-w-[116px] tw-w-[116px] group-hover:tw-w-max tw-transition-all tw-cursor-default border tw-rounded-xl",children:[/*#__PURE__*/(0,_.jsx)("img",{src:"https://cdn-media-assets.socratease.co/equip/product/img/homepage/skills-icons/mongodb.png",alt:"C",loading:"lazy",class:"w-4 h-4"}),/*#__PURE__*/(0,_.jsx)("small",{className:"tw-truncate tw-text-sm group-hover:overflow-visible",children:"Mongodb"})]}),/*#__PURE__*/(0,_.jsxs)("span",{className:" tw-flex tw-justify-center tw-px-2 tw-items-center tw-gap-2 tw-min-w-[116px] tw-w-[116px] group-hover:tw-w-max tw-transition-all tw-cursor-default border tw-rounded-xl",children:[/*#__PURE__*/(0,_.jsx)("img",{src:"https://cdn-media-assets.socratease.co/equip/product/img/homepage/skills-icons/javascript.png",alt:"C",loading:"lazy",class:"w-4 h-4"}),/*#__PURE__*/(0,_.jsx)("small",{className:"tw-truncate tw-text-sm group-hover:overflow-visible",children:"Javascript"})]}),/*#__PURE__*/(0,_.jsxs)("span",{className:" tw-flex tw-justify-center tw-px-2 tw-items-center tw-gap-2 tw-min-w-[116px] tw-w-[116px] group-hover:tw-w-max tw-transition-all tw-cursor-default border tw-rounded-xl",children:[/*#__PURE__*/(0,_.jsx)("img",{src:"https://cdn-media-assets.socratease.co/equip/product/img/homepage/skills-icons/python.png",alt:"C",loading:"lazy",class:"w-4 h-4"}),/*#__PURE__*/(0,_.jsx)("small",{className:"tw-truncate tw-text-sm group-hover:overflow-visible",children:"Python"})]}),/*#__PURE__*/(0,_.jsxs)("span",{className:" tw-flex tw-justify-center tw-px-2 tw-items-center tw-gap-2 tw-min-w-[116px] tw-w-[116px] group-hover:tw-w-max tw-transition-all tw-cursor-default border tw-rounded-xl",children:[/*#__PURE__*/(0,_.jsx)("img",{src:"https://cdn-media-assets.socratease.co/equip/product/img/homepage/skills-icons/sql.png",alt:"C",loading:"lazy",class:"w-4 h-4"}),/*#__PURE__*/(0,_.jsx)("small",{className:"tw-truncate tw-text-sm group-hover:overflow-visible",children:"Sql"})]})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:"tw-flex tw-flex-wrap tw-justify-center tw-gap-6",children:[/*#__PURE__*/(0,_.jsxs)("span",{className:" tw-flex tw-justify-center tw-px-2 tw-items-center tw-gap-2 tw-min-w-[116px] tw-w-[116px] group-hover:tw-w-max tw-transition-all tw-cursor-default border tw-rounded-xl",children:[/*#__PURE__*/(0,_.jsx)("img",{src:"https://cdn-media-assets.socratease.co/equip/product/img/homepage/skills-icons/reactjs.png",alt:"C",loading:"lazy",class:"w-4 h-4"}),/*#__PURE__*/(0,_.jsx)("small",{className:"tw-truncate tw-text-sm group-hover:overflow-visible",children:"React"})]}),/*#__PURE__*/(0,_.jsxs)("span",{className:" tw-flex tw-justify-center tw-px-2 tw-items-center tw-gap-2 tw-min-w-[116px] tw-w-[116px] group-hover:tw-w-max tw-transition-all tw-cursor-default border tw-rounded-xl",children:[/*#__PURE__*/(0,_.jsx)("img",{src:"https://cdn-media-assets.socratease.co/equip/product/img/homepage/skills-icons/reactjs.png",alt:"C",loading:"lazy",class:"w-4 h-4"}),/*#__PURE__*/(0,_.jsx)("small",{className:"tw-truncate tw-text-sm group-hover:overflow-visible",children:"React"})]}),/*#__PURE__*/(0,_.jsxs)("span",{className:" tw-flex tw-justify-center tw-px-2 tw-items-center tw-gap-2 tw-min-w-[116px] tw-w-[116px] group-hover:tw-w-max tw-transition-all tw-cursor-default border tw-rounded-xl",children:[/*#__PURE__*/(0,_.jsx)("img",{src:"https://cdn-media-assets.socratease.co/equip/product/img/homepage/skills-icons/machine-learning.png",alt:"C",loading:"lazy",class:"w-4 h-4"}),/*#__PURE__*/(0,_.jsx)("small",{className:"tw-truncate tw-text-sm group-hover:overflow-visible",children:"Machine learning"})]}),/*#__PURE__*/(0,_.jsxs)("span",{className:" tw-flex tw-justify-center tw-px-2 tw-items-center tw-gap-2 tw-min-w-[116px] tw-w-[116px] group-hover:tw-w-max tw-transition-all tw-cursor-default border tw-rounded-xl",children:[/*#__PURE__*/(0,_.jsx)("img",{src:"https://cdn-media-assets.socratease.co/equip/product/img/homepage/skills-icons/data-science.png",alt:"C",loading:"lazy",class:"w-4 h-4"}),/*#__PURE__*/(0,_.jsx)("small",{className:"tw-truncate tw-text-sm group-hover:overflow-visible",children:"Data Science"})]}),/*#__PURE__*/(0,_.jsxs)("span",{className:" tw-flex tw-justify-center tw-px-2 tw-items-center tw-gap-2 tw-min-w-[116px] tw-w-[116px] group-hover:tw-w-max tw-transition-all tw-cursor-default border tw-rounded-xl",children:[/*#__PURE__*/(0,_.jsx)("img",{src:"https://cdn-media-assets.socratease.co/equip/product/img/homepage/skills-icons/logical-and-analytical-reasoning.png",alt:"C",loading:"lazy",class:"w-4 h-4"}),/*#__PURE__*/(0,_.jsx)("small",{className:"tw-truncate tw-text-sm group-hover:overflow-visible",children:"Aptitude"})]})]})]})]})})]}),{})},{path:"/About",element:/*#__PURE__*/(0,_.jsx)(()=>/*#__PURE__*/(0,_.jsx)("div",{children:"About"}),{})},{path:"/Contact",element:/*#__PURE__*/(0,_.jsx)(()=>/*#__PURE__*/(0,_.jsx)(_.Fragment,{children:/*#__PURE__*/(0,_.jsxs)("div",{children:[/*#__PURE__*/(0,_.jsxs)("div",{children:[/*#__PURE__*/(0,_.jsx)("h1",{children:"Contact Us"}),/*#__PURE__*/(0,_.jsx)("p",{children:"We’d love to hear from you! Whether you have questions, feedback, or a project inquiry, feel free to reach out."})]}),/*#__PURE__*/(0,_.jsxs)("div",{children:[/*#__PURE__*/(0,_.jsx)("h2",{children:"Our Contact Information"}),/*#__PURE__*/(0,_.jsx)("p",{children:"Email: contact@example.com"}),/*#__PURE__*/(0,_.jsx)("p",{children:"Phone: (123) 456-7890"}),/*#__PURE__*/(0,_.jsx)("p",{children:"Address: 123 Main St, City, Country"})]}),/*#__PURE__*/(0,_.jsxs)("div",{children:[/*#__PURE__*/(0,_.jsx)("h2",{children:"Connect with Us"}),/*#__PURE__*/(0,_.jsx)("p",{children:"Follow us on social media for the latest updates:"}),/*#__PURE__*/(0,_.jsxs)("ul",{children:[/*#__PURE__*/(0,_.jsx)("li",{children:/*#__PURE__*/(0,_.jsx)("a",{href:"https://facebook.com",children:"Facebook"})}),/*#__PURE__*/(0,_.jsx)("li",{children:/*#__PURE__*/(0,_.jsx)("a",{href:"https://twitter.com",children:"Twitter"})}),/*#__PURE__*/(0,_.jsx)("li",{children:/*#__PURE__*/(0,_.jsx)("a",{href:"https://instagram.com",children:"Instagram"})}),/*#__PURE__*/(0,_.jsx)("li",{children:/*#__PURE__*/(0,_.jsx)("a",{href:"https://linkedin.com",children:"LinkedIn"})})]})]}),/*#__PURE__*/(0,_.jsx)("div",{children:/*#__PURE__*/(0,_.jsx)("img",{src:"https://via.placeholder.com/800",alt:"Contact Background"})}),/*#__PURE__*/(0,_.jsxs)("div",{children:[/*#__PURE__*/(0,_.jsx)("h2",{children:"Send Us a Message"}),/*#__PURE__*/(0,_.jsxs)("form",{children:[/*#__PURE__*/(0,_.jsx)("div",{children:/*#__PURE__*/(0,_.jsx)("input",{type:"text",placeholder:"Full Name"})}),/*#__PURE__*/(0,_.jsx)("div",{children:/*#__PURE__*/(0,_.jsx)("input",{type:"email",placeholder:"Email Address"})}),/*#__PURE__*/(0,_.jsx)("div",{children:/*#__PURE__*/(0,_.jsx)("input",{type:"tel",placeholder:"Phone Number"})}),/*#__PURE__*/(0,_.jsx)("div",{children:/*#__PURE__*/(0,_.jsxs)("select",{children:[/*#__PURE__*/(0,_.jsx)("option",{value:"",children:"Select a Topic"}),/*#__PURE__*/(0,_.jsx)("option",{value:"general",children:"General Inquiry"}),/*#__PURE__*/(0,_.jsx)("option",{value:"support",children:"Customer Support"}),/*#__PURE__*/(0,_.jsx)("option",{value:"business",children:"Business Proposal"}),/*#__PURE__*/(0,_.jsx)("option",{value:"feedback",children:"Feedback"})]})}),/*#__PURE__*/(0,_.jsx)("div",{children:/*#__PURE__*/(0,_.jsx)("textarea",{placeholder:"Your Message"})}),/*#__PURE__*/(0,_.jsx)("div",{children:/*#__PURE__*/(0,_.jsxs)("label",{children:[/*#__PURE__*/(0,_.jsx)("input",{type:"checkbox"}),"Subscribe to our newsletter"]})}),/*#__PURE__*/(0,_.jsx)("div",{children:/*#__PURE__*/(0,_.jsxs)("label",{children:[/*#__PURE__*/(0,_.jsx)("input",{type:"checkbox"}),"I agree to the terms and conditions"]})}),/*#__PURE__*/(0,_.jsx)("div",{children:/*#__PURE__*/(0,_.jsx)("button",{type:"submit",children:"Submit"})})]})]})]})}),{})},{path:"/test",element:/*#__PURE__*/(0,_.jsxs)(O.Suspense,{children:[" ",/*#__PURE__*/(0,_.jsx)(R5,{})]})},{path:"/SignUp",element:/*#__PURE__*/(0,_.jsx)(R0,{})},{path:"/customtest",element:/*#__PURE__*/(0,_.jsx)(()=>{let{setNewTitle:e,setNewDuration:t,setNewInst:r,ALLTEST:n,newTest:a,newTitle:s,newInst:i}=(0,O.useContext)(sy.default),[o,l]=(0,O.useState)(""),[u,c]=(0,O.useState)(""),[d,p]=(0,O.useState)(""),[h,f]=(0,O.useState)(""),[m,g]=(0,O.useState)(""),[y,b]=(0,O.useState)("");// useEffect(() => {
//  postData();
// }, [path]);
async function v(){try{let e=await fetch(`https://backendformajor.onrender.com/quiz/customtest/${s}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({Question:o,option1:u,option2:d,option3:h,option4:m,Answer:y})}),t=await e.json();t&&alert("Data saved succesfully")}catch(e){console.error("Error sending data:",e)}}return/*#__PURE__*/(0,_.jsxs)("div",{className:"container border border-success tw-p-2 tw-shadow-md tw-rounded-md",children:[/*#__PURE__*/(0,_.jsx)("h4",{className:"text-center mt-2 tw-text-emerald-600",children:"Create your own customize test"}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsxs)("div",{className:"m-auto  tw-p-4 tw-flex tw-flex-row tw-justify-center tw-gap-3",children:[/*#__PURE__*/(0,_.jsx)("input",{type:"text",className:" tw-w-2/5 tw-p-2 tw-text-lg tw-rounded-md",placeholder:"Enter the Title of Test",onChange:t=>{e(t.target.value)}}),/*#__PURE__*/(0,_.jsx)("input",{type:"tel",className:"tw-w-2/5 tw-p-2 tw-rounded-md",placeholder:"Enter the duration of the test",onChange:e=>{t(e.target.value)}})]}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-flex-col tw-justify-center tw-rounded-md tw-gap-4",children:[/*#__PURE__*/(0,_.jsx)("textarea",{name:"",id:"",cols:"100",rows:"5",className:"m-auto tw-w-4/5 tw-text-lg tw-p-2 tw-rounded-md",placeholder:"Enter the Instruction for the test in serial number.. ",onChange:e=>{}}),/*#__PURE__*/(0,_.jsx)("input",{type:"text",className:"tw-w-4/5 tw-m-auto tw-p-2 tw-rounded-md",placeholder:"Enter type of test example Coding Programming,Aptitude & Reasoning,Technical Assessment,Foundation schools,Domain Specific Roles",onChange:e=>{r(e.target.value)}})]}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-2 border border-success tw-flex tw-flex-col tw-justify-center tw-bg-gray-100 tw-shadow-xl tw-rounded-md",children:[/*#__PURE__*/(0,_.jsx)("textarea",{name:"",id:"",cols:"100",rows:"5",className:"m-auto tw-w-4/5 tw-text-lg tw-p-2 tw-rounded-md",placeholder:"Enter your Questions",value:o,onChange:e=>{l(e.target.value)}}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-4 tw-flex tw-flex-row tw-justify-center tw-gap-3",children:[/*#__PURE__*/(0,_.jsx)("input",{type:"text",className:" tw-w-2/5 tw-p-2 tw-text-lg tw-rounded-md",placeholder:"Enter the option 1",value:u,onChange:e=>{c(e.target.value)}}),/*#__PURE__*/(0,_.jsx)("input",{type:"tel",className:"tw-w-2/5 tw-p-2 tw-rounded-md",placeholder:"Enter the option 2",value:d,onChange:e=>{p(e.target.value)}})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:"tw-p-4 tw-flex tw-flex-row tw-justify-center tw-gap-3",children:[/*#__PURE__*/(0,_.jsx)("input",{type:"text",className:" tw-w-2/5 tw-p-2 tw-text-lg tw-rounded-md",placeholder:"Enter the option 3",value:h,onChange:e=>{f(e.target.value)}}),/*#__PURE__*/(0,_.jsx)("input",{type:"tel",className:"tw-w-2/5 tw-p-2 tw-rounded-md",placeholder:"Enter the option 4",value:m,onChange:e=>{g(e.target.value)}})]}),/*#__PURE__*/(0,_.jsx)("div",{className:" tw-p-4 tw-flex tw-flex-row tw-justify-center tw-gap-3",children:/*#__PURE__*/(0,_.jsx)("input",{type:"text",className:" tw-w-[81%] tw-p-2 tw-text-lg tw-rounded-md",placeholder:"Enter the Answer here",value:y,onChange:e=>{b(e.target.value)}})}),/*#__PURE__*/(0,_.jsx)("div",{className:" tw-p-4 tw-flex tw-flex-row tw-justify-center tw-gap-3",children:/*#__PURE__*/(0,_.jsx)("button",{className:"tw-bg-green-600 tw-border-0 tw-p-2 tw-rounded-md tw-text-lg tw-text-white tw-shadow-md",onClick:function(){v(),l(""),c(""),p(""),f(""),g(""),b("")},children:"Add Question"})})]}),/*#__PURE__*/(0,_.jsx)("div",{className:"tw-p-4 tw-flex tw-flex-row tw-justify-center tw-mt-3 tw-gap-3",children:/*#__PURE__*/(0,_.jsx)("button",{className:"tw-bg-green-600 tw-border-0 tw-px-4 tw-py-2 tw-rounded-md tw-text-lg tw-text-white",onClick:function(){let t={name:s,icon:"fa-solid fa-pen-to-square tw-text-white tw-text-4xl m-auto",desc:i,part:"Your Tests"};a.push(t),n.push(t),e(" "),r(" ")},children:"Create a Test"})})]})},{})},{path:"/details/:id",element:/*#__PURE__*/(0,_.jsx)(()=>{let{newInst:e,newDuration:t,newTitle:r,ALLTEST:n}=(0,O.useContext)(sy.default),{id:a}=(0,D.useParams)(),s=n.filter(e=>e.id==a);return console.log(s),/*#__PURE__*/(0,_.jsx)("div",{className:"container-fluid tw-bg-[#F5F6F6]",children:/*#__PURE__*/(0,_.jsxs)("div",{className:"row tw-p-2",children:[/*#__PURE__*/(0,_.jsxs)("h1",{className:"text-center tw-font-bold tw-m-6",children:[s[0]?.name,"\xa0:\xa0Find top candidates with our pre-employment assessment"]}),/*#__PURE__*/(0,_.jsxs)("div",{className:"col-md-6 tw-flex-col tw-p-4",children:[/*#__PURE__*/(0,_.jsx)(M.Link,{to:"/test",className:"tw-no-underline tw-px-8 tw-py-2 tw-border-0 tw-bg-gray-200 tw-rounded-md tw-text-lg tw-text-green-400",children:"Back to test library"}),/*#__PURE__*/(0,_.jsxs)("h4",{className:"tw-mb-3 tw-mt-5",children:["Description of ",s[0]?.name," test"]}),/*#__PURE__*/(0,_.jsx)("p",{className:" tw-text-xl tw-text-gray-500",children:s[0]?.desc}),/*#__PURE__*/(0,_.jsx)("p",{className:" tw-text-xl tw-text-gray-500",children:s[0]?.summary}),/*#__PURE__*/(0,_.jsx)("p",{className:"tw-text-xl tw-text-gray-500",children:"Candidates who perform well on this test are best fit in moving forward in hiring process."}),/*#__PURE__*/(0,_.jsx)("h3",{children:"Some Instruction before starting test"}),/*#__PURE__*/(0,_.jsxs)("p",{className:" tw-text-xl tw-text-slate-500",children:[/*#__PURE__*/(0,_.jsx)("i",{class:"fa-solid fa-circle tw-text-sm tw-text-green-500"})," \xa0Test is of "," "===t?s[0]?.time:t]}),/*#__PURE__*/(0,_.jsxs)("p",{className:" tw-text-xl tw-text-slate-500",children:[/*#__PURE__*/(0,_.jsx)("i",{class:"fa-solid fa-circle tw-text-sm tw-text-green-500"})," \xa0Allow Camera and Microphone"]}),/*#__PURE__*/(0,_.jsxs)("p",{className:" tw-text-xl tw-text-slate-500",children:[/*#__PURE__*/(0,_.jsx)("i",{class:"fa-solid fa-circle tw-text-sm tw-text-green-500"})," \xa0Do not indulge in unfair means,otherwise disqualified"]}),/*#__PURE__*/(0,_.jsxs)("p",{className:" tw-text-xl tw-text-slate-500",children:[/*#__PURE__*/(0,_.jsx)("i",{class:"fa-solid fa-circle tw-text-sm tw-text-green-500"})," \xa0Do not switch tab during test"]}),/*#__PURE__*/(0,_.jsxs)("p",{className:" tw-text-xl tw-text-slate-500",children:[/*#__PURE__*/(0,_.jsx)("i",{class:"fa-solid fa-circle tw-text-sm tw-text-green-500"})," \xa0Give test using laptop/pc only"]}),/*#__PURE__*/(0,_.jsxs)("p",{className:" tw-text-xl tw-text-slate-500",children:[/*#__PURE__*/(0,_.jsx)("i",{class:"fa-solid fa-circle tw-text-sm tw-text-green-500"})," \xa0This test is A.I Pro Proctored"]}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsxs)("h3",{children:["Use the ",s[0].name," test to hire"]}),/*#__PURE__*/(0,_.jsx)("p",{className:" tw-text-xl tw-text-slate-500",children:s[0].hire})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:"col-md-6 tw-flex tw-justify-center tw-items-center tw-gap-1 tw-flex-col",children:[/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-justify-center tw-items-center tw-gap-1",children:[/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-justify-center tw-items-center tw-flex-col tw-bg-white tw-rounded-tl-md tw-p-3 tw-w-72",children:[/*#__PURE__*/(0,_.jsx)("i",{class:"fa-solid fa-file-lines tw-text-green-400 tw-text-4xl tw-p-2"}),/*#__PURE__*/(0,_.jsx)("h4",{children:"type"}),/*#__PURE__*/(0,_.jsx)("p",{children:s[0]?.part})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:"tw-flex tw-justify-center tw-items-center tw-flex-col tw-bg-white tw-rounded-tr-md tw-p-3 tw-w-72",children:[/*#__PURE__*/(0,_.jsx)("i",{class:"fa-regular fa-clock tw-text-green-400 tw-text-4xl tw-p-2"}),/*#__PURE__*/(0,_.jsx)("h4",{children:"Time"}),/*#__PURE__*/(0,_.jsx)("p",{children:s[0]?.time})]})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-justify-center tw-items-center tw-gap-1",children:[/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-justify-center tw-items-center tw-flex-col tw-bg-white tw-rounded-bl-md tw-p-3 tw-w-72",children:[/*#__PURE__*/(0,_.jsx)("i",{class:"fa-regular fa-flag tw-text-green-400 tw-text-4xl tw-p-2"}),/*#__PURE__*/(0,_.jsx)("h4",{children:"Language"}),/*#__PURE__*/(0,_.jsx)("p",{children:"English"})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:"tw-flex tw-justify-center tw-items-center tw-flex-col tw-bg-white tw-rounded-br-md tw-p-3 tw-w-72",children:[/*#__PURE__*/(0,_.jsx)("i",{class:"fa-solid fa-chart-simple tw-text-green-400 tw-text-4xl tw-p-2"}),/*#__PURE__*/(0,_.jsx)("h4",{children:"Level"}),/*#__PURE__*/(0,_.jsx)("p",{children:s[0]?.level})]})]}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)(M.Link,{to:`/verification/${a}`,className:" tw-no-underline tw-px-10 tw-rounded-md tw-shadow-md tw-py-3 hover:tw-bg-green-500 tw-bg-[#31766A] tw-text-white tw-text-lg tw-border-0",children:"Get Started"})]})]})})},{})},{path:"/verification/:id",element:/*#__PURE__*/(0,_.jsx)(()=>{let{id:e}=(0,D.useParams)(),t=K(e=>e.User);console.log(t),(0,O.useRef)(null);//  const capture =  ()=>
//    {
let r=(0,O.useRef)(null),[n,a]=(0,O.useState)(""),[s,i]=(0,O.useState)(!0),[o,l]=(0,O.useState)(!1),[u,c]=(0,O.useState)(!1),[d,p]=(0,O.useState)(!1);return(0,O.useCallback)(async()=>{let e=r?.current?.getScreenshot();p(e)},[r]),/*#__PURE__*/(0,_.jsx)("div",{className:"container-fluid p-4",children:/*#__PURE__*/(0,_.jsx)("div",{className:"row p-0 m-0",children:/*#__PURE__*/(0,_.jsxs)("div",{className:"col-md-12  p-0 m-0",children:[/*#__PURE__*/(0,_.jsxs)("div",{className:"tw-border tw-border-solid tw-rounded-md tw-shadow-md",children:[/*#__PURE__*/(0,_.jsxs)("h1",{className:" tw-bg-gray-200 tw-flex tw-gap-4 tw-text-sm tw-p-2  tw-rounded-tl-md tw-rounded-tr-md  hover:tw-border-b-black",children:[" ",/*#__PURE__*/(0,_.jsxs)("span",{className:"tw-border-2 tw-p-2 tw-border-solid tw-border-gray-200 hover:tw-cursor-pointer  hover:tw-border-b-black",onClick:()=>{c(!1),l(!1),i(!0)},children:[" ","Registration"]}),/*#__PURE__*/(0,_.jsxs)("span",{className:"tw-border-2 tw-p-2 tw-border-solid tw-border-gray-200 hover:tw-cursor-pointer  hover:tw-border-b-black",onClick:()=>{c(!1),l(!0),i(!1)},children:[" ","Capture Image"]}),/*#__PURE__*/(0,_.jsxs)("span",{className:"tw-border-2 tw-p-2 tw-border-solid tw-border-gray-200 hover:tw-cursor-pointer  hover:tw-border-b-black",onClick:()=>{c(!0),l(!1),i(!1)},children:[" ","Capture Card"]})]}),/*#__PURE__*/(0,_.jsx)("div",{className:" tw-p-2"}),s&&/*#__PURE__*/(0,_.jsx)(sx,{}),o&&/*#__PURE__*/(0,_.jsx)(sN,{}),u&&/*#__PURE__*/(0,_.jsx)(sE,{})]}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsx)(M.Link,{to:`/systemcheck/:${e}`,className:"tw-px-8 tw-py-2 tw-bg-green-500 tw-border-0 tw-rounded-md tw-shadow-md tw-no-underline tw-text-black",children:"Proceed to the test"})]})})})},{})},{path:"/testenv/:id",element:/*#__PURE__*/(0,_.jsx)(RJ,{})},{path:"/systemcheck/:id",element:/*#__PURE__*/(0,_.jsx)(()=>{let[e,t]=(0,O.useState)(!0),[r,n]=(0,O.useState)(!1),[a,s]=(0,O.useState)(!1),[i,o]=(0,O.useState)(!1),[l,u]=(0,O.useState)(null),[c,d]=(0,O.useState)(null);(0,D.useLocation)().pathname,(0,O.useRef)(null),(0,O.useRef)(null);let{id:p}=(0,D.useParams)(),[h,f]=(0,O.useState)(0),{transcript:m,listening:g,resetTranscript:y,finalTranscript:b,browserSupportsSpeechRecognition:v}=(0,R2.useSpeechRecognition)(),[x,w]=(0,O.useState)(0);if(!v)return/*#__PURE__*/(0,_.jsx)("span",{children:"Browser doesn't support speech recognition."});(0,O.useEffect)(()=>{let e=()=>{let e=navigator.connection;e&&f(e.downlink)};return e(),navigator.connection&&navigator.connection.addEventListener("change",e),()=>{navigator.connection&&navigator.connection.removeEventListener("change",e)}},[]),sessionStorage.setItem("netspeed",h);// Validate System Compatibility
let k=()=>{sessionStorage.getItem("netspeed");// Browser Check
let e=(e,t)=>{/*@__PURE__*/I(R1).browser.name===e&&/*@__PURE__*/I(R1).browser.version>t||/*@__PURE__*/I(oo)("Please Update Browser or Try a Different Browser")};switch(/*@__PURE__*/I(R1).browser.name){case"Chrome":e("Chrome",80);break;case"Firefox":e("Firefox",60);break;case"Safari":e("Safari",12);break;case"Opera":e("Opera",60);break;case"Edge":e("Edge",80);break;default:/*@__PURE__*/I(oo)("Unsupported Browser")}// Final Approval
},S=async()=>{try{let e=await navigator.mediaDevices.getUserMedia({video:!0});s(!0),u(e)}catch(e){}},N=async()=>{try{let e=await navigator.mediaDevices.getUserMedia({audio:!0});console.log(e),o(!0),d(e)}catch(e){}};return(0,O.useEffect)(()=>{k()},[]),/*#__PURE__*/(0,_.jsx)(_.Fragment,{children:/*#__PURE__*/(0,_.jsx)("div",{className:" tw-bg-[#34495e] tw-m-0",children:/*#__PURE__*/(0,_.jsxs)("div",{className:"row tw-p-2",children:[/*#__PURE__*/(0,_.jsx)("h1",{className:" text-center tw-p-2 tw-text-xl",children:"System Compatibility Check"}),/*#__PURE__*/(0,_.jsx)("br",{}),/*#__PURE__*/(0,_.jsxs)("div",{className:"col-12 tw-p-2",children:[/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-w-1/2 tw-m-auto tw-flex tw-flex-wrap tw-gap-6 tw-justify-center",children:[/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-3 tw-rounded-md tw-flex tw-flex-col tw-gap-4 tw-outline tw-outline-sky-400 tw-shadow-md tw-bg-[#d7dbdd]",children:[/*#__PURE__*/(0,_.jsxs)("p",{className:" tw-text-center tw-flex tw-justify-between ",children:[/*#__PURE__*/(0,_.jsx)("span",{children:"Browser"}),/*#__PURE__*/(0,_.jsx)("span",{children:/*#__PURE__*/(0,_.jsx)("i",{className:"fa-brands fa-chrome tw-text-[#a8a9ad]"})})," "]}),/*#__PURE__*/(0,_.jsxs)("span",{children:["Name"," ","- "+JSON.stringify(/*@__PURE__*/I(R1).browser.name).slice(1,-1)]}),/*#__PURE__*/(0,_.jsxs)("span",{children:["Version ","- "+JSON.stringify(/*@__PURE__*/I(R1).browser.version)]}),/*#__PURE__*/(0,_.jsxs)("span",{children:["Status ","- Compatible"," \xa0"," ",/*#__PURE__*/(0,_.jsx)("i",{className:"fa-solid fa-square-check tw-text-green-700"})]})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-3 tw-rounded-md tw-flex tw-flex-col tw-gap-4 tw-outline tw-outline-sky-400 tw-bg-[#d7dbdd]",children:[/*#__PURE__*/(0,_.jsxs)("p",{className:" tw-text-center tw-flex tw-justify-between ",children:[/*#__PURE__*/(0,_.jsx)("span",{children:"Internet"}),/*#__PURE__*/(0,_.jsx)("span",{children:/*#__PURE__*/(0,_.jsx)("i",{className:"fa-solid fa-wifi"})})," "]}),/*#__PURE__*/(0,_.jsxs)("span",{children:["Speed ","- "+sessionStorage.getItem("netspeed")+" mbps"]}),/*#__PURE__*/(0,_.jsxs)("span",{children:["Strength"," ",+(sessionStorage.getItem("netspeed")>2)?"- Strong":"- Weak"]}),/*#__PURE__*/(0,_.jsxs)("span",{children:["Status ","- Compatible"," \xa0"," ",/*#__PURE__*/(0,_.jsx)("i",{className:"fa-solid fa-square-check tw-text-green-700"})]})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-3 tw-rounded-md tw-flex tw-flex-col tw-gap-4 tw-outline tw-outline-sky-400 tw-bg-[#d7dbdd]",children:[/*#__PURE__*/(0,_.jsxs)("p",{className:" tw-text-center tw-flex tw-justify-between ",children:[/*#__PURE__*/(0,_.jsx)("span",{children:"OS"}),/*#__PURE__*/(0,_.jsx)("span",{children:/*#__PURE__*/(0,_.jsx)("i",{className:"fa-brands fa-windows"})})," "]}),/*#__PURE__*/(0,_.jsxs)("span",{children:["Name ","- "+JSON.stringify(/*@__PURE__*/I(R1).osName,null,2)]}),/*#__PURE__*/(0,_.jsxs)("span",{children:["Version"," ","- "+JSON.stringify(/*@__PURE__*/I(R1).osVersion,null,0).slice(1,-1)," "]}),/*#__PURE__*/(0,_.jsxs)("span",{children:["Status ","- Compatible"," \xa0"," ",/*#__PURE__*/(0,_.jsx)("i",{className:"fa-solid fa-square-check tw-text-green-700"})]})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-3 tw-rounded-md tw-flex tw-flex-col tw-gap-6 tw-outline tw-outline-sky-400",children:[/*#__PURE__*/(0,_.jsxs)("p",{className:" tw-text-center tw-flex tw-justify-between ",children:[/*#__PURE__*/(0,_.jsx)("span",{children:"Microphone"}),/*#__PURE__*/(0,_.jsx)("span",{children:/*#__PURE__*/(0,_.jsx)("i",{className:"fa-solid fa-microphone"})})," "]}),/*#__PURE__*/(0,_.jsx)("p",{children:"Name and Version"}),/*#__PURE__*/(0,_.jsx)("p",{children:"Status"}),/*#__PURE__*/(0,_.jsx)("button",{onClick:N,type:"button",children:"Get Mic"}),/*#__PURE__*/(0,_.jsx)("button",{onClick:function(){/*@__PURE__*/I(R2).startListening(),w(b.length)},type:"button",children:"test mic"}),!0===i?"granted":/*#__PURE__*/(0,_.jsx)("p",{children:"Please grant camera access to use this feature."}),/*#__PURE__*/(0,_.jsx)("progress",{max:100,value:m.length,className:" tw-w-full tw-h-4  tw-rounded-xl  tw-bg-green-600",children:" "})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-p-3 tw-rounded-md tw-flex tw-flex-col tw-gap-6 tw-outline tw-outline-sky-400",children:[/*#__PURE__*/(0,_.jsxs)("p",{className:" tw-text-center tw-flex tw-justify-between ",children:[/*#__PURE__*/(0,_.jsx)("span",{children:"Camera"}),/*#__PURE__*/(0,_.jsx)("span",{children:/*#__PURE__*/(0,_.jsx)("i",{className:"fa-solid fa-camera"})})," "]}),/*#__PURE__*/(0,_.jsx)("p",{children:"Name and Version"}),/*#__PURE__*/(0,_.jsx)("p",{children:"Status"}),/*#__PURE__*/(0,_.jsx)("button",{onClick:S,type:"button",children:"Get Camera"}),!0===a?"granted":/*#__PURE__*/(0,_.jsx)("p",{children:"Please grant camera access to use this feature."})]})]}),/*#__PURE__*/(0,_.jsxs)("div",{className:" tw-flex tw-justify-center tw-mt-10",children:[" ",/*#__PURE__*/(0,_.jsx)(M.Link,{to:`/testenv/:${p}`,className:" tw-px-6 tw-py-2 tw-text-center tw-rounded-md ",onClick:void 0,children:"Next"})]})]})]})})})},{})},{path:"/getdata/:id",element:/*#__PURE__*/(0,_.jsx)(RJ,{})}]}]),R9=/*@__PURE__*/I(P).createRoot(document.getElementById("root"));R9.render(/*#__PURE__*/(0,_.jsx)(M.RouterProvider,{router:R7}));//# sourceMappingURL=index.dbc7f028.js.map

//# sourceMappingURL=index.dbc7f028.js.map
